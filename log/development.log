  [1m[35m (48.8ms)[0m  [1m[35mCREATE TABLE "schema_migrations" ("version" character varying PRIMARY KEY)[0m
  [1m[35m (4.9ms)[0m  [1m[35mCREATE TABLE "ar_internal_metadata" ("key" character varying PRIMARY KEY, "value" character varying, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  [1m[35m (0.2ms)[0m  [1m[34mSELECT pg_try_advisory_lock(7064053580037655320);[0m
  [1m[36mActiveRecord::SchemaMigration Load (0.4ms)[0m  [1m[34mSELECT "schema_migrations".* FROM "schema_migrations"[0m
Migrating to CreateQuestionsTable (20160615195122)
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35m (7.0ms)[0m  [1m[35mCREATE TABLE "questions" ("id" serial primary key, "content" character varying, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  [1m[35mSQL (0.5ms)[0m  [1m[32mINSERT INTO "schema_migrations" ("version") VALUES ($1) RETURNING "version"[0m  [["version", "20160615195122"]]
  [1m[35m (1.1ms)[0m  [1m[35mCOMMIT[0m
Migrating to CreateAnswers (20160615195241)
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35m (4.0ms)[0m  [1m[35mCREATE TABLE "answers" ("id" serial primary key, "vote_score" integer, "vote_count" integer, "content" character varying, "question_id" integer)[0m
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "schema_migrations" ("version") VALUES ($1) RETURNING "version"[0m  [["version", "20160615195241"]]
  [1m[35m (0.9ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mActiveRecord::InternalMetadata Load (0.5ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" ORDER BY "ar_internal_metadata"."key" ASC LIMIT $1[0m  [["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (21.2ms)[0m  [1m[32mINSERT INTO "ar_internal_metadata" ("key", "value", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "key"[0m  [["key", "environment"], ["value", "development"], ["created_at", 2016-06-15 19:56:09 UTC], ["updated_at", 2016-06-15 19:56:09 UTC]]
  [1m[35m (1.0ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.3ms)[0m  [1m[34mSELECT pg_advisory_unlock(7064053580037655320)[0m
  [1m[36mActiveRecord::SchemaMigration Load (0.3ms)[0m  [1m[34mSELECT "schema_migrations".* FROM "schema_migrations"[0m
  [1m[35m (2.4ms)[0m  [1m[34mSELECT t2.oid::regclass::text AS to_table, a1.attname AS column, a2.attname AS primary_key, c.conname AS name, c.confupdtype AS on_update, c.confdeltype AS on_delete
FROM pg_constraint c
JOIN pg_class t1 ON c.conrelid = t1.oid
JOIN pg_class t2 ON c.confrelid = t2.oid
JOIN pg_attribute a1 ON a1.attnum = c.conkey[1] AND a1.attrelid = t1.oid
JOIN pg_attribute a2 ON a2.attnum = c.confkey[1] AND a2.attrelid = t2.oid
JOIN pg_namespace t3 ON c.connamespace = t3.oid
WHERE c.contype = 'f'
  AND t1.relname = 'answers'
  AND t3.nspname = ANY (current_schemas(false))
ORDER BY c.conname
[0m
  [1m[35m (1.8ms)[0m  [1m[34mSELECT t2.oid::regclass::text AS to_table, a1.attname AS column, a2.attname AS primary_key, c.conname AS name, c.confupdtype AS on_update, c.confdeltype AS on_delete
FROM pg_constraint c
JOIN pg_class t1 ON c.conrelid = t1.oid
JOIN pg_class t2 ON c.confrelid = t2.oid
JOIN pg_attribute a1 ON a1.attnum = c.conkey[1] AND a1.attrelid = t1.oid
JOIN pg_attribute a2 ON a2.attnum = c.confkey[1] AND a2.attrelid = t2.oid
JOIN pg_namespace t3 ON c.connamespace = t3.oid
WHERE c.contype = 'f'
  AND t1.relname = 'questions'
  AND t3.nspname = ANY (current_schemas(false))
ORDER BY c.conname
[0m
  [1m[35m (0.2ms)[0m  [1m[34mSELECT pg_try_advisory_lock(7064053580037655320);[0m
  [1m[36mActiveRecord::SchemaMigration Load (0.8ms)[0m  [1m[34mSELECT "schema_migrations".* FROM "schema_migrations"[0m
Migrating to AddTimeStampsColumnToAnswer (20160615195717)
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35m (0.8ms)[0m  [1m[35mALTER TABLE "answers" ADD "created_at" timestamp[0m
  [1m[35m (0.2ms)[0m  [1m[35mALTER TABLE "answers" ADD "updated_at" timestamp[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "schema_migrations" ("version") VALUES ($1) RETURNING "version"[0m  [["version", "20160615195717"]]
  [1m[35m (2.7ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mActiveRecord::InternalMetadata Load (0.8ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" ORDER BY "ar_internal_metadata"."key" ASC LIMIT $1[0m  [["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35m (0.1ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.3ms)[0m  [1m[34mSELECT pg_advisory_unlock(7064053580037655320)[0m
  [1m[36mActiveRecord::SchemaMigration Load (0.2ms)[0m  [1m[34mSELECT "schema_migrations".* FROM "schema_migrations"[0m
  [1m[35m (2.4ms)[0m  [1m[34mSELECT t2.oid::regclass::text AS to_table, a1.attname AS column, a2.attname AS primary_key, c.conname AS name, c.confupdtype AS on_update, c.confdeltype AS on_delete
FROM pg_constraint c
JOIN pg_class t1 ON c.conrelid = t1.oid
JOIN pg_class t2 ON c.confrelid = t2.oid
JOIN pg_attribute a1 ON a1.attnum = c.conkey[1] AND a1.attrelid = t1.oid
JOIN pg_attribute a2 ON a2.attnum = c.confkey[1] AND a2.attrelid = t2.oid
JOIN pg_namespace t3 ON c.connamespace = t3.oid
WHERE c.contype = 'f'
  AND t1.relname = 'answers'
  AND t3.nspname = ANY (current_schemas(false))
ORDER BY c.conname
[0m
  [1m[35m (1.9ms)[0m  [1m[34mSELECT t2.oid::regclass::text AS to_table, a1.attname AS column, a2.attname AS primary_key, c.conname AS name, c.confupdtype AS on_update, c.confdeltype AS on_delete
FROM pg_constraint c
JOIN pg_class t1 ON c.conrelid = t1.oid
JOIN pg_class t2 ON c.confrelid = t2.oid
JOIN pg_attribute a1 ON a1.attnum = c.conkey[1] AND a1.attrelid = t1.oid
JOIN pg_attribute a2 ON a2.attnum = c.confkey[1] AND a2.attrelid = t2.oid
JOIN pg_namespace t3 ON c.connamespace = t3.oid
WHERE c.contype = 'f'
  AND t1.relname = 'questions'
  AND t3.nspname = ANY (current_schemas(false))
ORDER BY c.conname
[0m
  [1m[36mActiveRecord::SchemaMigration Load (0.5ms)[0m  [1m[34mSELECT "schema_migrations".* FROM "schema_migrations"[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (52.6ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "Tell me about yourself"], ["created_at", 2016-06-15 20:24:36 UTC], ["updated_at", 2016-06-15 20:24:36 UTC]]
  [1m[35m (43.0ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (2.2ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "What do YOU want to know???"], ["question_id", 1], ["created_at", 2016-06-15 20:24:36 UTC], ["updated_at", 2016-06-15 20:24:36 UTC]]
  [1m[35m (15.8ms)[0m  [1m[35mCOMMIT[0m
Started GET "/" for ::1 at 2016-06-15 16:29:31 -0400
  [1m[36mActiveRecord::SchemaMigration Load (0.5ms)[0m  [1m[34mSELECT "schema_migrations".* FROM "schema_migrations"[0m
Processing by Rails::WelcomeController#index as HTML
  Parameters: {"internal"=>true}
  Rendering /Users/hlpolivy/.rvm/gems/ruby-2.2.2/gems/railties-5.0.0.rc1/lib/rails/templates/rails/welcome/index.html.erb
  Rendered /Users/hlpolivy/.rvm/gems/ruby-2.2.2/gems/railties-5.0.0.rc1/lib/rails/templates/rails/welcome/index.html.erb (7.3ms)
Completed 200 OK in 47ms (Views: 35.3ms | ActiveRecord: 0.0ms)


Started GET "/api/v1/questions" for ::1 at 2016-06-15 16:29:47 -0400
Processing by Api::V1::QuestionsController#index as HTML
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.7ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 1]]
[active_model_serializers] Rendered ActiveModel::Serializer::CollectionSerializer with ActiveModelSerializers::Adapter::JsonApi (282.06ms)
Completed 200 OK in 700ms (Views: 438.7ms | ActiveRecord: 11.0ms)


  [1m[36mActiveRecord::SchemaMigration Load (0.5ms)[0m  [1m[34mSELECT "schema_migrations".* FROM "schema_migrations"[0m
  [1m[35m (21.1ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1[0m  [["key", :environment]]
  [1m[36mActiveRecord::SchemaMigration Load (0.3ms)[0m  [1m[34mSELECT "schema_migrations".* FROM "schema_migrations"[0m
  [1m[35m (0.4ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1[0m  [["key", :environment]]
  [1m[36mActiveRecord::SchemaMigration Load (0.3ms)[0m  [1m[34mSELECT "schema_migrations".* FROM "schema_migrations"[0m
  [1m[35m (0.3ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1[0m  [["key", :environment]]
  [1m[35m (5155.0ms)[0m  [1m[35mDROP DATABASE IF EXISTS "QIQAPI_development"[0m
  [1m[36mActiveRecord::SchemaMigration Load (0.4ms)[0m  [1m[34mSELECT "schema_migrations".* FROM "schema_migrations"[0m
  [1m[35m (0.3ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1[0m  [["key", :environment]]
  [1m[36mActiveRecord::SchemaMigration Load (0.2ms)[0m  [1m[34mSELECT "schema_migrations".* FROM "schema_migrations"[0m
  [1m[35m (0.3ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1[0m  [["key", :environment]]
  [1m[36mActiveRecord::SchemaMigration Load (0.3ms)[0m  [1m[34mSELECT "schema_migrations".* FROM "schema_migrations"[0m
  [1m[35m (0.2ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1[0m  [["key", :environment]]
  [1m[35m (269.9ms)[0m  [1m[35mDROP DATABASE IF EXISTS "QIQAPI_development"[0m
  [1m[35m (123.3ms)[0m  [1m[35mDROP DATABASE IF EXISTS "QIQAPI_test"[0m
  [1m[35m (2201.2ms)[0m  [1m[35mCREATE DATABASE "QIQAPI_development" ENCODING = 'unicode'[0m
  [1m[35m (742.1ms)[0m  [1m[35mCREATE DATABASE "QIQAPI_test" ENCODING = 'unicode'[0m
  [1m[35mSQL (32.7ms)[0m  [1m[35mCREATE EXTENSION IF NOT EXISTS "plpgsql"[0m
  [1m[35m (6.9ms)[0m  [1m[35mCREATE TABLE "answers" ("id" serial primary key, "vote_score" integer, "vote_count" integer, "content" character varying, "question_id" integer, "created_at" timestamp, "updated_at" timestamp)[0m
  [1m[35m (4.6ms)[0m  [1m[35mCREATE TABLE "questions" ("id" serial primary key, "content" character varying, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  [1m[35m (4.0ms)[0m  [1m[35mCREATE TABLE "schema_migrations" ("version" character varying PRIMARY KEY)[0m
  [1m[35m (0.4ms)[0m  [1m[34mSELECT version FROM "schema_migrations"[0m
  [1m[35m (1.0ms)[0m  [1m[32mINSERT INTO "schema_migrations" (version) VALUES ('20160615195717')[0m
  [1m[35m (1.1ms)[0m  [1m[32mINSERT INTO schema_migrations (version) VALUES ('20160615195122'), ('20160615195241');

[0m
  [1m[35m (3.5ms)[0m  [1m[35mCREATE TABLE "ar_internal_metadata" ("key" character varying PRIMARY KEY, "value" character varying, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  [1m[36mActiveRecord::InternalMetadata Load (0.7ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" ORDER BY "ar_internal_metadata"."key" ASC LIMIT $1[0m  [["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "ar_internal_metadata" ("key", "value", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "key"[0m  [["key", "environment"], ["value", "development"], ["created_at", 2016-06-15 21:43:21 UTC], ["updated_at", 2016-06-15 21:43:21 UTC]]
  [1m[35m (16.0ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mActiveRecord::InternalMetadata Load (0.2ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" ORDER BY "ar_internal_metadata"."key" ASC LIMIT $1[0m  [["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35m (0.1ms)[0m  [1m[35mCOMMIT[0m
  [1m[35mSQL (0.4ms)[0m  [1m[35mCREATE EXTENSION IF NOT EXISTS "plpgsql"[0m
  [1m[35m (7.1ms)[0m  [1m[35mCREATE TABLE "answers" ("id" serial primary key, "vote_score" integer, "vote_count" integer, "content" character varying, "question_id" integer, "created_at" timestamp, "updated_at" timestamp)[0m
  [1m[35m (6.0ms)[0m  [1m[35mCREATE TABLE "questions" ("id" serial primary key, "content" character varying, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  [1m[35m (3.8ms)[0m  [1m[35mCREATE TABLE "schema_migrations" ("version" character varying PRIMARY KEY)[0m
  [1m[35m (0.4ms)[0m  [1m[34mSELECT version FROM "schema_migrations"[0m
  [1m[35m (0.7ms)[0m  [1m[32mINSERT INTO "schema_migrations" (version) VALUES ('20160615195717')[0m
  [1m[35m (0.7ms)[0m  [1m[32mINSERT INTO schema_migrations (version) VALUES ('20160615195122'), ('20160615195241');

[0m
  [1m[35m (5.9ms)[0m  [1m[35mCREATE TABLE "ar_internal_metadata" ("key" character varying PRIMARY KEY, "value" character varying, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  [1m[36mActiveRecord::InternalMetadata Load (0.3ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" ORDER BY "ar_internal_metadata"."key" ASC LIMIT $1[0m  [["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (1.0ms)[0m  [1m[32mINSERT INTO "ar_internal_metadata" ("key", "value", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "key"[0m  [["key", "environment"], ["value", "development"], ["created_at", 2016-06-15 21:43:21 UTC], ["updated_at", 2016-06-15 21:43:21 UTC]]
  [1m[35m (1.6ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mActiveRecord::InternalMetadata Load (0.2ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" ORDER BY "ar_internal_metadata"."key" ASC LIMIT $1[0m  [["LIMIT", 1]]
  [1m[35m (0.6ms)[0m  [1m[35mBEGIN[0m
  [1m[35m (0.1ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mActiveRecord::SchemaMigration Load (0.4ms)[0m  [1m[34mSELECT "schema_migrations".* FROM "schema_migrations"[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.5ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "Tell me about yourself?"], ["created_at", 2016-06-15 21:43:21 UTC], ["updated_at", 2016-06-15 21:43:21 UTC]]
  [1m[35m (0.7ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "What are your strengths and weaknesses?"], ["created_at", 2016-06-15 21:43:21 UTC], ["updated_at", 2016-06-15 21:43:21 UTC]]
  [1m[35m (0.7ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "Tell me about the most recent project you worked on. What were your responsibilities?"], ["created_at", 2016-06-15 21:43:21 UTC], ["updated_at", 2016-06-15 21:43:21 UTC]]
  [1m[35m (0.6ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "What is function hoisting in JavaScript?"], ["created_at", 2016-06-15 21:43:21 UTC], ["updated_at", 2016-06-15 21:43:21 UTC]]
  [1m[35m (0.6ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "What is a closure?"], ["created_at", 2016-06-15 21:43:21 UTC], ["updated_at", 2016-06-15 21:43:21 UTC]]
  [1m[35m (0.6ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "Describe a time when you were able to improve upon the design that was originally suggested?"], ["created_at", 2016-06-15 21:43:21 UTC], ["updated_at", 2016-06-15 21:43:21 UTC]]
  [1m[35m (0.7ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "Where would you like to be in your career five years from now?"], ["created_at", 2016-06-15 21:43:21 UTC], ["updated_at", 2016-06-15 21:43:21 UTC]]
  [1m[35m (0.6ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "Can you name two programming paradigms important for JavaScript app developers?"], ["created_at", 2016-06-15 21:43:21 UTC], ["updated_at", 2016-06-15 21:43:21 UTC]]
  [1m[35m (0.7ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "Tell me about the most recent project you worked on. What were your responsibilities?"], ["created_at", 2016-06-15 21:43:21 UTC], ["updated_at", 2016-06-15 21:43:21 UTC]]
  [1m[35m (0.5ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "Do you have any questions for me??"], ["created_at", 2016-06-15 21:43:21 UTC], ["updated_at", 2016-06-15 21:43:21 UTC]]
  [1m[35m (0.8ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "What is the difference between classical inheritance and prototypal inheritance? "], ["created_at", 2016-06-15 21:43:21 UTC], ["updated_at", 2016-06-15 21:43:21 UTC]]
  [1m[35m (0.7ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "Explain a polymorphic association?"], ["created_at", 2016-06-15 21:43:21 UTC], ["updated_at", 2016-06-15 21:43:21 UTC]]
  [1m[35m (0.6ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "Describe your production deployment process?"], ["created_at", 2016-06-15 21:43:21 UTC], ["updated_at", 2016-06-15 21:43:21 UTC]]
  [1m[35m (0.6ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "How would you declare and use a constructor in Ruby?"], ["created_at", 2016-06-15 21:43:21 UTC], ["updated_at", 2016-06-15 21:43:21 UTC]]
  [1m[35m (0.7ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "Do you have any questions for me?"], ["created_at", 2016-06-15 21:43:21 UTC], ["updated_at", 2016-06-15 21:43:21 UTC]]
  [1m[35m (0.7ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "How many ways can you center a div?"], ["created_at", 2016-06-15 21:43:21 UTC], ["updated_at", 2016-06-15 21:43:21 UTC]]
  [1m[35m (0.7ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "Explain the process of web development to a middle school kid."], ["created_at", 2016-06-15 21:43:21 UTC], ["updated_at", 2016-06-15 21:43:21 UTC]]
  [1m[35m (0.7ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "How does the web work?"], ["created_at", 2016-06-15 21:43:21 UTC], ["updated_at", 2016-06-15 21:43:21 UTC]]
  [1m[35m (0.6ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "How did you learn programming?"], ["created_at", 2016-06-15 21:43:21 UTC], ["updated_at", 2016-06-15 21:43:21 UTC]]
  [1m[35m (2.1ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "How did you learn web development?"], ["created_at", 2016-06-15 21:43:21 UTC], ["updated_at", 2016-06-15 21:43:21 UTC]]
  [1m[35m (0.8ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "So tell me about yourself."], ["created_at", 2016-06-15 21:43:21 UTC], ["updated_at", 2016-06-15 21:43:21 UTC]]
  [1m[35m (1.0ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "Why do you want to work with us?"], ["created_at", 2016-06-15 21:43:21 UTC], ["updated_at", 2016-06-15 21:43:21 UTC]]
  [1m[35m (1.1ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "Tell me about your long-term goals."], ["created_at", 2016-06-15 21:43:21 UTC], ["updated_at", 2016-06-15 21:43:21 UTC]]
  [1m[35m (0.7ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "What are your short-term goals."], ["created_at", 2016-06-15 21:43:21 UTC], ["updated_at", 2016-06-15 21:43:21 UTC]]
  [1m[35m (0.8ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "Please walk me through one of the projects on your resume."], ["created_at", 2016-06-15 21:43:21 UTC], ["updated_at", 2016-06-15 21:43:21 UTC]]
  [1m[35m (0.8ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.3ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.5ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "Can you tell me about a challenge you've faced at work and how you got through it?"], ["created_at", 2016-06-15 21:43:21 UTC], ["updated_at", 2016-06-15 21:43:21 UTC]]
  [1m[35m (2.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "Why do you want to be a web developer?"], ["created_at", 2016-06-15 21:43:21 UTC], ["updated_at", 2016-06-15 21:43:21 UTC]]
  [1m[35m (0.7ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "Why do you want to work for us?"], ["created_at", 2016-06-15 21:43:21 UTC], ["updated_at", 2016-06-15 21:43:21 UTC]]
  [1m[35m (0.7ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "Do you have any questions for me?"], ["created_at", 2016-06-15 21:43:21 UTC], ["updated_at", 2016-06-15 21:43:21 UTC]]
  [1m[35m (1.5ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "How do you evaluate success?"], ["created_at", 2016-06-15 21:43:21 UTC], ["updated_at", 2016-06-15 21:43:21 UTC]]
  [1m[35m (1.0ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mActiveRecord::SchemaMigration Load (0.5ms)[0m  [1m[34mSELECT "schema_migrations".* FROM "schema_migrations"[0m
  [1m[35m (0.4ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1[0m  [["key", :environment]]
  [1m[36mActiveRecord::SchemaMigration Load (0.2ms)[0m  [1m[34mSELECT "schema_migrations".* FROM "schema_migrations"[0m
  [1m[35m (0.2ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1[0m  [["key", :environment]]
  [1m[36mActiveRecord::SchemaMigration Load (0.2ms)[0m  [1m[34mSELECT "schema_migrations".* FROM "schema_migrations"[0m
  [1m[35m (0.2ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1[0m  [["key", :environment]]
  [1m[35m (218.6ms)[0m  [1m[35mDROP DATABASE IF EXISTS "QIQAPI_development"[0m
  [1m[35m (157.3ms)[0m  [1m[35mDROP DATABASE IF EXISTS "QIQAPI_test"[0m
  [1m[35m (1919.1ms)[0m  [1m[35mCREATE DATABASE "QIQAPI_development" ENCODING = 'unicode'[0m
  [1m[35m (720.3ms)[0m  [1m[35mCREATE DATABASE "QIQAPI_test" ENCODING = 'unicode'[0m
  [1m[35mSQL (0.3ms)[0m  [1m[35mCREATE EXTENSION IF NOT EXISTS "plpgsql"[0m
  [1m[35m (54.4ms)[0m  [1m[35mCREATE TABLE "answers" ("id" serial primary key, "vote_score" integer, "vote_count" integer, "content" character varying, "question_id" integer, "created_at" timestamp, "updated_at" timestamp)[0m
  [1m[35m (3.9ms)[0m  [1m[35mCREATE TABLE "questions" ("id" serial primary key, "content" character varying, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  [1m[35m (3.8ms)[0m  [1m[35mCREATE TABLE "schema_migrations" ("version" character varying PRIMARY KEY)[0m
  [1m[35m (0.4ms)[0m  [1m[34mSELECT version FROM "schema_migrations"[0m
  [1m[35m (0.8ms)[0m  [1m[32mINSERT INTO "schema_migrations" (version) VALUES ('20160615195717')[0m
  [1m[35m (0.7ms)[0m  [1m[32mINSERT INTO schema_migrations (version) VALUES ('20160615195122'), ('20160615195241');

[0m
  [1m[35m (4.0ms)[0m  [1m[35mCREATE TABLE "ar_internal_metadata" ("key" character varying PRIMARY KEY, "value" character varying, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  [1m[36mActiveRecord::InternalMetadata Load (0.6ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" ORDER BY "ar_internal_metadata"."key" ASC LIMIT $1[0m  [["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "ar_internal_metadata" ("key", "value", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "key"[0m  [["key", "environment"], ["value", "development"], ["created_at", 2016-06-15 22:22:08 UTC], ["updated_at", 2016-06-15 22:22:08 UTC]]
  [1m[35m (15.6ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mActiveRecord::InternalMetadata Load (0.5ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" ORDER BY "ar_internal_metadata"."key" ASC LIMIT $1[0m  [["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35m (0.2ms)[0m  [1m[35mCOMMIT[0m
  [1m[35mSQL (0.4ms)[0m  [1m[35mCREATE EXTENSION IF NOT EXISTS "plpgsql"[0m
  [1m[35m (8.1ms)[0m  [1m[35mCREATE TABLE "answers" ("id" serial primary key, "vote_score" integer, "vote_count" integer, "content" character varying, "question_id" integer, "created_at" timestamp, "updated_at" timestamp)[0m
  [1m[35m (5.6ms)[0m  [1m[35mCREATE TABLE "questions" ("id" serial primary key, "content" character varying, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  [1m[35m (5.0ms)[0m  [1m[35mCREATE TABLE "schema_migrations" ("version" character varying PRIMARY KEY)[0m
  [1m[35m (0.4ms)[0m  [1m[34mSELECT version FROM "schema_migrations"[0m
  [1m[35m (0.9ms)[0m  [1m[32mINSERT INTO "schema_migrations" (version) VALUES ('20160615195717')[0m
  [1m[35m (0.7ms)[0m  [1m[32mINSERT INTO schema_migrations (version) VALUES ('20160615195122'), ('20160615195241');

[0m
  [1m[35m (3.5ms)[0m  [1m[35mCREATE TABLE "ar_internal_metadata" ("key" character varying PRIMARY KEY, "value" character varying, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  [1m[36mActiveRecord::InternalMetadata Load (0.5ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" ORDER BY "ar_internal_metadata"."key" ASC LIMIT $1[0m  [["LIMIT", 1]]
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "ar_internal_metadata" ("key", "value", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "key"[0m  [["key", "environment"], ["value", "development"], ["created_at", 2016-06-15 22:22:08 UTC], ["updated_at", 2016-06-15 22:22:08 UTC]]
  [1m[35m (1.9ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mActiveRecord::InternalMetadata Load (0.2ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" ORDER BY "ar_internal_metadata"."key" ASC LIMIT $1[0m  [["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35m (0.1ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mActiveRecord::SchemaMigration Load (0.4ms)[0m  [1m[34mSELECT "schema_migrations".* FROM "schema_migrations"[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.7ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "What are you looking for in terms of career development?"], ["created_at", 2016-06-15 22:22:08 UTC], ["updated_at", 2016-06-15 22:22:08 UTC]]
  [1m[35m (16.2ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "How many ways can you center a div?"], ["created_at", 2016-06-15 22:22:08 UTC], ["updated_at", 2016-06-15 22:22:08 UTC]]
  [1m[35m (0.7ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "What are your strengths and weaknesses?"], ["created_at", 2016-06-15 22:22:08 UTC], ["updated_at", 2016-06-15 22:22:08 UTC]]
  [1m[35m (0.7ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "Explain the process of web development to a middle school kid."], ["created_at", 2016-06-15 22:22:08 UTC], ["updated_at", 2016-06-15 22:22:08 UTC]]
  [1m[35m (0.7ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "What did you like least about your last job?"], ["created_at", 2016-06-15 22:22:08 UTC], ["updated_at", 2016-06-15 22:22:08 UTC]]
  [1m[35m (0.6ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "How does the web work?"], ["created_at", 2016-06-15 22:22:08 UTC], ["updated_at", 2016-06-15 22:22:08 UTC]]
  [1m[35m (1.8ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "What is function hoisting in JavaScript?"], ["created_at", 2016-06-15 22:22:08 UTC], ["updated_at", 2016-06-15 22:22:08 UTC]]
  [1m[35m (0.7ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "How did you learn programming?"], ["created_at", 2016-06-15 22:22:08 UTC], ["updated_at", 2016-06-15 22:22:08 UTC]]
  [1m[35m (0.8ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "What is a closure?"], ["created_at", 2016-06-15 22:22:08 UTC], ["updated_at", 2016-06-15 22:22:08 UTC]]
  [1m[35m (2.2ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "How did you learn web development?"], ["created_at", 2016-06-15 22:22:08 UTC], ["updated_at", 2016-06-15 22:22:08 UTC]]
  [1m[35m (1.0ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "Describe a time when you were able to improve upon the design that was originally suggested?"], ["created_at", 2016-06-15 22:22:08 UTC], ["updated_at", 2016-06-15 22:22:08 UTC]]
  [1m[35m (0.9ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "So tell me about yourself."], ["created_at", 2016-06-15 22:22:09 UTC], ["updated_at", 2016-06-15 22:22:09 UTC]]
  [1m[35m (0.6ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "Where would you like to be in your career five years from now?"], ["created_at", 2016-06-15 22:22:09 UTC], ["updated_at", 2016-06-15 22:22:09 UTC]]
  [1m[35m (0.7ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "Why do you want to work with us?"], ["created_at", 2016-06-15 22:22:09 UTC], ["updated_at", 2016-06-15 22:22:09 UTC]]
  [1m[35m (0.7ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "Can you name two programming paradigms important for JavaScript app developers?"], ["created_at", 2016-06-15 22:22:09 UTC], ["updated_at", 2016-06-15 22:22:09 UTC]]
  [1m[35m (0.6ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "Tell me about your long-term goals."], ["created_at", 2016-06-15 22:22:09 UTC], ["updated_at", 2016-06-15 22:22:09 UTC]]
  [1m[35m (1.4ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "Tell me about the most recent project you worked on. What were your responsibilities?"], ["created_at", 2016-06-15 22:22:09 UTC], ["updated_at", 2016-06-15 22:22:09 UTC]]
  [1m[35m (0.6ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.6ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "What are your short-term goals."], ["created_at", 2016-06-15 22:22:09 UTC], ["updated_at", 2016-06-15 22:22:09 UTC]]
  [1m[35m (0.6ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "Do you have any questions for me?"], ["created_at", 2016-06-15 22:22:09 UTC], ["updated_at", 2016-06-15 22:22:09 UTC]]
  [1m[35m (0.6ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "Please walk me through one of the projects on your resume."], ["created_at", 2016-06-15 22:22:09 UTC], ["updated_at", 2016-06-15 22:22:09 UTC]]
  [1m[35m (2.0ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "What is the difference between classical inheritance and prototypal inheritance? "], ["created_at", 2016-06-15 22:22:09 UTC], ["updated_at", 2016-06-15 22:22:09 UTC]]
  [1m[35m (0.6ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "Can you tell me about a challenge you've faced at work and how you got through it?"], ["created_at", 2016-06-15 22:22:09 UTC], ["updated_at", 2016-06-15 22:22:09 UTC]]
  [1m[35m (0.9ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.5ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "Explain a polymorphic association?"], ["created_at", 2016-06-15 22:22:09 UTC], ["updated_at", 2016-06-15 22:22:09 UTC]]
  [1m[35m (0.7ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "Why do you want to be a web developer?"], ["created_at", 2016-06-15 22:22:09 UTC], ["updated_at", 2016-06-15 22:22:09 UTC]]
  [1m[35m (1.1ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "Describe your production deployment process?"], ["created_at", 2016-06-15 22:22:09 UTC], ["updated_at", 2016-06-15 22:22:09 UTC]]
  [1m[35m (0.7ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "Why do you want to work for us?"], ["created_at", 2016-06-15 22:22:09 UTC], ["updated_at", 2016-06-15 22:22:09 UTC]]
  [1m[35m (0.9ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.7ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "How would you declare and use a constructor in Ruby?"], ["created_at", 2016-06-15 22:22:09 UTC], ["updated_at", 2016-06-15 22:22:09 UTC]]
  [1m[35m (0.7ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "Do you have any questions for me?"], ["created_at", 2016-06-15 22:22:09 UTC], ["updated_at", 2016-06-15 22:22:09 UTC]]
  [1m[35m (0.8ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "How do you evaluate success?"], ["created_at", 2016-06-15 22:22:09 UTC], ["updated_at", 2016-06-15 22:22:09 UTC]]
  [1m[35m (0.6ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "How would you describe your work style?"], ["created_at", 2016-06-15 22:22:09 UTC], ["updated_at", 2016-06-15 22:22:09 UTC]]
  [1m[35m (0.8ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.3ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.8ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "Three and more than you'd expect!\n\nYou could center a div horizontally, vertically, or both and there are\na ton of ways to do them each. It also depends on what you're tryong to\ncenter. The most common way I do it is using the margins. If you set\n  a div's margin to 0 auto, to will automatically get the width of the\n  client's screen and use that information to center the div.\n\n  If I had text within a div, I wold use the text-align: center css\n  attribute on the div."], ["question_id", 2], ["created_at", 2016-06-15 22:22:09 UTC], ["updated_at", 2016-06-15 22:22:09 UTC]]
  [1m[35m (16.3ms)[0m  [1m[35mCOMMIT[0m
Started GET "/" for ::1 at 2016-06-15 18:22:32 -0400
  [1m[36mActiveRecord::SchemaMigration Load (0.5ms)[0m  [1m[34mSELECT "schema_migrations".* FROM "schema_migrations"[0m
Processing by Rails::WelcomeController#index as HTML
  Parameters: {"internal"=>true}
  Rendering /Users/hlpolivy/.rvm/gems/ruby-2.2.2/gems/railties-5.0.0.rc1/lib/rails/templates/rails/welcome/index.html.erb
  Rendered /Users/hlpolivy/.rvm/gems/ruby-2.2.2/gems/railties-5.0.0.rc1/lib/rails/templates/rails/welcome/index.html.erb (6.7ms)
Completed 200 OK in 45ms (Views: 34.0ms | ActiveRecord: 0.0ms)


Started GET "/api/v1/questions" for ::1 at 2016-06-15 18:22:41 -0400
Processing by Api::V1::QuestionsController#index as HTML
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.6ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.5ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 2]]
[active_model_serializers]   [1m[36mAnswer Load (0.3ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 3]]
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 4]]
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 5]]
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 6]]
[active_model_serializers]   [1m[36mAnswer Load (0.1ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 7]]
[active_model_serializers]   [1m[36mAnswer Load (0.1ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 8]]
[active_model_serializers]   [1m[36mAnswer Load (0.1ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 9]]
[active_model_serializers]   [1m[36mAnswer Load (0.1ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 10]]
[active_model_serializers]   [1m[36mAnswer Load (0.1ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 11]]
[active_model_serializers]   [1m[36mAnswer Load (0.1ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 12]]
[active_model_serializers]   [1m[36mAnswer Load (0.1ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 13]]
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 14]]
[active_model_serializers]   [1m[36mAnswer Load (0.1ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 15]]
[active_model_serializers]   [1m[36mAnswer Load (0.1ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 16]]
[active_model_serializers]   [1m[36mAnswer Load (0.1ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 17]]
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 18]]
[active_model_serializers]   [1m[36mAnswer Load (0.1ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 19]]
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 20]]
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 21]]
[active_model_serializers]   [1m[36mAnswer Load (0.1ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 22]]
[active_model_serializers]   [1m[36mAnswer Load (0.1ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 23]]
[active_model_serializers]   [1m[36mAnswer Load (0.1ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 24]]
[active_model_serializers]   [1m[36mAnswer Load (0.1ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 25]]
[active_model_serializers]   [1m[36mAnswer Load (0.1ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 26]]
[active_model_serializers]   [1m[36mAnswer Load (0.1ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 27]]
[active_model_serializers]   [1m[36mAnswer Load (0.1ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 28]]
[active_model_serializers]   [1m[36mAnswer Load (0.1ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 29]]
[active_model_serializers]   [1m[36mAnswer Load (0.1ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 30]]
[active_model_serializers] Rendered ActiveModel::Serializer::CollectionSerializer with ActiveModelSerializers::Adapter::JsonApi (385.03ms)
Completed 200 OK in 598ms (Views: 579.2ms | ActiveRecord: 13.7ms)


  [1m[36mActiveRecord::SchemaMigration Load (0.5ms)[0m  [1m[34mSELECT "schema_migrations".* FROM "schema_migrations"[0m
  [1m[35m (0.9ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1[0m  [["key", :environment]]
  [1m[36mActiveRecord::SchemaMigration Load (0.3ms)[0m  [1m[34mSELECT "schema_migrations".* FROM "schema_migrations"[0m
  [1m[35m (0.3ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1[0m  [["key", :environment]]
  [1m[36mActiveRecord::SchemaMigration Load (0.3ms)[0m  [1m[34mSELECT "schema_migrations".* FROM "schema_migrations"[0m
  [1m[35m (0.2ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1[0m  [["key", :environment]]
  [1m[35m (160.2ms)[0m  [1m[35mDROP DATABASE IF EXISTS "QIQAPI_development"[0m
  [1m[35m (170.6ms)[0m  [1m[35mDROP DATABASE IF EXISTS "QIQAPI_test"[0m
  [1m[35m (2121.3ms)[0m  [1m[35mCREATE DATABASE "QIQAPI_development" ENCODING = 'unicode'[0m
  [1m[35m (922.9ms)[0m  [1m[35mCREATE DATABASE "QIQAPI_test" ENCODING = 'unicode'[0m
  [1m[35mSQL (0.3ms)[0m  [1m[35mCREATE EXTENSION IF NOT EXISTS "plpgsql"[0m
  [1m[35m (211.0ms)[0m  [1m[35mCREATE TABLE "answers" ("id" serial primary key, "vote_score" integer, "vote_count" integer, "content" character varying, "question_id" integer, "created_at" timestamp, "updated_at" timestamp)[0m
  [1m[35m (20.9ms)[0m  [1m[35mCREATE TABLE "questions" ("id" serial primary key, "content" character varying, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  [1m[35m (32.3ms)[0m  [1m[35mCREATE TABLE "schema_migrations" ("version" character varying PRIMARY KEY)[0m
  [1m[35m (0.7ms)[0m  [1m[34mSELECT version FROM "schema_migrations"[0m
  [1m[35m (2.1ms)[0m  [1m[32mINSERT INTO "schema_migrations" (version) VALUES ('20160615195717')[0m
  [1m[35m (12.5ms)[0m  [1m[32mINSERT INTO schema_migrations (version) VALUES ('20160615195122'), ('20160615195241');

[0m
  [1m[35m (64.1ms)[0m  [1m[35mCREATE TABLE "ar_internal_metadata" ("key" character varying PRIMARY KEY, "value" character varying, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  [1m[36mActiveRecord::InternalMetadata Load (0.7ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" ORDER BY "ar_internal_metadata"."key" ASC LIMIT $1[0m  [["LIMIT", 1]]
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "ar_internal_metadata" ("key", "value", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "key"[0m  [["key", "environment"], ["value", "development"], ["created_at", 2016-06-15 22:42:43 UTC], ["updated_at", 2016-06-15 22:42:43 UTC]]
  [1m[35m (16.0ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mActiveRecord::InternalMetadata Load (0.2ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" ORDER BY "ar_internal_metadata"."key" ASC LIMIT $1[0m  [["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35m (0.1ms)[0m  [1m[35mCOMMIT[0m
  [1m[35mSQL (0.5ms)[0m  [1m[35mCREATE EXTENSION IF NOT EXISTS "plpgsql"[0m
  [1m[35m (41.1ms)[0m  [1m[35mCREATE TABLE "answers" ("id" serial primary key, "vote_score" integer, "vote_count" integer, "content" character varying, "question_id" integer, "created_at" timestamp, "updated_at" timestamp)[0m
  [1m[35m (19.6ms)[0m  [1m[35mCREATE TABLE "questions" ("id" serial primary key, "content" character varying, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  [1m[35m (10.5ms)[0m  [1m[35mCREATE TABLE "schema_migrations" ("version" character varying PRIMARY KEY)[0m
  [1m[35m (0.4ms)[0m  [1m[34mSELECT version FROM "schema_migrations"[0m
  [1m[35m (1.5ms)[0m  [1m[32mINSERT INTO "schema_migrations" (version) VALUES ('20160615195717')[0m
  [1m[35m (2.5ms)[0m  [1m[32mINSERT INTO schema_migrations (version) VALUES ('20160615195122'), ('20160615195241');

[0m
  [1m[35m (9.7ms)[0m  [1m[35mCREATE TABLE "ar_internal_metadata" ("key" character varying PRIMARY KEY, "value" character varying, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  [1m[36mActiveRecord::InternalMetadata Load (0.3ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" ORDER BY "ar_internal_metadata"."key" ASC LIMIT $1[0m  [["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "ar_internal_metadata" ("key", "value", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "key"[0m  [["key", "environment"], ["value", "development"], ["created_at", 2016-06-15 22:42:44 UTC], ["updated_at", 2016-06-15 22:42:44 UTC]]
  [1m[35m (1.5ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mActiveRecord::InternalMetadata Load (0.2ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" ORDER BY "ar_internal_metadata"."key" ASC LIMIT $1[0m  [["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35m (0.1ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mActiveRecord::SchemaMigration Load (0.3ms)[0m  [1m[34mSELECT "schema_migrations".* FROM "schema_migrations"[0m
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.6ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "What are you looking for in terms of career development?"], ["created_at", 2016-06-15 22:42:44 UTC], ["updated_at", 2016-06-15 22:42:44 UTC]]
  [1m[35m (1.8ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "How many ways can you center a div?"], ["created_at", 2016-06-15 22:42:44 UTC], ["updated_at", 2016-06-15 22:42:44 UTC]]
  [1m[35m (38.0ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "What are your strengths and weaknesses?"], ["created_at", 2016-06-15 22:42:44 UTC], ["updated_at", 2016-06-15 22:42:44 UTC]]
  [1m[35m (4.2ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "Explain the process of web development to a middle school kid."], ["created_at", 2016-06-15 22:42:44 UTC], ["updated_at", 2016-06-15 22:42:44 UTC]]
  [1m[35m (1.2ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "What did you like least about your last job?"], ["created_at", 2016-06-15 22:42:44 UTC], ["updated_at", 2016-06-15 22:42:44 UTC]]
  [1m[35m (1.0ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "How does the web work?"], ["created_at", 2016-06-15 22:42:44 UTC], ["updated_at", 2016-06-15 22:42:44 UTC]]
  [1m[35m (0.8ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "What is function hoisting in JavaScript?"], ["created_at", 2016-06-15 22:42:44 UTC], ["updated_at", 2016-06-15 22:42:44 UTC]]
  [1m[35m (0.9ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "How did you learn programming?"], ["created_at", 2016-06-15 22:42:44 UTC], ["updated_at", 2016-06-15 22:42:44 UTC]]
  [1m[35m (1.0ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "What is a closure?"], ["created_at", 2016-06-15 22:42:44 UTC], ["updated_at", 2016-06-15 22:42:44 UTC]]
  [1m[35m (3.2ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "How did you learn web development?"], ["created_at", 2016-06-15 22:42:44 UTC], ["updated_at", 2016-06-15 22:42:44 UTC]]
  [1m[35m (0.7ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "Describe a time when you were able to improve upon the design that was originally suggested?"], ["created_at", 2016-06-15 22:42:44 UTC], ["updated_at", 2016-06-15 22:42:44 UTC]]
  [1m[35m (0.7ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "So tell me about yourself."], ["created_at", 2016-06-15 22:42:44 UTC], ["updated_at", 2016-06-15 22:42:44 UTC]]
  [1m[35m (1.1ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "Where would you like to be in your career five years from now?"], ["created_at", 2016-06-15 22:42:44 UTC], ["updated_at", 2016-06-15 22:42:44 UTC]]
  [1m[35m (0.7ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "Why do you want to work with us?"], ["created_at", 2016-06-15 22:42:44 UTC], ["updated_at", 2016-06-15 22:42:44 UTC]]
  [1m[35m (1.1ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "Can you name two programming paradigms important for JavaScript app developers?"], ["created_at", 2016-06-15 22:42:44 UTC], ["updated_at", 2016-06-15 22:42:44 UTC]]
  [1m[35m (0.6ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "Tell me about your long-term goals."], ["created_at", 2016-06-15 22:42:44 UTC], ["updated_at", 2016-06-15 22:42:44 UTC]]
  [1m[35m (1.7ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "Tell me about the most recent project you worked on. What were your responsibilities?"], ["created_at", 2016-06-15 22:42:44 UTC], ["updated_at", 2016-06-15 22:42:44 UTC]]
  [1m[35m (0.8ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "What are your short-term goals."], ["created_at", 2016-06-15 22:42:44 UTC], ["updated_at", 2016-06-15 22:42:44 UTC]]
  [1m[35m (0.9ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "Do you have any questions for me?"], ["created_at", 2016-06-15 22:42:44 UTC], ["updated_at", 2016-06-15 22:42:44 UTC]]
  [1m[35m (1.0ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "Please walk me through one of the projects on your resume."], ["created_at", 2016-06-15 22:42:44 UTC], ["updated_at", 2016-06-15 22:42:44 UTC]]
  [1m[35m (0.9ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.8ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "What is the difference between classical inheritance and prototypal inheritance? "], ["created_at", 2016-06-15 22:42:44 UTC], ["updated_at", 2016-06-15 22:42:44 UTC]]
  [1m[35m (1.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "Can you tell me about a challenge you've faced at work and how you got through it?"], ["created_at", 2016-06-15 22:42:44 UTC], ["updated_at", 2016-06-15 22:42:44 UTC]]
  [1m[35m (0.9ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "Explain a polymorphic association?"], ["created_at", 2016-06-15 22:42:44 UTC], ["updated_at", 2016-06-15 22:42:44 UTC]]
  [1m[35m (1.5ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "Why do you want to be a web developer?"], ["created_at", 2016-06-15 22:42:44 UTC], ["updated_at", 2016-06-15 22:42:44 UTC]]
  [1m[35m (2.6ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "Describe your production deployment process?"], ["created_at", 2016-06-15 22:42:44 UTC], ["updated_at", 2016-06-15 22:42:44 UTC]]
  [1m[35m (0.8ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "Why do you want to work for us?"], ["created_at", 2016-06-15 22:42:44 UTC], ["updated_at", 2016-06-15 22:42:44 UTC]]
  [1m[35m (1.1ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "How would you declare and use a constructor in Ruby?"], ["created_at", 2016-06-15 22:42:44 UTC], ["updated_at", 2016-06-15 22:42:44 UTC]]
  [1m[35m (0.9ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "Do you have any questions for me?"], ["created_at", 2016-06-15 22:42:44 UTC], ["updated_at", 2016-06-15 22:42:44 UTC]]
  [1m[35m (0.9ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "How do you evaluate success?"], ["created_at", 2016-06-15 22:42:44 UTC], ["updated_at", 2016-06-15 22:42:44 UTC]]
  [1m[35m (2.1ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "How would you describe your work style?"], ["created_at", 2016-06-15 22:42:44 UTC], ["updated_at", 2016-06-15 22:42:44 UTC]]
  [1m[35m (1.0ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.5ms)[0m  [1m[32mINSERT INTO "answers" ("vote_score", "vote_count", "content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["vote_score", 15], ["vote_count", 20], ["content", "<p>Three, and more than you'd expect!</p>\n\n  <p>You could center a div horizontally, vertically, or both and there are\n  a ton of ways to do them each. It also depends on what you're trying to\n  center. The most common way I do it is using the margins. If you set\n    a div's margin to 0 auto, to will automatically get the width of the\n    client's screen and use that information to center the div.</p>\n\n  <p>If I had text within a div, I wold use the text-align: center css\n  attribute on the div.</p>"], ["question_id", 2], ["created_at", 2016-06-15 22:42:44 UTC], ["updated_at", 2016-06-15 22:42:44 UTC]]
  [1m[35m (16.1ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.5ms)[0m  [1m[32mINSERT INTO "answers" ("vote_score", "vote_count", "content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["vote_score", -5], ["vote_count", 7], ["content", "<p>Just use margin dude.</p>"], ["question_id", 2], ["created_at", 2016-06-15 22:42:44 UTC], ["updated_at", 2016-06-15 22:42:44 UTC]]
  [1m[35m (0.9ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.5ms)[0m  [1m[32mINSERT INTO "answers" ("vote_score", "vote_count", "content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["vote_score", 2], ["vote_count", 2], ["content", "<p>You know when you write notes and pass them to Suzie from\n  down the street? That's kind of what I do. Websites are like notes\n  you want your friends to read. For them to read your notes, you\n  need to alos give them the note right? Well that is what the Internet\n  does for you. It send the websites to the people who want to read\n  them.</p>\n\n  <p>The best part is, you know how you don't want Ms. Robinson to see\n  you pass that note? It's like that with the Internet too. There's\n  ways of keeping the visits to your website secret!</p>"], ["question_id", 4], ["created_at", 2016-06-15 22:42:44 UTC], ["updated_at", 2016-06-15 22:42:44 UTC]]
  [1m[35m (1.1ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "answers" ("vote_score", "vote_count", "content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["vote_score", -7], ["vote_count", 12], ["content", "<p>Web development is like, you know, creating front end\n  presentations of backend APIs using asynchronious requests.</p>"], ["question_id", 4], ["created_at", 2016-06-15 22:42:44 UTC], ["updated_at", 2016-06-15 22:42:44 UTC]]
  [1m[35m (0.7ms)[0m  [1m[35mCOMMIT[0m
Started GET "/api/v1/questions" for ::1 at 2016-06-15 18:43:00 -0400
  [1m[36mActiveRecord::SchemaMigration Load (0.4ms)[0m  [1m[34mSELECT "schema_migrations".* FROM "schema_migrations"[0m
Processing by Api::V1::QuestionsController#index as HTML
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.4ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.3ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 2]]
[active_model_serializers]   [1m[36mAnswer Load (0.3ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 3]]
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 4]]
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 5]]
[active_model_serializers]   [1m[36mAnswer Load (0.1ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 6]]
[active_model_serializers]   [1m[36mAnswer Load (0.1ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 7]]
[active_model_serializers]   [1m[36mAnswer Load (0.1ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 8]]
[active_model_serializers]   [1m[36mAnswer Load (0.1ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 9]]
[active_model_serializers]   [1m[36mAnswer Load (0.1ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 10]]
[active_model_serializers]   [1m[36mAnswer Load (0.1ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 11]]
[active_model_serializers]   [1m[36mAnswer Load (0.1ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 12]]
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 13]]
[active_model_serializers]   [1m[36mAnswer Load (0.1ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 14]]
[active_model_serializers]   [1m[36mAnswer Load (0.1ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 15]]
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 16]]
[active_model_serializers]   [1m[36mAnswer Load (0.1ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 17]]
[active_model_serializers]   [1m[36mAnswer Load (0.1ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 18]]
[active_model_serializers]   [1m[36mAnswer Load (0.1ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 19]]
[active_model_serializers]   [1m[36mAnswer Load (0.1ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 20]]
[active_model_serializers]   [1m[36mAnswer Load (0.1ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 21]]
[active_model_serializers]   [1m[36mAnswer Load (0.1ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 22]]
[active_model_serializers]   [1m[36mAnswer Load (0.1ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 23]]
[active_model_serializers]   [1m[36mAnswer Load (0.1ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 24]]
[active_model_serializers]   [1m[36mAnswer Load (0.1ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 25]]
[active_model_serializers]   [1m[36mAnswer Load (0.1ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 26]]
[active_model_serializers]   [1m[36mAnswer Load (0.1ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 27]]
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 28]]
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 29]]
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 30]]
[active_model_serializers] Rendered ActiveModel::Serializer::CollectionSerializer with ActiveModelSerializers::Adapter::JsonApi (122.92ms)
Completed 200 OK in 168ms (Views: 152.3ms | ActiveRecord: 11.1ms)


Started GET "/api/v1/questions" for ::1 at 2016-06-15 18:43:05 -0400
Processing by Api::V1::QuestionsController#index as HTML
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.1ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 2]]
[active_model_serializers]   [1m[36mAnswer Load (0.1ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 3]]
[active_model_serializers]   [1m[36mAnswer Load (0.1ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 4]]
[active_model_serializers]   [1m[36mAnswer Load (0.1ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 5]]
[active_model_serializers]   [1m[36mAnswer Load (0.1ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 6]]
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 7]]
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 8]]
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 9]]
[active_model_serializers]   [1m[36mAnswer Load (0.1ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 10]]
[active_model_serializers]   [1m[36mAnswer Load (0.1ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 11]]
[active_model_serializers]   [1m[36mAnswer Load (0.1ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 12]]
[active_model_serializers]   [1m[36mAnswer Load (0.1ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 13]]
[active_model_serializers]   [1m[36mAnswer Load (0.1ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 14]]
[active_model_serializers]   [1m[36mAnswer Load (0.1ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 15]]
[active_model_serializers]   [1m[36mAnswer Load (0.1ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 16]]
[active_model_serializers]   [1m[36mAnswer Load (0.1ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 17]]
[active_model_serializers]   [1m[36mAnswer Load (0.1ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 18]]
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 19]]
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 20]]
[active_model_serializers]   [1m[36mAnswer Load (0.1ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 21]]
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 22]]
[active_model_serializers]   [1m[36mAnswer Load (0.1ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 23]]
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 24]]
[active_model_serializers]   [1m[36mAnswer Load (0.1ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 25]]
[active_model_serializers]   [1m[36mAnswer Load (0.1ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 26]]
[active_model_serializers]   [1m[36mAnswer Load (0.1ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 27]]
[active_model_serializers]   [1m[36mAnswer Load (0.1ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 28]]
[active_model_serializers]   [1m[36mAnswer Load (0.1ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 29]]
[active_model_serializers]   [1m[36mAnswer Load (0.1ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 30]]
[active_model_serializers] Rendered ActiveModel::Serializer::CollectionSerializer with ActiveModelSerializers::Adapter::JsonApi (58.28ms)
Completed 200 OK in 62ms (Views: 56.9ms | ActiveRecord: 4.5ms)


Started GET "/api/v1/questions" for ::1 at 2016-06-15 18:43:07 -0400
Processing by Api::V1::QuestionsController#index as HTML
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 2]]
[active_model_serializers]   [1m[36mAnswer Load (0.1ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 3]]
[active_model_serializers]   [1m[36mAnswer Load (0.1ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 4]]
[active_model_serializers]   [1m[36mAnswer Load (0.1ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 5]]
[active_model_serializers]   [1m[36mAnswer Load (0.1ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 6]]
[active_model_serializers]   [1m[36mAnswer Load (0.1ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 7]]
[active_model_serializers]   [1m[36mAnswer Load (0.1ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 8]]
[active_model_serializers]   [1m[36mAnswer Load (0.1ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 9]]
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 10]]
[active_model_serializers]   [1m[36mAnswer Load (0.1ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 11]]
[active_model_serializers]   [1m[36mAnswer Load (0.1ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 12]]
[active_model_serializers]   [1m[36mAnswer Load (0.1ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 13]]
[active_model_serializers]   [1m[36mAnswer Load (0.1ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 14]]
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 15]]
[active_model_serializers]   [1m[36mAnswer Load (0.1ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 16]]
[active_model_serializers]   [1m[36mAnswer Load (0.1ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 17]]
[active_model_serializers]   [1m[36mAnswer Load (0.1ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 18]]
[active_model_serializers]   [1m[36mAnswer Load (0.1ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 19]]
[active_model_serializers]   [1m[36mAnswer Load (0.1ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 20]]
[active_model_serializers]   [1m[36mAnswer Load (0.1ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 21]]
[active_model_serializers]   [1m[36mAnswer Load (0.1ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 22]]
[active_model_serializers]   [1m[36mAnswer Load (0.1ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 23]]
[active_model_serializers]   [1m[36mAnswer Load (0.1ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 24]]
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 25]]
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 26]]
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 27]]
[active_model_serializers]   [1m[36mAnswer Load (0.1ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 28]]
[active_model_serializers]   [1m[36mAnswer Load (0.1ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 29]]
[active_model_serializers]   [1m[36mAnswer Load (0.1ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 30]]
[active_model_serializers] Rendered ActiveModel::Serializer::CollectionSerializer with ActiveModelSerializers::Adapter::JsonApi (65.46ms)
Completed 200 OK in 73ms (Views: 68.5ms | ActiveRecord: 4.5ms)


Started GET "/api/v1/questions" for ::1 at 2016-06-15 18:43:08 -0400
Processing by Api::V1::QuestionsController#index as HTML
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.1ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 2]]
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 3]]
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 4]]
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 5]]
[active_model_serializers]   [1m[36mAnswer Load (0.1ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 6]]
[active_model_serializers]   [1m[36mAnswer Load (0.1ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 7]]
[active_model_serializers]   [1m[36mAnswer Load (0.1ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 8]]
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 9]]
[active_model_serializers]   [1m[36mAnswer Load (0.1ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 10]]
[active_model_serializers]   [1m[36mAnswer Load (0.1ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 11]]
[active_model_serializers]   [1m[36mAnswer Load (0.1ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 12]]
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 13]]
[active_model_serializers]   [1m[36mAnswer Load (0.1ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 14]]
[active_model_serializers]   [1m[36mAnswer Load (0.1ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 15]]
[active_model_serializers]   [1m[36mAnswer Load (0.1ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 16]]
[active_model_serializers]   [1m[36mAnswer Load (0.1ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 17]]
[active_model_serializers]   [1m[36mAnswer Load (0.1ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 18]]
[active_model_serializers]   [1m[36mAnswer Load (0.1ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 19]]
[active_model_serializers]   [1m[36mAnswer Load (0.3ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 20]]
[active_model_serializers]   [1m[36mAnswer Load (0.1ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 21]]
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 22]]
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 23]]
[active_model_serializers]   [1m[36mAnswer Load (0.1ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 24]]
[active_model_serializers]   [1m[36mAnswer Load (0.1ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 25]]
[active_model_serializers]   [1m[36mAnswer Load (0.1ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 26]]
[active_model_serializers]   [1m[36mAnswer Load (0.1ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 27]]
[active_model_serializers]   [1m[36mAnswer Load (0.1ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 28]]
[active_model_serializers]   [1m[36mAnswer Load (0.1ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 29]]
[active_model_serializers]   [1m[36mAnswer Load (0.1ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 30]]
[active_model_serializers] Rendered ActiveModel::Serializer::CollectionSerializer with ActiveModelSerializers::Adapter::JsonApi (59.9ms)
Completed 200 OK in 63ms (Views: 58.2ms | ActiveRecord: 4.6ms)


Started GET "/api/v1/questions" for ::1 at 2016-06-15 19:12:55 -0400
Processing by Api::V1::QuestionsController#index as HTML
  [1m[36mQuestion Load (0.5ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
  [1m[36mAnswer Load (0.5ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" IN (1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30)[0m
[active_model_serializers] Rendered ActiveModel::Serializer::CollectionSerializer with ActiveModelSerializers::Adapter::JsonApi (47.27ms)
Completed 200 OK in 139ms (Views: 124.9ms | ActiveRecord: 7.7ms)


Started GET "/api/v1/questions" for ::1 at 2016-06-15 19:18:05 -0400
  [1m[36mActiveRecord::SchemaMigration Load (0.5ms)[0m  [1m[34mSELECT "schema_migrations".* FROM "schema_migrations"[0m
Processing by Api::V1::QuestionsController#index as HTML
  [1m[36mQuestion Load (1.1ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
  [1m[36mAnswer Load (1.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" IN (1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30)[0m
[active_model_serializers] Rendered ActiveModel::Serializer::CollectionSerializer with ActiveModelSerializers::Adapter::JsonApi (84.0ms)
Completed 200 OK in 279ms (Views: 258.1ms | ActiveRecord: 11.1ms)


Started GET "/api/v1/questions" for ::1 at 2016-06-15 19:19:42 -0400
Processing by Api::V1::QuestionsController#index as HTML
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
  [1m[36mAnswer Load (0.3ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" IN (1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30)[0m
[active_model_serializers] Rendered ActiveModel::Serializer::CollectionSerializer with ActiveModelSerializers::Adapter::JsonApi (52.95ms)
Completed 200 OK in 85ms (Views: 74.1ms | ActiveRecord: 6.3ms)


Started GET "/api/v1/questions/1" for ::1 at 2016-06-15 19:19:44 -0400
Processing by Api::V1::QuestionsController#show as HTML
  Parameters: {"id"=>"1"}
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", nil], ["LIMIT", 1]]
Completed 404 Not Found in 28ms (ActiveRecord: 0.7ms)


  
ActiveRecord::RecordNotFound (Couldn't find Question with 'id'={:id=>"1"}):
  
app/controllers/api/v1/questions_controller.rb:10:in `show'
Started GET "/api/v1/questions/1" for ::1 at 2016-06-15 19:20:07 -0400
Processing by Api::V1::QuestionsController#show as HTML
  Parameters: {"id"=>"1"}
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
  [1m[36mAnswer Load (0.6ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" IN (1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30)[0m
[active_model_serializers] Rendered ActiveModel::Serializer::CollectionSerializer with ActiveModelSerializers::Adapter::JsonApi (43.14ms)
Completed 200 OK in 77ms (Views: 60.3ms | ActiveRecord: 7.3ms)


Started GET "/api/v1/questions/1" for ::1 at 2016-06-15 19:20:20 -0400
Processing by Api::V1::QuestionsController#show as HTML
  Parameters: {"id"=>"1"}
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
Completed 500 Internal Server Error in 13ms (ActiveRecord: 3.2ms)


  
NoMethodError (undefined method `includes' for #<Question:0x007fe17a40c2d0>):
  
app/controllers/api/v1/questions_controller.rb:11:in `show'
Started GET "/api/v1/questions/1" for ::1 at 2016-06-15 19:21:24 -0400
Processing by Api::V1::QuestionsController#show as HTML
  Parameters: {"id"=>"1"}
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 1]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (10.8ms)
Completed 200 OK in 49ms (Views: 35.3ms | ActiveRecord: 4.5ms)


Started GET "/api/v1/questions/2" for ::1 at 2016-06-15 19:21:31 -0400
Processing by Api::V1::QuestionsController#show as HTML
  Parameters: {"id"=>"2"}
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 2]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (32.24ms)
Completed 200 OK in 34ms (Views: 31.1ms | ActiveRecord: 2.1ms)


Started GET "/api/v1/questions/3" for ::1 at 2016-06-15 19:21:48 -0400
Processing by Api::V1::QuestionsController#show as HTML
  Parameters: {"id"=>"3"}
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 3], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 3]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (2.25ms)
Completed 200 OK in 4ms (Views: 2.5ms | ActiveRecord: 0.4ms)


Started GET "/api/v1/questions/4" for ::1 at 2016-06-15 19:21:50 -0400
Processing by Api::V1::QuestionsController#show as HTML
  Parameters: {"id"=>"4"}
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 4], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 4]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (3.63ms)
Completed 200 OK in 5ms (Views: 3.9ms | ActiveRecord: 0.3ms)


Started GET "/api/v1/questions" for ::1 at 2016-06-15 19:24:05 -0400
Processing by Api::V1::QuestionsController#index as HTML
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
  [1m[36mAnswer Load (0.3ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" IN (1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30)[0m
[active_model_serializers] Rendered ActiveModel::Serializer::CollectionSerializer with ActiveModelSerializers::Adapter::JsonApi (48.74ms)
Completed 200 OK in 76ms (Views: 66.7ms | ActiveRecord: 5.2ms)


Started GET "/api/v1/questions" for ::1 at 2016-06-15 20:06:24 -0400
Processing by Api::V1::QuestionsController#index as HTML
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
  [1m[36mAnswer Load (0.3ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" IN (1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30)[0m
[active_model_serializers] Rendered ActiveModel::Serializer::CollectionSerializer with ActiveModelSerializers::Adapter::JsonApi (106.38ms)
Completed 200 OK in 151ms (Views: 139.7ms | ActiveRecord: 6.1ms)


Started GET "/api/v1/questions" for ::1 at 2016-06-15 20:08:51 -0400
Processing by Api::V1::QuestionsController#index as HTML
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
  [1m[36mAnswer Load (0.4ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" IN (1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30)[0m
[active_model_serializers] Rendered ActiveModel::Serializer::CollectionSerializer with ActiveModelSerializers::Adapter::JsonApi (45.05ms)
Completed 200 OK in 51ms (Views: 49.8ms | ActiveRecord: 0.7ms)


Started GET "/api/v1/questions" for ::1 at 2016-06-15 20:09:24 -0400
  [1m[36mActiveRecord::SchemaMigration Load (0.6ms)[0m  [1m[34mSELECT "schema_migrations".* FROM "schema_migrations"[0m
Processing by Api::V1::QuestionsController#index as HTML
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
  [1m[36mAnswer Load (1.0ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" IN (1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30)[0m
[active_model_serializers] Rendered ActiveModel::Serializer::CollectionSerializer with ActiveModelSerializers::Adapter::JsonApi (58.09ms)
Completed 200 OK in 166ms (Views: 150.5ms | ActiveRecord: 7.9ms)


Started GET "/api/v1/questions" for ::1 at 2016-06-15 20:35:49 -0400
  [1m[36mActiveRecord::SchemaMigration Load (0.6ms)[0m  [1m[34mSELECT "schema_migrations".* FROM "schema_migrations"[0m
Processing by Api::V1::QuestionsController#index as JSON
  [1m[36mQuestion Load (1.1ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
  [1m[36mAnswer Load (1.0ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" IN (1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30)[0m
[active_model_serializers] Rendered ActiveModel::Serializer::CollectionSerializer with ActiveModelSerializers::Adapter::JsonApi (63.68ms)
Completed 200 OK in 254ms (Views: 233.3ms | ActiveRecord: 11.9ms)


Started GET "/api/v1/questions" for ::1 at 2016-06-15 20:37:35 -0400
Processing by Api::V1::QuestionsController#index as JSON
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
  [1m[36mAnswer Load (0.4ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" IN (1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30)[0m
[active_model_serializers] Rendered ActiveModel::Serializer::CollectionSerializer with ActiveModelSerializers::Adapter::JsonApi (49.51ms)
Completed 200 OK in 56ms (Views: 54.8ms | ActiveRecord: 0.7ms)


Started GET "/api/v1/questions" for ::1 at 2016-06-15 20:39:40 -0400
Processing by Api::V1::QuestionsController#index as HTML
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
  [1m[36mAnswer Load (0.3ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" IN (1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30)[0m
[active_model_serializers] Rendered ActiveModel::Serializer::CollectionSerializer with ActiveModelSerializers::Adapter::JsonApi (47.63ms)
Completed 200 OK in 53ms (Views: 51.9ms | ActiveRecord: 0.7ms)


Started GET "/api/v1/questions" for ::1 at 2016-06-15 20:43:58 -0400
Processing by Api::V1::QuestionsController#index as JSON
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
  [1m[36mAnswer Load (0.4ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" IN (1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30)[0m
[active_model_serializers] Rendered ActiveModel::Serializer::CollectionSerializer with ActiveModelSerializers::Adapter::JsonApi (35.27ms)
Completed 200 OK in 44ms (Views: 42.1ms | ActiveRecord: 1.0ms)


Started GET "/api/v1/questions" for ::1 at 2016-06-15 20:54:07 -0400
  [1m[36mActiveRecord::SchemaMigration Load (0.5ms)[0m  [1m[34mSELECT "schema_migrations".* FROM "schema_migrations"[0m
Processing by Api::V1::QuestionsController#index as JSON
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
  [1m[36mAnswer Load (0.8ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" IN (1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30)[0m
[active_model_serializers] Rendered ActiveModel::Serializer::CollectionSerializer with ActiveModelSerializers::Adapter::JsonApi (65.79ms)
Completed 200 OK in 208ms (Views: 191.6ms | ActiveRecord: 8.0ms)


Started GET "/api/v1/questions" for ::1 at 2016-06-15 21:23:26 -0400
  [1m[36mActiveRecord::SchemaMigration Load (0.6ms)[0m  [1m[34mSELECT "schema_migrations".* FROM "schema_migrations"[0m
Processing by Api::V1::QuestionsController#index as JSON
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
  [1m[36mAnswer Load (0.7ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" IN (1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30)[0m
[active_model_serializers] Rendered ActiveModel::Serializer::CollectionSerializer with ActiveModelSerializers::Adapter::JsonApi (71.77ms)
Completed 200 OK in 174ms (Views: 159.7ms | ActiveRecord: 7.0ms)


Started GET "/" for ::1 at 2016-06-16 11:53:12 -0400
Processing by Rails::WelcomeController#index as HTML
  Parameters: {"internal"=>true}
  Rendering /Users/hlpolivy/.rvm/gems/ruby-2.2.2/gems/railties-5.0.0.rc1/lib/rails/templates/rails/welcome/index.html.erb
  Rendered /Users/hlpolivy/.rvm/gems/ruby-2.2.2/gems/railties-5.0.0.rc1/lib/rails/templates/rails/welcome/index.html.erb (7.8ms)
Completed 200 OK in 160ms (Views: 124.5ms | ActiveRecord: 0.0ms)


Started GET "//api/v1/questions/2" for ::1 at 2016-06-16 11:53:29 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"2"}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.4ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 2]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (43.57ms)
Completed 200 OK in 157ms (Views: 63.7ms | ActiveRecord: 16.7ms)


Started GET "//api/v1/questions/2" for ::1 at 2016-06-16 11:53:35 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"2"}
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 2]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (5.87ms)
Completed 200 OK in 8ms (Views: 6.3ms | ActiveRecord: 0.6ms)


Started OPTIONS "//api/v1/questions/2" for ::1 at 2016-06-16 11:53:37 -0400
  
ActionController::RoutingError (No route matches [OPTIONS] "/api/v1/questions/2"):
  
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/debug_exceptions.rb:53:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/show_exceptions.rb:31:in `call'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:36:in `call_app'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:24:in `block in call'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:70:in `block in tagged'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:26:in `tagged'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:70:in `tagged'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:24:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/request_id.rb:24:in `call'
rack (2.0.0.rc1) lib/rack/runtime.rb:22:in `call'
activesupport (5.0.0.rc1) lib/active_support/cache/strategy/local_cache_middleware.rb:28:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/static.rb:136:in `call'
rack (2.0.0.rc1) lib/rack/sendfile.rb:111:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
railties (5.0.0.rc1) lib/rails/engine.rb:522:in `call'
puma (3.4.0) lib/puma/configuration.rb:224:in `call'
puma (3.4.0) lib/puma/server.rb:569:in `handle_request'
puma (3.4.0) lib/puma/server.rb:406:in `process_client'
puma (3.4.0) lib/puma/server.rb:271:in `block in run'
puma (3.4.0) lib/puma/thread_pool.rb:114:in `call'
puma (3.4.0) lib/puma/thread_pool.rb:114:in `block in spawn_thread'
Started GET "/api/v1/questions/2" for ::1 at 2016-06-16 11:54:37 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"2"}
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.3ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 2]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (26.19ms)
Completed 200 OK in 83ms (Views: 30.4ms | ActiveRecord: 6.0ms)


Started OPTIONS "/api/v1/questions/2" for ::1 at 2016-06-16 11:54:39 -0400
  
ActionController::RoutingError (No route matches [OPTIONS] "/api/v1/questions/2"):
  
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/debug_exceptions.rb:53:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/show_exceptions.rb:31:in `call'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:36:in `call_app'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:24:in `block in call'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:70:in `block in tagged'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:26:in `tagged'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:70:in `tagged'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:24:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/request_id.rb:24:in `call'
rack (2.0.0.rc1) lib/rack/runtime.rb:22:in `call'
activesupport (5.0.0.rc1) lib/active_support/cache/strategy/local_cache_middleware.rb:28:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/static.rb:136:in `call'
rack (2.0.0.rc1) lib/rack/sendfile.rb:111:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
railties (5.0.0.rc1) lib/rails/engine.rb:522:in `call'
puma (3.4.0) lib/puma/configuration.rb:224:in `call'
puma (3.4.0) lib/puma/server.rb:569:in `handle_request'
puma (3.4.0) lib/puma/server.rb:406:in `process_client'
puma (3.4.0) lib/puma/server.rb:271:in `block in run'
puma (3.4.0) lib/puma/thread_pool.rb:114:in `call'
puma (3.4.0) lib/puma/thread_pool.rb:114:in `block in spawn_thread'
Started GET "/api/v1/questions/2" for ::1 at 2016-06-16 11:54:45 -0400
Processing by Api::V1::QuestionsController#show as HTML
  Parameters: {"id"=>"2"}
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 2]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (3.99ms)
Completed 200 OK in 5ms (Views: 4.2ms | ActiveRecord: 0.4ms)


Started GET "/api/v1/questions/2" for ::1 at 2016-06-16 11:56:27 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"2"}
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.3ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 2]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (24.12ms)
Completed 200 OK in 39ms (Views: 22.7ms | ActiveRecord: 6.7ms)


Started OPTIONS "/api/v1/questions/2" for ::1 at 2016-06-16 11:56:29 -0400
  
ActionController::RoutingError (No route matches [OPTIONS] "/api/v1/questions/2"):
  
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/debug_exceptions.rb:53:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/show_exceptions.rb:31:in `call'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:36:in `call_app'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:24:in `block in call'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:70:in `block in tagged'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:26:in `tagged'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:70:in `tagged'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:24:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/request_id.rb:24:in `call'
rack (2.0.0.rc1) lib/rack/runtime.rb:22:in `call'
activesupport (5.0.0.rc1) lib/active_support/cache/strategy/local_cache_middleware.rb:28:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/static.rb:136:in `call'
rack (2.0.0.rc1) lib/rack/sendfile.rb:111:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
railties (5.0.0.rc1) lib/rails/engine.rb:522:in `call'
puma (3.4.0) lib/puma/configuration.rb:224:in `call'
puma (3.4.0) lib/puma/server.rb:569:in `handle_request'
puma (3.4.0) lib/puma/server.rb:406:in `process_client'
puma (3.4.0) lib/puma/server.rb:271:in `block in run'
puma (3.4.0) lib/puma/thread_pool.rb:114:in `call'
puma (3.4.0) lib/puma/thread_pool.rb:114:in `block in spawn_thread'
Started GET "/api/v1/questions/2" for ::1 at 2016-06-16 11:57:50 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"2"}
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.3ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 2]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (5.35ms)
Completed 200 OK in 8ms (Views: 5.7ms | ActiveRecord: 0.7ms)


Started OPTIONS "/api/v1/questions/2" for ::1 at 2016-06-16 11:57:52 -0400
  
ActionController::RoutingError (No route matches [OPTIONS] "/api/v1/questions/2"):
  
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/debug_exceptions.rb:53:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/show_exceptions.rb:31:in `call'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:36:in `call_app'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:24:in `block in call'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:70:in `block in tagged'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:26:in `tagged'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:70:in `tagged'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:24:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/request_id.rb:24:in `call'
rack (2.0.0.rc1) lib/rack/runtime.rb:22:in `call'
activesupport (5.0.0.rc1) lib/active_support/cache/strategy/local_cache_middleware.rb:28:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/static.rb:136:in `call'
rack (2.0.0.rc1) lib/rack/sendfile.rb:111:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
railties (5.0.0.rc1) lib/rails/engine.rb:522:in `call'
puma (3.4.0) lib/puma/configuration.rb:224:in `call'
puma (3.4.0) lib/puma/server.rb:569:in `handle_request'
puma (3.4.0) lib/puma/server.rb:406:in `process_client'
puma (3.4.0) lib/puma/server.rb:271:in `block in run'
puma (3.4.0) lib/puma/thread_pool.rb:114:in `call'
puma (3.4.0) lib/puma/thread_pool.rb:114:in `block in spawn_thread'
Started GET "/api/v1/questions/2" for ::1 at 2016-06-16 12:42:25 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"2"}
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.3ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 2]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (8.49ms)
Completed 200 OK in 12ms (Views: 9.1ms | ActiveRecord: 0.6ms)


Started GET "/api/v1/questions/2" for ::1 at 2016-06-16 12:42:34 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"2"}
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.3ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 2]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (7.82ms)
Completed 200 OK in 10ms (Views: 8.3ms | ActiveRecord: 0.5ms)


Started GET "/api/v1/questions/2" for ::1 at 2016-06-16 12:42:52 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"2"}
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 2]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (5.33ms)
Completed 200 OK in 8ms (Views: 5.9ms | ActiveRecord: 0.5ms)


Started GET "/api/v1/questions/2" for ::1 at 2016-06-16 12:43:01 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"2"}
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 2]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (5.2ms)
Completed 200 OK in 7ms (Views: 5.6ms | ActiveRecord: 0.4ms)


Started GET "/api/v1/questions/2" for ::1 at 2016-06-16 12:43:14 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"2"}
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 2]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (5.08ms)
Completed 200 OK in 7ms (Views: 5.6ms | ActiveRecord: 0.5ms)


Started GET "/api/v1/questions/2" for ::1 at 2016-06-16 12:43:27 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"2"}
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.3ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 2]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (4.29ms)
Completed 200 OK in 6ms (Views: 4.5ms | ActiveRecord: 0.6ms)


Started GET "/api/v1/questions/2" for ::1 at 2016-06-16 12:44:22 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"2"}
  [1m[36mQuestion Load (0.5ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.3ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 2]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (5.03ms)
Completed 200 OK in 7ms (Views: 5.2ms | ActiveRecord: 0.7ms)


Started GET "/api/v1/questions/2" for ::1 at 2016-06-16 12:44:37 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"2"}
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 2]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (6.76ms)
Completed 200 OK in 9ms (Views: 7.0ms | ActiveRecord: 0.5ms)


Started GET "/api/v1/questions/2" for ::1 at 2016-06-16 12:44:56 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"2"}
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.3ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 2]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (12.15ms)
Completed 200 OK in 15ms (Views: 13.0ms | ActiveRecord: 0.7ms)


Started GET "/api/v1/questions/2" for ::1 at 2016-06-16 12:45:01 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"2"}
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 2]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (6.27ms)
Completed 200 OK in 8ms (Views: 6.6ms | ActiveRecord: 0.5ms)


Started GET "/api/v1/questions/2" for ::1 at 2016-06-16 12:45:17 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"2"}
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.3ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 2]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (7.91ms)
Completed 200 OK in 10ms (Views: 8.5ms | ActiveRecord: 0.5ms)


Started GET "/api/v1/questions/2" for ::1 at 2016-06-16 12:45:38 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"2"}
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.4ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 2]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (5.12ms)
Completed 200 OK in 7ms (Views: 5.3ms | ActiveRecord: 0.7ms)


Started GET "/api/v1/questions/2" for ::1 at 2016-06-16 12:45:52 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"2"}
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 2]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (5.13ms)
Completed 200 OK in 7ms (Views: 5.6ms | ActiveRecord: 0.4ms)


Started GET "/api/v1/questions/2" for ::1 at 2016-06-16 12:46:05 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"2"}
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 2]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (6.1ms)
Completed 200 OK in 8ms (Views: 6.4ms | ActiveRecord: 0.5ms)


Started GET "/api/v1/questions/2" for ::1 at 2016-06-16 12:46:06 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"2"}
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.3ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 2]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (5.63ms)
Completed 200 OK in 8ms (Views: 5.9ms | ActiveRecord: 0.6ms)


Started GET "/api/v1/questions/2" for ::1 at 2016-06-16 12:46:26 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"2"}
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.3ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 2]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (4.85ms)
Completed 200 OK in 7ms (Views: 5.4ms | ActiveRecord: 0.5ms)


Started GET "/api/v1/questions/2" for ::1 at 2016-06-16 12:46:33 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"2"}
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 2]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (4.97ms)
Completed 200 OK in 6ms (Views: 5.3ms | ActiveRecord: 0.4ms)


Started GET "/api/v1/questions/2" for ::1 at 2016-06-16 12:46:55 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"2"}
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.3ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 2]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (6.08ms)
Completed 200 OK in 8ms (Views: 6.5ms | ActiveRecord: 0.5ms)


Started GET "/api/v1/questions/2" for ::1 at 2016-06-16 12:48:19 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"2"}
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 2]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (4.96ms)
Completed 200 OK in 7ms (Views: 5.2ms | ActiveRecord: 0.6ms)


Started GET "/api/v1/questions/2" for ::1 at 2016-06-16 12:55:05 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"2"}
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 2]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (22.77ms)
Completed 200 OK in 79ms (Views: 35.4ms | ActiveRecord: 8.1ms)


Started GET "/api/v1/questions/2" for ::1 at 2016-06-16 12:56:17 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"2"}
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 2]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (37.25ms)
Completed 200 OK in 106ms (Views: 53.6ms | ActiveRecord: 6.5ms)


Started GET "/api/v1/questions/2" for ::1 at 2016-06-16 12:56:52 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"2"}
  [1m[36mQuestion Load (0.5ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 2]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (5.7ms)
Completed 200 OK in 8ms (Views: 6.2ms | ActiveRecord: 0.7ms)


Started GET "/api/v1/questions/2" for ::1 at 2016-06-16 12:57:53 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"2"}
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.3ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 2]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (43.79ms)
Completed 200 OK in 101ms (Views: 49.5ms | ActiveRecord: 6.7ms)


Started GET "/api/v1/questions/2" for ::1 at 2016-06-16 12:58:03 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"2"}
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 2]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (4.38ms)
Completed 200 OK in 6ms (Views: 4.8ms | ActiveRecord: 0.4ms)


Started GET "/api/v1/questions/2" for ::1 at 2016-06-16 12:58:48 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"2"}
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 2]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (23.1ms)
Completed 200 OK in 70ms (Views: 26.7ms | ActiveRecord: 6.2ms)


Started GET "/api/v1/questions/2" for ::1 at 2016-06-16 12:59:19 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"2"}
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 2]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (6.16ms)
Completed 200 OK in 8ms (Views: 6.5ms | ActiveRecord: 0.5ms)


Started GET "/api/v1/questions/2" for ::1 at 2016-06-16 12:59:39 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"2"}
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 2]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (4.96ms)
Completed 200 OK in 7ms (Views: 5.4ms | ActiveRecord: 0.5ms)


Started GET "/api/v1/questions/2" for ::1 at 2016-06-16 13:01:31 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"2"}
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.3ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 2]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (5.6ms)
Completed 200 OK in 8ms (Views: 5.9ms | ActiveRecord: 0.6ms)


Started GET "/api/v1/questions" for ::1 at 2016-06-16 13:01:55 -0400
Processing by Api::V1::QuestionsController#index as HTML
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
  [1m[36mAnswer Load (0.3ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" IN (1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30)[0m
[active_model_serializers] Rendered ActiveModel::Serializer::CollectionSerializer with ActiveModelSerializers::Adapter::JsonApi (37.98ms)
Completed 200 OK in 44ms (Views: 42.8ms | ActiveRecord: 0.7ms)


Started GET "/api/v1/questions/2" for ::1 at 2016-06-16 13:02:28 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"2"}
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.3ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 2]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (4.27ms)
Completed 200 OK in 6ms (Views: 4.4ms | ActiveRecord: 0.6ms)


Started GET "/api/v1/questions/2" for ::1 at 2016-06-16 13:03:24 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"2"}
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.3ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 2]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (4.04ms)
Completed 200 OK in 5ms (Views: 4.2ms | ActiveRecord: 0.6ms)


Started GET "/api/v1/questions/2" for ::1 at 2016-06-16 13:03:33 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"2"}
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.3ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 2]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (4.52ms)
Completed 200 OK in 6ms (Views: 4.6ms | ActiveRecord: 0.7ms)


Started GET "/api/v1/questions/2" for ::1 at 2016-06-16 13:03:38 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"2"}
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.3ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 2]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (4.12ms)
Completed 200 OK in 6ms (Views: 4.2ms | ActiveRecord: 0.7ms)


Started GET "/api/v1/questions/2" for ::1 at 2016-06-16 13:03:43 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"2"}
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.3ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 2]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (4.26ms)
Completed 200 OK in 6ms (Views: 4.4ms | ActiveRecord: 0.6ms)


Started GET "/api/v1/questions/2" for ::1 at 2016-06-16 13:04:07 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"2"}
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.3ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 2]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (5.17ms)
Completed 200 OK in 7ms (Views: 5.4ms | ActiveRecord: 0.7ms)


Started GET "/api/v1/questions/2" for ::1 at 2016-06-16 13:04:11 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"2"}
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.3ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 2]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (4.57ms)
Completed 200 OK in 6ms (Views: 4.7ms | ActiveRecord: 0.6ms)


Started GET "/api/v1/questions/2" for ::1 at 2016-06-16 13:04:14 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"2"}
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.3ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 2]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (4.45ms)
Completed 200 OK in 6ms (Views: 4.8ms | ActiveRecord: 0.6ms)


Started GET "/api/v1/questions/2" for ::1 at 2016-06-16 13:04:23 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"2"}
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.3ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 2]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (4.24ms)
Completed 200 OK in 6ms (Views: 4.4ms | ActiveRecord: 0.6ms)


Started OPTIONS "/api/v1/questions/2" for ::1 at 2016-06-16 13:04:24 -0400
  
ActionController::RoutingError (No route matches [OPTIONS] "/api/v1/questions/2"):
  
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/debug_exceptions.rb:53:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/show_exceptions.rb:31:in `call'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:36:in `call_app'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:24:in `block in call'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:70:in `block in tagged'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:26:in `tagged'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:70:in `tagged'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:24:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/request_id.rb:24:in `call'
rack (2.0.0.rc1) lib/rack/runtime.rb:22:in `call'
activesupport (5.0.0.rc1) lib/active_support/cache/strategy/local_cache_middleware.rb:28:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/static.rb:136:in `call'
rack (2.0.0.rc1) lib/rack/sendfile.rb:111:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
railties (5.0.0.rc1) lib/rails/engine.rb:522:in `call'
puma (3.4.0) lib/puma/configuration.rb:224:in `call'
puma (3.4.0) lib/puma/server.rb:569:in `handle_request'
puma (3.4.0) lib/puma/server.rb:406:in `process_client'
puma (3.4.0) lib/puma/server.rb:271:in `block in run'
puma (3.4.0) lib/puma/thread_pool.rb:114:in `call'
puma (3.4.0) lib/puma/thread_pool.rb:114:in `block in spawn_thread'
Started GET "/api/v1/questions/2" for ::1 at 2016-06-16 13:04:46 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"2"}
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.4ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 2]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (4.54ms)
Completed 200 OK in 6ms (Views: 4.7ms | ActiveRecord: 0.7ms)


Started GET "/api/v1/questions/2" for ::1 at 2016-06-16 13:05:16 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"2"}
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 2]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (23.88ms)
Completed 200 OK in 71ms (Views: 28.2ms | ActiveRecord: 5.8ms)


Started OPTIONS "/api/v1/questions/2" for ::1 at 2016-06-16 13:05:17 -0400
  
ActionController::RoutingError (No route matches [OPTIONS] "/api/v1/questions/2"):
  
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/debug_exceptions.rb:53:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/show_exceptions.rb:31:in `call'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:36:in `call_app'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:24:in `block in call'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:70:in `block in tagged'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:26:in `tagged'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:70:in `tagged'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:24:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/request_id.rb:24:in `call'
rack (2.0.0.rc1) lib/rack/runtime.rb:22:in `call'
activesupport (5.0.0.rc1) lib/active_support/cache/strategy/local_cache_middleware.rb:28:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/static.rb:136:in `call'
rack (2.0.0.rc1) lib/rack/sendfile.rb:111:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
railties (5.0.0.rc1) lib/rails/engine.rb:522:in `call'
puma (3.4.0) lib/puma/configuration.rb:224:in `call'
puma (3.4.0) lib/puma/server.rb:569:in `handle_request'
puma (3.4.0) lib/puma/server.rb:406:in `process_client'
puma (3.4.0) lib/puma/server.rb:271:in `block in run'
puma (3.4.0) lib/puma/thread_pool.rb:114:in `call'
puma (3.4.0) lib/puma/thread_pool.rb:114:in `block in spawn_thread'
Started GET "/api/v1/questions/2" for ::1 at 2016-06-16 13:06:06 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"2"}
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 2]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (20.92ms)
Completed 200 OK in 35ms (Views: 19.9ms | ActiveRecord: 5.4ms)


Started OPTIONS "/api/v1/questions/2" for ::1 at 2016-06-16 13:06:07 -0400
  
ActionController::RoutingError (No route matches [OPTIONS] "/api/v1/questions/2"):
  
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/debug_exceptions.rb:53:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/show_exceptions.rb:31:in `call'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:36:in `call_app'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:24:in `block in call'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:70:in `block in tagged'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:26:in `tagged'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:70:in `tagged'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:24:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/request_id.rb:24:in `call'
rack (2.0.0.rc1) lib/rack/runtime.rb:22:in `call'
activesupport (5.0.0.rc1) lib/active_support/cache/strategy/local_cache_middleware.rb:28:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/static.rb:136:in `call'
rack (2.0.0.rc1) lib/rack/sendfile.rb:111:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
railties (5.0.0.rc1) lib/rails/engine.rb:522:in `call'
puma (3.4.0) lib/puma/configuration.rb:224:in `call'
puma (3.4.0) lib/puma/server.rb:569:in `handle_request'
puma (3.4.0) lib/puma/server.rb:406:in `process_client'
puma (3.4.0) lib/puma/server.rb:271:in `block in run'
puma (3.4.0) lib/puma/thread_pool.rb:114:in `call'
puma (3.4.0) lib/puma/thread_pool.rb:114:in `block in spawn_thread'
Started GET "/api/v1/questions/2" for ::1 at 2016-06-16 13:11:36 -0400
  [1m[36mActiveRecord::SchemaMigration Load (0.5ms)[0m  [1m[34mSELECT "schema_migrations".* FROM "schema_migrations"[0m
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"2"}
Completed 500 Internal Server Error in 0ms (ActiveRecord: 0.0ms)


  
NoMethodError (undefined method `pry' for #<Binding:0x007f8f91195ac8>):
  
app/controllers/api/v1/questions_controller.rb:10:in `show'
Started GET "/api/v1/questions/2" for ::1 at 2016-06-16 13:11:54 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"2"}
Completed 500 Internal Server Error in 4175ms (ActiveRecord: 0.0ms)


  
SystemExit (exit):
  
app/controllers/api/v1/questions_controller.rb:12:in `show'
Started GET "/api/v1/questions/2" for ::1 at 2016-06-16 13:12:06 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"2"}
  [1m[36mQuestion Load (1.3ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (1.0ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 2]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (304.91ms)
Completed 200 OK in 545ms (Views: 375.2ms | ActiveRecord: 13.3ms)


Started PATCH "/api/v1/questions/2" for ::1 at 2016-06-16 13:12:09 -0400
Processing by Api::V1::QuestionsController#update as JSON
  Parameters: {"data"=>{"id"=>"2", "attributes"=>{"content"=>"How many ways can you center a div?"}, "type"=>"questions"}, "id"=>"2", "question"=>{}}
Completed 500 Internal Server Error in 32198ms (ActiveRecord: 0.0ms)


  
SystemExit (exit):
  
app/controllers/api/v1/questions_controller.rb:16:in `update'
Started GET "/api/v1/questions/2" for ::1 at 2016-06-16 13:12:43 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"2"}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.8ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 2]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (119.74ms)
Completed 200 OK in 144ms (Views: 126.6ms | ActiveRecord: 1.6ms)


Started PATCH "/api/v1/questions/2" for ::1 at 2016-06-16 13:12:45 -0400
Processing by Api::V1::QuestionsController#update as JSON
  Parameters: {"data"=>{"id"=>"2", "attributes"=>{"content"=>"How many ways can you center a div?"}, "type"=>"questions"}, "id"=>"2", "question"=>{}}
Completed 500 Internal Server Error in 180683ms (ActiveRecord: 0.0ms)


  
SystemExit (exit):
  
app/controllers/api/v1/questions_controller.rb:16:in `update'
Started GET "/api/v1/questions/2" for ::1 at 2016-06-16 13:15:47 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"2"}
  [1m[36mQuestion Load (1.3ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (1.0ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 2]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (133.87ms)
Completed 200 OK in 170ms (Views: 142.4ms | ActiveRecord: 2.3ms)


Started GET "/api/v1/questions/2" for ::1 at 2016-06-16 13:16:02 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"2"}
  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.7ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 2]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (191.63ms)
Completed 200 OK in 222ms (Views: 199.0ms | ActiveRecord: 1.4ms)


Started GET "/api/v1/questions/2" for ::1 at 2016-06-16 13:16:18 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"2"}
  [1m[36mQuestion Load (1.3ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.9ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 2]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (170.44ms)
Completed 200 OK in 205ms (Views: 183.6ms | ActiveRecord: 2.2ms)


Started PATCH "/api/v1/questions/2" for ::1 at 2016-06-16 13:16:22 -0400
Processing by Api::V1::QuestionsController#update as JSON
  Parameters: {"data"=>{"id"=>"2", "attributes"=>{"content"=>"How many ways can you center a div?"}, "type"=>"questions"}, "id"=>"2", "question"=>{}}
Completed 500 Internal Server Error in 55251ms (ActiveRecord: 0.0ms)


  
SystemExit (exit):
  
app/controllers/api/v1/questions_controller.rb:16:in `update'
Started GET "/api/v1/questions/2" for ::1 at 2016-06-16 13:18:03 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"2"}
  [1m[36mQuestion Load (0.9ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.8ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 2]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (154.37ms)
Completed 200 OK in 185ms (Views: 163.3ms | ActiveRecord: 1.7ms)


Started GET "/api/v1/questions/2" for ::1 at 2016-06-16 13:18:08 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"2"}
  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.9ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 2]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (146.1ms)
Completed 200 OK in 174ms (Views: 158.4ms | ActiveRecord: 1.5ms)


Started GET "/api/v1/questions/2" for ::1 at 2016-06-16 13:18:20 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"2"}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.9ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 2]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (160.25ms)
Completed 200 OK in 186ms (Views: 171.6ms | ActiveRecord: 1.7ms)


Started GET "/api/v1/questions/2" for ::1 at 2016-06-16 13:22:45 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"2"}
  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (1.0ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 2]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (182.37ms)
Completed 200 OK in 212ms (Views: 190.0ms | ActiveRecord: 1.7ms)


Started GET "/api/v1/questions/2" for ::1 at 2016-06-16 13:22:57 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"2"}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.7ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 2]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (149.62ms)
Completed 200 OK in 181ms (Views: 158.1ms | ActiveRecord: 1.6ms)


Started GET "/api/v1/questions/2" for ::1 at 2016-06-16 13:23:19 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"2"}
  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.7ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 2]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (149.64ms)
Completed 200 OK in 176ms (Views: 157.2ms | ActiveRecord: 1.3ms)


Started GET "/api/v1/questions/2" for ::1 at 2016-06-16 13:26:30 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"2"}
  [1m[36mQuestion Load (0.9ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.7ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 2]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (136.07ms)
Completed 200 OK in 160ms (Views: 142.9ms | ActiveRecord: 1.6ms)


Started GET "/api/v1/questions/2" for ::1 at 2016-06-16 13:28:04 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"2"}
  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.7ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 2]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (145.76ms)
Completed 200 OK in 168ms (Views: 153.7ms | ActiveRecord: 1.3ms)


Started GET "/api/v1/questions/2" for ::1 at 2016-06-16 13:28:06 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"2"}
  [1m[36mQuestion Load (1.0ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.8ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 2]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (148.85ms)
Completed 200 OK in 178ms (Views: 159.0ms | ActiveRecord: 1.8ms)


Started GET "/api/v1/questions/2" for ::1 at 2016-06-16 13:29:09 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"2"}
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.8ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 2]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (143.58ms)
Completed 200 OK in 171ms (Views: 151.4ms | ActiveRecord: 1.4ms)


Started GET "/api/v1/questions/2" for ::1 at 2016-06-16 13:29:12 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"2"}
  [1m[36mQuestion Load (0.9ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.8ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 2]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (160.41ms)
Completed 200 OK in 190ms (Views: 168.5ms | ActiveRecord: 1.7ms)


Started GET "/api/v1/questions/2" for ::1 at 2016-06-16 13:31:38 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"2"}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.6ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 2]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (139.92ms)
Completed 200 OK in 173ms (Views: 153.0ms | ActiveRecord: 1.4ms)


Started GET "/api/v1/questions/2" for ::1 at 2016-06-16 13:31:40 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"2"}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (1.0ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 2]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (167.18ms)
Completed 200 OK in 193ms (Views: 175.6ms | ActiveRecord: 1.8ms)


Started GET "/api/v1/questions/2" for ::1 at 2016-06-16 13:31:44 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"2"}
  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.6ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 2]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (164.78ms)
Completed 200 OK in 193ms (Views: 177.1ms | ActiveRecord: 1.3ms)


Started GET "/api/v1/questions/2" for ::1 at 2016-06-16 13:31:46 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"2"}
  [1m[36mQuestion Load (0.9ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (1.0ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 2]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (149.38ms)
Completed 200 OK in 176ms (Views: 160.9ms | ActiveRecord: 1.9ms)


Started GET "/api/v1/questions/2" for ::1 at 2016-06-16 13:31:51 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"2"}
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.6ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 2]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (152.51ms)
Completed 200 OK in 180ms (Views: 164.3ms | ActiveRecord: 1.2ms)


Started GET "/api/v1/questions/2" for ::1 at 2016-06-16 13:32:17 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"2"}
  [1m[36mQuestion Load (1.0ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.9ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 2]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (154.55ms)
Completed 200 OK in 187ms (Views: 163.0ms | ActiveRecord: 1.9ms)


Started GET "/api/v1/questions/2" for ::1 at 2016-06-16 13:32:35 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"2"}
  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (1.4ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 2]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (200.95ms)
Completed 200 OK in 238ms (Views: 217.7ms | ActiveRecord: 2.1ms)


Started GET "/api/v1/questions/2" for ::1 at 2016-06-16 13:36:23 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"2"}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.7ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 2]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (138.83ms)
Completed 200 OK in 166ms (Views: 146.2ms | ActiveRecord: 1.5ms)


Started GET "/api/v1/questions/2" for ::1 at 2016-06-16 13:36:23 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"2"}
  [1m[36mQuestion Load (1.0ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.7ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 2]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (146.48ms)
Completed 200 OK in 174ms (Views: 153.9ms | ActiveRecord: 1.7ms)


Started GET "/api/v1/questions/2" for ::1 at 2016-06-16 13:36:23 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"2"}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.8ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 2]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (134.79ms)
Completed 200 OK in 162ms (Views: 143.6ms | ActiveRecord: 1.6ms)


Started GET "/api/v1/questions/2" for ::1 at 2016-06-16 13:36:32 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"2"}
  [1m[36mQuestion Load (0.9ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.7ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 2]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (161.89ms)
Completed 200 OK in 189ms (Views: 169.4ms | ActiveRecord: 1.5ms)


Started GET "/api/v1/questions/2" for ::1 at 2016-06-16 13:37:00 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"2"}
  [1m[36mQuestion Load (1.1ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (1.1ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 2]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (198.24ms)
Completed 200 OK in 237ms (Views: 214.1ms | ActiveRecord: 2.2ms)


Started GET "/api/v1/questions/2" for ::1 at 2016-06-16 13:49:17 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"2"}
  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.6ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 2]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (149.88ms)
Completed 200 OK in 195ms (Views: 174.6ms | ActiveRecord: 1.3ms)


Started GET "/api/v1/questions/2" for ::1 at 2016-06-16 13:49:30 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"2"}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.8ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 2]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (159.61ms)
Completed 200 OK in 192ms (Views: 176.5ms | ActiveRecord: 1.6ms)


Started GET "/api/v1/questions/2" for ::1 at 2016-06-16 13:49:46 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"2"}
  [1m[36mQuestion Load (4.7ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.8ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 2]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (166.6ms)
Completed 200 OK in 194ms (Views: 175.2ms | ActiveRecord: 5.5ms)


Started GET "/api/v1/questions/2" for ::1 at 2016-06-16 13:50:14 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"2"}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.7ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 2]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (147.12ms)
Completed 200 OK in 173ms (Views: 153.9ms | ActiveRecord: 1.5ms)


Started GET "/api/v1/questions/2" for ::1 at 2016-06-16 13:50:25 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"2"}
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.8ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 2]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (166.46ms)
Completed 200 OK in 200ms (Views: 183.3ms | ActiveRecord: 1.4ms)


Started GET "/api/v1/questions/2" for ::1 at 2016-06-16 13:51:07 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"2"}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.9ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 2]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (161.51ms)
Completed 200 OK in 190ms (Views: 173.5ms | ActiveRecord: 1.7ms)


Started GET "/api/v1/questions/2" for ::1 at 2016-06-16 13:51:16 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"2"}
  [1m[36mQuestion Load (0.9ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.8ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 2]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (168.27ms)
Completed 200 OK in 196ms (Views: 175.9ms | ActiveRecord: 1.6ms)


Started GET "/api/v1/questions/2" for ::1 at 2016-06-16 13:51:25 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"2"}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (1.1ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 2]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (155.91ms)
Completed 200 OK in 182ms (Views: 162.8ms | ActiveRecord: 1.9ms)


Started GET "/api/v1/questions/2" for ::1 at 2016-06-16 13:51:35 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"2"}
  [1m[36mQuestion Load (0.9ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.9ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 2]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (210.64ms)
Completed 200 OK in 240ms (Views: 222.9ms | ActiveRecord: 1.8ms)


Started GET "/api/v1/questions/2" for ::1 at 2016-06-16 14:00:05 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"2"}
  [1m[36mQuestion Load (1.1ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (4.8ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 2]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (141.63ms)
Completed 200 OK in 179ms (Views: 147.1ms | ActiveRecord: 6.0ms)


Started GET "/api/v1/questions/2" for ::1 at 2016-06-16 14:00:26 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"2"}
  [1m[36mQuestion Load (1.1ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.8ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 2]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (163.35ms)
Completed 200 OK in 192ms (Views: 170.5ms | ActiveRecord: 1.9ms)


Started GET "/api/v1/questions/2" for ::1 at 2016-06-16 14:00:27 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"2"}
  [1m[36mQuestion Load (0.9ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.9ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 2]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (162.42ms)
Completed 200 OK in 195ms (Views: 177.5ms | ActiveRecord: 1.8ms)


Started GET "/api/v1/questions/2" for ::1 at 2016-06-16 14:01:00 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"2"}
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.6ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 2]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (172.01ms)
Completed 200 OK in 202ms (Views: 179.8ms | ActiveRecord: 1.3ms)


Started GET "/api/v1/questions/2" for ::1 at 2016-06-16 14:01:30 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"2"}
  [1m[36mQuestion Load (0.9ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.9ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 2]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (176.83ms)
Completed 200 OK in 206ms (Views: 184.7ms | ActiveRecord: 1.8ms)


Started GET "/api/v1/questions/2" for ::1 at 2016-06-16 14:01:44 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"2"}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.6ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 2]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (155.27ms)
Completed 200 OK in 187ms (Views: 163.5ms | ActiveRecord: 1.4ms)


Started GET "/api/v1/questions/2" for ::1 at 2016-06-16 14:01:45 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"2"}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.8ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 2]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (158.06ms)
Completed 200 OK in 187ms (Views: 169.3ms | ActiveRecord: 1.5ms)


Started GET "/api/v1/questions/2" for ::1 at 2016-06-16 14:01:46 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"2"}
  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.9ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 2]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (160.83ms)
Completed 200 OK in 188ms (Views: 172.3ms | ActiveRecord: 1.6ms)


Started GET "/api/v1/questions/2" for ::1 at 2016-06-16 14:03:49 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"2"}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (1.0ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 2]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (190.15ms)
Completed 200 OK in 222ms (Views: 205.7ms | ActiveRecord: 1.8ms)


Started GET "/api/v1/questions/2" for ::1 at 2016-06-16 14:03:50 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"2"}
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.9ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 2]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (155.31ms)
Completed 200 OK in 183ms (Views: 163.0ms | ActiveRecord: 1.5ms)


Started GET "/api/v1/questions/2" for ::1 at 2016-06-16 14:04:37 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"2"}
  [1m[36mQuestion Load (5.6ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.9ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 2]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (176.94ms)
Completed 200 OK in 212ms (Views: 188.8ms | ActiveRecord: 6.5ms)


Started GET "/api/v1/questions/2" for ::1 at 2016-06-16 14:04:51 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"2"}
  [1m[36mQuestion Load (0.9ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.7ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 2]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (162.72ms)
Completed 200 OK in 200ms (Views: 175.1ms | ActiveRecord: 1.6ms)


Started GET "/api/v1/questions/2" for ::1 at 2016-06-16 14:06:25 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"2"}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.8ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 2]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (160.55ms)
Completed 200 OK in 196ms (Views: 168.5ms | ActiveRecord: 1.6ms)


Started GET "/api/v1/questions/2" for ::1 at 2016-06-16 14:06:51 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"2"}
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.6ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 2]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (165.5ms)
Completed 200 OK in 194ms (Views: 174.0ms | ActiveRecord: 1.2ms)


Started GET "/api/v1/questions/2" for ::1 at 2016-06-16 14:09:03 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"2"}
  [1m[36mQuestion Load (1.0ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (5.0ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 2]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (159.02ms)
Completed 200 OK in 189ms (Views: 162.7ms | ActiveRecord: 6.0ms)


Started GET "/api/v1/questions/2" for ::1 at 2016-06-16 14:09:12 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"2"}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.7ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 2]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (165.49ms)
Completed 200 OK in 205ms (Views: 179.6ms | ActiveRecord: 1.5ms)


Started GET "/api/v1/questions/2" for ::1 at 2016-06-16 14:09:20 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"2"}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.9ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 2]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (174.83ms)
Completed 200 OK in 201ms (Views: 182.2ms | ActiveRecord: 1.7ms)


Started GET "/api/v1/questions/2" for ::1 at 2016-06-16 14:09:28 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"2"}
  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (1.1ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 2]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (175.43ms)
Completed 200 OK in 208ms (Views: 187.8ms | ActiveRecord: 1.8ms)


Started GET "/api/v1/questions/2" for ::1 at 2016-06-16 14:09:29 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"2"}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.9ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 2]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (163.14ms)
Completed 200 OK in 190ms (Views: 174.0ms | ActiveRecord: 1.7ms)


Started GET "/api/v1/questions/2" for ::1 at 2016-06-16 14:09:47 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"2"}
  [1m[36mQuestion Load (1.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.6ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 2]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (170.0ms)
Completed 200 OK in 211ms (Views: 180.6ms | ActiveRecord: 1.8ms)


Started GET "/api/v1/questions/2" for ::1 at 2016-06-16 14:09:48 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"2"}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.8ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 2]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (168.27ms)
Completed 200 OK in 200ms (Views: 178.2ms | ActiveRecord: 1.6ms)


Started GET "/api/v1/questions/2" for ::1 at 2016-06-16 14:10:00 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"2"}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.6ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 2]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (172.61ms)
Completed 200 OK in 206ms (Views: 185.8ms | ActiveRecord: 1.4ms)


Started GET "/api/v1/questions/2" for ::1 at 2016-06-16 14:10:47 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"2"}
  [1m[36mQuestion Load (0.9ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.9ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 2]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (184.86ms)
Completed 200 OK in 214ms (Views: 193.0ms | ActiveRecord: 1.8ms)


Started GET "/api/v1/questions/2" for ::1 at 2016-06-16 14:10:54 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"2"}
  [1m[36mQuestion Load (0.9ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.9ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 2]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (176.06ms)
Completed 200 OK in 208ms (Views: 188.3ms | ActiveRecord: 1.8ms)


Started GET "/api/v1/questions/2" for ::1 at 2016-06-16 14:11:09 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"2"}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.9ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 2]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (184.2ms)
Completed 200 OK in 217ms (Views: 194.6ms | ActiveRecord: 1.7ms)


Started GET "/api/v1/questions/2" for ::1 at 2016-06-16 14:11:46 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"2"}
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.9ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 2]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (180.48ms)
Completed 200 OK in 211ms (Views: 188.5ms | ActiveRecord: 1.5ms)


Started GET "/api/v1/questions/2" for ::1 at 2016-06-16 14:11:51 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"2"}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.8ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 2]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (170.43ms)
Completed 200 OK in 197ms (Views: 177.7ms | ActiveRecord: 1.6ms)


Started GET "/api/v1/questions/2" for ::1 at 2016-06-16 14:12:10 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"2"}
  [1m[36mQuestion Load (1.0ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (1.0ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 2]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (195.06ms)
Completed 200 OK in 233ms (Views: 206.4ms | ActiveRecord: 1.9ms)


Started GET "/api/v1/questions/2" for ::1 at 2016-06-16 14:13:46 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"2"}
  [1m[36mQuestion Load (1.3ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (1.0ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 2]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (224.85ms)
Completed 200 OK in 259ms (Views: 234.6ms | ActiveRecord: 2.3ms)


Started GET "/api/v1/questions/2" for ::1 at 2016-06-16 14:13:47 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"2"}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.7ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 2]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (182.58ms)
Completed 200 OK in 211ms (Views: 190.4ms | ActiveRecord: 1.4ms)


Started GET "/api/v1/questions/2" for ::1 at 2016-06-16 14:14:01 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"2"}
  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.8ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 2]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (177.2ms)
Completed 200 OK in 209ms (Views: 188.1ms | ActiveRecord: 1.5ms)


Started GET "/api/v1/questions/2" for ::1 at 2016-06-16 14:15:57 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"2"}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.8ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 2]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (176.83ms)
Completed 200 OK in 215ms (Views: 197.3ms | ActiveRecord: 1.5ms)


Started GET "/api/v1/questions/2" for ::1 at 2016-06-16 14:16:02 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"2"}
  [1m[36mQuestion Load (1.0ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.8ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 2]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (193.41ms)
Completed 200 OK in 223ms (Views: 203.6ms | ActiveRecord: 1.8ms)


Started PATCH "/api/v1/questions/2" for ::1 at 2016-06-16 14:16:03 -0400
Processing by Api::V1::QuestionsController#update as JSON
  Parameters: {"data"=>{"id"=>"2", "attributes"=>{"content"=>"How many ways can you center a div?"}, "type"=>"questions"}, "id"=>"2", "question"=>{}}
Started GET "/api/v1/questions/2" for ::1 at 2016-06-16 14:17:56 -0400
Completed 500 Internal Server Error in 112579ms (ActiveRecord: 0.0ms)


  
SystemExit (exit):
  
app/controllers/api/v1/questions_controller.rb:16:in `update'
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"2"}
  [1m[36mQuestion Load (201.5ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (661.7ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 2]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (802.06ms)
Completed 200 OK in 1033ms (Views: 153.2ms | ActiveRecord: 863.3ms)


Started GET "/api/v1/questions/2" for ::1 at 2016-06-16 14:17:58 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"2"}
  [1m[36mQuestion Load (73.7ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
Started GET "/api/v1/questions/2" for ::1 at 2016-06-16 14:17:58 -0400
Processing by Api::V1::QuestionsController#show as JSON
[active_model_serializers]   [1m[36mAnswer Load (127.4ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 2]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (265.49ms)
Completed 200 OK in 371ms (Views: 149.9ms | ActiveRecord: 201.1ms)


  Parameters: {"id"=>"2"}
Started GET "/api/v1/questions/2" for ::1 at 2016-06-16 14:17:58 -0400
Started GET "/api/v1/questions/2" for ::1 at 2016-06-16 14:17:59 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"2"}
  [1m[36mQuestion Load (111.3ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
Started GET "/api/v1/questions/2" for ::1 at 2016-06-16 14:17:59 -0400
  [1m[36mQuestion Load (10.9ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (1.7ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 2]]
Started GET "/api/v1/questions/2" for ::1 at 2016-06-16 14:17:59 -0400
Processing by Api::V1::QuestionsController#show as JSON
Processing by Api::V1::QuestionsController#show as JSON
[active_model_serializers]   [1m[36mAnswer Load (22.7ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 2]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (280.3ms)
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"2"}
  Parameters: {"id"=>"2"}
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (295.43ms)
Completed 200 OK in 546ms (Views: 403.6ms | ActiveRecord: 113.0ms)


  Parameters: {"id"=>"2"}
  [1m[36mQuestion Load (1.7ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
Completed 200 OK in 474ms (Views: 313.0ms | ActiveRecord: 33.7ms)


  [1m[36mQuestion Load (26.7ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
  [1m[36mQuestion Load (94.6ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (81.1ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 2]]
[active_model_serializers]   [1m[36mAnswer Load (10.5ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 2]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (353.46ms)
Completed 200 OK in 433ms (Views: 279.6ms | ActiveRecord: 107.8ms)


[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (348.1ms)
[active_model_serializers]   [1m[36mAnswer Load (194.1ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 2]]
Completed 200 OK in 530ms (Views: 348.6ms | ActiveRecord: 12.2ms)


[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (453.13ms)
Completed 200 OK in 599ms (Views: 289.4ms | ActiveRecord: 288.7ms)


Started GET "/api/v1/questions/2" for ::1 at 2016-06-16 14:21:05 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"2"}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.8ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 2]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (168.55ms)
Completed 200 OK in 207ms (Views: 183.0ms | ActiveRecord: 1.6ms)


Started GET "/api/v1/questions/2" for ::1 at 2016-06-16 14:21:29 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"2"}
  [1m[36mQuestion Load (0.9ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.8ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 2]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (152.62ms)
Completed 200 OK in 181ms (Views: 165.4ms | ActiveRecord: 1.7ms)


Started GET "/api/v1/questions/2" for ::1 at 2016-06-16 14:21:35 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"2"}
  [1m[36mQuestion Load (0.9ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (1.3ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 2]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (229.44ms)
Completed 200 OK in 264ms (Views: 241.4ms | ActiveRecord: 2.3ms)


Started GET "/api/v1/questions/2" for ::1 at 2016-06-16 14:21:51 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"2"}
  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.6ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 2]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (220.06ms)
Completed 200 OK in 264ms (Views: 237.8ms | ActiveRecord: 1.3ms)


Started GET "/api/v1/questions/2" for ::1 at 2016-06-16 14:21:57 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"2"}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.9ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 2]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (204.58ms)
Completed 200 OK in 247ms (Views: 217.9ms | ActiveRecord: 1.7ms)


Started GET "/api/v1/questions/2" for ::1 at 2016-06-16 14:22:30 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"2"}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (5.7ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 2]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (177.49ms)
Completed 200 OK in 209ms (Views: 181.5ms | ActiveRecord: 6.5ms)


Started GET "/api/v1/questions/2" for ::1 at 2016-06-16 14:23:21 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"2"}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (1.0ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 2]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (180.05ms)
Completed 200 OK in 210ms (Views: 188.7ms | ActiveRecord: 1.8ms)


Started GET "/api/v1/questions/2" for ::1 at 2016-06-16 14:23:24 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"2"}
  [1m[36mQuestion Load (5.3ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (7.5ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 2]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (205.39ms)
Completed 200 OK in 235ms (Views: 207.9ms | ActiveRecord: 12.7ms)


Started GET "/api/v1/questions/2" for ::1 at 2016-06-16 14:23:44 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"2"}
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (1.0ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 2]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (171.09ms)
Completed 200 OK in 205ms (Views: 189.4ms | ActiveRecord: 1.6ms)


Started GET "/api/v1/questions/2" for ::1 at 2016-06-16 14:23:50 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"2"}
  [1m[36mQuestion Load (1.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.8ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 2]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (194.52ms)
Completed 200 OK in 226ms (Views: 203.3ms | ActiveRecord: 2.0ms)


Started GET "/api/v1/questions/2" for ::1 at 2016-06-16 14:24:11 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"2"}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.8ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 2]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (211.78ms)
Completed 200 OK in 247ms (Views: 225.8ms | ActiveRecord: 1.6ms)


Started GET "/api/v1/questions/2" for ::1 at 2016-06-16 14:24:51 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"2"}
  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.7ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 2]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (486.6ms)
Completed 200 OK in 990ms (Views: 670.0ms | ActiveRecord: 1.4ms)


Started GET "/api/v1/questions/2" for ::1 at 2016-06-16 14:24:55 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"2"}
  [1m[36mQuestion Load (0.9ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (1.0ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 2]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (183.65ms)
Completed 200 OK in 211ms (Views: 194.9ms | ActiveRecord: 1.9ms)


Started GET "/api/v1/questions/2" for ::1 at 2016-06-16 14:27:53 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"2"}
  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.7ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 2]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (331.19ms)
Completed 200 OK in 607ms (Views: 392.2ms | ActiveRecord: 1.4ms)


Started GET "/api/v1/questions/2" for ::1 at 2016-06-16 14:28:28 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"2"}
  [1m[36mQuestion Load (1.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (1.1ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 2]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (187.5ms)
Completed 200 OK in 218ms (Views: 196.0ms | ActiveRecord: 2.3ms)


Started GET "/api/v1/questions/2" for ::1 at 2016-06-16 14:28:43 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"2"}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (6.4ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 2]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (185.2ms)
Completed 200 OK in 221ms (Views: 193.3ms | ActiveRecord: 7.3ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-16 14:28:47 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"dfsdfsd"}, "relationships"=>{"question"=>{"data"=>{"type"=>"questions", "id"=>"2"}}}, "type"=>"answers"}, "answer"=>{}}
Started GET "/api/v1/questions/2" for ::1 at 2016-06-16 14:43:27 -0400
Completed 500 Internal Server Error in 879693ms (ActiveRecord: 0.0ms)


Started GET "/api/v1/questions/2" for ::1 at 2016-06-16 14:43:27 -0400
Started GET "/api/v1/questions/2" for ::1 at 2016-06-16 14:43:27 -0400
  
SystemExit (exit):
  
app/controllers/api/v1/answers_controller.rb:11:in `create'
Started GET "/api/v1/questions/2" for ::1 at 2016-06-16 14:43:41 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"2"}
Processing by Api::V1::QuestionsController#show as JSON
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"2"}
  Parameters: {"id"=>"2"}
  [1m[36mQuestion Load (9.0ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
  [1m[36mQuestion Load (2.9ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
  [1m[36mQuestion Load (8.7ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (36.6ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 2]]
[active_model_serializers]   [1m[36mAnswer Load (14.1ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 2]]
[active_model_serializers]   [1m[36mAnswer Load (61.5ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 2]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (499.14ms)
Completed 200 OK in 684ms (Views: 371.2ms | ActiveRecord: 287.6ms)


[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (566.31ms)
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (759.15ms)
Completed 200 OK in 890ms (Views: 620.6ms | ActiveRecord: 238.7ms)


Completed 200 OK in 1029ms (Views: 722.6ms | ActiveRecord: 149.0ms)


Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"2"}
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.8ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 2]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (319.93ms)
Completed 200 OK in 454ms (Views: 341.8ms | ActiveRecord: 1.4ms)


Started PATCH "/api/v1/questions/2" for ::1 at 2016-06-16 14:43:47 -0400
Processing by Api::V1::QuestionsController#update as JSON
  Parameters: {"data"=>{"id"=>"2", "attributes"=>{"content"=>"How many ways can you center a div?"}, "type"=>"questions"}, "id"=>"2", "question"=>{}}
Started GET "/api/v1/questions/2" for ::1 at 2016-06-16 14:44:31 -0400
Completed 500 Internal Server Error in 43880ms (ActiveRecord: 0.0ms)


Processing by Api::V1::QuestionsController#show as JSON
  
  Parameters: {"id"=>"2"}
SystemExit (exit):
  
  [1m[36mQuestion Load (1.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
app/controllers/api/v1/questions_controller.rb:16:in `update'
[active_model_serializers]   [1m[36mAnswer Load (1.3ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 2]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (198.75ms)
Completed 200 OK in 228ms (Views: 205.2ms | ActiveRecord: 2.5ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-16 14:44:37 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"spock"}, "relationships"=>{"question"=>{"data"=>{"type"=>"questions", "id"=>"2"}}}, "type"=>"answers"}, "answer"=>{}}
  [1m[35m (1.0ms)[0m  [1m[35mBEGIN[0m
  [1m[35m (0.3ms)[0m  [1m[31mROLLBACK[0m
Completed 500 Internal Server Error in 168474ms (ActiveRecord: 1.3ms)


  
SystemExit (exit):
  
app/controllers/api/v1/answers_controller.rb:11:in `create'
Started GET "/api/v1/questions/2" for ::1 at 2016-06-16 14:47:29 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"2"}
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.8ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 2]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (330.21ms)
Completed 200 OK in 505ms (Views: 362.0ms | ActiveRecord: 1.4ms)


Started GET "/api/v1/questions/2" for ::1 at 2016-06-16 14:47:31 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"2"}
  [1m[36mQuestion Load (1.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (1.1ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 2]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (168.71ms)
Completed 200 OK in 202ms (Views: 177.6ms | ActiveRecord: 2.3ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-16 14:47:34 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"spock"}, "relationships"=>{"question"=>{"data"=>{"type"=>"questions", "id"=>"2"}}}, "type"=>"answers"}, "answer"=>{}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
  [1m[36mAnswer Load (0.4ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 2]]
Completed 500 Internal Server Error in 59409ms (ActiveRecord: 1.2ms)


  
SystemExit (exit):
  
app/controllers/api/v1/answers_controller.rb:14:in `create'
Started GET "/api/v1/questions/2" for ::1 at 2016-06-16 14:48:37 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"2"}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.7ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 2]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (339.81ms)
Completed 200 OK in 490ms (Views: 365.2ms | ActiveRecord: 1.5ms)


Started GET "/api/v1/questions/2" for ::1 at 2016-06-16 14:48:40 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"2"}
  [1m[36mQuestion Load (1.3ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.7ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 2]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (197.27ms)
Completed 200 OK in 234ms (Views: 210.5ms | ActiveRecord: 2.1ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-16 14:48:43 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"spock"}, "relationships"=>{"question"=>{"data"=>{"type"=>"questions", "id"=>"2"}}}, "type"=>"answers"}, "answer"=>{}}
  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
  [1m[35m (7.4ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (1.1ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "spock"], ["question_id", 2], ["created_at", 2016-06-16 18:48:43 UTC], ["updated_at", 2016-06-16 18:48:43 UTC]]
  [1m[35m (167.3ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 254ms (ActiveRecord: 176.5ms)


Started GET "/api/v1/questions/2" for ::1 at 2016-06-16 14:48:50 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"2"}
  [1m[36mQuestion Load (1.0ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.8ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 2]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (210.58ms)
Completed 200 OK in 251ms (Views: 220.7ms | ActiveRecord: 1.8ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-16 14:48:54 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"spock 2"}, "relationships"=>{"question"=>{"data"=>{"type"=>"questions", "id"=>"2"}}}, "type"=>"answers"}, "answer"=>{}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
  [1m[35m (0.6ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (1.2ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "spock 2"], ["question_id", 2], ["created_at", 2016-06-16 18:48:54 UTC], ["updated_at", 2016-06-16 18:48:54 UTC]]
  [1m[35m (1.4ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 84ms (ActiveRecord: 4.1ms)


Started GET "/api/v1/questions/2" for ::1 at 2016-06-16 14:48:59 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"2"}
  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.8ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 2]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (274.79ms)
Completed 200 OK in 313ms (Views: 289.9ms | ActiveRecord: 1.5ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-16 14:49:02 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"spock 3"}, "relationships"=>{"question"=>{"data"=>{"type"=>"questions", "id"=>"2"}}}, "type"=>"answers"}, "answer"=>{}}
  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
  [1m[35m (0.6ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (1.1ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "spock 3"], ["question_id", 2], ["created_at", 2016-06-16 18:49:02 UTC], ["updated_at", 2016-06-16 18:49:02 UTC]]
  [1m[35m (3.0ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 86ms (ActiveRecord: 5.4ms)


Started GET "/api/v1/questions/2" for ::1 at 2016-06-16 14:49:18 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"2"}
  [1m[36mQuestion Load (1.0ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.8ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 2]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (280.66ms)
Completed 200 OK in 326ms (Views: 296.1ms | ActiveRecord: 2.7ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-16 14:49:23 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"spock 4"}, "relationships"=>{"question"=>{"data"=>{"type"=>"questions", "id"=>"2"}}}, "type"=>"answers"}, "answer"=>{}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
  [1m[35m (1.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (1.2ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "spock 4"], ["question_id", 2], ["created_at", 2016-06-16 18:49:23 UTC], ["updated_at", 2016-06-16 18:49:23 UTC]]
  [1m[35m (7.6ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 94ms (ActiveRecord: 10.8ms)


Started GET "/api/v1/questions/2" for ::1 at 2016-06-16 14:55:14 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"2"}
  [1m[36mQuestion Load (1.0ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.7ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 2]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (470.85ms)
Completed 200 OK in 653ms (Views: 500.2ms | ActiveRecord: 1.6ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-16 14:55:19 -0400
  
ActionController::RoutingError (No route matches [POST] "/api/v1/answers"):
  
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/debug_exceptions.rb:53:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/show_exceptions.rb:31:in `call'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:36:in `call_app'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:24:in `block in call'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:70:in `block in tagged'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:26:in `tagged'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:70:in `tagged'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:24:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/request_id.rb:24:in `call'
rack (2.0.0.rc1) lib/rack/runtime.rb:22:in `call'
activesupport (5.0.0.rc1) lib/active_support/cache/strategy/local_cache_middleware.rb:28:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/static.rb:136:in `call'
rack (2.0.0.rc1) lib/rack/sendfile.rb:111:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
railties (5.0.0.rc1) lib/rails/engine.rb:522:in `call'
puma (3.4.0) lib/puma/configuration.rb:224:in `call'
puma (3.4.0) lib/puma/server.rb:569:in `handle_request'
puma (3.4.0) lib/puma/server.rb:406:in `process_client'
puma (3.4.0) lib/puma/server.rb:271:in `block in run'
puma (3.4.0) lib/puma/thread_pool.rb:114:in `call'
puma (3.4.0) lib/puma/thread_pool.rb:114:in `block in spawn_thread'
Started GET "/api/v1/questions/2" for ::1 at 2016-06-16 14:55:52 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"2"}
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (1.0ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 2]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (511.32ms)
Completed 200 OK in 654ms (Views: 531.2ms | ActiveRecord: 1.6ms)


Started PATCH "/api/v1/questions/2" for ::1 at 2016-06-16 14:55:58 -0400
Processing by Api::V1::QuestionsController#update as JSON
  Parameters: {"data"=>{"id"=>"2", "attributes"=>{"content"=>"How many ways can you center a div?"}, "type"=>"questions"}, "id"=>"2", "question"=>{}}
Started GET "/api/v1/questions/2" for ::1 at 2016-06-16 14:56:59 -0400
Started GET "/api/v1/questions/2" for ::1 at 2016-06-16 14:56:59 -0400
Started GET "/api/v1/questions/2" for ::1 at 2016-06-16 14:56:59 -0400
Completed 500 Internal Server Error in 61438ms (ActiveRecord: 0.0ms)


  
SystemExit (exit):
  
app/controllers/api/v1/questions_controller.rb:16:in `update'
Started GET "/api/v1/questions/2" for ::1 at 2016-06-16 14:57:14 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"2"}
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"2"}
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"2"}
  [1m[36mQuestion Load (3.6ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
  [1m[36mQuestion Load (1.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
  [1m[36mQuestion Load (57.0ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (61.0ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 2]]
[active_model_serializers]   [1m[36mAnswer Load (64.8ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 2]]
[active_model_serializers]   [1m[36mAnswer Load (12.0ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 2]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (801.15ms)
Completed 200 OK in 1185ms (Views: 959.3ms | ActiveRecord: 142.3ms)


[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (1142.27ms)
Completed 200 OK in 1531ms (Views: 1173.4ms | ActiveRecord: 219.5ms)


[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (1266.13ms)
Completed 200 OK in 1415ms (Views: 1139.3ms | ActiveRecord: 221.8ms)


Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"2"}
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.9ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 2]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (548.19ms)
Completed 200 OK in 708ms (Views: 565.0ms | ActiveRecord: 3.2ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-16 14:57:22 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"spock 5"}, "relationships"=>{"question"=>{"data"=>{"type"=>"questions", "id"=>"2"}}}, "type"=>"answers"}, "answer"=>{}}
  [1m[36mQuestion Load (1.0ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
  [1m[35m (0.6ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (7.9ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "spock 5"], ["question_id", 2], ["created_at", 2016-06-16 18:57:22 UTC], ["updated_at", 2016-06-16 18:57:22 UTC]]
  [1m[35m (2.9ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 104ms (ActiveRecord: 12.4ms)


Started GET "/api/v1/questions/2" for ::1 at 2016-06-16 15:10:18 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"2"}
  [1m[36mQuestion Load (0.9ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.8ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 2]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (609.79ms)
Completed 200 OK in 801ms (Views: 629.2ms | ActiveRecord: 1.8ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-16 15:10:24 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"spock 6"}, "relationships"=>{"question"=>{"data"=>{"type"=>"questions", "id"=>"2"}}}, "type"=>"answers"}, "answer"=>{}}
  [1m[35m (0.8ms)[0m  [1m[35mBEGIN[0m
  [1m[35m (0.3ms)[0m  [1m[31mROLLBACK[0m
Completed 500 Internal Server Error in 1870470ms (ActiveRecord: 1.1ms)


  
SystemExit (exit):
  
app/controllers/api/v1/answers_controller.rb:11:in `create'
Started GET "/api/v1/questions/2" for ::1 at 2016-06-16 15:41:35 -0400
Started GET "/api/v1/questions/2" for ::1 at 2016-06-16 15:41:35 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"2"}
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"2"}
  [1m[36mQuestion Load (33.1ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
  [1m[36mQuestion Load (53.1ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (42.3ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 2]]
[active_model_serializers]   [1m[36mAnswer Load (3.5ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 2]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (721.43ms)
Completed 200 OK in 1049ms (Views: 617.4ms | ActiveRecord: 304.9ms)


[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (854.15ms)
Completed 200 OK in 1048ms (Views: 885.0ms | ActiveRecord: 36.6ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-16 15:41:54 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"spock 10"}, "relationships"=>{"question"=>{"data"=>{"type"=>"questions", "id"=>"2"}}}, "type"=>"answers"}, "answer"=>{}}
Completed 500 Internal Server Error in 12113ms (ActiveRecord: 0.0ms)


Started GET "/api/v1/questions/2" for ::1 at 2016-06-16 15:42:07 -0400
  
Processing by Api::V1::QuestionsController#show as JSON
SystemExit (exit):
  Parameters: {"id"=>"2"}
  
app/controllers/api/v1/answers_controller.rb:11:in `create'
  [1m[36mQuestion Load (27.9ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (146.3ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 2]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (952.08ms)
Completed 200 OK in 1084ms (Views: 893.2ms | ActiveRecord: 174.2ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-16 15:42:13 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"lala"}, "relationships"=>{"question"=>{"data"=>{"type"=>"questions", "id"=>"2"}}}, "type"=>"answers"}, "answer"=>{}}
Started GET "/api/v1/questions/2" for ::1 at 2016-06-16 15:42:51 -0400
Processing by Api::V1::QuestionsController#show as JSON
Completed 500 Internal Server Error in 38481ms (ActiveRecord: 0.0ms)


  Parameters: {"id"=>"2"}
  
SystemExit (exit):
  
app/controllers/api/v1/answers_controller.rb:11:in `create'
  [1m[36mQuestion Load (80.3ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (128.8ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 2]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (639.51ms)
Completed 200 OK in 741ms (Views: 518.1ms | ActiveRecord: 209.1ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-16 15:42:57 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"spock 42"}, "relationships"=>{"question"=>{"data"=>{"type"=>"questions", "id"=>"2"}}}, "type"=>"answers"}, "answer"=>{}}
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
Completed 400 Bad Request in 170ms (ActiveRecord: 4.3ms)


  
ActionController::ParameterMissing (param is missing or the value is empty: attriAnswerbutes):
  
app/controllers/api/v1/answers_controller.rb:23:in `answer_params'
app/controllers/api/v1/answers_controller.rb:15:in `create'
Started GET "/api/v1/questions/2" for ::1 at 2016-06-16 15:42:59 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"2"}
  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.7ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 2]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (446.53ms)
Completed 200 OK in 479ms (Views: 459.7ms | ActiveRecord: 5.2ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-16 15:43:02 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"aaa"}, "relationships"=>{"question"=>{"data"=>{"type"=>"questions", "id"=>"2"}}}, "type"=>"answers"}, "answer"=>{}}
  [1m[36mQuestion Load (1.1ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
Completed 400 Bad Request in 46ms (ActiveRecord: 1.1ms)


  
ActionController::ParameterMissing (param is missing or the value is empty: attriAnswerbutes):
  
app/controllers/api/v1/answers_controller.rb:23:in `answer_params'
app/controllers/api/v1/answers_controller.rb:15:in `create'
Started GET "/api/v1/questions/2" for ::1 at 2016-06-16 15:50:16 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"2"}
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.7ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 2]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (503.06ms)
Completed 200 OK in 647ms (Views: 528.7ms | ActiveRecord: 1.3ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-16 15:50:20 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"42"}, "relationships"=>{"question"=>{"data"=>{"type"=>"questions", "id"=>"2"}}}, "type"=>"answers"}, "answer"=>{}}
  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
Completed 400 Bad Request in 47ms (ActiveRecord: 0.7ms)


  
ActionController::ParameterMissing (param is missing or the value is empty: attriAnswerbutes):
  
app/controllers/api/v1/answers_controller.rb:23:in `answer_params'
app/controllers/api/v1/answers_controller.rb:15:in `create'
Started GET "/api/v1/questions/2" for ::1 at 2016-06-16 15:50:47 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"2"}
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.7ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 2]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (493.89ms)
Completed 200 OK in 630ms (Views: 505.8ms | ActiveRecord: 1.3ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-16 15:50:52 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"42"}, "relationships"=>{"question"=>{"data"=>{"type"=>"questions", "id"=>"2"}}}, "type"=>"answers"}, "answer"=>{}}
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
Completed 400 Bad Request in 44ms (ActiveRecord: 0.6ms)


  
ActionController::ParameterMissing (param is missing or the value is empty: attriAnswerbutes):
  
app/controllers/api/v1/answers_controller.rb:23:in `answer_params'
app/controllers/api/v1/answers_controller.rb:15:in `create'
Started GET "/api/v1/questions/2" for ::1 at 2016-06-16 15:50:54 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"2"}
  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (1.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 2]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (381.48ms)
Completed 200 OK in 411ms (Views: 388.7ms | ActiveRecord: 1.9ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-16 15:50:56 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"aa"}, "relationships"=>{"question"=>{"data"=>{"type"=>"questions", "id"=>"2"}}}, "type"=>"answers"}, "answer"=>{}}
  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
Completed 400 Bad Request in 47ms (ActiveRecord: 0.7ms)


  
ActionController::ParameterMissing (param is missing or the value is empty: attriAnswerbutes):
  
app/controllers/api/v1/answers_controller.rb:23:in `answer_params'
app/controllers/api/v1/answers_controller.rb:15:in `create'
Started GET "/api/v1/questions/2" for ::1 at 2016-06-16 15:51:56 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"2"}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.9ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 2]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (543.41ms)
Completed 200 OK in 692ms (Views: 557.0ms | ActiveRecord: 1.7ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-16 15:52:01 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"ghghghg"}, "relationships"=>{"question"=>{"data"=>{"type"=>"questions", "id"=>"2"}}}, "type"=>"answers"}, "answer"=>{}}
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
Completed 400 Bad Request in 56ms (ActiveRecord: 0.6ms)


  
ActionController::ParameterMissing (param is missing or the value is empty: attriAnswerbutes):
  
app/controllers/api/v1/answers_controller.rb:24:in `answer_params'
app/controllers/api/v1/answers_controller.rb:15:in `create'
Started GET "/api/v1/questions/2" for ::1 at 2016-06-16 15:52:17 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"2"}
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.8ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 2]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (518.89ms)
Completed 200 OK in 660ms (Views: 540.2ms | ActiveRecord: 1.4ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-16 15:52:35 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"42"}, "relationships"=>{"question"=>{"data"=>{"type"=>"questions", "id"=>"2"}}}, "type"=>"answers"}, "answer"=>{}}
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
  [1m[35m (0.6ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (1.4ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "42"], ["question_id", 2], ["created_at", 2016-06-16 19:52:35 UTC], ["updated_at", 2016-06-16 19:52:35 UTC]]
  [1m[35m (70.1ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 230ms (ActiveRecord: 72.7ms)


Started GET "/api/v1/questions/2" for ::1 at 2016-06-16 15:52:37 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"2"}
  [1m[36mQuestion Load (1.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (1.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 2]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (402.59ms)
Completed 200 OK in 435ms (Views: 410.2ms | ActiveRecord: 2.4ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-16 15:52:41 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"hh"}, "relationships"=>{"question"=>{"data"=>{"type"=>"questions", "id"=>"2"}}}, "type"=>"answers"}, "answer"=>{}}
  [1m[36mQuestion Load (1.0ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
  [1m[35m (0.6ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (1.0ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "hh"], ["question_id", 2], ["created_at", 2016-06-16 19:52:42 UTC], ["updated_at", 2016-06-16 19:52:42 UTC]]
  [1m[35m (3.0ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 153ms (ActiveRecord: 5.5ms)


Started GET "/api/v1/questions/2" for ::1 at 2016-06-16 16:26:53 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"2"}
  [1m[36mQuestion Load (1.0ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.9ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 2]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (664.29ms)
Completed 200 OK in 871ms (Views: 706.0ms | ActiveRecord: 1.9ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-16 16:27:02 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"ddd"}, "relationships"=>{"question"=>{"data"=>{"type"=>"questions", "id"=>"2"}}}, "type"=>"answers"}, "answer"=>{}}
  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
  [1m[35m (0.6ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.8ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "ddd"], ["question_id", 2], ["created_at", 2016-06-16 20:27:03 UTC], ["updated_at", 2016-06-16 20:27:03 UTC]]
  [1m[35m (36.0ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 193ms (ActiveRecord: 38.0ms)


Started GET "/api/v1/questions/2" for ::1 at 2016-06-16 16:27:05 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"2"}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (1.3ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 2]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (510.93ms)
Completed 200 OK in 548ms (Views: 524.1ms | ActiveRecord: 2.1ms)


Started GET "/api/v1/questions/2" for ::1 at 2016-06-16 16:27:26 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"2"}
  [1m[36mQuestion Load (0.9ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (8.7ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 2]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (501.82ms)
Completed 200 OK in 536ms (Views: 503.8ms | ActiveRecord: 9.6ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-16 16:27:31 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"hello"}, "relationships"=>{"question"=>{"data"=>{"type"=>"questions", "id"=>"2"}}}, "type"=>"answers"}, "answer"=>{}}
  [1m[36mQuestion Load (1.0ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
  [1m[35m (0.5ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (1.8ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "hello"], ["question_id", 2], ["created_at", 2016-06-16 20:27:31 UTC], ["updated_at", 2016-06-16 20:27:31 UTC]]
  [1m[35m (3.1ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 170ms (ActiveRecord: 7.2ms)


Started GET "/api/v1/questions/2" for ::1 at 2016-06-16 16:27:32 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"2"}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.8ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 2]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (567.14ms)
Completed 200 OK in 604ms (Views: 580.9ms | ActiveRecord: 1.6ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-16 16:27:36 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"asasasa"}, "relationships"=>{"question"=>{"data"=>{"type"=>"questions", "id"=>"2"}}}, "type"=>"answers"}, "answer"=>{}}
  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
  [1m[35m (0.6ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (1.5ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "asasasa"], ["question_id", 2], ["created_at", 2016-06-16 20:27:36 UTC], ["updated_at", 2016-06-16 20:27:36 UTC]]
  [1m[35m (2.9ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 164ms (ActiveRecord: 5.6ms)


Started GET "/api/v1/questions/2" for ::1 at 2016-06-16 16:27:37 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"2"}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (1.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 2]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (707.75ms)
Completed 200 OK in 743ms (Views: 720.6ms | ActiveRecord: 2.0ms)


Started GET "/api/v1/questions/2" for ::1 at 2016-06-16 16:30:02 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"2"}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (6.0ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 2]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (577.47ms)
Completed 200 OK in 610ms (Views: 580.5ms | ActiveRecord: 6.8ms)


Started GET "/api/v1/questions/2" for ::1 at 2016-06-16 16:30:05 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"2"}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (1.0ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 2]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (608.77ms)
Completed 200 OK in 649ms (Views: 616.3ms | ActiveRecord: 1.8ms)


Started GET "/api/v1/questions/2" for ::1 at 2016-06-16 16:31:10 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"2"}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.8ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 2]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (581.78ms)
Completed 200 OK in 619ms (Views: 595.7ms | ActiveRecord: 1.6ms)


Started GET "/api/v1/questions/2" for ::1 at 2016-06-16 16:31:34 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"2"}
  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (7.0ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 2]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (601.39ms)
Completed 200 OK in 638ms (Views: 608.8ms | ActiveRecord: 7.6ms)


Started GET "/api/v1/questions/2" for ::1 at 2016-06-16 16:31:45 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"2"}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.8ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 2]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (632.3ms)
Completed 200 OK in 668ms (Views: 640.2ms | ActiveRecord: 1.6ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-16 16:31:47 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"ssss"}, "relationships"=>{"question"=>{"data"=>{"type"=>"questions", "id"=>"2"}}}, "type"=>"answers"}, "answer"=>{}}
  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
  [1m[35m (0.6ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.8ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "ssss"], ["question_id", 2], ["created_at", 2016-06-16 20:31:47 UTC], ["updated_at", 2016-06-16 20:31:47 UTC]]
  [1m[35m (96.7ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 263ms (ActiveRecord: 98.8ms)


Started GET "/api/v1/questions/2" for ::1 at 2016-06-16 16:33:17 -0400
Processing by Api::V1::QuestionsController#show as JSON
Started GET "/api/v1/questions/2" for ::1 at 2016-06-16 16:33:18 -0400
  Parameters: {"id"=>"2"}
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"2"}
  [1m[36mQuestion Load (7.1ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
  [1m[36mQuestion Load (76.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (1.9ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 2]]
[active_model_serializers]   [1m[36mAnswer Load (191.5ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 2]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (978.54ms)
Completed 200 OK in 1140ms (Views: 1103.0ms | ActiveRecord: 9.0ms)


[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (1286.63ms)
Started GET "/api/v1/questions" for ::1 at 2016-06-16 16:33:19 -0400
Completed 200 OK in 1430ms (Views: 1112.8ms | ActiveRecord: 267.7ms)


Processing by Api::V1::QuestionsController#index as JSON
  [1m[36mQuestion Load (11.6ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
  [1m[36mAnswer Load (2.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" IN (1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30)[0m
Started GET "/api/v1/questions" for ::1 at 2016-06-16 16:33:23 -0400
[active_model_serializers] Rendered ActiveModel::Serializer::CollectionSerializer with ActiveModelSerializers::Adapter::JsonApi (2980.49ms)
Processing by Api::V1::QuestionsController#index as JSON
Completed 200 OK in 3538ms (Views: 3511.8ms | ActiveRecord: 13.8ms)


  [1m[36mQuestion Load (20.7ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
  [1m[36mAnswer Load (1.3ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" IN (1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30)[0m
[active_model_serializers] Rendered ActiveModel::Serializer::CollectionSerializer with ActiveModelSerializers::Adapter::JsonApi (2923.47ms)
Completed 200 OK in 3312ms (Views: 3284.9ms | ActiveRecord: 22.0ms)


Started GET "/api/v1/questions" for ::1 at 2016-06-16 16:34:03 -0400
Processing by Api::V1::QuestionsController#index as JSON
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
  [1m[36mAnswer Load (1.5ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" IN (1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30)[0m
[active_model_serializers] Rendered ActiveModel::Serializer::CollectionSerializer with ActiveModelSerializers::Adapter::JsonApi (2280.48ms)
Completed 200 OK in 2686ms (Views: 2678.0ms | ActiveRecord: 2.3ms)


Started GET "/api/v1/questions" for ::1 at 2016-06-16 16:34:14 -0400
Processing by Api::V1::QuestionsController#index as JSON
  [1m[36mQuestion Load (0.9ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
  [1m[36mAnswer Load (1.9ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" IN (1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30)[0m
[active_model_serializers] Rendered ActiveModel::Serializer::CollectionSerializer with ActiveModelSerializers::Adapter::JsonApi (2168.01ms)
Completed 200 OK in 2503ms (Views: 2495.3ms | ActiveRecord: 2.8ms)


Started GET "/api/v1/questions" for ::1 at 2016-06-16 16:34:19 -0400
Processing by Api::V1::QuestionsController#index as JSON
  [1m[36mQuestion Load (0.9ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
  [1m[36mAnswer Load (2.0ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" IN (1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30)[0m
Started GET "/api/v1/questions" for ::1 at 2016-06-16 16:34:22 -0400
Processing by Api::V1::QuestionsController#index as JSON
[active_model_serializers] Rendered ActiveModel::Serializer::CollectionSerializer with ActiveModelSerializers::Adapter::JsonApi (2466.38ms)
Completed 200 OK in 2809ms (Views: 2796.5ms | ActiveRecord: 2.9ms)


  [1m[36mQuestion Load (73.9ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
  [1m[36mAnswer Load (0.9ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" IN (1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30)[0m
[active_model_serializers] Rendered ActiveModel::Serializer::CollectionSerializer with ActiveModelSerializers::Adapter::JsonApi (2254.7ms)
Completed 200 OK in 2642ms (Views: 2558.5ms | ActiveRecord: 74.7ms)


Started GET "/api/v1/questions" for ::1 at 2016-06-16 16:36:36 -0400
Processing by Api::V1::QuestionsController#index as JSON
  [1m[36mQuestion Load (0.9ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
  [1m[36mAnswer Load (0.9ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" IN (1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30)[0m
[active_model_serializers] Rendered ActiveModel::Serializer::CollectionSerializer with ActiveModelSerializers::Adapter::JsonApi (2290.51ms)
Completed 200 OK in 2583ms (Views: 2573.6ms | ActiveRecord: 1.8ms)


Started GET "/api/v1/questions" for ::1 at 2016-06-16 16:37:20 -0400
Processing by Api::V1::QuestionsController#index as JSON
  [1m[36mQuestion Load (1.1ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
  [1m[36mAnswer Load (0.9ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" IN (1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30)[0m
[active_model_serializers] Rendered ActiveModel::Serializer::CollectionSerializer with ActiveModelSerializers::Adapter::JsonApi (2392.99ms)
Completed 200 OK in 2699ms (Views: 2684.3ms | ActiveRecord: 2.0ms)


Started GET "/api/v1/questions" for ::1 at 2016-06-16 16:38:30 -0400
Processing by Api::V1::QuestionsController#index as JSON
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
  [1m[36mAnswer Load (0.9ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" IN (1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30)[0m
[active_model_serializers] Rendered ActiveModel::Serializer::CollectionSerializer with ActiveModelSerializers::Adapter::JsonApi (2433.35ms)
Completed 200 OK in 2760ms (Views: 2748.5ms | ActiveRecord: 1.8ms)


Started GET "/api/v1/questions" for ::1 at 2016-06-16 16:39:28 -0400
Processing by Api::V1::QuestionsController#index as JSON
  [1m[36mQuestion Load (1.0ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
  [1m[36mAnswer Load (1.4ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" IN (1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30)[0m
[active_model_serializers] Rendered ActiveModel::Serializer::CollectionSerializer with ActiveModelSerializers::Adapter::JsonApi (2423.44ms)
Completed 200 OK in 2768ms (Views: 2759.3ms | ActiveRecord: 2.5ms)


Started GET "/api/v1/questions" for ::1 at 2016-06-16 16:39:45 -0400
Processing by Api::V1::QuestionsController#index as JSON
  [1m[36mQuestion Load (0.9ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
  [1m[36mAnswer Load (1.6ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" IN (1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30)[0m
[active_model_serializers] Rendered ActiveModel::Serializer::CollectionSerializer with ActiveModelSerializers::Adapter::JsonApi (2369.01ms)
Completed 200 OK in 2679ms (Views: 2670.9ms | ActiveRecord: 2.5ms)


Started GET "/api/v1/questions" for ::1 at 2016-06-16 16:40:24 -0400
Processing by Api::V1::QuestionsController#index as JSON
  [1m[36mQuestion Load (1.0ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
  [1m[36mAnswer Load (1.0ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" IN (1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30)[0m
[active_model_serializers] Rendered ActiveModel::Serializer::CollectionSerializer with ActiveModelSerializers::Adapter::JsonApi (2450.87ms)
Completed 200 OK in 2779ms (Views: 2771.3ms | ActiveRecord: 2.0ms)


Started GET "/api/v1/questions" for ::1 at 2016-06-16 16:40:29 -0400
Processing by Api::V1::QuestionsController#index as JSON
  [1m[36mQuestion Load (1.2ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
  [1m[36mAnswer Load (1.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" IN (1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30)[0m
[active_model_serializers] Rendered ActiveModel::Serializer::CollectionSerializer with ActiveModelSerializers::Adapter::JsonApi (2553.03ms)
Completed 200 OK in 2945ms (Views: 2936.8ms | ActiveRecord: 2.5ms)


Started GET "/api/v1/questions" for ::1 at 2016-06-16 16:40:52 -0400
Processing by Api::V1::QuestionsController#index as JSON
  [1m[36mQuestion Load (1.9ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
  [1m[36mAnswer Load (0.9ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" IN (1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30)[0m
[active_model_serializers] Rendered ActiveModel::Serializer::CollectionSerializer with ActiveModelSerializers::Adapter::JsonApi (2495.0ms)
Completed 200 OK in 2841ms (Views: 2832.9ms | ActiveRecord: 2.8ms)


Started GET "/api/v1/questions" for ::1 at 2016-06-16 16:40:58 -0400
Processing by Api::V1::QuestionsController#index as JSON
  [1m[36mQuestion Load (1.2ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
  [1m[36mAnswer Load (0.9ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" IN (1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30)[0m
[active_model_serializers] Rendered ActiveModel::Serializer::CollectionSerializer with ActiveModelSerializers::Adapter::JsonApi (2545.33ms)
Completed 200 OK in 2912ms (Views: 2896.3ms | ActiveRecord: 2.1ms)


Started GET "/api/v1/questions" for ::1 at 2016-06-16 16:41:16 -0400
Processing by Api::V1::QuestionsController#index as JSON
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
  [1m[36mAnswer Load (1.0ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" IN (1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30)[0m
[active_model_serializers] Rendered ActiveModel::Serializer::CollectionSerializer with ActiveModelSerializers::Adapter::JsonApi (2595.7ms)
Completed 200 OK in 2981ms (Views: 2969.7ms | ActiveRecord: 1.8ms)


Started GET "/api/v1/questions" for ::1 at 2016-06-16 16:41:35 -0400
Processing by Api::V1::QuestionsController#index as JSON
  [1m[36mQuestion Load (0.9ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
  [1m[36mAnswer Load (1.0ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" IN (1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30)[0m
[active_model_serializers] Rendered ActiveModel::Serializer::CollectionSerializer with ActiveModelSerializers::Adapter::JsonApi (2650.63ms)
Completed 200 OK in 3041ms (Views: 3027.1ms | ActiveRecord: 1.9ms)


Started GET "/api/v1/questions" for ::1 at 2016-06-16 16:41:56 -0400
Processing by Api::V1::QuestionsController#index as JSON
  [1m[36mQuestion Load (7.3ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
  [1m[36mAnswer Load (0.9ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" IN (1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30)[0m
[active_model_serializers] Rendered ActiveModel::Serializer::CollectionSerializer with ActiveModelSerializers::Adapter::JsonApi (2718.08ms)
Completed 200 OK in 3091ms (Views: 3076.7ms | ActiveRecord: 8.2ms)


Started GET "/api/v1/questions" for ::1 at 2016-06-16 16:42:10 -0400
Processing by Api::V1::QuestionsController#index as JSON
  [1m[36mQuestion Load (0.9ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
  [1m[36mAnswer Load (1.0ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" IN (1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30)[0m
[active_model_serializers] Rendered ActiveModel::Serializer::CollectionSerializer with ActiveModelSerializers::Adapter::JsonApi (2779.79ms)
Completed 200 OK in 3178ms (Views: 3164.9ms | ActiveRecord: 1.9ms)


Started GET "/api/v1/questions" for ::1 at 2016-06-16 16:42:20 -0400
Processing by Api::V1::QuestionsController#index as JSON
  [1m[36mQuestion Load (0.9ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
  [1m[36mAnswer Load (1.1ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" IN (1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30)[0m
[active_model_serializers] Rendered ActiveModel::Serializer::CollectionSerializer with ActiveModelSerializers::Adapter::JsonApi (2896.85ms)
Completed 200 OK in 3290ms (Views: 3282.2ms | ActiveRecord: 2.0ms)


Started GET "/api/v1/questions" for ::1 at 2016-06-16 16:42:41 -0400
Processing by Api::V1::QuestionsController#index as JSON
  [1m[36mQuestion Load (0.9ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
  [1m[36mAnswer Load (1.0ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" IN (1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30)[0m
[active_model_serializers] Rendered ActiveModel::Serializer::CollectionSerializer with ActiveModelSerializers::Adapter::JsonApi (2272.08ms)
Completed 200 OK in 2673ms (Views: 2660.7ms | ActiveRecord: 1.9ms)


Started GET "/api/v1/questions" for ::1 at 2016-06-16 16:42:50 -0400
Processing by Api::V1::QuestionsController#index as JSON
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
  [1m[36mAnswer Load (1.4ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" IN (1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30)[0m
[active_model_serializers] Rendered ActiveModel::Serializer::CollectionSerializer with ActiveModelSerializers::Adapter::JsonApi (2302.15ms)
Completed 200 OK in 2631ms (Views: 2623.1ms | ActiveRecord: 2.2ms)


Started GET "/api/v1/questions" for ::1 at 2016-06-16 16:43:54 -0400
Processing by Api::V1::QuestionsController#index as JSON
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
  [1m[36mAnswer Load (1.5ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" IN (1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30)[0m
[active_model_serializers] Rendered ActiveModel::Serializer::CollectionSerializer with ActiveModelSerializers::Adapter::JsonApi (2349.02ms)
Completed 200 OK in 2680ms (Views: 2664.8ms | ActiveRecord: 2.3ms)


Started GET "/api/v1/questions" for ::1 at 2016-06-16 16:44:37 -0400
Processing by Api::V1::QuestionsController#index as JSON
  [1m[36mQuestion Load (1.0ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
  [1m[36mAnswer Load (0.9ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" IN (1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30)[0m
[active_model_serializers] Rendered ActiveModel::Serializer::CollectionSerializer with ActiveModelSerializers::Adapter::JsonApi (2317.01ms)
Completed 200 OK in 2620ms (Views: 2607.8ms | ActiveRecord: 1.9ms)


Started GET "/api/v1/questions" for ::1 at 2016-06-16 16:45:02 -0400
Processing by Api::V1::QuestionsController#index as JSON
  [1m[36mQuestion Load (0.9ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
  [1m[36mAnswer Load (0.9ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" IN (1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30)[0m
[active_model_serializers] Rendered ActiveModel::Serializer::CollectionSerializer with ActiveModelSerializers::Adapter::JsonApi (2230.53ms)
Completed 200 OK in 2531ms (Views: 2522.8ms | ActiveRecord: 1.8ms)


Started GET "/api/v1/questions" for ::1 at 2016-06-16 16:45:18 -0400
Processing by Api::V1::QuestionsController#index as JSON
  [1m[36mQuestion Load (0.9ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
  [1m[36mAnswer Load (6.4ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" IN (1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30)[0m
[active_model_serializers] Rendered ActiveModel::Serializer::CollectionSerializer with ActiveModelSerializers::Adapter::JsonApi (2346.54ms)
Completed 200 OK in 2686ms (Views: 2670.3ms | ActiveRecord: 7.3ms)


Started GET "/api/v1/questions" for ::1 at 2016-06-16 16:47:09 -0400
Processing by Api::V1::QuestionsController#index as JSON
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
  [1m[36mAnswer Load (0.9ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" IN (1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30)[0m
[active_model_serializers] Rendered ActiveModel::Serializer::CollectionSerializer with ActiveModelSerializers::Adapter::JsonApi (2334.35ms)
Completed 200 OK in 2649ms (Views: 2640.9ms | ActiveRecord: 1.7ms)


Started GET "/api/v1/questions" for ::1 at 2016-06-16 16:47:14 -0400
Processing by Api::V1::QuestionsController#index as JSON
  [1m[36mQuestion Load (1.0ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
  [1m[36mAnswer Load (1.5ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" IN (1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30)[0m
[active_model_serializers] Rendered ActiveModel::Serializer::CollectionSerializer with ActiveModelSerializers::Adapter::JsonApi (2294.62ms)
Completed 200 OK in 2643ms (Views: 2633.5ms | ActiveRecord: 2.4ms)


Started GET "/api/v1/questions" for ::1 at 2016-06-16 16:47:20 -0400
Processing by Api::V1::QuestionsController#index as JSON
  [1m[36mQuestion Load (0.9ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
  [1m[36mAnswer Load (1.6ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" IN (1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30)[0m
[active_model_serializers] Rendered ActiveModel::Serializer::CollectionSerializer with ActiveModelSerializers::Adapter::JsonApi (2400.74ms)
Completed 200 OK in 2765ms (Views: 2751.6ms | ActiveRecord: 2.5ms)


Started GET "/api/v1/questions" for ::1 at 2016-06-16 16:48:19 -0400
Processing by Api::V1::QuestionsController#index as JSON
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
  [1m[36mAnswer Load (0.9ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" IN (1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30)[0m
[active_model_serializers] Rendered ActiveModel::Serializer::CollectionSerializer with ActiveModelSerializers::Adapter::JsonApi (2378.97ms)
Completed 200 OK in 2665ms (Views: 2653.6ms | ActiveRecord: 1.7ms)


Started GET "/api/v1/questions" for ::1 at 2016-06-16 16:48:22 -0400
Processing by Api::V1::QuestionsController#index as JSON
  [1m[36mQuestion Load (1.6ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
  [1m[36mAnswer Load (0.8ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" IN (1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30)[0m
[active_model_serializers] Rendered ActiveModel::Serializer::CollectionSerializer with ActiveModelSerializers::Adapter::JsonApi (2463.2ms)
Completed 200 OK in 2762ms (Views: 2754.0ms | ActiveRecord: 2.4ms)


Started GET "/api/v1/questions" for ::1 at 2016-06-16 16:49:50 -0400
Processing by Api::V1::QuestionsController#index as JSON
  [1m[36mQuestion Load (1.2ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
  [1m[36mAnswer Load (1.0ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" IN (1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30)[0m
[active_model_serializers] Rendered ActiveModel::Serializer::CollectionSerializer with ActiveModelSerializers::Adapter::JsonApi (2552.13ms)
Completed 200 OK in 2925ms (Views: 2907.7ms | ActiveRecord: 2.2ms)


Started GET "/api/v1/questions" for ::1 at 2016-06-16 16:50:37 -0400
Processing by Api::V1::QuestionsController#index as JSON
  [1m[36mQuestion Load (9.4ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
  [1m[36mAnswer Load (0.9ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" IN (1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30)[0m
[active_model_serializers] Rendered ActiveModel::Serializer::CollectionSerializer with ActiveModelSerializers::Adapter::JsonApi (2502.04ms)
Completed 200 OK in 2849ms (Views: 2831.0ms | ActiveRecord: 10.3ms)


Started GET "/api/v1/questions" for ::1 at 2016-06-16 16:51:41 -0400
Processing by Api::V1::QuestionsController#index as JSON
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
  [1m[36mAnswer Load (0.9ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" IN (1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30)[0m
[active_model_serializers] Rendered ActiveModel::Serializer::CollectionSerializer with ActiveModelSerializers::Adapter::JsonApi (2582.44ms)
Completed 200 OK in 2936ms (Views: 2925.9ms | ActiveRecord: 1.7ms)


Started GET "/api/v1/questions" for ::1 at 2016-06-16 16:51:48 -0400
Processing by Api::V1::QuestionsController#index as JSON
  [1m[36mQuestion Load (1.2ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
  [1m[36mAnswer Load (0.9ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" IN (1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30)[0m
[active_model_serializers] Rendered ActiveModel::Serializer::CollectionSerializer with ActiveModelSerializers::Adapter::JsonApi (2658.22ms)
Completed 200 OK in 3029ms (Views: 3021.2ms | ActiveRecord: 2.1ms)


Started GET "/api/v1/questions" for ::1 at 2016-06-16 16:51:52 -0400
Processing by Api::V1::QuestionsController#index as JSON
  [1m[36mQuestion Load (1.0ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
  [1m[36mAnswer Load (1.0ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" IN (1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30)[0m
[active_model_serializers] Rendered ActiveModel::Serializer::CollectionSerializer with ActiveModelSerializers::Adapter::JsonApi (2700.61ms)
Completed 200 OK in 3114ms (Views: 3101.7ms | ActiveRecord: 2.0ms)


Started GET "/api/v1/questions/2" for ::1 at 2016-06-16 16:52:04 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"2"}
  [1m[36mQuestion Load (1.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.9ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 2]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (659.51ms)
Completed 200 OK in 710ms (Views: 669.7ms | ActiveRecord: 2.4ms)


Started GET "/api/v1/questions/2" for ::1 at 2016-06-16 16:52:15 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"2"}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (1.3ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 2]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (689.53ms)
Completed 200 OK in 738ms (Views: 710.4ms | ActiveRecord: 2.1ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-16 16:52:18 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"ssdsfs"}, "relationships"=>{"question"=>{"data"=>{"type"=>"questions", "id"=>"2"}}}, "type"=>"answers"}, "answer"=>{}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
  [1m[35m (0.7ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.8ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "ssdsfs"], ["question_id", 2], ["created_at", 2016-06-16 20:52:18 UTC], ["updated_at", 2016-06-16 20:52:18 UTC]]
  [1m[35m (77.2ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 250ms (ActiveRecord: 79.5ms)


Started GET "/api/v1/questions/2" for ::1 at 2016-06-16 16:52:21 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"2"}
  [1m[36mQuestion Load (0.9ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (1.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 2]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (732.86ms)
Completed 200 OK in 776ms (Views: 749.6ms | ActiveRecord: 2.0ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-16 16:52:24 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"aaa"}, "relationships"=>{"question"=>{"data"=>{"type"=>"questions", "id"=>"2"}}}, "type"=>"answers"}, "answer"=>{}}
  [1m[36mQuestion Load (0.9ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
  [1m[35m (1.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.9ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "aaa"], ["question_id", 2], ["created_at", 2016-06-16 20:52:24 UTC], ["updated_at", 2016-06-16 20:52:24 UTC]]
  [1m[35m (3.1ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 172ms (ActiveRecord: 5.9ms)


Started GET "/api/v1/questions/2" for ::1 at 2016-06-16 16:52:25 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"2"}
  [1m[36mQuestion Load (0.9ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (1.6ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 2]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (794.78ms)
Completed 200 OK in 834ms (Views: 807.3ms | ActiveRecord: 2.5ms)


Started GET "/api/v1/questions/2" for ::1 at 2016-06-16 16:59:17 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"2"}
  [1m[36mQuestion Load (1.1ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (1.0ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 2]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (759.11ms)
Completed 200 OK in 804ms (Views: 778.1ms | ActiveRecord: 2.1ms)


Started GET "/api/v1/questions/2" for ::1 at 2016-06-16 16:59:33 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"2"}
  [1m[36mQuestion Load (1.1ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.8ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 2]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (681.0ms)
Completed 200 OK in 726ms (Views: 700.2ms | ActiveRecord: 1.8ms)


Started GET "/api/v1/questions/2" for ::1 at 2016-06-16 17:01:54 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"2"}
  [1m[36mQuestion Load (1.8ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (1.1ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 2]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (622.66ms)
Completed 200 OK in 660ms (Views: 639.0ms | ActiveRecord: 2.9ms)


Started GET "/api/v1/questions/2" for ::1 at 2016-06-16 17:02:13 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"2"}
  [1m[36mQuestion Load (1.1ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (1.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 2]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (595.86ms)
Completed 200 OK in 629ms (Views: 603.3ms | ActiveRecord: 2.4ms)


Started GET "/api/v1/questions/2" for ::1 at 2016-06-16 17:03:08 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"2"}
  [1m[36mQuestion Load (1.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (1.1ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 2]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (627.33ms)
Completed 200 OK in 659ms (Views: 641.6ms | ActiveRecord: 2.3ms)


Started GET "/api/v1/questions/2" for ::1 at 2016-06-16 17:03:13 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"2"}
  [1m[36mQuestion Load (1.6ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (1.3ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 2]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (614.99ms)
Completed 200 OK in 644ms (Views: 626.3ms | ActiveRecord: 2.9ms)


Started GET "/api/v1/questions/2" for ::1 at 2016-06-16 17:03:18 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"2"}
  [1m[36mQuestion Load (1.8ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (1.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 2]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (725.11ms)
Completed 200 OK in 769ms (Views: 736.0ms | ActiveRecord: 3.0ms)


Started GET "/api/v1/questions/2" for ::1 at 2016-06-16 17:03:23 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"2"}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (1.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 2]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (714.39ms)
Completed 200 OK in 745ms (Views: 722.3ms | ActiveRecord: 2.0ms)


Started GET "/api/v1/questions/2" for ::1 at 2016-06-16 17:04:20 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"2"}
  [1m[36mQuestion Load (1.0ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (1.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 2]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (616.43ms)
Completed 200 OK in 655ms (Views: 633.8ms | ActiveRecord: 2.2ms)


Started GET "/api/v1/questions/2" for ::1 at 2016-06-16 17:04:48 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"2"}
  [1m[36mQuestion Load (0.9ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (1.3ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 2]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (645.81ms)
Completed 200 OK in 675ms (Views: 653.2ms | ActiveRecord: 2.2ms)


Started GET "/api/v1/questions/2" for ::1 at 2016-06-16 17:05:30 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"2"}
  [1m[36mQuestion Load (1.1ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (1.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 2]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (627.2ms)
Completed 200 OK in 658ms (Views: 640.4ms | ActiveRecord: 2.3ms)


Started GET "/api/v1/questions/2" for ::1 at 2016-06-16 17:05:40 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"2"}
  [1m[36mQuestion Load (1.0ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (1.0ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 2]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (675.98ms)
Completed 200 OK in 710ms (Views: 688.3ms | ActiveRecord: 2.0ms)


Started GET "/api/v1/questions/2" for ::1 at 2016-06-16 17:05:46 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"2"}
  [1m[36mQuestion Load (0.9ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (1.4ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 2]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (720.49ms)
Completed 200 OK in 751ms (Views: 727.9ms | ActiveRecord: 2.3ms)


Started GET "/api/v1/questions/2" for ::1 at 2016-06-16 17:06:07 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"2"}
  [1m[36mQuestion Load (1.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.8ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 2]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (687.03ms)
Completed 200 OK in 721ms (Views: 696.8ms | ActiveRecord: 2.0ms)


Started GET "/api/v1/questions/2" for ::1 at 2016-06-16 17:06:14 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"2"}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.9ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 2]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (636.59ms)
Completed 200 OK in 668ms (Views: 644.9ms | ActiveRecord: 1.7ms)


Started GET "/api/v1/questions/2" for ::1 at 2016-06-16 17:06:18 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"2"}
  [1m[36mQuestion Load (10.3ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (1.4ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 2]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (821.02ms)
Completed 200 OK in 871ms (Views: 831.4ms | ActiveRecord: 11.7ms)


Started GET "/api/v1/questions/2" for ::1 at 2016-06-16 17:06:19 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"2"}
  [1m[36mQuestion Load (1.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (1.1ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 2]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (726.52ms)
Completed 200 OK in 758ms (Views: 734.1ms | ActiveRecord: 2.3ms)


Started GET "/api/v1/questions/2" for ::1 at 2016-06-16 17:06:49 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"2"}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (1.4ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 2]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (634.88ms)
Completed 200 OK in 668ms (Views: 647.0ms | ActiveRecord: 2.2ms)


Started GET "/api/v1/questions/2" for ::1 at 2016-06-16 17:06:51 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"2"}
  [1m[36mQuestion Load (1.3ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (1.0ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 2]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (691.93ms)
Completed 200 OK in 734ms (Views: 709.1ms | ActiveRecord: 2.2ms)


Started GET "/api/v1/questions/2" for ::1 at 2016-06-16 17:07:41 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"2"}
  [1m[36mQuestion Load (1.0ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.9ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 2]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (688.92ms)
Completed 200 OK in 724ms (Views: 701.4ms | ActiveRecord: 2.0ms)


Started GET "/api/v1/questions/2" for ::1 at 2016-06-16 17:07:46 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"2"}
  [1m[36mQuestion Load (1.3ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.9ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 2]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (724.13ms)
Completed 200 OK in 775ms (Views: 751.1ms | ActiveRecord: 2.2ms)


Started GET "/api/v1/questions/2" for ::1 at 2016-06-16 17:07:57 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"2"}
  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (1.1ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 2]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (672.34ms)
Completed 200 OK in 709ms (Views: 689.0ms | ActiveRecord: 1.8ms)


Started GET "/api/v1/questions/2" for ::1 at 2016-06-16 17:08:17 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"2"}
  [1m[36mQuestion Load (1.5ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (1.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 2]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (691.59ms)
Completed 200 OK in 728ms (Views: 699.3ms | ActiveRecord: 2.6ms)


Started GET "/api/v1/questions/2" for ::1 at 2016-06-16 17:08:21 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"2"}
  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (1.3ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 2]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (753.89ms)
Completed 200 OK in 792ms (Views: 767.1ms | ActiveRecord: 2.1ms)


Started GET "/api/v1/questions/2" for ::1 at 2016-06-16 17:08:34 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"2"}
  [1m[36mQuestion Load (0.9ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (1.4ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 2]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (745.9ms)
Completed 200 OK in 785ms (Views: 760.4ms | ActiveRecord: 2.3ms)


Started GET "/api/v1/questions/2" for ::1 at 2016-06-16 17:08:42 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"2"}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (1.0ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 2]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (704.77ms)
Completed 200 OK in 735ms (Views: 712.5ms | ActiveRecord: 1.9ms)


Started GET "/api/v1/questions/2" for ::1 at 2016-06-16 17:09:20 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"2"}
  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.9ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 2]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (710.34ms)
Completed 200 OK in 741ms (Views: 718.6ms | ActiveRecord: 1.6ms)


Started GET "/api/v1/questions/3" for ::1 at 2016-06-16 17:10:29 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"3"}
  [1m[36mQuestion Load (1.0ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 3], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.9ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 3]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (117.68ms)
Completed 200 OK in 148ms (Views: 125.5ms | ActiveRecord: 2.0ms)


Started GET "/api/v1/questions/2" for ::1 at 2016-06-16 17:10:30 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"2"}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (1.0ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 2]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (661.85ms)
Completed 200 OK in 697ms (Views: 674.4ms | ActiveRecord: 1.8ms)


Started GET "/api/v1/questions/3" for ::1 at 2016-06-16 17:11:49 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"3"}
  [1m[36mQuestion Load (1.1ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 3], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.9ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 3]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (111.1ms)
Completed 200 OK in 143ms (Views: 120.4ms | ActiveRecord: 1.9ms)


Started GET "/api/v1/questions" for ::1 at 2016-06-16 17:11:50 -0400
Processing by Api::V1::QuestionsController#index as JSON
  [1m[36mQuestion Load (1.0ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
  [1m[36mAnswer Load (1.0ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" IN (1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30)[0m
[active_model_serializers] Rendered ActiveModel::Serializer::CollectionSerializer with ActiveModelSerializers::Adapter::JsonApi (2675.44ms)
Completed 200 OK in 3013ms (Views: 2998.6ms | ActiveRecord: 2.0ms)


Started GET "/api/v1/questions" for ::1 at 2016-06-16 17:12:10 -0400
Processing by Api::V1::QuestionsController#index as JSON
  [1m[36mQuestion Load (1.1ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
  [1m[36mAnswer Load (1.6ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" IN (1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30)[0m
[active_model_serializers] Rendered ActiveModel::Serializer::CollectionSerializer with ActiveModelSerializers::Adapter::JsonApi (2717.02ms)
Completed 200 OK in 3083ms (Views: 3074.7ms | ActiveRecord: 2.8ms)


Started GET "/api/v1/questions" for ::1 at 2016-06-16 17:13:48 -0400
Processing by Api::V1::QuestionsController#index as JSON
  [1m[36mQuestion Load (1.2ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
  [1m[36mAnswer Load (1.1ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" IN (1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30)[0m
[active_model_serializers] Rendered ActiveModel::Serializer::CollectionSerializer with ActiveModelSerializers::Adapter::JsonApi (2663.66ms)
Completed 200 OK in 3028ms (Views: 3016.3ms | ActiveRecord: 2.4ms)


Started GET "/api/v1/questions" for ::1 at 2016-06-16 17:14:25 -0400
Processing by Api::V1::QuestionsController#index as JSON
  [1m[36mQuestion Load (1.2ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
  [1m[36mAnswer Load (1.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" IN (1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30)[0m
[active_model_serializers] Rendered ActiveModel::Serializer::CollectionSerializer with ActiveModelSerializers::Adapter::JsonApi (2821.43ms)
Completed 200 OK in 3191ms (Views: 3183.0ms | ActiveRecord: 2.3ms)


Started GET "/api/v1/questions" for ::1 at 2016-06-16 17:14:42 -0400
Processing by Api::V1::QuestionsController#index as JSON
  [1m[36mQuestion Load (1.1ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
  [1m[36mAnswer Load (0.9ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" IN (1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30)[0m
[active_model_serializers] Rendered ActiveModel::Serializer::CollectionSerializer with ActiveModelSerializers::Adapter::JsonApi (2773.88ms)
Completed 200 OK in 3134ms (Views: 3115.8ms | ActiveRecord: 2.1ms)


Started GET "/api/v1/questions" for ::1 at 2016-06-16 17:15:20 -0400
Processing by Api::V1::QuestionsController#index as JSON
  [1m[36mQuestion Load (0.9ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
  [1m[36mAnswer Load (1.0ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" IN (1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30)[0m
Started GET "/api/v1/questions" for ::1 at 2016-06-16 17:15:22 -0400
Processing by Api::V1::QuestionsController#index as JSON
  [1m[36mQuestion Load (164.3ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
  [1m[36mAnswer Load (237.1ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" IN (1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30)[0m
[active_model_serializers] Rendered ActiveModel::Serializer::CollectionSerializer with ActiveModelSerializers::Adapter::JsonApi (3925.38ms)
Completed 200 OK in 4347ms (Views: 4339.2ms | ActiveRecord: 1.9ms)


[active_model_serializers] Rendered ActiveModel::Serializer::CollectionSerializer with ActiveModelSerializers::Adapter::JsonApi (3313.7ms)
Completed 200 OK in 4071ms (Views: 3662.6ms | ActiveRecord: 401.4ms)


Started GET "/api/v1/questions" for ::1 at 2016-06-16 17:15:41 -0400
Processing by Api::V1::QuestionsController#index as JSON
  [1m[36mQuestion Load (1.1ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
  [1m[36mAnswer Load (1.1ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" IN (1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30)[0m
[active_model_serializers] Rendered ActiveModel::Serializer::CollectionSerializer with ActiveModelSerializers::Adapter::JsonApi (2319.96ms)
Completed 200 OK in 2660ms (Views: 2647.6ms | ActiveRecord: 2.2ms)


Started GET "/api/v1/questions" for ::1 at 2016-06-16 17:16:06 -0400
Processing by Api::V1::QuestionsController#index as JSON
  [1m[36mQuestion Load (1.1ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
  [1m[36mAnswer Load (1.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" IN (1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30)[0m
Started GET "/api/v1/questions" for ::1 at 2016-06-16 17:16:09 -0400
[active_model_serializers] Rendered ActiveModel::Serializer::CollectionSerializer with ActiveModelSerializers::Adapter::JsonApi (2539.18ms)
Processing by Api::V1::QuestionsController#index as JSON
Completed 200 OK in 2872ms (Views: 2865.0ms | ActiveRecord: 2.3ms)


  [1m[36mQuestion Load (16.2ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
  [1m[36mAnswer Load (1.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" IN (1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30)[0m
[active_model_serializers] Rendered ActiveModel::Serializer::CollectionSerializer with ActiveModelSerializers::Adapter::JsonApi (2404.77ms)
Completed 200 OK in 2719ms (Views: 2695.4ms | ActiveRecord: 17.4ms)


Started GET "/api/v1/questions" for ::1 at 2016-06-16 17:16:22 -0400
Processing by Api::V1::QuestionsController#index as JSON
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
  [1m[36mAnswer Load (1.4ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" IN (1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30)[0m
[active_model_serializers] Rendered ActiveModel::Serializer::CollectionSerializer with ActiveModelSerializers::Adapter::JsonApi (2372.54ms)
Completed 200 OK in 2745ms (Views: 2731.5ms | ActiveRecord: 2.2ms)


Started GET "/api/v1/questions" for ::1 at 2016-06-16 17:17:02 -0400
Processing by Api::V1::QuestionsController#index as JSON
  [1m[36mQuestion Load (1.2ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
  [1m[36mAnswer Load (1.5ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" IN (1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30)[0m
[active_model_serializers] Rendered ActiveModel::Serializer::CollectionSerializer with ActiveModelSerializers::Adapter::JsonApi (2395.85ms)
Completed 200 OK in 2735ms (Views: 2726.6ms | ActiveRecord: 2.8ms)


Started GET "/api/v1/questions" for ::1 at 2016-06-16 17:17:14 -0400
Processing by Api::V1::QuestionsController#index as JSON
  [1m[36mQuestion Load (1.6ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
  [1m[36mAnswer Load (1.3ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" IN (1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30)[0m
[active_model_serializers] Rendered ActiveModel::Serializer::CollectionSerializer with ActiveModelSerializers::Adapter::JsonApi (2577.03ms)
Completed 200 OK in 2977ms (Views: 2960.6ms | ActiveRecord: 2.9ms)


Started GET "/api/v1/questions" for ::1 at 2016-06-16 17:17:19 -0400
Processing by Api::V1::QuestionsController#index as JSON
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
  [1m[36mAnswer Load (0.9ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" IN (1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30)[0m
[active_model_serializers] Rendered ActiveModel::Serializer::CollectionSerializer with ActiveModelSerializers::Adapter::JsonApi (2433.09ms)
Completed 200 OK in 2808ms (Views: 2801.1ms | ActiveRecord: 1.7ms)


Started GET "/api/v1/questions" for ::1 at 2016-06-16 17:17:37 -0400
Processing by Api::V1::QuestionsController#index as JSON
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
  [1m[36mAnswer Load (1.0ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" IN (1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30)[0m
[active_model_serializers] Rendered ActiveModel::Serializer::CollectionSerializer with ActiveModelSerializers::Adapter::JsonApi (2548.98ms)
Completed 200 OK in 2910ms (Views: 2898.1ms | ActiveRecord: 1.8ms)


Started GET "/api/v1/questions" for ::1 at 2016-06-16 17:18:36 -0400
Processing by Api::V1::QuestionsController#index as JSON
  [1m[36mQuestion Load (0.9ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
  [1m[36mAnswer Load (1.5ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" IN (1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30)[0m
[active_model_serializers] Rendered ActiveModel::Serializer::CollectionSerializer with ActiveModelSerializers::Adapter::JsonApi (2567.04ms)
Completed 200 OK in 3001ms (Views: 2992.3ms | ActiveRecord: 2.4ms)


Started GET "/api/v1/questions" for ::1 at 2016-06-16 17:18:40 -0400
Processing by Api::V1::QuestionsController#index as JSON
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
  [1m[36mAnswer Load (1.4ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" IN (1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30)[0m
[active_model_serializers] Rendered ActiveModel::Serializer::CollectionSerializer with ActiveModelSerializers::Adapter::JsonApi (2665.14ms)
Completed 200 OK in 3044ms (Views: 3034.0ms | ActiveRecord: 2.2ms)


Started GET "/api/v1/questions" for ::1 at 2016-06-16 17:18:43 -0400
Processing by Api::V1::QuestionsController#index as JSON
  [1m[36mQuestion Load (1.1ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
  [1m[36mAnswer Load (1.1ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" IN (1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30)[0m
[active_model_serializers] Rendered ActiveModel::Serializer::CollectionSerializer with ActiveModelSerializers::Adapter::JsonApi (2714.71ms)
Completed 200 OK in 3112ms (Views: 3099.2ms | ActiveRecord: 2.2ms)


Started GET "/api/v1/questions" for ::1 at 2016-06-16 17:18:52 -0400
Processing by Api::V1::QuestionsController#index as JSON
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
  [1m[36mAnswer Load (0.9ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" IN (1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30)[0m
Started GET "/api/v1/questions" for ::1 at 2016-06-16 17:18:55 -0400
Processing by Api::V1::QuestionsController#index as JSON
[active_model_serializers] Rendered ActiveModel::Serializer::CollectionSerializer with ActiveModelSerializers::Adapter::JsonApi (2859.7ms)
Completed 200 OK in 3264ms (Views: 3257.0ms | ActiveRecord: 1.7ms)


  [1m[36mQuestion Load (19.1ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
  [1m[36mAnswer Load (1.1ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" IN (1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30)[0m
[active_model_serializers] Rendered ActiveModel::Serializer::CollectionSerializer with ActiveModelSerializers::Adapter::JsonApi (2722.12ms)
Completed 200 OK in 3108ms (Views: 3082.3ms | ActiveRecord: 20.3ms)


Started GET "/api/v1/questions" for ::1 at 2016-06-16 17:19:26 -0400
Processing by Api::V1::QuestionsController#index as JSON
  [1m[36mQuestion Load (12.4ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
  [1m[36mAnswer Load (1.5ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" IN (1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30)[0m
Started GET "/api/v1/questions" for ::1 at 2016-06-16 17:19:28 -0400
Processing by Api::V1::QuestionsController#index as JSON
  [1m[36mQuestion Load (465.2ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
  [1m[36mAnswer Load (250.5ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" IN (1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30)[0m
[active_model_serializers] Rendered ActiveModel::Serializer::CollectionSerializer with ActiveModelSerializers::Adapter::JsonApi (4551.26ms)
Completed 200 OK in 5089ms (Views: 5066.1ms | ActiveRecord: 13.9ms)


[active_model_serializers] Rendered ActiveModel::Serializer::CollectionSerializer with ActiveModelSerializers::Adapter::JsonApi (3676.52ms)
Completed 200 OK in 4983ms (Views: 4256.3ms | ActiveRecord: 715.7ms)


Started GET "/api/v1/questions" for ::1 at 2016-06-16 17:19:38 -0400
Processing by Api::V1::QuestionsController#index as JSON
  [1m[36mQuestion Load (0.9ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
  [1m[36mAnswer Load (1.7ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" IN (1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30)[0m
[active_model_serializers] Rendered ActiveModel::Serializer::CollectionSerializer with ActiveModelSerializers::Adapter::JsonApi (2877.64ms)
Completed 200 OK in 3329ms (Views: 3316.1ms | ActiveRecord: 2.5ms)


Started GET "/api/v1/questions" for ::1 at 2016-06-16 17:19:46 -0400
Processing by Api::V1::QuestionsController#index as JSON
  [1m[36mQuestion Load (1.0ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
  [1m[36mAnswer Load (1.7ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" IN (1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30)[0m
[active_model_serializers] Rendered ActiveModel::Serializer::CollectionSerializer with ActiveModelSerializers::Adapter::JsonApi (2311.65ms)
Completed 200 OK in 2761ms (Views: 2751.2ms | ActiveRecord: 2.7ms)


Started GET "/api/v1/questions" for ::1 at 2016-06-16 17:19:57 -0400
Processing by Api::V1::QuestionsController#index as JSON
  [1m[36mQuestion Load (0.9ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
  [1m[36mAnswer Load (1.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" IN (1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30)[0m
[active_model_serializers] Rendered ActiveModel::Serializer::CollectionSerializer with ActiveModelSerializers::Adapter::JsonApi (2413.87ms)
Completed 200 OK in 2774ms (Views: 2766.4ms | ActiveRecord: 2.2ms)


Started GET "/api/v1/questions" for ::1 at 2016-06-16 17:20:05 -0400
Processing by Api::V1::QuestionsController#index as JSON
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
  [1m[36mAnswer Load (1.0ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" IN (1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30)[0m
[active_model_serializers] Rendered ActiveModel::Serializer::CollectionSerializer with ActiveModelSerializers::Adapter::JsonApi (2404.27ms)
Completed 200 OK in 2732ms (Views: 2721.3ms | ActiveRecord: 1.8ms)


Started GET "/api/v1/questions" for ::1 at 2016-06-16 17:20:10 -0400
Processing by Api::V1::QuestionsController#index as JSON
  [1m[36mQuestion Load (1.0ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
  [1m[36mAnswer Load (1.3ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" IN (1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30)[0m
[active_model_serializers] Rendered ActiveModel::Serializer::CollectionSerializer with ActiveModelSerializers::Adapter::JsonApi (2323.42ms)
Completed 200 OK in 2677ms (Views: 2668.9ms | ActiveRecord: 2.3ms)


Started GET "/api/v1/questions" for ::1 at 2016-06-16 17:20:35 -0400
Processing by Api::V1::QuestionsController#index as JSON
  [1m[36mQuestion Load (1.3ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
  [1m[36mAnswer Load (4.9ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" IN (1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30)[0m
[active_model_serializers] Rendered ActiveModel::Serializer::CollectionSerializer with ActiveModelSerializers::Adapter::JsonApi (2325.17ms)
Completed 200 OK in 2664ms (Views: 2647.4ms | ActiveRecord: 6.2ms)


Started GET "/api/v1/questions" for ::1 at 2016-06-16 17:22:00 -0400
Processing by Api::V1::QuestionsController#index as JSON
  [1m[36mQuestion Load (1.1ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
  [1m[36mAnswer Load (1.0ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" IN (1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30)[0m
[active_model_serializers] Rendered ActiveModel::Serializer::CollectionSerializer with ActiveModelSerializers::Adapter::JsonApi (2439.02ms)
Completed 200 OK in 2795ms (Views: 2787.5ms | ActiveRecord: 2.1ms)


Started GET "/api/v1/questions" for ::1 at 2016-06-16 17:23:06 -0400
Processing by Api::V1::QuestionsController#index as JSON
  [1m[36mQuestion Load (1.4ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
  [1m[36mAnswer Load (1.4ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" IN (1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30)[0m
[active_model_serializers] Rendered ActiveModel::Serializer::CollectionSerializer with ActiveModelSerializers::Adapter::JsonApi (2501.06ms)
Completed 200 OK in 2872ms (Views: 2862.8ms | ActiveRecord: 2.8ms)


Started GET "/api/v1/questions" for ::1 at 2016-06-16 17:23:19 -0400
Processing by Api::V1::QuestionsController#index as JSON
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
  [1m[36mAnswer Load (1.1ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" IN (1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30)[0m
[active_model_serializers] Rendered ActiveModel::Serializer::CollectionSerializer with ActiveModelSerializers::Adapter::JsonApi (2404.81ms)
Completed 200 OK in 2759ms (Views: 2750.8ms | ActiveRecord: 2.0ms)


Started GET "/api/v1/questions" for ::1 at 2016-06-16 17:23:24 -0400
Processing by Api::V1::QuestionsController#index as JSON
  [1m[36mQuestion Load (0.9ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
  [1m[36mAnswer Load (2.0ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" IN (1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30)[0m
[active_model_serializers] Rendered ActiveModel::Serializer::CollectionSerializer with ActiveModelSerializers::Adapter::JsonApi (2547.2ms)
Completed 200 OK in 3065ms (Views: 3056.3ms | ActiveRecord: 2.9ms)


Started GET "/api/v1/questions" for ::1 at 2016-06-16 17:23:31 -0400
Processing by Api::V1::QuestionsController#index as JSON
  [1m[36mQuestion Load (1.1ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
  [1m[36mAnswer Load (1.5ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" IN (1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30)[0m
[active_model_serializers] Rendered ActiveModel::Serializer::CollectionSerializer with ActiveModelSerializers::Adapter::JsonApi (2563.93ms)
Completed 200 OK in 2936ms (Views: 2923.0ms | ActiveRecord: 2.6ms)


Started GET "/api/v1/questions" for ::1 at 2016-06-16 17:23:49 -0400
Processing by Api::V1::QuestionsController#index as JSON
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
  [1m[36mAnswer Load (1.4ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" IN (1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30)[0m
[active_model_serializers] Rendered ActiveModel::Serializer::CollectionSerializer with ActiveModelSerializers::Adapter::JsonApi (2601.36ms)
Completed 200 OK in 2988ms (Views: 2975.2ms | ActiveRecord: 2.2ms)


Started GET "/api/v1/questions" for ::1 at 2016-06-16 17:24:08 -0400
Processing by Api::V1::QuestionsController#index as JSON
  [1m[36mQuestion Load (6.4ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
  [1m[36mAnswer Load (1.0ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" IN (1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30)[0m
[active_model_serializers] Rendered ActiveModel::Serializer::CollectionSerializer with ActiveModelSerializers::Adapter::JsonApi (2625.21ms)
Completed 200 OK in 2979ms (Views: 2966.4ms | ActiveRecord: 7.4ms)


Started GET "/api/v1/questions" for ::1 at 2016-06-16 17:24:16 -0400
Processing by Api::V1::QuestionsController#index as JSON
  [1m[36mQuestion Load (1.5ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
  [1m[36mAnswer Load (1.1ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" IN (1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30)[0m
[active_model_serializers] Rendered ActiveModel::Serializer::CollectionSerializer with ActiveModelSerializers::Adapter::JsonApi (2792.3ms)
Completed 200 OK in 3218ms (Views: 3202.7ms | ActiveRecord: 2.6ms)


Started GET "/api/v1/questions" for ::1 at 2016-06-16 17:24:48 -0400
Processing by Api::V1::QuestionsController#index as JSON
  [1m[36mQuestion Load (5.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
  [1m[36mAnswer Load (1.1ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" IN (1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30)[0m
[active_model_serializers] Rendered ActiveModel::Serializer::CollectionSerializer with ActiveModelSerializers::Adapter::JsonApi (2777.81ms)
Completed 200 OK in 3133ms (Views: 3120.9ms | ActiveRecord: 6.9ms)


Started GET "/api/v1/questions" for ::1 at 2016-06-16 17:31:11 -0400
Processing by Api::V1::QuestionsController#index as JSON
  [1m[36mQuestion Load (1.4ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
  [1m[36mAnswer Load (0.9ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" IN (1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30)[0m
[active_model_serializers] Rendered ActiveModel::Serializer::CollectionSerializer with ActiveModelSerializers::Adapter::JsonApi (2720.85ms)
Completed 200 OK in 3072ms (Views: 3063.8ms | ActiveRecord: 2.3ms)


Started GET "/api/v1/questions" for ::1 at 2016-06-16 17:32:20 -0400
Processing by Api::V1::QuestionsController#index as JSON
  [1m[36mQuestion Load (1.0ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
  [1m[36mAnswer Load (1.1ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" IN (1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30)[0m
[active_model_serializers] Rendered ActiveModel::Serializer::CollectionSerializer with ActiveModelSerializers::Adapter::JsonApi (2905.86ms)
Completed 200 OK in 3272ms (Views: 3259.7ms | ActiveRecord: 2.1ms)


Started GET "/api/v1/questions" for ::1 at 2016-06-16 17:32:25 -0400
Processing by Api::V1::QuestionsController#index as JSON
  [1m[36mQuestion Load (1.2ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
  [1m[36mAnswer Load (1.8ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" IN (1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30)[0m
[active_model_serializers] Rendered ActiveModel::Serializer::CollectionSerializer with ActiveModelSerializers::Adapter::JsonApi (2901.66ms)
Completed 200 OK in 3299ms (Views: 3288.7ms | ActiveRecord: 3.0ms)


Started GET "/api/v1/questions" for ::1 at 2016-06-16 17:33:36 -0400
Processing by Api::V1::QuestionsController#index as JSON
  [1m[36mQuestion Load (1.1ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
  [1m[36mAnswer Load (1.0ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" IN (1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30)[0m
Started GET "/api/v1/questions" for ::1 at 2016-06-16 17:33:38 -0400
Processing by Api::V1::QuestionsController#index as JSON
  [1m[36mQuestion Load (189.5ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
  [1m[36mAnswer Load (492.0ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" IN (1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30)[0m
[active_model_serializers] Rendered ActiveModel::Serializer::CollectionSerializer with ActiveModelSerializers::Adapter::JsonApi (3156.61ms)
Completed 200 OK in 3617ms (Views: 3604.5ms | ActiveRecord: 2.1ms)


[active_model_serializers] Rendered ActiveModel::Serializer::CollectionSerializer with ActiveModelSerializers::Adapter::JsonApi (2361.95ms)
Completed 200 OK in 3309ms (Views: 2618.8ms | ActiveRecord: 681.5ms)


Started GET "/api/v1/questions" for ::1 at 2016-06-16 17:34:07 -0400
Processing by Api::V1::QuestionsController#index as JSON
  [1m[36mQuestion Load (0.9ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
  [1m[36mAnswer Load (0.9ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" IN (1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30)[0m
[active_model_serializers] Rendered ActiveModel::Serializer::CollectionSerializer with ActiveModelSerializers::Adapter::JsonApi (2345.17ms)
Completed 200 OK in 2659ms (Views: 2651.4ms | ActiveRecord: 1.8ms)


Started GET "/api/v1/questions" for ::1 at 2016-06-16 17:34:11 -0400
Processing by Api::V1::QuestionsController#index as JSON
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
  [1m[36mAnswer Load (0.9ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" IN (1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30)[0m
[active_model_serializers] Rendered ActiveModel::Serializer::CollectionSerializer with ActiveModelSerializers::Adapter::JsonApi (2363.51ms)
Completed 200 OK in 2766ms (Views: 2758.7ms | ActiveRecord: 1.7ms)


Started GET "/api/v1/questions" for ::1 at 2016-06-16 17:35:36 -0400
Processing by Api::V1::QuestionsController#index as JSON
  [1m[36mQuestion Load (1.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
  [1m[36mAnswer Load (1.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" IN (1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30)[0m
[active_model_serializers] Rendered ActiveModel::Serializer::CollectionSerializer with ActiveModelSerializers::Adapter::JsonApi (2431.21ms)
Completed 200 OK in 2836ms (Views: 2827.4ms | ActiveRecord: 3.0ms)


Started GET "/api/v1/questions" for ::1 at 2016-06-16 17:36:16 -0400
Processing by Api::V1::QuestionsController#index as JSON
  [1m[36mQuestion Load (1.3ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
  [1m[36mAnswer Load (1.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" IN (1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30)[0m
[active_model_serializers] Rendered ActiveModel::Serializer::CollectionSerializer with ActiveModelSerializers::Adapter::JsonApi (2465.63ms)
Completed 200 OK in 2808ms (Views: 2793.8ms | ActiveRecord: 2.5ms)


Started GET "/api/v1/questions" for ::1 at 2016-06-16 17:36:26 -0400
Processing by Api::V1::QuestionsController#index as JSON
  [1m[36mQuestion Load (1.0ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
  [1m[36mAnswer Load (1.5ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" IN (1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30)[0m
[active_model_serializers] Rendered ActiveModel::Serializer::CollectionSerializer with ActiveModelSerializers::Adapter::JsonApi (2471.54ms)
Completed 200 OK in 2831ms (Views: 2818.7ms | ActiveRecord: 2.5ms)


Started GET "/api/v1/questions" for ::1 at 2016-06-16 17:36:33 -0400
Processing by Api::V1::QuestionsController#index as JSON
  [1m[36mQuestion Load (1.2ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
  [1m[36mAnswer Load (1.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" IN (1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30)[0m
[active_model_serializers] Rendered ActiveModel::Serializer::CollectionSerializer with ActiveModelSerializers::Adapter::JsonApi (2503.98ms)
Completed 200 OK in 2885ms (Views: 2876.8ms | ActiveRecord: 2.4ms)


Started GET "/api/v1/questions" for ::1 at 2016-06-16 17:36:47 -0400
Processing by Api::V1::QuestionsController#index as JSON
  [1m[36mQuestion Load (1.1ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
  [1m[36mAnswer Load (1.1ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" IN (1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30)[0m
[active_model_serializers] Rendered ActiveModel::Serializer::CollectionSerializer with ActiveModelSerializers::Adapter::JsonApi (2582.93ms)
Completed 200 OK in 2926ms (Views: 2913.2ms | ActiveRecord: 2.2ms)


Started GET "/api/v1/questions" for ::1 at 2016-06-16 17:37:25 -0400
Processing by Api::V1::QuestionsController#index as JSON
  [1m[36mQuestion Load (1.0ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
  [1m[36mAnswer Load (0.9ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" IN (1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30)[0m
[active_model_serializers] Rendered ActiveModel::Serializer::CollectionSerializer with ActiveModelSerializers::Adapter::JsonApi (2585.87ms)
Completed 200 OK in 2914ms (Views: 2906.4ms | ActiveRecord: 1.9ms)


Started GET "/api/v1/questions" for ::1 at 2016-06-16 17:37:41 -0400
Processing by Api::V1::QuestionsController#index as JSON
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
  [1m[36mAnswer Load (1.1ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" IN (1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30)[0m
[active_model_serializers] Rendered ActiveModel::Serializer::CollectionSerializer with ActiveModelSerializers::Adapter::JsonApi (2633.33ms)
Completed 200 OK in 2979ms (Views: 2972.2ms | ActiveRecord: 1.9ms)


Started GET "/api/v1/questions" for ::1 at 2016-06-16 17:37:45 -0400
Processing by Api::V1::QuestionsController#index as JSON
  [1m[36mQuestion Load (0.9ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
  [1m[36mAnswer Load (1.0ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" IN (1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30)[0m
[active_model_serializers] Rendered ActiveModel::Serializer::CollectionSerializer with ActiveModelSerializers::Adapter::JsonApi (2651.44ms)
Completed 200 OK in 3024ms (Views: 3012.5ms | ActiveRecord: 1.9ms)


Started GET "/api/v1/questions" for ::1 at 2016-06-16 17:38:07 -0400
Processing by Api::V1::QuestionsController#index as JSON
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
  [1m[36mAnswer Load (1.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" IN (1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30)[0m
[active_model_serializers] Rendered ActiveModel::Serializer::CollectionSerializer with ActiveModelSerializers::Adapter::JsonApi (2664.98ms)
Completed 200 OK in 3045ms (Views: 3037.8ms | ActiveRecord: 2.0ms)


Started GET "/api/v1/questions" for ::1 at 2016-06-16 17:39:06 -0400
Processing by Api::V1::QuestionsController#index as JSON
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
  [1m[36mAnswer Load (0.9ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" IN (1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30)[0m
[active_model_serializers] Rendered ActiveModel::Serializer::CollectionSerializer with ActiveModelSerializers::Adapter::JsonApi (2834.61ms)
Completed 200 OK in 3206ms (Views: 3198.5ms | ActiveRecord: 1.7ms)


Started GET "/api/v1/questions" for ::1 at 2016-06-16 17:39:57 -0400
Processing by Api::V1::QuestionsController#index as JSON
  [1m[36mQuestion Load (0.9ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
  [1m[36mAnswer Load (1.1ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" IN (1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30)[0m
[active_model_serializers] Rendered ActiveModel::Serializer::CollectionSerializer with ActiveModelSerializers::Adapter::JsonApi (2820.67ms)
Completed 200 OK in 3172ms (Views: 3159.4ms | ActiveRecord: 2.0ms)


Started GET "/api/v1/questions" for ::1 at 2016-06-16 17:40:16 -0400
Processing by Api::V1::QuestionsController#index as JSON
  [1m[36mQuestion Load (1.1ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
  [1m[36mAnswer Load (1.1ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" IN (1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30)[0m
[active_model_serializers] Rendered ActiveModel::Serializer::CollectionSerializer with ActiveModelSerializers::Adapter::JsonApi (2817.73ms)
Completed 200 OK in 3192ms (Views: 3172.4ms | ActiveRecord: 2.2ms)


Started GET "/api/v1/questions" for ::1 at 2016-06-16 17:40:25 -0400
Processing by Api::V1::QuestionsController#index as JSON
  [1m[36mQuestion Load (1.2ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
  [1m[36mAnswer Load (1.3ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" IN (1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30)[0m
[active_model_serializers] Rendered ActiveModel::Serializer::CollectionSerializer with ActiveModelSerializers::Adapter::JsonApi (3030.3ms)
Completed 200 OK in 3500ms (Views: 3485.5ms | ActiveRecord: 2.5ms)


Started GET "/api/v1/questions" for ::1 at 2016-06-16 17:40:29 -0400
Processing by Api::V1::QuestionsController#index as JSON
  [1m[36mQuestion Load (1.0ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
  [1m[36mAnswer Load (1.1ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" IN (1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30)[0m
[active_model_serializers] Rendered ActiveModel::Serializer::CollectionSerializer with ActiveModelSerializers::Adapter::JsonApi (2514.95ms)
Completed 200 OK in 2918ms (Views: 2903.7ms | ActiveRecord: 2.2ms)


Started GET "/api/v1/questions" for ::1 at 2016-06-16 17:41:17 -0400
Processing by Api::V1::QuestionsController#index as JSON
  [1m[36mQuestion Load (1.0ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
  [1m[36mAnswer Load (1.1ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" IN (1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30)[0m
[active_model_serializers] Rendered ActiveModel::Serializer::CollectionSerializer with ActiveModelSerializers::Adapter::JsonApi (2298.74ms)
Completed 200 OK in 2625ms (Views: 2612.2ms | ActiveRecord: 2.0ms)


Started GET "/api/v1/questions" for ::1 at 2016-06-16 17:41:38 -0400
Processing by Api::V1::QuestionsController#index as JSON
  [1m[36mQuestion Load (1.1ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
  [1m[36mAnswer Load (1.5ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" IN (1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30)[0m
[active_model_serializers] Rendered ActiveModel::Serializer::CollectionSerializer with ActiveModelSerializers::Adapter::JsonApi (2413.44ms)
Completed 200 OK in 2753ms (Views: 2744.5ms | ActiveRecord: 2.6ms)


Started GET "/api/v1/questions" for ::1 at 2016-06-16 17:41:41 -0400
Processing by Api::V1::QuestionsController#index as JSON
  [1m[36mQuestion Load (1.2ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
  [1m[36mAnswer Load (1.0ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" IN (1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30)[0m
[active_model_serializers] Rendered ActiveModel::Serializer::CollectionSerializer with ActiveModelSerializers::Adapter::JsonApi (2426.63ms)
Completed 200 OK in 2757ms (Views: 2744.9ms | ActiveRecord: 2.2ms)


Started GET "/api/v1/questions" for ::1 at 2016-06-16 17:42:33 -0400
Processing by Api::V1::QuestionsController#index as JSON
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
  [1m[36mAnswer Load (1.1ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" IN (1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30)[0m
[active_model_serializers] Rendered ActiveModel::Serializer::CollectionSerializer with ActiveModelSerializers::Adapter::JsonApi (2518.17ms)
Completed 200 OK in 2850ms (Views: 2837.9ms | ActiveRecord: 1.9ms)


Started GET "/api/v1/questions" for ::1 at 2016-06-16 17:42:40 -0400
Processing by Api::V1::QuestionsController#index as JSON
  [1m[36mQuestion Load (0.9ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
  [1m[36mAnswer Load (1.4ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" IN (1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30)[0m
[active_model_serializers] Rendered ActiveModel::Serializer::CollectionSerializer with ActiveModelSerializers::Adapter::JsonApi (2419.53ms)
Completed 200 OK in 2780ms (Views: 2772.1ms | ActiveRecord: 2.3ms)


Started GET "/api/v1/questions" for ::1 at 2016-06-16 17:43:05 -0400
Processing by Api::V1::QuestionsController#index as JSON
  [1m[36mQuestion Load (0.9ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
  [1m[36mAnswer Load (0.9ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" IN (1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30)[0m
[active_model_serializers] Rendered ActiveModel::Serializer::CollectionSerializer with ActiveModelSerializers::Adapter::JsonApi (2482.69ms)
Completed 200 OK in 2809ms (Views: 2801.4ms | ActiveRecord: 1.7ms)


Started GET "/api/v1/questions" for ::1 at 2016-06-16 17:43:29 -0400
Processing by Api::V1::QuestionsController#index as JSON
  [1m[36mQuestion Load (1.1ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
  [1m[36mAnswer Load (1.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" IN (1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30)[0m
[active_model_serializers] Rendered ActiveModel::Serializer::CollectionSerializer with ActiveModelSerializers::Adapter::JsonApi (2518.84ms)
Completed 200 OK in 2897ms (Views: 2888.8ms | ActiveRecord: 2.2ms)


Started GET "/api/v1/questions/2" for ::1 at 2016-06-16 17:43:32 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"2"}
  [1m[36mQuestion Load (1.0ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (5.1ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 2]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (638.89ms)
Completed 200 OK in 673ms (Views: 642.8ms | ActiveRecord: 6.1ms)


Started GET "/api/v1/questions" for ::1 at 2016-06-16 17:43:41 -0400
Processing by Api::V1::QuestionsController#index as JSON
  [1m[36mQuestion Load (1.2ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
  [1m[36mAnswer Load (1.0ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" IN (1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30)[0m
[active_model_serializers] Rendered ActiveModel::Serializer::CollectionSerializer with ActiveModelSerializers::Adapter::JsonApi (2594.18ms)
Completed 200 OK in 2994ms (Views: 2978.9ms | ActiveRecord: 2.2ms)


Started GET "/api/v1/questions/2" for ::1 at 2016-06-16 17:43:44 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"2"}
  [1m[36mQuestion Load (0.9ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.9ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 2]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (704.76ms)
Completed 200 OK in 738ms (Views: 717.8ms | ActiveRecord: 1.8ms)


Started GET "/api/v1/questions" for ::1 at 2016-06-16 17:43:45 -0400
Processing by Api::V1::QuestionsController#index as JSON
  [1m[36mQuestion Load (0.9ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
  [1m[36mAnswer Load (1.0ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" IN (1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30)[0m
[active_model_serializers] Rendered ActiveModel::Serializer::CollectionSerializer with ActiveModelSerializers::Adapter::JsonApi (2502.12ms)
Completed 200 OK in 2850ms (Views: 2841.9ms | ActiveRecord: 1.9ms)


Started GET "/api/v1/questions/2" for ::1 at 2016-06-16 17:43:48 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"2"}
  [1m[36mQuestion Load (0.9ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (1.0ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 2]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (660.89ms)
Completed 200 OK in 689ms (Views: 668.3ms | ActiveRecord: 1.9ms)


Started GET "/api/v1/questions" for ::1 at 2016-06-16 17:44:14 -0400
Processing by Api::V1::QuestionsController#index as JSON
  [1m[36mQuestion Load (1.0ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
  [1m[36mAnswer Load (1.0ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" IN (1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30)[0m
[active_model_serializers] Rendered ActiveModel::Serializer::CollectionSerializer with ActiveModelSerializers::Adapter::JsonApi (2691.49ms)
Completed 200 OK in 3025ms (Views: 3008.1ms | ActiveRecord: 2.1ms)


Started GET "/api/v1/questions/2" for ::1 at 2016-06-16 17:44:17 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"2"}
  [1m[36mQuestion Load (0.9ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (1.0ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 2]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (638.4ms)
Completed 200 OK in 675ms (Views: 651.2ms | ActiveRecord: 1.9ms)


Started GET "/api/v1/questions" for ::1 at 2016-06-16 17:44:27 -0400
Processing by Api::V1::QuestionsController#index as JSON
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
  [1m[36mAnswer Load (1.3ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" IN (1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30)[0m
[active_model_serializers] Rendered ActiveModel::Serializer::CollectionSerializer with ActiveModelSerializers::Adapter::JsonApi (2711.98ms)
Completed 200 OK in 3105ms (Views: 3097.9ms | ActiveRecord: 2.1ms)


Started GET "/api/v1/questions/2" for ::1 at 2016-06-16 17:44:30 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"2"}
  [1m[36mQuestion Load (0.9ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.9ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 2]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (673.18ms)
Completed 200 OK in 714ms (Views: 688.8ms | ActiveRecord: 1.8ms)


Started GET "/api/v1/questions" for ::1 at 2016-06-16 17:44:50 -0400
Processing by Api::V1::QuestionsController#index as JSON
  [1m[36mQuestion Load (1.2ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
  [1m[36mAnswer Load (1.3ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" IN (1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30)[0m
[active_model_serializers] Rendered ActiveModel::Serializer::CollectionSerializer with ActiveModelSerializers::Adapter::JsonApi (2812.61ms)
Completed 200 OK in 3220ms (Views: 3204.5ms | ActiveRecord: 2.4ms)


Started GET "/api/v1/questions" for ::1 at 2016-06-16 17:44:53 -0400
Processing by Api::V1::QuestionsController#index as JSON
  [1m[36mQuestion Load (1.1ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
  [1m[36mAnswer Load (0.9ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" IN (1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30)[0m
[active_model_serializers] Rendered ActiveModel::Serializer::CollectionSerializer with ActiveModelSerializers::Adapter::JsonApi (2778.39ms)
Completed 200 OK in 3161ms (Views: 3147.4ms | ActiveRecord: 2.0ms)


Started GET "/api/v1/questions/2" for ::1 at 2016-06-16 17:44:56 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"2"}
  [1m[36mQuestion Load (0.9ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.9ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 2]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (719.28ms)
Completed 200 OK in 753ms (Views: 727.3ms | ActiveRecord: 1.8ms)


Started GET "/api/v1/questions" for ::1 at 2016-06-16 17:45:49 -0400
Processing by Api::V1::QuestionsController#index as JSON
  [1m[36mQuestion Load (0.9ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
  [1m[36mAnswer Load (1.3ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" IN (1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30)[0m
[active_model_serializers] Rendered ActiveModel::Serializer::CollectionSerializer with ActiveModelSerializers::Adapter::JsonApi (2929.23ms)
Completed 200 OK in 3334ms (Views: 3321.5ms | ActiveRecord: 2.2ms)


Started GET "/api/v1/questions/2" for ::1 at 2016-06-16 17:45:52 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"2"}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.9ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 2]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (648.67ms)
Completed 200 OK in 681ms (Views: 660.8ms | ActiveRecord: 1.7ms)


Started GET "/api/v1/questions" for ::1 at 2016-06-16 17:46:08 -0400
Processing by Api::V1::QuestionsController#index as JSON
  [1m[36mQuestion Load (0.9ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
  [1m[36mAnswer Load (1.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" IN (1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30)[0m
[active_model_serializers] Rendered ActiveModel::Serializer::CollectionSerializer with ActiveModelSerializers::Adapter::JsonApi (2383.17ms)
Completed 200 OK in 2721ms (Views: 2712.2ms | ActiveRecord: 2.1ms)


Started GET "/api/v1/questions/2" for ::1 at 2016-06-16 17:46:11 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"2"}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.8ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 2]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (682.83ms)
Started GET "/api/v1/questions" for ::1 at 2016-06-16 17:46:11 -0400
Completed 200 OK in 897ms (Views: 877.9ms | ActiveRecord: 1.6ms)


Processing by Api::V1::QuestionsController#index as JSON
  [1m[36mQuestion Load (2.0ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
  [1m[36mAnswer Load (0.8ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" IN (1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30)[0m
[active_model_serializers] Rendered ActiveModel::Serializer::CollectionSerializer with ActiveModelSerializers::Adapter::JsonApi (2352.17ms)
Completed 200 OK in 2679ms (Views: 2663.3ms | ActiveRecord: 2.8ms)


Started GET "/api/v1/questions/2" for ::1 at 2016-06-16 17:46:15 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"2"}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.9ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 2]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (603.68ms)
Completed 200 OK in 633ms (Views: 612.8ms | ActiveRecord: 1.7ms)


Started GET "/api/v1/questions" for ::1 at 2016-06-16 17:49:48 -0400
Processing by Api::V1::QuestionsController#index as JSON
  [1m[36mQuestion Load (1.0ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
  [1m[36mAnswer Load (0.8ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" IN (1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30)[0m
[active_model_serializers] Rendered ActiveModel::Serializer::CollectionSerializer with ActiveModelSerializers::Adapter::JsonApi (2364.3ms)
Completed 200 OK in 2685ms (Views: 2677.2ms | ActiveRecord: 1.9ms)


Started GET "/api/v1/questions/2" for ::1 at 2016-06-16 17:49:51 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"2"}
  [1m[36mQuestion Load (1.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.8ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 2]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (624.18ms)
Completed 200 OK in 654ms (Views: 631.9ms | ActiveRecord: 2.1ms)


Started GET "/api/v1/questions" for ::1 at 2016-06-16 17:50:11 -0400
Processing by Api::V1::QuestionsController#index as JSON
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
  [1m[36mAnswer Load (1.0ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" IN (1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30)[0m
[active_model_serializers] Rendered ActiveModel::Serializer::CollectionSerializer with ActiveModelSerializers::Adapter::JsonApi (2336.27ms)
Completed 200 OK in 2654ms (Views: 2646.7ms | ActiveRecord: 1.8ms)


Started GET "/api/v1/questions/2" for ::1 at 2016-06-16 17:50:14 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"2"}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.8ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 2]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (582.1ms)
Completed 200 OK in 609ms (Views: 589.1ms | ActiveRecord: 1.7ms)


Started GET "/api/v1/questions/2" for ::1 at 2016-06-16 17:50:55 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"2"}
  [1m[36mQuestion Load (0.9ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (1.0ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 2]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (612.25ms)
Completed 200 OK in 649ms (Views: 626.4ms | ActiveRecord: 1.9ms)


Started GET "/api/v1/questions/2" for ::1 at 2016-06-16 17:51:51 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"2"}
  [1m[36mQuestion Load (0.9ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (1.4ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 2]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (626.69ms)
Completed 200 OK in 671ms (Views: 646.3ms | ActiveRecord: 2.4ms)


Started GET "/api/v1/questions/2" for ::1 at 2016-06-16 17:52:12 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"2"}
  [1m[36mQuestion Load (1.5ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (1.0ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 2]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (662.13ms)
Completed 200 OK in 699ms (Views: 680.5ms | ActiveRecord: 2.5ms)


Started GET "/api/v1/questions/3" for ::1 at 2016-06-16 17:52:48 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"3"}
  [1m[36mQuestion Load (0.9ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 3], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (1.0ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 3]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (113.38ms)
Completed 200 OK in 147ms (Views: 124.0ms | ActiveRecord: 1.9ms)


Started GET "/api/v1/questions/2" for ::1 at 2016-06-16 17:52:54 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"2"}
  [1m[36mQuestion Load (1.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (1.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 2]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (687.21ms)
Completed 200 OK in 723ms (Views: 699.3ms | ActiveRecord: 2.4ms)


Started GET "/api/v1/questions/5" for ::1 at 2016-06-16 17:52:58 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"5"}
  [1m[36mQuestion Load (1.0ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 5], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (1.3ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 5]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (154.1ms)
Completed 200 OK in 201ms (Views: 177.6ms | ActiveRecord: 2.4ms)


Started GET "/api/v1/questions/5" for ::1 at 2016-06-16 17:55:24 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"5"}
  [1m[36mQuestion Load (1.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 5], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.8ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 5]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (96.73ms)
Completed 200 OK in 134ms (Views: 110.5ms | ActiveRecord: 2.2ms)


Started GET "/api/v1/questions/5" for ::1 at 2016-06-16 17:59:10 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"5"}
  [1m[36mQuestion Load (0.9ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 5], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.8ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 5]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (94.61ms)
Completed 200 OK in 133ms (Views: 115.7ms | ActiveRecord: 1.7ms)


Started GET "/api/v1/questions/5" for ::1 at 2016-06-16 18:00:16 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"5"}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 5], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.9ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 5]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (108.85ms)
Completed 200 OK in 152ms (Views: 122.8ms | ActiveRecord: 1.7ms)


Started GET "/api/v1/questions/5" for ::1 at 2016-06-16 18:00:20 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"5"}
  [1m[36mQuestion Load (2.0ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 5], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (1.0ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 5]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (103.99ms)
Completed 200 OK in 145ms (Views: 123.4ms | ActiveRecord: 3.0ms)


Started GET "/api/v1/questions/5" for ::1 at 2016-06-16 18:00:58 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"5"}
  [1m[36mQuestion Load (0.9ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 5], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (1.0ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 5]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (101.08ms)
Completed 200 OK in 132ms (Views: 110.1ms | ActiveRecord: 1.9ms)


Started GET "/api/v1/questions/5" for ::1 at 2016-06-16 18:01:02 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"5"}
  [1m[36mQuestion Load (1.6ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 5], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (1.0ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 5]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (107.79ms)
Completed 200 OK in 144ms (Views: 116.7ms | ActiveRecord: 2.7ms)


Started GET "/api/v1/questions/5" for ::1 at 2016-06-16 18:01:19 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"5"}
  [1m[36mQuestion Load (1.3ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 5], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.9ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 5]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (127.52ms)
Completed 200 OK in 173ms (Views: 145.1ms | ActiveRecord: 2.2ms)


Started GET "/api/v1/questions/5" for ::1 at 2016-06-16 18:01:50 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"5"}
  [1m[36mQuestion Load (1.0ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 5], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (1.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 5]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (127.94ms)
Completed 200 OK in 158ms (Views: 135.8ms | ActiveRecord: 2.3ms)


Started GET "/api/v1/questions/5" for ::1 at 2016-06-16 18:02:58 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"5"}
  [1m[36mQuestion Load (0.9ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 5], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.8ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 5]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (98.2ms)
Completed 200 OK in 130ms (Views: 107.4ms | ActiveRecord: 1.7ms)


Started GET "/api/v1/questions/5" for ::1 at 2016-06-16 18:03:53 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"5"}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 5], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (1.1ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 5]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (103.66ms)
Completed 200 OK in 149ms (Views: 119.0ms | ActiveRecord: 1.9ms)


Started GET "/api/v1/questions/5" for ::1 at 2016-06-16 18:05:22 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"5"}
  [1m[36mQuestion Load (0.9ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 5], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.7ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 5]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (91.56ms)
Completed 200 OK in 125ms (Views: 101.1ms | ActiveRecord: 1.6ms)


Started GET "/api/v1/questions/5" for ::1 at 2016-06-16 18:05:37 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"5"}
  [1m[36mQuestion Load (1.1ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 5], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (1.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 5]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (123.11ms)
Completed 200 OK in 164ms (Views: 145.5ms | ActiveRecord: 2.3ms)


Started GET "/api/v1/questions/5" for ::1 at 2016-06-16 18:05:52 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"5"}
  [1m[36mQuestion Load (1.8ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 5], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (1.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 5]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (156.74ms)
Completed 200 OK in 204ms (Views: 169.6ms | ActiveRecord: 3.1ms)


Started GET "/api/v1/questions/5" for ::1 at 2016-06-16 18:06:02 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"5"}
  [1m[36mQuestion Load (6.1ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 5], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (1.1ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 5]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (136.1ms)
Completed 200 OK in 170ms (Views: 146.4ms | ActiveRecord: 7.2ms)


Started GET "/api/v1/questions/5" for ::1 at 2016-06-16 18:06:27 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"5"}
  [1m[36mQuestion Load (1.3ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 5], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.9ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 5]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (97.05ms)
Completed 200 OK in 130ms (Views: 105.3ms | ActiveRecord: 2.2ms)


Started GET "/api/v1/questions/5" for ::1 at 2016-06-16 18:06:29 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"5"}
  [1m[36mQuestion Load (0.9ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 5], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (1.0ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 5]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (95.84ms)
Completed 200 OK in 126ms (Views: 103.7ms | ActiveRecord: 1.8ms)


Started GET "/api/v1/questions/5" for ::1 at 2016-06-16 18:06:31 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"5"}
  [1m[36mQuestion Load (0.9ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 5], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (1.1ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 5]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (125.68ms)
Completed 200 OK in 158ms (Views: 135.4ms | ActiveRecord: 2.1ms)


Started GET "/api/v1/questions/5" for ::1 at 2016-06-16 18:06:37 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"5"}
  [1m[36mQuestion Load (0.9ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 5], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (1.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 5]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (118.98ms)
Completed 200 OK in 171ms (Views: 144.8ms | ActiveRecord: 2.1ms)


Started GET "/api/v1/questions/5" for ::1 at 2016-06-16 18:06:40 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"5"}
  [1m[36mQuestion Load (1.3ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 5], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.9ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 5]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (112.08ms)
Completed 200 OK in 148ms (Views: 130.4ms | ActiveRecord: 2.2ms)


Started GET "/api/v1/questions/5" for ::1 at 2016-06-16 18:06:47 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"5"}
  [1m[36mQuestion Load (1.0ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 5], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (1.4ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 5]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (160.08ms)
Completed 200 OK in 193ms (Views: 170.1ms | ActiveRecord: 2.4ms)


Started GET "/api/v1/questions/5" for ::1 at 2016-06-16 18:07:38 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"5"}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 5], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.9ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 5]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (103.75ms)
Completed 200 OK in 142ms (Views: 113.4ms | ActiveRecord: 1.8ms)


Started GET "/api/v1/questions/5" for ::1 at 2016-06-16 18:07:46 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"5"}
  [1m[36mQuestion Load (1.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 5], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (1.1ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 5]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (115.96ms)
Completed 200 OK in 155ms (Views: 125.9ms | ActiveRecord: 2.5ms)


Started GET "/api/v1/questions/2" for ::1 at 2016-06-16 18:39:57 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"2"}
  [1m[36mQuestion Load (1.1ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.8ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 2]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (906.04ms)
Completed 200 OK in 1125ms (Views: 946.4ms | ActiveRecord: 1.9ms)


Started GET "/api/v1/questions/2" for ::1 at 2016-06-16 18:40:07 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"2"}
  [1m[36mQuestion Load (1.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.9ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 2]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (668.17ms)
Completed 200 OK in 724ms (Views: 684.4ms | ActiveRecord: 2.1ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-16 18:40:10 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"wsfsfsf"}, "relationships"=>{"question"=>{"data"=>{"type"=>"questions", "id"=>"2"}}}, "type"=>"answers"}, "answer"=>{}}
  [1m[36mQuestion Load (1.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
  [1m[35m (0.6ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (1.2ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "wsfsfsf"], ["question_id", 2], ["created_at", 2016-06-16 22:40:11 UTC], ["updated_at", 2016-06-16 22:40:11 UTC]]
  [1m[35m (70.6ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 240ms (ActiveRecord: 73.7ms)


Started GET "/api/v1/questions/2" for ::1 at 2016-06-16 18:40:15 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"2"}
  [1m[36mQuestion Load (1.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (1.7ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 2]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (797.61ms)
Completed 200 OK in 834ms (Views: 809.9ms | ActiveRecord: 2.9ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-16 18:40:21 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"I remember you"}, "relationships"=>{"question"=>{"data"=>{"type"=>"questions", "id"=>"2"}}}, "type"=>"answers"}, "answer"=>{}}
  [1m[36mQuestion Load (1.3ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
  [1m[35m (4.8ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (1.1ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "I remember you"], ["question_id", 2], ["created_at", 2016-06-16 22:40:21 UTC], ["updated_at", 2016-06-16 22:40:21 UTC]]
  [1m[35m (3.0ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 160ms (ActiveRecord: 10.3ms)


Started GET "/api/v1/questions/2" for ::1 at 2016-06-16 18:40:24 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"2"}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (1.1ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 2]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (821.4ms)
Completed 200 OK in 856ms (Views: 833.8ms | ActiveRecord: 1.9ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-16 18:40:27 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"asasa"}, "relationships"=>{"question"=>{"data"=>{"type"=>"questions", "id"=>"2"}}}, "type"=>"answers"}, "answer"=>{}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
  [1m[35m (0.7ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (1.2ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "asasa"], ["question_id", 2], ["created_at", 2016-06-16 22:40:27 UTC], ["updated_at", 2016-06-16 22:40:27 UTC]]
  [1m[35m (2.9ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 177ms (ActiveRecord: 5.6ms)


Started GET "/api/v1/questions/2" for ::1 at 2016-06-16 18:40:30 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"2"}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (1.1ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 2]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (826.59ms)
Completed 200 OK in 866ms (Views: 844.1ms | ActiveRecord: 1.9ms)


Started GET "/api/v1/questions/2" for ::1 at 2016-06-16 18:41:10 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"2"}
  [1m[36mQuestion Load (1.6ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.9ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 2]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (830.3ms)
Completed 200 OK in 869ms (Views: 839.0ms | ActiveRecord: 2.5ms)


Started GET "/api/v1/questions/2" for ::1 at 2016-06-16 18:41:14 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"2"}
  [1m[36mQuestion Load (0.9ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.9ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 2]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (908.65ms)
Completed 200 OK in 941ms (Views: 916.8ms | ActiveRecord: 1.8ms)


Started GET "/api/v1/questions/2" for ::1 at 2016-06-16 18:41:22 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"2"}
  [1m[36mQuestion Load (1.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (1.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 2]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (949.94ms)
Completed 200 OK in 990ms (Views: 959.9ms | ActiveRecord: 2.4ms)


Started GET "/api/v1/questions/2" for ::1 at 2016-06-16 18:41:32 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"2"}
  [1m[36mQuestion Load (1.0ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (1.3ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 2]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (833.98ms)
Completed 200 OK in 879ms (Views: 849.9ms | ActiveRecord: 2.3ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-16 18:41:38 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"hello"}, "relationships"=>{"question"=>{"data"=>{"type"=>"questions", "id"=>"2"}}}, "type"=>"answers"}, "answer"=>{}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
  [1m[35m (0.7ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.9ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "hello"], ["question_id", 2], ["created_at", 2016-06-16 22:41:38 UTC], ["updated_at", 2016-06-16 22:41:38 UTC]]
  [1m[35m (154.8ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 323ms (ActiveRecord: 157.2ms)


Started GET "/api/v1/questions/2" for ::1 at 2016-06-16 18:41:41 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"2"}
  [1m[36mQuestion Load (0.9ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (1.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 2]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (1007.51ms)
Completed 200 OK in 1059ms (Views: 1022.3ms | ActiveRecord: 2.1ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-16 18:41:43 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"aa"}, "relationships"=>{"question"=>{"data"=>{"type"=>"questions", "id"=>"2"}}}, "type"=>"answers"}, "answer"=>{}}
  [1m[36mQuestion Load (0.9ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
  [1m[35m (0.6ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.9ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "aa"], ["question_id", 2], ["created_at", 2016-06-16 22:41:43 UTC], ["updated_at", 2016-06-16 22:41:43 UTC]]
  [1m[35m (1.6ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 170ms (ActiveRecord: 4.0ms)


Started GET "/api/v1/questions/2" for ::1 at 2016-06-16 18:41:47 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"2"}
  [1m[36mQuestion Load (1.0ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.9ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 2]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (997.76ms)
Completed 200 OK in 1036ms (Views: 1005.3ms | ActiveRecord: 2.0ms)


Started GET "/api/v1/questions/2" for ::1 at 2016-06-16 18:42:26 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"2"}
  [1m[36mQuestion Load (1.0ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.9ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 2]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (932.2ms)
Completed 200 OK in 979ms (Views: 954.1ms | ActiveRecord: 1.9ms)


Started GET "/api/v1/questions/2" for ::1 at 2016-06-16 18:42:41 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"2"}
  [1m[36mQuestion Load (0.9ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.8ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 2]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (1040.48ms)
Completed 200 OK in 1078ms (Views: 1054.0ms | ActiveRecord: 1.7ms)


Started GET "/api/v1/questions/2" for ::1 at 2016-06-16 18:42:44 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"2"}
  [1m[36mQuestion Load (2.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (1.3ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 2]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (1147.81ms)
Completed 200 OK in 1188ms (Views: 1161.4ms | ActiveRecord: 3.5ms)


Started GET "/api/v1/questions/2" for ::1 at 2016-06-16 18:43:18 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"2"}
  [1m[36mQuestion Load (0.9ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.9ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 2]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (990.7ms)
Completed 200 OK in 1039ms (Views: 1007.8ms | ActiveRecord: 1.8ms)


Started GET "/api/v1/questions/2" for ::1 at 2016-06-16 18:43:27 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"2"}
  [1m[36mQuestion Load (7.6ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.8ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 2]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (833.43ms)
Completed 200 OK in 946ms (Views: 853.4ms | ActiveRecord: 8.5ms)


Started GET "/api/v1/questions/2" for ::1 at 2016-06-16 18:43:30 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"2"}
  [1m[36mQuestion Load (5.0ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (1.1ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 2]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (868.59ms)
Completed 200 OK in 898ms (Views: 876.5ms | ActiveRecord: 6.0ms)


Started GET "/api/v1/questions/2" for ::1 at 2016-06-16 18:44:09 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"2"}
  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.8ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 2]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (780.86ms)
Completed 200 OK in 810ms (Views: 788.7ms | ActiveRecord: 1.4ms)


Started GET "/api/v1/questions/2" for ::1 at 2016-06-16 18:58:35 -0400
  [1m[36mActiveRecord::SchemaMigration Load (0.6ms)[0m  [1m[34mSELECT "schema_migrations".* FROM "schema_migrations"[0m
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"2"}
  [1m[36mQuestion Load (0.9ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.9ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 2]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (68.6ms)
Completed 200 OK in 196ms (Views: 107.9ms | ActiveRecord: 10.4ms)


Started GET "/api/v1/questions/2" for ::1 at 2016-06-16 18:59:10 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"2"}
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (24.6ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 2]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (44.1ms)
Completed 200 OK in 47ms (Views: 20.4ms | ActiveRecord: 25.1ms)


Started GET "/api/v1/questions/2" for ::1 at 2016-06-16 18:59:25 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"2"}
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.3ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 2]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (15.65ms)
Completed 200 OK in 17ms (Views: 15.9ms | ActiveRecord: 0.6ms)


Started GET "/api/v1/questions/2" for ::1 at 2016-06-16 18:59:28 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"2"}
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.3ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 2]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (16.97ms)
Completed 200 OK in 19ms (Views: 17.3ms | ActiveRecord: 0.5ms)


Started GET "/api/v1/questions/2" for ::1 at 2016-06-16 18:59:44 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"2"}
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.4ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 2]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (16.16ms)
Completed 200 OK in 18ms (Views: 16.3ms | ActiveRecord: 0.7ms)


Started GET "/api/v1/questions/2" for ::1 at 2016-06-16 18:59:46 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"2"}
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.4ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 2]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (23.65ms)
Completed 200 OK in 26ms (Views: 24.1ms | ActiveRecord: 0.7ms)


Started POST "/api/v1/random" for ::1 at 2016-06-16 18:59:47 -0400
  
ActionController::RoutingError (No route matches [POST] "/api/v1/random"):
  
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/debug_exceptions.rb:53:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/show_exceptions.rb:31:in `call'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:36:in `call_app'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:24:in `block in call'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:70:in `block in tagged'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:26:in `tagged'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:70:in `tagged'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:24:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/request_id.rb:24:in `call'
rack (2.0.0.rc1) lib/rack/runtime.rb:22:in `call'
activesupport (5.0.0.rc1) lib/active_support/cache/strategy/local_cache_middleware.rb:28:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/static.rb:136:in `call'
rack (2.0.0.rc1) lib/rack/sendfile.rb:111:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
railties (5.0.0.rc1) lib/rails/engine.rb:522:in `call'
puma (3.4.0) lib/puma/configuration.rb:224:in `call'
puma (3.4.0) lib/puma/server.rb:569:in `handle_request'
puma (3.4.0) lib/puma/server.rb:406:in `process_client'
puma (3.4.0) lib/puma/server.rb:271:in `block in run'
puma (3.4.0) lib/puma/thread_pool.rb:114:in `call'
puma (3.4.0) lib/puma/thread_pool.rb:114:in `block in spawn_thread'
Started GET "/api/v1/questions/2" for ::1 at 2016-06-16 19:00:17 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"2"}
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.3ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 2]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (33.75ms)
Completed 200 OK in 36ms (Views: 34.1ms | ActiveRecord: 0.5ms)


Started GET "/api/v1/random" for ::1 at 2016-06-16 19:00:19 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
Completed 500 Internal Server Error in 29492ms (ActiveRecord: 0.0ms)


  
SystemExit (exit):
  
app/controllers/api/v1/questions_controller.rb:21:in `getRandomQuestion'
Started GET "/api/v1/questions/2" for ::1 at 2016-06-16 19:01:19 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"2"}
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.6ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 2]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (708.08ms)
Completed 200 OK in 870ms (Views: 737.6ms | ActiveRecord: 10.5ms)


Started GET "/api/v1/random" for ::1 at 2016-06-16 19:01:22 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.6ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 2]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (570.45ms)
Completed 200 OK in 594ms (Views: 580.6ms | ActiveRecord: 1.2ms)


Started GET "/api/v1/questions/2" for ::1 at 2016-06-16 19:02:23 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"2"}
  [1m[36mQuestion Load (1.1ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.6ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 2]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (666.35ms)
Completed 200 OK in 692ms (Views: 673.2ms | ActiveRecord: 1.7ms)


Started GET "/api/v1/questions/2" for ::1 at 2016-06-16 19:02:25 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"2"}
  [1m[36mQuestion Load (1.0ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (1.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 2]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (751.4ms)
Completed 200 OK in 793ms (Views: 765.9ms | ActiveRecord: 2.1ms)


Started GET "/api/v1/questions/2" for ::1 at 2016-06-16 19:02:36 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"2"}
  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.7ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 2]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (794.83ms)
Completed 200 OK in 828ms (Views: 807.2ms | ActiveRecord: 1.4ms)


Started GET "/api/v1/questions/2" for ::1 at 2016-06-16 19:02:48 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"2"}
  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (1.3ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 2]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (754.81ms)
Completed 200 OK in 781ms (Views: 761.4ms | ActiveRecord: 2.0ms)


Started GET "/api/v1/random" for ::1 at 2016-06-16 19:02:50 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.7ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 2]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (663.39ms)
Completed 200 OK in 688ms (Views: 670.6ms | ActiveRecord: 1.3ms)


Started GET "/api/v1/questions/2" for ::1 at 2016-06-16 19:03:03 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"2"}
  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.9ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 2]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (792.41ms)
Completed 200 OK in 822ms (Views: 805.1ms | ActiveRecord: 1.7ms)


Started GET "/api/v1/random" for ::1 at 2016-06-16 19:03:05 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (4.3ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.6ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 2]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (695.28ms)
Completed 200 OK in 721ms (Views: 703.8ms | ActiveRecord: 4.9ms)


Started GET "/api/v1/random" for ::1 at 2016-06-16 19:03:08 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.9ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 2]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (730.82ms)
Completed 200 OK in 762ms (Views: 743.3ms | ActiveRecord: 1.5ms)


Started GET "/api/v1/questions/2" for ::1 at 2016-06-16 19:03:18 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"2"}
  [1m[36mQuestion Load (5.9ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.7ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 2]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (792.05ms)
Completed 200 OK in 832ms (Views: 807.1ms | ActiveRecord: 6.5ms)


Started GET "/api/v1/questions/2" for ::1 at 2016-06-16 19:04:01 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"2"}
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (1.1ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 2]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (776.97ms)
Completed 200 OK in 805ms (Views: 784.0ms | ActiveRecord: 1.8ms)


Started GET "/api/v1/random" for ::1 at 2016-06-16 19:04:03 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.7ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 2]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (698.96ms)
Completed 200 OK in 725ms (Views: 706.5ms | ActiveRecord: 1.3ms)


Started GET "/api/v1/questions/2" for ::1 at 2016-06-16 19:07:39 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"2"}
  [1m[36mQuestion Load (1.1ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (1.0ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 2]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (756.85ms)
Completed 200 OK in 789ms (Views: 766.2ms | ActiveRecord: 2.1ms)


Started GET "/api/v1/random" for ::1 at 2016-06-16 19:07:41 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.8ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 2]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (727.11ms)
Completed 200 OK in 756ms (Views: 737.7ms | ActiveRecord: 1.6ms)


Started GET "/api/v1/questions/2" for ::1 at 2016-06-16 19:07:55 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"2"}
  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (1.0ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 2]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (818.17ms)
Completed 200 OK in 851ms (Views: 831.5ms | ActiveRecord: 1.7ms)


Started GET "/api/v1/random" for ::1 at 2016-06-16 19:07:57 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (1.0ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 2]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (712.0ms)
Completed 200 OK in 741ms (Views: 723.2ms | ActiveRecord: 1.6ms)


Started GET "/api/v1/questions/2" for ::1 at 2016-06-16 19:08:23 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"2"}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.6ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 2]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (992.05ms)
Completed 200 OK in 1198ms (Views: 1025.2ms | ActiveRecord: 15.1ms)


Started GET "/api/v1/random" for ::1 at 2016-06-16 19:08:26 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.8ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 11]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (81.47ms)
Completed 200 OK in 217ms (Views: 91.0ms | ActiveRecord: 1.6ms)


Started GET "/api/v1/random" for ::1 at 2016-06-16 19:08:27 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.7ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 23]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (83.37ms)
Completed 200 OK in 134ms (Views: 90.6ms | ActiveRecord: 1.5ms)


Started GET "/api/v1/random" for ::1 at 2016-06-16 19:08:28 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (4.7ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.8ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 15]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (83.64ms)
Completed 200 OK in 149ms (Views: 97.6ms | ActiveRecord: 5.5ms)


Started GET "/api/v1/random" for ::1 at 2016-06-16 19:08:29 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.7ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 8]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (88.03ms)
Completed 200 OK in 141ms (Views: 95.4ms | ActiveRecord: 1.5ms)


Started GET "/api/v1/random" for ::1 at 2016-06-16 19:08:30 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.6ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 2]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (727.76ms)
Completed 200 OK in 791ms (Views: 741.0ms | ActiveRecord: 1.5ms)


Started GET "/api/v1/random" for ::1 at 2016-06-16 19:08:32 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.7ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 2]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (750.56ms)
Completed 200 OK in 815ms (Views: 758.4ms | ActiveRecord: 1.4ms)


Started GET "/api/v1/random" for ::1 at 2016-06-16 19:08:36 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.6ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 30]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (87.5ms)
Completed 200 OK in 144ms (Views: 96.6ms | ActiveRecord: 1.4ms)


Started GET "/api/v1/random" for ::1 at 2016-06-16 19:08:37 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.8ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 20]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (91.15ms)
Completed 200 OK in 152ms (Views: 98.5ms | ActiveRecord: 1.5ms)


Started GET "/api/v1/random" for ::1 at 2016-06-16 19:08:38 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.8ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 15]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (93.21ms)
Completed 200 OK in 163ms (Views: 103.2ms | ActiveRecord: 1.6ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-16 19:09:10 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"hello"}, "relationships"=>{"question"=>{"data"=>{"type"=>"questions", "id"=>"2"}}}, "type"=>"answers"}, "answer"=>{}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
  [1m[35m (0.6ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (1.3ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "hello"], ["question_id", 2], ["created_at", 2016-06-16 23:09:11 UTC], ["updated_at", 2016-06-16 23:09:11 UTC]]
  [1m[35m (84.4ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 241ms (ActiveRecord: 87.1ms)


Started GET "/api/v1/questions/2" for ::1 at 2016-06-16 19:09:30 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"2"}
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.8ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 2]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (919.8ms)
Completed 200 OK in 949ms (Views: 927.7ms | ActiveRecord: 1.5ms)


Started GET "/api/v1/questions/2" for ::1 at 2016-06-16 19:10:21 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"2"}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.7ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 2]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (848.6ms)
Completed 200 OK in 888ms (Views: 867.4ms | ActiveRecord: 1.5ms)


Started GET "/api/v1/random" for ::1 at 2016-06-16 19:10:59 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.9ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.7ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 28]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (90.55ms)
Completed 200 OK in 151ms (Views: 98.1ms | ActiveRecord: 1.6ms)


Started GET "/api/v1/random" for ::1 at 2016-06-16 19:13:26 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (1.0ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.7ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 3]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (99.65ms)
Completed 200 OK in 166ms (Views: 112.4ms | ActiveRecord: 1.7ms)


Started GET "/api/v1/random" for ::1 at 2016-06-16 19:14:19 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (1.3ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.7ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 13]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (91.63ms)
Completed 200 OK in 162ms (Views: 108.4ms | ActiveRecord: 2.0ms)


Started GET "/api/v1/random" for ::1 at 2016-06-16 19:16:00 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (1.1ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.8ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 24]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (91.48ms)
Completed 200 OK in 157ms (Views: 103.6ms | ActiveRecord: 2.0ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-16 19:16:03 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"hello"}, "relationships"=>{"question"=>{"data"=>nil}}, "type"=>"answers"}, "answer"=>{}}
Completed 500 Internal Server Error in 15ms (ActiveRecord: 0.0ms)


  
NoMethodError (undefined method `[]' for nil:NilClass):
  
app/controllers/api/v1/answers_controller.rb:12:in `create'
Started GET "/api/v1/random" for ::1 at 2016-06-16 19:16:51 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.6ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 6]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (203.01ms)
Completed 200 OK in 344ms (Views: 236.7ms | ActiveRecord: 12.7ms)


Started GET "/api/v1/random" for ::1 at 2016-06-16 19:16:52 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (1.0ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 10]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (163.29ms)
Completed 200 OK in 236ms (Views: 176.8ms | ActiveRecord: 1.8ms)


Started GET "/api/v1/random" for ::1 at 2016-06-16 19:16:57 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.8ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 20]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (90.61ms)
Completed 200 OK in 152ms (Views: 97.9ms | ActiveRecord: 1.6ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-16 19:17:01 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"hello"}, "relationships"=>{"question"=>{"data"=>nil}}, "type"=>"answers"}, "answer"=>{}}
Completed 500 Internal Server Error in 87046ms (ActiveRecord: 0.0ms)


  
SystemExit (exit):
  
app/controllers/api/v1/answers_controller.rb:11:in `create'
Started GET "/api/v1/random" for ::1 at 2016-06-16 19:18:30 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (1.1ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.8ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 18]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (76.0ms)
Completed 200 OK in 140ms (Views: 84.8ms | ActiveRecord: 2.6ms)


Started GET "/api/v1/random" for ::1 at 2016-06-16 19:18:33 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.6ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 5]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (72.25ms)
Completed 200 OK in 120ms (Views: 78.9ms | ActiveRecord: 1.3ms)


Started GET "/api/v1/random" for ::1 at 2016-06-16 19:18:38 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (1.3ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.8ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 3]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (73.81ms)
Completed 200 OK in 128ms (Views: 85.4ms | ActiveRecord: 2.2ms)


Started GET "/api/v1/random" for ::1 at 2016-06-16 19:18:40 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (1.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 4]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (315.3ms)
Completed 200 OK in 367ms (Views: 324.7ms | ActiveRecord: 3.7ms)


Started GET "/api/v1/random" for ::1 at 2016-06-16 19:18:41 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.8ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 16]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (72.83ms)
Completed 200 OK in 125ms (Views: 79.6ms | ActiveRecord: 1.6ms)


Started GET "/api/v1/random" for ::1 at 2016-06-16 19:18:42 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.8ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 8]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (76.06ms)
Completed 200 OK in 128ms (Views: 83.0ms | ActiveRecord: 1.6ms)


Started GET "/api/v1/random" for ::1 at 2016-06-16 19:18:43 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.6ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 20]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (77.57ms)
Completed 200 OK in 127ms (Views: 84.3ms | ActiveRecord: 1.4ms)


Started GET "/api/v1/random" for ::1 at 2016-06-16 19:18:44 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.8ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 5]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (77.72ms)
Completed 200 OK in 131ms (Views: 88.2ms | ActiveRecord: 1.5ms)


Started GET "/api/v1/random" for ::1 at 2016-06-16 19:18:45 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (4.1ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.6ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 18]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (77.27ms)
Completed 200 OK in 132ms (Views: 84.3ms | ActiveRecord: 4.8ms)


Started GET "/api/v1/random" for ::1 at 2016-06-16 19:18:46 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.5ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 29]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (72.31ms)
Completed 200 OK in 120ms (Views: 79.0ms | ActiveRecord: 1.3ms)


Started GET "/api/v1/random" for ::1 at 2016-06-16 19:18:47 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.9ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.7ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 22]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (81.7ms)
Completed 200 OK in 138ms (Views: 89.5ms | ActiveRecord: 1.6ms)


Started GET "/api/v1/random" for ::1 at 2016-06-16 19:18:48 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.5ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 22]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (76.33ms)
Completed 200 OK in 124ms (Views: 83.3ms | ActiveRecord: 1.3ms)


Started GET "/api/v1/random" for ::1 at 2016-06-16 19:18:50 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.7ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 18]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (72.82ms)
Completed 200 OK in 125ms (Views: 83.3ms | ActiveRecord: 1.4ms)


Started GET "/api/v1/random" for ::1 at 2016-06-16 19:18:52 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.8ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 27]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (72.13ms)
Completed 200 OK in 125ms (Views: 82.4ms | ActiveRecord: 1.5ms)


Started GET "/api/v1/random" for ::1 at 2016-06-16 19:18:52 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.6ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 1]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (72.96ms)
Completed 200 OK in 126ms (Views: 79.7ms | ActiveRecord: 1.4ms)


Started GET "/api/v1/random" for ::1 at 2016-06-16 19:18:53 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.6ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 10]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (71.95ms)
Completed 200 OK in 124ms (Views: 81.8ms | ActiveRecord: 1.3ms)


Started GET "/api/v1/random" for ::1 at 2016-06-16 19:18:54 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.8ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 18]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (71.02ms)
Completed 200 OK in 127ms (Views: 79.8ms | ActiveRecord: 1.6ms)


Started GET "/api/v1/random" for ::1 at 2016-06-16 19:19:43 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (1.3ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (1.1ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 24]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (89.7ms)
Completed 200 OK in 141ms (Views: 97.4ms | ActiveRecord: 2.4ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-16 19:23:23 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"hello"}, "relationships"=>{"question"=>{"data"=>nil}}, "type"=>"answers"}, "answer"=>{}}
Completed 500 Internal Server Error in 89ms (ActiveRecord: 0.0ms)


  
SystemExit (exit):
  
app/controllers/api/v1/answers_controller.rb:11:in `create'
Started GET "/api/v1/random" for ::1 at 2016-06-16 19:23:25 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.9ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.6ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 1]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (77.44ms)
Completed 200 OK in 127ms (Views: 84.1ms | ActiveRecord: 1.6ms)


Started GET "/api/v1/random" for ::1 at 2016-06-16 19:24:12 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.9ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.8ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 12]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (81.3ms)
Completed 200 OK in 133ms (Views: 88.5ms | ActiveRecord: 1.7ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-16 19:24:59 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"sassaf"}, "relationships"=>{"question"=>{"data"=>nil}}, "type"=>"answers"}, "answer"=>{}}
Started GET "/api/v1/random" for ::1 at 2016-06-16 19:26:30 -0400
Completed 500 Internal Server Error in 90795ms (ActiveRecord: 0.0ms)


  
SystemExit (exit):
  
app/controllers/api/v1/answers_controller.rb:11:in `create'
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (181.6ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (12.3ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 11]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (89.06ms)
Completed 200 OK in 403ms (Views: 162.0ms | ActiveRecord: 193.9ms)


Started GET "/api/v1/random" for ::1 at 2016-06-16 19:26:31 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (306.2ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.9ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 9]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (423.46ms)
Completed 200 OK in 888ms (Views: 314.3ms | ActiveRecord: 428.8ms)


Started GET "/api/v1/random" for ::1 at 2016-06-16 19:27:05 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (1.0ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.7ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 9]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (86.71ms)
Completed 200 OK in 140ms (Views: 94.2ms | ActiveRecord: 1.8ms)


Started GET "/api/v1/random" for ::1 at 2016-06-16 19:30:21 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (1.6ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.8ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 30]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (102.18ms)
Completed 200 OK in 163ms (Views: 109.4ms | ActiveRecord: 2.4ms)


Started GET "/api/v1/random" for ::1 at 2016-06-16 19:30:59 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (1.2ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.8ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 30]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (81.62ms)
Completed 200 OK in 149ms (Views: 92.1ms | ActiveRecord: 1.9ms)


Started GET "/api/v1/random" for ::1 at 2016-06-16 19:31:22 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (1.2ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (1.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 5]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (81.05ms)
Completed 200 OK in 137ms (Views: 90.7ms | ActiveRecord: 2.4ms)


Started GET "/api/v1/random" for ::1 at 2016-06-16 19:32:43 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.9ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.8ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 23]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (83.11ms)
Completed 200 OK in 148ms (Views: 95.2ms | ActiveRecord: 1.6ms)


Started GET "/api/v1/random" for ::1 at 2016-06-16 19:35:05 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.9ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.8ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 12]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (81.26ms)
Completed 200 OK in 144ms (Views: 97.0ms | ActiveRecord: 1.7ms)


Started GET "/api/v1/random" for ::1 at 2016-06-16 19:36:07 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (1.1ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.5ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 30]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (77.01ms)
Completed 200 OK in 130ms (Views: 84.5ms | ActiveRecord: 1.6ms)


Started GET "/api/v1/random" for ::1 at 2016-06-16 19:36:44 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.9ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.7ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 6]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (80.92ms)
Completed 200 OK in 134ms (Views: 88.1ms | ActiveRecord: 1.7ms)


Started GET "/api/v1/random" for ::1 at 2016-06-16 19:37:07 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.9ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.7ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 14]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (77.59ms)
Completed 200 OK in 151ms (Views: 84.9ms | ActiveRecord: 1.6ms)


Started GET "/api/v1/random" for ::1 at 2016-06-16 19:38:07 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (1.2ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.7ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 17]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (100.8ms)
Completed 200 OK in 159ms (Views: 110.7ms | ActiveRecord: 1.9ms)


Started GET "/api/v1/random" for ::1 at 2016-06-16 19:40:23 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (1.1ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.7ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 7]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (80.93ms)
Completed 200 OK in 135ms (Views: 88.9ms | ActiveRecord: 1.8ms)


Started GET "/api/v1/random" for ::1 at 2016-06-16 19:40:30 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (1.0ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.9ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 14]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (85.49ms)
Completed 200 OK in 138ms (Views: 92.2ms | ActiveRecord: 1.9ms)


Started GET "/api/v1/random" for ::1 at 2016-06-16 19:40:31 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.9ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (1.0ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 15]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (80.45ms)
Completed 200 OK in 133ms (Views: 89.1ms | ActiveRecord: 1.9ms)


Started GET "/api/v1/random" for ::1 at 2016-06-16 19:40:37 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.6ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 1]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (78.66ms)
Completed 200 OK in 131ms (Views: 86.1ms | ActiveRecord: 1.3ms)


  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."content" = $1 LIMIT $2[0m  [["content", "What are you looking for in terms of career development?"], ["LIMIT", 1]]
  [1m[36mQuestion Load (0.5ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."content" = $1 LIMIT $2[0m  [["content", "What are you looking for in terms of career development?"], ["LIMIT", 1]]
  [1m[36mAnswer Load (0.3ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 1]]
Started GET "/api/v1/random" for ::1 at 2016-06-16 19:45:07 -0400
  [1m[36mActiveRecord::SchemaMigration Load (23.9ms)[0m  [1m[34mSELECT "schema_migrations".* FROM "schema_migrations"[0m
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.5ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 13]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (57.69ms)
Completed 200 OK in 150ms (Views: 141.6ms | ActiveRecord: 5.9ms)


Started GET "/api/v1/random" for ::1 at 2016-06-16 19:47:30 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.5ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.3ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 20]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (5.53ms)
Completed 200 OK in 10ms (Views: 6.1ms | ActiveRecord: 0.8ms)


Started GET "/api/v1/random" for ::1 at 2016-06-16 19:48:18 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.4ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 18]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (3.49ms)
Completed 200 OK in 7ms (Views: 3.9ms | ActiveRecord: 1.1ms)


Started GET "/api/v1/random" for ::1 at 2016-06-16 19:49:14 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.4ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 26]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (4.64ms)
Completed 200 OK in 8ms (Views: 4.9ms | ActiveRecord: 1.0ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-16 19:49:16 -0400
Processing by Api::V1::AnswersController#create as HTML
  Parameters: {"content"=>"asdgagsdgs", "question_id"=>2, "answer"=>{"content"=>"asdgagsdgs", "question_id"=>2}}
Completed 500 Internal Server Error in 58182ms (ActiveRecord: 0.0ms)


  
SystemExit (exit):
  
app/controllers/api/v1/answers_controller.rb:11:in `create'
Started GET "/api/v1/random" for ::1 at 2016-06-16 19:50:16 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (1.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 1]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (139.91ms)
Completed 200 OK in 242ms (Views: 173.8ms | ActiveRecord: 1.9ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-16 19:50:22 -0400
Processing by Api::V1::AnswersController#create as HTML
  Parameters: {"content"=>"spock", "question_id"=>2, "answer"=>{"content"=>"spock", "question_id"=>2}}
Completed 500 Internal Server Error in 6457ms (ActiveRecord: 1.7ms)


  
SystemExit (exit):
  
app/controllers/api/v1/answers_controller.rb:11:in `create'
Started GET "/api/v1/random" for ::1 at 2016-06-16 19:50:45 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (1.6ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.7ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 3]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (182.28ms)
Completed 200 OK in 326ms (Views: 242.8ms | ActiveRecord: 10.2ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-16 19:50:52 -0400
Processing by Api::V1::AnswersController#create as HTML
  Parameters: {"content"=>"asdgadsgadsgadsgadsgadsgadsgadsgadsgadsgadsg", "question_id"=>2, "answer"=>{"content"=>"asdgadsgadsgadsgadsgadsgadsgadsgadsgadsgadsg", "question_id"=>2}}
  [1m[36mQuestion Load (1.3ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
  [1m[35m (0.6ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (1.5ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "asdgadsgadsgadsgadsgadsgadsgadsgadsgadsgadsg"], ["question_id", 2], ["created_at", 2016-06-16 23:50:52 UTC], ["updated_at", 2016-06-16 23:50:52 UTC]]
  [1m[35m (48.0ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 338ms (ActiveRecord: 57.0ms)


  [1m[36mQuestion Load (0.9ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."content" = $1 LIMIT $2[0m  [["content", "What are your strengths and weaknesses?"], ["LIMIT", 1]]
  [1m[36mAnswer Load (0.3ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 3]]
  [1m[36mAnswer Load (0.9ms)[0m  [1m[34mSELECT "answers".* FROM "answers"[0m
  [1m[36mAnswer Load (0.4ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" ORDER BY "answers"."id" DESC LIMIT $1[0m  [["LIMIT", 1]]
Started GET "/api/v1/random" for ::1 at 2016-06-16 19:52:27 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.8ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 14]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (164.67ms)
Completed 200 OK in 295ms (Views: 198.8ms | ActiveRecord: 17.0ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-16 19:53:16 -0400
Processing by Api::V1::AnswersController#create as HTML
  Parameters: {"content"=>"qqqqqq", "question_id"=>2, "answer"=>{"content"=>"qqqqqq", "question_id"=>2}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
  [1m[35m (0.6ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (4.9ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "qqqqqq"], ["question_id", 2], ["created_at", 2016-06-16 23:53:16 UTC], ["updated_at", 2016-06-16 23:53:16 UTC]]
  [1m[35m (133.8ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 343ms (ActiveRecord: 140.1ms)


Started GET "/api/v1/random" for ::1 at 2016-06-16 19:53:20 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.6ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 14]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (70.66ms)
Completed 200 OK in 133ms (Views: 84.9ms | ActiveRecord: 1.4ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-16 19:53:22 -0400
Processing by Api::V1::AnswersController#create as HTML
  Parameters: {"content"=>"asdgadsgadsgadsg", "question_id"=>"14", "answer"=>{"content"=>"asdgadsgadsgadsg", "question_id"=>"14"}}
  [1m[36mQuestion Load (4.3ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 14], ["LIMIT", 1]]
  [1m[35m (0.6ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.7ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "asdgadsgadsgadsg"], ["question_id", 14], ["created_at", 2016-06-16 23:53:23 UTC], ["updated_at", 2016-06-16 23:53:23 UTC]]
  [1m[35m (1.3ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 192ms (ActiveRecord: 7.0ms)


  [1m[36mQuestion Load (1.7ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."content" = $1 LIMIT $2[0m  [["content", "Why do you want to work with us?"], ["LIMIT", 1]]
  [1m[36mAnswer Load (0.5ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 14]]
Started GET "/api/v1/random" for ::1 at 2016-06-16 20:00:19 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (1.0ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.8ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 2]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (1049.76ms)
Completed 200 OK in 1106ms (Views: 1057.1ms | ActiveRecord: 1.9ms)


Started GET "/api/v1/random" for ::1 at 2016-06-16 20:02:23 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (1.2ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.8ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 15]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (81.75ms)
Completed 200 OK in 135ms (Views: 89.9ms | ActiveRecord: 2.0ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-16 20:02:25 -0400
Processing by Api::V1::AnswersController#create as HTML
  Parameters: {"content"=>"afadfdsa", "question_id"=>"15", "answer"=>{"content"=>"afadfdsa", "question_id"=>"15"}}
  [1m[36mQuestion Load (4.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 15], ["LIMIT", 1]]
  [1m[35m (0.9ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (79.9ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "afadfdsa"], ["question_id", 15], ["created_at", 2016-06-17 00:02:25 UTC], ["updated_at", 2016-06-17 00:02:25 UTC]]
  [1m[35m (45.7ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 262ms (ActiveRecord: 130.9ms)


Started GET "/api/v1/random" for ::1 at 2016-06-16 20:02:58 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.7ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 6]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (91.49ms)
Completed 200 OK in 146ms (Views: 98.5ms | ActiveRecord: 1.4ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-16 20:03:00 -0400
Processing by Api::V1::AnswersController#create as HTML
  Parameters: {"content"=>"asdgsdgdsg", "question_id"=>"6", "answer"=>{"content"=>"asdgsdgdsg", "question_id"=>"6"}}
  [1m[36mQuestion Load (1.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 6], ["LIMIT", 1]]
  [1m[35m (0.5ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (1.0ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "asdgsdgdsg"], ["question_id", 6], ["created_at", 2016-06-17 00:03:00 UTC], ["updated_at", 2016-06-17 00:03:00 UTC]]
  [1m[35m (5.1ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 142ms (ActiveRecord: 7.9ms)


Started GET "/api/v1/random" for ::1 at 2016-06-16 20:04:09 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (1.0ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.9ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 28]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (87.88ms)
Completed 200 OK in 152ms (Views: 103.8ms | ActiveRecord: 1.9ms)


Started GET "/api/v1/random" for ::1 at 2016-06-16 20:04:49 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (1.0ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (4.5ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 11]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (80.57ms)
Completed 200 OK in 135ms (Views: 84.1ms | ActiveRecord: 5.5ms)


Started GET "/api/v1/random" for ::1 at 2016-06-16 20:06:48 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.9ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.7ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 29]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (73.73ms)
Completed 200 OK in 140ms (Views: 87.8ms | ActiveRecord: 1.6ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-16 20:06:53 -0400
Processing by Api::V1::AnswersController#create as HTML
  Parameters: {"content"=>"hello", "question_id"=>"29", "answer"=>{"content"=>"hello", "question_id"=>"29"}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 29], ["LIMIT", 1]]
  [1m[35m (0.6ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (1.2ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "hello"], ["question_id", 29], ["created_at", 2016-06-17 00:06:53 UTC], ["updated_at", 2016-06-17 00:06:53 UTC]]
  [1m[35m (16.9ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 139ms (ActiveRecord: 19.5ms)


Started GET "/api/v1/random" for ::1 at 2016-06-16 23:13:59 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (1.6ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (4.6ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 11]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (80.37ms)
Completed 200 OK in 133ms (Views: 83.9ms | ActiveRecord: 6.2ms)


Started GET "/api/v1/random" for ::1 at 2016-06-16 23:14:00 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (1.1ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.7ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 19]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (88.63ms)
Completed 200 OK in 150ms (Views: 97.9ms | ActiveRecord: 1.9ms)


Started GET "/api/v1/random" for ::1 at 2016-06-16 23:14:00 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.9ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (1.5ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 22]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (86.37ms)
Completed 200 OK in 152ms (Views: 104.1ms | ActiveRecord: 2.4ms)


Started GET "/api/v1/random" for ::1 at 2016-06-16 23:14:01 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (1.0ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.6ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 11]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (79.69ms)
Completed 200 OK in 142ms (Views: 95.8ms | ActiveRecord: 1.7ms)


Started GET "/api/v1/random" for ::1 at 2016-06-16 23:14:02 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.9ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.7ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 9]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (84.92ms)
Completed 200 OK in 142ms (Views: 93.0ms | ActiveRecord: 1.6ms)


Started GET "/api/v1/random" for ::1 at 2016-06-16 23:14:02 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.9ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.6ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 17]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (78.04ms)
Completed 200 OK in 141ms (Views: 86.1ms | ActiveRecord: 1.5ms)


Started GET "/api/v1/random" for ::1 at 2016-06-16 23:14:03 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (1.1ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 2]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (834.03ms)
Completed 200 OK in 884ms (Views: 840.7ms | ActiveRecord: 1.9ms)


Started GET "/api/v1/random" for ::1 at 2016-06-16 23:14:05 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.6ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 12]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (81.65ms)
Completed 200 OK in 133ms (Views: 89.4ms | ActiveRecord: 1.3ms)


Started GET "/api/v1/random" for ::1 at 2016-06-16 23:14:05 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (1.1ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.7ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 10]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (82.23ms)
Completed 200 OK in 137ms (Views: 89.2ms | ActiveRecord: 1.8ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 09:18:16 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.9ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.6ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 19]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (79.73ms)
Completed 200 OK in 133ms (Views: 90.6ms | ActiveRecord: 1.5ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 09:18:17 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (1.1ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 10]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (81.79ms)
Completed 200 OK in 135ms (Views: 88.0ms | ActiveRecord: 1.9ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 09:18:18 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.6ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 21]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (83.38ms)
Completed 200 OK in 145ms (Views: 94.1ms | ActiveRecord: 1.3ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 09:18:18 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.6ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 22]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (80.02ms)
Completed 200 OK in 137ms (Views: 92.3ms | ActiveRecord: 1.4ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 09:18:19 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (5.5ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.7ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 14]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (115.18ms)
Completed 200 OK in 176ms (Views: 126.7ms | ActiveRecord: 6.2ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 09:18:20 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (1.1ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.8ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 28]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (82.13ms)
Completed 200 OK in 144ms (Views: 92.8ms | ActiveRecord: 1.9ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 09:18:21 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.6ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 16]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (85.86ms)
Completed 200 OK in 139ms (Views: 92.8ms | ActiveRecord: 1.3ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 09:18:21 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.6ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 5]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (75.69ms)
Completed 200 OK in 139ms (Views: 87.8ms | ActiveRecord: 1.4ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 09:18:22 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (4.6ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 28]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (76.66ms)
Completed 200 OK in 131ms (Views: 79.8ms | ActiveRecord: 5.3ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 09:18:23 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.6ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 20]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (90.11ms)
Completed 200 OK in 153ms (Views: 104.5ms | ActiveRecord: 1.4ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 09:18:24 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (1.4ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.7ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 16]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (80.68ms)
Completed 200 OK in 141ms (Views: 91.7ms | ActiveRecord: 2.1ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 09:18:25 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.9ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.6ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 16]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (75.58ms)
Completed 200 OK in 134ms (Views: 86.7ms | ActiveRecord: 1.5ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 09:18:26 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.6ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 28]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (78.87ms)
Completed 200 OK in 139ms (Views: 85.8ms | ActiveRecord: 1.4ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 09:18:27 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (1.3ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.7ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 22]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (90.04ms)
Completed 200 OK in 147ms (Views: 99.1ms | ActiveRecord: 2.0ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 09:18:28 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.9ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.6ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 26]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (78.3ms)
Completed 200 OK in 138ms (Views: 85.5ms | ActiveRecord: 1.5ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 09:18:30 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.6ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 16]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (79.12ms)
Completed 200 OK in 132ms (Views: 89.9ms | ActiveRecord: 1.5ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 09:19:18 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.7ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 14]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (119.21ms)
Completed 200 OK in 177ms (Views: 126.7ms | ActiveRecord: 1.4ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 09:19:31 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (1.1ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (4.4ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 11]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (90.85ms)
Completed 200 OK in 151ms (Views: 96.1ms | ActiveRecord: 5.5ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-17 09:19:36 -0400
Processing by Api::V1::AnswersController#create as HTML
  Parameters: {"content"=>"sadfsadg", "question_id"=>"11", "answer"=>{"content"=>"sadfsadg", "question_id"=>"11"}}
  [1m[36mQuestion Load (38.7ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 11], ["LIMIT", 1]]
  [1m[35m (25.7ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (118.4ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "sadfsadg"], ["question_id", 11], ["created_at", 2016-06-17 13:19:36 UTC], ["updated_at", 2016-06-17 13:19:36 UTC]]
  [1m[35m (26.9ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 349ms (ActiveRecord: 209.7ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 09:19:38 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (5.3ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 7]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (81.74ms)
Completed 200 OK in 143ms (Views: 89.3ms | ActiveRecord: 6.2ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-17 09:19:45 -0400
Processing by Api::V1::AnswersController#create as HTML
  Parameters: {"content"=>"asgdfsagd", "question_id"=>"7", "answer"=>{"content"=>"asgdfsagd", "question_id"=>"7"}}
  [1m[36mQuestion Load (4.7ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 7], ["LIMIT", 1]]
  [1m[35m (0.7ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (1.2ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "asgdfsagd"], ["question_id", 7], ["created_at", 2016-06-17 13:19:45 UTC], ["updated_at", 2016-06-17 13:19:45 UTC]]
  [1m[35m (1.3ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 128ms (ActiveRecord: 7.9ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 09:19:46 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.7ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 18]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (81.13ms)
Completed 200 OK in 143ms (Views: 94.9ms | ActiveRecord: 1.6ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-17 09:19:49 -0400
Processing by Api::V1::AnswersController#create as HTML
  Parameters: {"content"=>"asasaa", "question_id"=>"18", "answer"=>{"content"=>"asasaa", "question_id"=>"18"}}
  [1m[36mQuestion Load (181.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 18], ["LIMIT", 1]]
  [1m[35m (0.6ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.8ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "asasaa"], ["question_id", 18], ["created_at", 2016-06-17 13:19:50 UTC], ["updated_at", 2016-06-17 13:19:50 UTC]]
  [1m[35m (543.0ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 868ms (ActiveRecord: 725.5ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 09:19:50 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.7ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 7]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (114.72ms)
Completed 200 OK in 180ms (Views: 130.3ms | ActiveRecord: 1.5ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-17 09:19:52 -0400
Processing by Api::V1::AnswersController#create as HTML
  Parameters: {"content"=>"asdfdsaf", "question_id"=>"7", "answer"=>{"content"=>"asdfdsaf", "question_id"=>"7"}}
  [1m[36mQuestion Load (0.9ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 7], ["LIMIT", 1]]
  [1m[35m (0.6ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.9ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "asdfdsaf"], ["question_id", 7], ["created_at", 2016-06-17 13:19:53 UTC], ["updated_at", 2016-06-17 13:19:53 UTC]]
  [1m[35m (20.9ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 149ms (ActiveRecord: 23.3ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 09:19:53 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.6ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 17]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (84.88ms)
Completed 200 OK in 151ms (Views: 98.9ms | ActiveRecord: 1.4ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 09:19:53 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.7ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 14]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (117.01ms)
Completed 200 OK in 175ms (Views: 124.1ms | ActiveRecord: 1.4ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-17 09:19:56 -0400
Processing by Api::V1::AnswersController#create as HTML
  Parameters: {"content"=>"eeee", "question_id"=>"14", "answer"=>{"content"=>"eeee", "question_id"=>"14"}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 14], ["LIMIT", 1]]
  [1m[35m (0.6ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (1.4ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "eeee"], ["question_id", 14], ["created_at", 2016-06-17 13:19:56 UTC], ["updated_at", 2016-06-17 13:19:56 UTC]]
  [1m[35m (16.5ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 145ms (ActiveRecord: 19.3ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 09:19:57 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (1.2ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.8ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 25]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (92.83ms)
Completed 200 OK in 155ms (Views: 104.3ms | ActiveRecord: 1.9ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-17 09:19:59 -0400
Processing by Api::V1::AnswersController#create as HTML
  Parameters: {"content"=>"eeee", "question_id"=>"25", "answer"=>{"content"=>"eeee", "question_id"=>"25"}}
  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 25], ["LIMIT", 1]]
  [1m[35m (0.6ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.7ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "eeee"], ["question_id", 25], ["created_at", 2016-06-17 13:19:59 UTC], ["updated_at", 2016-06-17 13:19:59 UTC]]
  [1m[35m (1.5ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 133ms (ActiveRecord: 3.5ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 09:19:59 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (1.0ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.6ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 20]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (89.96ms)
Completed 200 OK in 150ms (Views: 100.0ms | ActiveRecord: 1.6ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-17 09:20:02 -0400
Processing by Api::V1::AnswersController#create as HTML
  Parameters: {"content"=>"eeee", "question_id"=>"20", "answer"=>{"content"=>"eeee", "question_id"=>"20"}}
  [1m[36mQuestion Load (0.9ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 20], ["LIMIT", 1]]
  [1m[35m (0.6ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.9ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "eeee"], ["question_id", 20], ["created_at", 2016-06-17 13:20:02 UTC], ["updated_at", 2016-06-17 13:20:02 UTC]]
  [1m[35m (1.5ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 145ms (ActiveRecord: 3.8ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 09:20:02 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (4.9ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.8ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 26]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (83.1ms)
Completed 200 OK in 143ms (Views: 90.5ms | ActiveRecord: 5.7ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-17 09:20:04 -0400
Processing by Api::V1::AnswersController#create as HTML
  Parameters: {"content"=>"eeee", "question_id"=>"26", "answer"=>{"content"=>"eeee", "question_id"=>"26"}}
  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 26], ["LIMIT", 1]]
  [1m[35m (0.7ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.7ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "eeee"], ["question_id", 26], ["created_at", 2016-06-17 13:20:04 UTC], ["updated_at", 2016-06-17 13:20:04 UTC]]
  [1m[35m (17.6ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 149ms (ActiveRecord: 19.7ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 09:20:05 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.7ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 20]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (130.59ms)
Completed 200 OK in 184ms (Views: 138.1ms | ActiveRecord: 1.5ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-17 09:20:07 -0400
Processing by Api::V1::AnswersController#create as HTML
  Parameters: {"content"=>"eeeee", "question_id"=>"20", "answer"=>{"content"=>"eeeee", "question_id"=>"20"}}
  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 20], ["LIMIT", 1]]
  [1m[35m (0.8ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (4.9ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "eeeee"], ["question_id", 20], ["created_at", 2016-06-17 13:20:07 UTC], ["updated_at", 2016-06-17 13:20:07 UTC]]
  [1m[35m (1.6ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 136ms (ActiveRecord: 8.0ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 09:20:08 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.7ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 11]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (109.18ms)
Completed 200 OK in 172ms (Views: 122.4ms | ActiveRecord: 1.5ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-17 09:20:10 -0400
Processing by Api::V1::AnswersController#create as HTML
  Parameters: {"content"=>"eeeee", "question_id"=>"11", "answer"=>{"content"=>"eeeee", "question_id"=>"11"}}
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 11], ["LIMIT", 1]]
  [1m[35m (0.5ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.8ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "eeeee"], ["question_id", 11], ["created_at", 2016-06-17 13:20:10 UTC], ["updated_at", 2016-06-17 13:20:10 UTC]]
  [1m[35m (203.1ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 328ms (ActiveRecord: 205.1ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 09:20:11 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.7ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 23]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (83.5ms)
Completed 200 OK in 147ms (Views: 99.2ms | ActiveRecord: 1.5ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-17 09:20:13 -0400
Processing by Api::V1::AnswersController#create as HTML
  Parameters: {"content"=>"eeeee", "question_id"=>"23", "answer"=>{"content"=>"eeeee", "question_id"=>"23"}}
  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 23], ["LIMIT", 1]]
  [1m[35m (0.7ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.8ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "eeeee"], ["question_id", 23], ["created_at", 2016-06-17 13:20:13 UTC], ["updated_at", 2016-06-17 13:20:13 UTC]]
  [1m[35m (23.0ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 159ms (ActiveRecord: 25.1ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 09:20:14 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.9ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 4]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (167.02ms)
Completed 200 OK in 227ms (Views: 173.6ms | ActiveRecord: 1.7ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-17 09:20:17 -0400
Processing by Api::V1::AnswersController#create as HTML
  Parameters: {"content"=>"eewwww", "question_id"=>"4", "answer"=>{"content"=>"eewwww", "question_id"=>"4"}}
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 4], ["LIMIT", 1]]
  [1m[35m (0.6ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.8ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "eewwww"], ["question_id", 4], ["created_at", 2016-06-17 13:20:17 UTC], ["updated_at", 2016-06-17 13:20:17 UTC]]
  [1m[35m (2.9ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 131ms (ActiveRecord: 4.8ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 09:23:00 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (1.1ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.6ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 10]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (75.81ms)
Completed 200 OK in 139ms (Views: 86.5ms | ActiveRecord: 1.7ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-17 09:23:01 -0400
Processing by Api::V1::AnswersController#create as HTML
  Parameters: {"content"=>"aaaa", "question_id"=>"10", "answer"=>{"content"=>"aaaa", "question_id"=>"10"}}
  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 10], ["LIMIT", 1]]
  [1m[35m (0.5ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.8ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "aaaa"], ["question_id", 10], ["created_at", 2016-06-17 13:23:01 UTC], ["updated_at", 2016-06-17 13:23:01 UTC]]
  [1m[35m (3.0ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 132ms (ActiveRecord: 5.0ms)


  [1m[36mAnswer Load (0.8ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" ORDER BY "answers"."id" DESC LIMIT $1[0m  [["LIMIT", 1]]
Started GET "/api/v1/random" for ::1 at 2016-06-17 09:25:25 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (1.3ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 30]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (97.57ms)
Completed 200 OK in 153ms (Views: 106.2ms | ActiveRecord: 2.1ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-17 09:25:26 -0400
Processing by Api::V1::AnswersController#create as HTML
  Parameters: {"content"=>"kkkkk", "question_id"=>"30", "answer"=>{"content"=>"kkkkk", "question_id"=>"30"}}
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 30], ["LIMIT", 1]]
  [1m[35m (1.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.8ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "kkkkk"], ["question_id", 30], ["created_at", 2016-06-17 13:25:26 UTC], ["updated_at", 2016-06-17 13:25:26 UTC]]
  [1m[35m (32.6ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 166ms (ActiveRecord: 35.1ms)


  [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" ORDER BY "answers"."id" DESC LIMIT $1[0m  [["LIMIT", 1]]
Started GET "/api/v1/random" for ::1 at 2016-06-17 09:31:31 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.7ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 27]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (84.4ms)
Completed 200 OK in 139ms (Views: 91.3ms | ActiveRecord: 1.4ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-17 09:31:33 -0400
Processing by Api::V1::AnswersController#create as HTML
  Parameters: {"content"=>"asdasd", "question_id"=>"27", "answer"=>{"content"=>"asdasd", "question_id"=>"27"}}
  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 27], ["LIMIT", 1]]
  [1m[35m (0.6ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.9ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "asdasd"], ["question_id", 27], ["created_at", 2016-06-17 13:31:33 UTC], ["updated_at", 2016-06-17 13:31:33 UTC]]
  [1m[35m (1.6ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 142ms (ActiveRecord: 3.8ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 09:31:53 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (2.4ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (1.9ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 12]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (249.95ms)
Completed 200 OK in 440ms (Views: 296.8ms | ActiveRecord: 4.3ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-17 09:31:56 -0400
Processing by Api::V1::AnswersController#create as HTML
  Parameters: {"content"=>"aasaaa", "question_id"=>"12", "answer"=>{"content"=>"aasaaa", "question_id"=>"12"}}
  [1m[36mQuestion Load (2.1ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 12], ["LIMIT", 1]]
  [1m[35m (1.8ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (2.3ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "aasaaa"], ["question_id", 12], ["created_at", 2016-06-17 13:31:56 UTC], ["updated_at", 2016-06-17 13:31:56 UTC]]
  [1m[35m (4.1ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 399ms (ActiveRecord: 10.3ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 09:31:58 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (2.4ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (2.0ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 17]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (263.65ms)
Completed 200 OK in 445ms (Views: 301.8ms | ActiveRecord: 4.4ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-17 09:32:00 -0400
Processing by Api::V1::AnswersController#create as HTML
  Parameters: {"content"=>"ddddd", "question_id"=>"17", "answer"=>{"content"=>"ddddd", "question_id"=>"17"}}
  [1m[36mQuestion Load (2.0ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 17], ["LIMIT", 1]]
  [1m[35m (2.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (2.4ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "ddddd"], ["question_id", 17], ["created_at", 2016-06-17 13:32:00 UTC], ["updated_at", 2016-06-17 13:32:00 UTC]]
  [1m[35m (4.4ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 411ms (ActiveRecord: 11.0ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 09:32:01 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (2.4ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (12.0ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 6]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (387.38ms)
Completed 200 OK in 574ms (Views: 403.8ms | ActiveRecord: 14.4ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-17 09:32:04 -0400
Processing by Api::V1::AnswersController#create as HTML
  Parameters: {"content"=>"sssss", "question_id"=>"6", "answer"=>{"content"=>"sssss", "question_id"=>"6"}}
  [1m[36mQuestion Load (1.9ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 6], ["LIMIT", 1]]
  [1m[35m (2.4ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (2.4ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "sssss"], ["question_id", 6], ["created_at", 2016-06-17 13:32:04 UTC], ["updated_at", 2016-06-17 13:32:04 UTC]]
  [1m[35m (4.2ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 423ms (ActiveRecord: 10.9ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 09:32:05 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (2.4ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (2.0ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 14]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (500.7ms)
Completed 200 OK in 681ms (Views: 527.1ms | ActiveRecord: 4.4ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 09:32:52 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (2.4ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (2.8ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 10]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (441.66ms)
Completed 200 OK in 631ms (Views: 466.5ms | ActiveRecord: 5.2ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-17 09:32:58 -0400
Processing by Api::V1::AnswersController#create as HTML
  Parameters: {"content"=>"aaaa", "question_id"=>"10", "answer"=>{"content"=>"aaaa", "question_id"=>"10"}}
  [1m[36mQuestion Load (2.0ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 10], ["LIMIT", 1]]
  [1m[35m (1.8ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (13.7ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "aaaa"], ["question_id", 10], ["created_at", 2016-06-17 13:32:58 UTC], ["updated_at", 2016-06-17 13:32:58 UTC]]
  [1m[35m (4.6ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 427ms (ActiveRecord: 22.1ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 09:34:45 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.6ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 6]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (162.94ms)
Completed 200 OK in 221ms (Views: 170.2ms | ActiveRecord: 1.5ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-17 09:38:55 -0400
Processing by Api::V1::AnswersController#create as HTML
  Parameters: {"content"=>"dsdsd", "question_id"=>"6", "answer"=>{"content"=>"dsdsd", "question_id"=>"6"}}
  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 6], ["LIMIT", 1]]
  [1m[35m (0.9ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.9ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "dsdsd"], ["question_id", 6], ["created_at", 2016-06-17 13:38:55 UTC], ["updated_at", 2016-06-17 13:38:55 UTC]]
  [1m[35m (43.2ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 201ms (ActiveRecord: 45.6ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 09:38:57 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.9ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.7ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 24]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (80.43ms)
Completed 200 OK in 145ms (Views: 97.2ms | ActiveRecord: 1.5ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-17 09:39:03 -0400
Processing by Api::V1::AnswersController#create as HTML
  Parameters: {"content"=>"adad", "question_id"=>"24", "answer"=>{"content"=>"adad", "question_id"=>"24"}}
  [1m[36mQuestion Load (0.9ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 24], ["LIMIT", 1]]
  [1m[35m (0.8ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (1.1ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "adad"], ["question_id", 24], ["created_at", 2016-06-17 13:39:04 UTC], ["updated_at", 2016-06-17 13:39:04 UTC]]
  [1m[35m (1.6ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 124ms (ActiveRecord: 4.4ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 09:39:05 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.6ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 11]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (156.55ms)
Completed 200 OK in 226ms (Views: 170.1ms | ActiveRecord: 1.4ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 09:39:19 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.9ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.7ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 30]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (137.25ms)
Completed 200 OK in 204ms (Views: 148.3ms | ActiveRecord: 1.6ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-17 09:39:21 -0400
Processing by Api::V1::AnswersController#create as HTML
  Parameters: {"content"=>"afasf", "question_id"=>"30", "answer"=>{"content"=>"afasf", "question_id"=>"30"}}
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 30], ["LIMIT", 1]]
  [1m[35m (0.6ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.8ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "afasf"], ["question_id", 30], ["created_at", 2016-06-17 13:39:21 UTC], ["updated_at", 2016-06-17 13:39:21 UTC]]
  [1m[35m (2.9ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 134ms (ActiveRecord: 4.9ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 09:39:23 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.9ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.7ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 19]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (96.85ms)
Completed 200 OK in 159ms (Views: 105.6ms | ActiveRecord: 1.6ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-17 09:39:25 -0400
Processing by Api::V1::AnswersController#create as HTML
  Parameters: {"content"=>"safasfas", "question_id"=>"19", "answer"=>{"content"=>"safasfas", "question_id"=>"19"}}
  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 19], ["LIMIT", 1]]
  [1m[35m (0.6ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.8ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "safasfas"], ["question_id", 19], ["created_at", 2016-06-17 13:39:25 UTC], ["updated_at", 2016-06-17 13:39:25 UTC]]
  [1m[35m (1.6ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 138ms (ActiveRecord: 3.6ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 09:39:26 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.7ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 21]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (89.03ms)
Completed 200 OK in 152ms (Views: 104.1ms | ActiveRecord: 1.4ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-17 09:39:27 -0400
Processing by Api::V1::AnswersController#create as HTML
  Parameters: {"content"=>"asfafasf", "question_id"=>"21", "answer"=>{"content"=>"asfafasf", "question_id"=>"21"}}
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 21], ["LIMIT", 1]]
  [1m[35m (4.6ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.8ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "asfafasf"], ["question_id", 21], ["created_at", 2016-06-17 13:39:28 UTC], ["updated_at", 2016-06-17 13:39:28 UTC]]
  [1m[35m (8.7ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 148ms (ActiveRecord: 14.7ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 09:39:28 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (1.2ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (2.3ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 24]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (132.9ms)
Completed 200 OK in 193ms (Views: 142.9ms | ActiveRecord: 3.5ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-17 09:39:31 -0400
Processing by Api::V1::AnswersController#create as HTML
  Parameters: {"content"=>"asfasfasf", "question_id"=>"24", "answer"=>{"content"=>"asfasfasf", "question_id"=>"24"}}
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 24], ["LIMIT", 1]]
  [1m[35m (0.7ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (1.6ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "asfasfasf"], ["question_id", 24], ["created_at", 2016-06-17 13:39:32 UTC], ["updated_at", 2016-06-17 13:39:32 UTC]]
  [1m[35m (1.7ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 135ms (ActiveRecord: 4.6ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 09:39:34 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.6ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 27]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (126.06ms)
Completed 200 OK in 185ms (Views: 137.8ms | ActiveRecord: 1.4ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-17 09:39:36 -0400
Processing by Api::V1::AnswersController#create as HTML
  Parameters: {"content"=>"afasfasf", "question_id"=>"27", "answer"=>{"content"=>"afasfasf", "question_id"=>"27"}}
  [1m[36mQuestion Load (1.0ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 27], ["LIMIT", 1]]
  [1m[35m (1.0ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.7ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "afasfasf"], ["question_id", 27], ["created_at", 2016-06-17 13:39:36 UTC], ["updated_at", 2016-06-17 13:39:36 UTC]]
  [1m[35m (3.0ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 142ms (ActiveRecord: 5.7ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 09:39:37 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.6ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 20]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (163.48ms)
Completed 200 OK in 221ms (Views: 170.9ms | ActiveRecord: 1.4ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-17 09:39:39 -0400
Processing by Api::V1::AnswersController#create as HTML
  Parameters: {"content"=>"asfdasfasf", "question_id"=>"20", "answer"=>{"content"=>"asfdasfasf", "question_id"=>"20"}}
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 20], ["LIMIT", 1]]
  [1m[35m (0.6ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.7ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "asfdasfasf"], ["question_id", 20], ["created_at", 2016-06-17 13:39:39 UTC], ["updated_at", 2016-06-17 13:39:39 UTC]]
  [1m[35m (58.1ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 192ms (ActiveRecord: 60.0ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 09:40:49 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 28]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (37.18ms)
Completed 500 Internal Server Error in 77972ms (Views: 121.5ms | ActiveRecord: 11.7ms)


  
SystemExit (exit):
  
app/controllers/api/v1/questions_controller.rb:22:in `getRandomQuestion'
Started GET "/api/v1/random" for ::1 at 2016-06-17 09:42:22 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.9ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (1.0ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 26]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (196.53ms)
Completed 500 Internal Server Error in 64837ms (Views: 196.6ms | ActiveRecord: 1.9ms)


  
SystemExit (exit):
  
app/controllers/api/v1/questions_controller.rb:22:in `getRandomQuestion'
  [1m[36mActiveRecord::SchemaMigration Load (0.6ms)[0m  [1m[34mSELECT "schema_migrations".* FROM "schema_migrations"[0m
  [1m[35m (34.1ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1[0m  [["key", :environment]]
  [1m[36mActiveRecord::SchemaMigration Load (0.2ms)[0m  [1m[34mSELECT "schema_migrations".* FROM "schema_migrations"[0m
  [1m[35m (0.2ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1[0m  [["key", :environment]]
  [1m[36mActiveRecord::SchemaMigration Load (0.2ms)[0m  [1m[34mSELECT "schema_migrations".* FROM "schema_migrations"[0m
  [1m[35m (0.2ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1[0m  [["key", :environment]]
  [1m[35m (400.2ms)[0m  [1m[35mDROP DATABASE IF EXISTS "QIQAPI_development"[0m
  [1m[35m (197.8ms)[0m  [1m[35mDROP DATABASE IF EXISTS "QIQAPI_test"[0m
  [1m[35m (6292.4ms)[0m  [1m[35mCREATE DATABASE "QIQAPI_development" ENCODING = 'unicode'[0m
  [1m[35m (1204.6ms)[0m  [1m[35mCREATE DATABASE "QIQAPI_test" ENCODING = 'unicode'[0m
  [1m[35mSQL (39.2ms)[0m  [1m[35mCREATE EXTENSION IF NOT EXISTS "plpgsql"[0m
  [1m[35m (352.4ms)[0m  [1m[35mCREATE TABLE "answers" ("id" serial primary key, "vote_score" integer, "vote_count" integer, "content" character varying, "question_id" integer, "created_at" timestamp, "updated_at" timestamp)[0m
  [1m[35m (5.9ms)[0m  [1m[35mCREATE TABLE "questions" ("id" serial primary key, "content" character varying, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  [1m[35m (3.7ms)[0m  [1m[35mCREATE TABLE "schema_migrations" ("version" character varying PRIMARY KEY)[0m
  [1m[35m (0.4ms)[0m  [1m[34mSELECT version FROM "schema_migrations"[0m
  [1m[35m (0.8ms)[0m  [1m[32mINSERT INTO "schema_migrations" (version) VALUES ('20160615195717')[0m
  [1m[35m (0.7ms)[0m  [1m[32mINSERT INTO schema_migrations (version) VALUES ('20160615195122'), ('20160615195241');

[0m
  [1m[35m (4.0ms)[0m  [1m[35mCREATE TABLE "ar_internal_metadata" ("key" character varying PRIMARY KEY, "value" character varying, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  [1m[36mActiveRecord::InternalMetadata Load (13.4ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" ORDER BY "ar_internal_metadata"."key" ASC LIMIT $1[0m  [["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "ar_internal_metadata" ("key", "value", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "key"[0m  [["key", "environment"], ["value", "development"], ["created_at", 2016-06-17 13:43:58 UTC], ["updated_at", 2016-06-17 13:43:58 UTC]]
  [1m[35m (15.6ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mActiveRecord::InternalMetadata Load (0.3ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" ORDER BY "ar_internal_metadata"."key" ASC LIMIT $1[0m  [["LIMIT", 1]]
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35m (0.2ms)[0m  [1m[35mCOMMIT[0m
  [1m[35mSQL (0.4ms)[0m  [1m[35mCREATE EXTENSION IF NOT EXISTS "plpgsql"[0m
  [1m[35m (8.7ms)[0m  [1m[35mCREATE TABLE "answers" ("id" serial primary key, "vote_score" integer, "vote_count" integer, "content" character varying, "question_id" integer, "created_at" timestamp, "updated_at" timestamp)[0m
  [1m[35m (4.5ms)[0m  [1m[35mCREATE TABLE "questions" ("id" serial primary key, "content" character varying, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  [1m[35m (5.1ms)[0m  [1m[35mCREATE TABLE "schema_migrations" ("version" character varying PRIMARY KEY)[0m
  [1m[35m (0.4ms)[0m  [1m[34mSELECT version FROM "schema_migrations"[0m
  [1m[35m (0.7ms)[0m  [1m[32mINSERT INTO "schema_migrations" (version) VALUES ('20160615195717')[0m
  [1m[35m (0.9ms)[0m  [1m[32mINSERT INTO schema_migrations (version) VALUES ('20160615195122'), ('20160615195241');

[0m
  [1m[35m (5.8ms)[0m  [1m[35mCREATE TABLE "ar_internal_metadata" ("key" character varying PRIMARY KEY, "value" character varying, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  [1m[36mActiveRecord::InternalMetadata Load (0.3ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" ORDER BY "ar_internal_metadata"."key" ASC LIMIT $1[0m  [["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "ar_internal_metadata" ("key", "value", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "key"[0m  [["key", "environment"], ["value", "development"], ["created_at", 2016-06-17 13:43:59 UTC], ["updated_at", 2016-06-17 13:43:59 UTC]]
  [1m[35m (0.6ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mActiveRecord::InternalMetadata Load (0.2ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" ORDER BY "ar_internal_metadata"."key" ASC LIMIT $1[0m  [["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35m (0.2ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mActiveRecord::SchemaMigration Load (0.4ms)[0m  [1m[34mSELECT "schema_migrations".* FROM "schema_migrations"[0m
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.7ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "What are you looking for in terms of career development?"], ["created_at", 2016-06-17 13:43:59 UTC], ["updated_at", 2016-06-17 13:43:59 UTC]]
  [1m[35m (1.2ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "How many ways can you center a div?"], ["created_at", 2016-06-17 13:43:59 UTC], ["updated_at", 2016-06-17 13:43:59 UTC]]
  [1m[35m (0.7ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "What are your strengths and weaknesses?"], ["created_at", 2016-06-17 13:43:59 UTC], ["updated_at", 2016-06-17 13:43:59 UTC]]
  [1m[35m (0.7ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "Explain the process of web development to a middle school kid."], ["created_at", 2016-06-17 13:43:59 UTC], ["updated_at", 2016-06-17 13:43:59 UTC]]
  [1m[35m (0.7ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "What did you like least about your last job?"], ["created_at", 2016-06-17 13:43:59 UTC], ["updated_at", 2016-06-17 13:43:59 UTC]]
  [1m[35m (0.6ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "How does the web work?"], ["created_at", 2016-06-17 13:43:59 UTC], ["updated_at", 2016-06-17 13:43:59 UTC]]
  [1m[35m (0.6ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "What is function hoisting in JavaScript?"], ["created_at", 2016-06-17 13:43:59 UTC], ["updated_at", 2016-06-17 13:43:59 UTC]]
  [1m[35m (0.7ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "How did you learn programming?"], ["created_at", 2016-06-17 13:43:59 UTC], ["updated_at", 2016-06-17 13:43:59 UTC]]
  [1m[35m (0.6ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "What is a closure?"], ["created_at", 2016-06-17 13:43:59 UTC], ["updated_at", 2016-06-17 13:43:59 UTC]]
  [1m[35m (0.7ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "How did you learn web development?"], ["created_at", 2016-06-17 13:43:59 UTC], ["updated_at", 2016-06-17 13:43:59 UTC]]
  [1m[35m (0.6ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "Describe a time when you were able to improve upon the design that was originally suggested?"], ["created_at", 2016-06-17 13:43:59 UTC], ["updated_at", 2016-06-17 13:43:59 UTC]]
  [1m[35m (1.0ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "So tell me about yourself."], ["created_at", 2016-06-17 13:43:59 UTC], ["updated_at", 2016-06-17 13:43:59 UTC]]
  [1m[35m (0.9ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "Where would you like to be in your career five years from now?"], ["created_at", 2016-06-17 13:43:59 UTC], ["updated_at", 2016-06-17 13:43:59 UTC]]
  [1m[35m (0.9ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "Why do you want to work with us?"], ["created_at", 2016-06-17 13:43:59 UTC], ["updated_at", 2016-06-17 13:43:59 UTC]]
  [1m[35m (0.9ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "Can you name two programming paradigms important for JavaScript app developers?"], ["created_at", 2016-06-17 13:43:59 UTC], ["updated_at", 2016-06-17 13:43:59 UTC]]
  [1m[35m (2.4ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "Tell me about your long-term goals."], ["created_at", 2016-06-17 13:43:59 UTC], ["updated_at", 2016-06-17 13:43:59 UTC]]
  [1m[35m (0.6ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "Tell me about the most recent project you worked on. What were your responsibilities?"], ["created_at", 2016-06-17 13:43:59 UTC], ["updated_at", 2016-06-17 13:43:59 UTC]]
  [1m[35m (0.7ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "What are your short-term goals."], ["created_at", 2016-06-17 13:43:59 UTC], ["updated_at", 2016-06-17 13:43:59 UTC]]
  [1m[35m (0.7ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "Do you have any questions for me?"], ["created_at", 2016-06-17 13:43:59 UTC], ["updated_at", 2016-06-17 13:43:59 UTC]]
  [1m[35m (0.6ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "Please walk me through one of the projects on your resume."], ["created_at", 2016-06-17 13:43:59 UTC], ["updated_at", 2016-06-17 13:43:59 UTC]]
  [1m[35m (0.6ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "What is the difference between classical inheritance and prototypal inheritance? "], ["created_at", 2016-06-17 13:43:59 UTC], ["updated_at", 2016-06-17 13:43:59 UTC]]
  [1m[35m (0.7ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "Can you tell me about a challenge you've faced at work and how you got through it?"], ["created_at", 2016-06-17 13:43:59 UTC], ["updated_at", 2016-06-17 13:43:59 UTC]]
  [1m[35m (0.7ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "Explain a polymorphic association?"], ["created_at", 2016-06-17 13:43:59 UTC], ["updated_at", 2016-06-17 13:43:59 UTC]]
  [1m[35m (0.7ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "Why do you want to be a web developer?"], ["created_at", 2016-06-17 13:43:59 UTC], ["updated_at", 2016-06-17 13:43:59 UTC]]
  [1m[35m (2.0ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "Describe your production deployment process?"], ["created_at", 2016-06-17 13:43:59 UTC], ["updated_at", 2016-06-17 13:43:59 UTC]]
  [1m[35m (0.8ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "Why do you want to work for us?"], ["created_at", 2016-06-17 13:43:59 UTC], ["updated_at", 2016-06-17 13:43:59 UTC]]
  [1m[35m (0.8ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "How would you declare and use a constructor in Ruby?"], ["created_at", 2016-06-17 13:43:59 UTC], ["updated_at", 2016-06-17 13:43:59 UTC]]
  [1m[35m (0.6ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "Do you have any questions for me?"], ["created_at", 2016-06-17 13:43:59 UTC], ["updated_at", 2016-06-17 13:43:59 UTC]]
  [1m[35m (0.6ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "How do you evaluate success?"], ["created_at", 2016-06-17 13:43:59 UTC], ["updated_at", 2016-06-17 13:43:59 UTC]]
  [1m[35m (0.7ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "How would you describe your work style?"], ["created_at", 2016-06-17 13:43:59 UTC], ["updated_at", 2016-06-17 13:43:59 UTC]]
  [1m[35m (0.7ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.7ms)[0m  [1m[32mINSERT INTO "answers" ("vote_score", "vote_count", "content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["vote_score", 15], ["vote_count", 20], ["content", "<p>Three, and more than you'd expect!</p>\n\n  <p>You could center a div horizontally, vertically, or both and there are\n  a ton of ways to do them each. It also depends on what you're trying to\n  center. The most common way I do it is using the margins. If you set\n    a div's margin to 0 auto, to will automatically get the width of the\n    client's screen and use that information to center the div.</p>\n\n  <p>If I had text within a div, I wold use the text-align: center css\n  attribute on the div.</p>"], ["question_id", 2], ["created_at", 2016-06-17 13:43:59 UTC], ["updated_at", 2016-06-17 13:43:59 UTC]]
  [1m[35m (0.9ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "answers" ("vote_score", "vote_count", "content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["vote_score", -5], ["vote_count", 7], ["content", "<p>Just use margin dude.</p>"], ["question_id", 2], ["created_at", 2016-06-17 13:43:59 UTC], ["updated_at", 2016-06-17 13:43:59 UTC]]
  [1m[35m (0.9ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "answers" ("vote_score", "vote_count", "content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["vote_score", 2], ["vote_count", 2], ["content", "<p>You know when you write notes and pass them to Suzie from\n  down the street? That's kind of what I do. Websites are like notes\n  you want your friends to read. For them to read your notes, you\n  need to also give them the note right? Well that is what the Internet\n  does for you. It sends the websites to the people who want to read\n  them.</p>\n\n  <p>The best part is, you know how you don't want Ms. Robinson to see\n  you pass that note? It's like that with the Internet too. There's\n  ways of keeping the visits to your website secret!</p>"], ["question_id", 4], ["created_at", 2016-06-17 13:43:59 UTC], ["updated_at", 2016-06-17 13:43:59 UTC]]
  [1m[35m (0.7ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "answers" ("vote_score", "vote_count", "content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["vote_score", -7], ["vote_count", 12], ["content", "<p>Web development is like, you know, creating front end\n  presentations of backend APIs using asynchronious requests.</p>"], ["question_id", 4], ["created_at", 2016-06-17 13:43:59 UTC], ["updated_at", 2016-06-17 13:43:59 UTC]]
  [1m[35m (0.6ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "How does the web work?"], ["created_at", 2016-06-17 13:43:59 UTC], ["updated_at", 2016-06-17 13:43:59 UTC]]
  [1m[35m (0.6ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "answers" ("vote_score", "vote_count", "content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["vote_score", -20], ["vote_count", 22], ["content", "<p>It's a series of tubes.</p>"], ["question_id", 31], ["created_at", 2016-06-17 13:43:59 UTC], ["updated_at", 2016-06-17 13:43:59 UTC]]
  [1m[35m (0.6ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "answers" ("vote_score", "vote_count", "content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["vote_score", 5], ["vote_count", 7], ["content", "The Internet has a technical side and a social side. There's the\n  infrastructure, like routers, cables, satelites, ISPs, servers,\n  and website code, and there are the users who participate in the\n  Internet by creating content for it's applications and browsing\n  the sites.</p>\n\n  <p>I imagine you guys are interested in the technical side though\n  right? (Yes)</p>\n\n  <p>In short, I'd say it's a communication network designed\n  to deliver messages between computers. One of the most interesting\n  things about it, I think, is that in the end, it really is a\n  bunch of cables! Some run under the oceans, others go through\n  mountains and under forests. Some signals travel through space! All\n  the code we write goes through those cables, I think that's pretty\n  amazing!</p>"], ["question_id", 31], ["created_at", 2016-06-17 13:43:59 UTC], ["updated_at", 2016-06-17 13:43:59 UTC]]
  [1m[35m (0.7ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "How did you learn programming?"], ["created_at", 2016-06-17 13:43:59 UTC], ["updated_at", 2016-06-17 13:43:59 UTC]]
  [1m[35m (0.6ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "answers" ("vote_score", "vote_count", "content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["vote_score", -3], ["vote_count", 4], ["content", "<p>I just started Googling it you know, and I liked doing it so\n  I ended up trying to do it professionally.</p>"], ["question_id", 32], ["created_at", 2016-06-17 13:43:59 UTC], ["updated_at", 2016-06-17 13:43:59 UTC]]
  [1m[35m (0.6ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "answers" ("vote_score", "vote_count", "content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["vote_score", -3], ["vote_count", 4], ["content", "<p>For me, it started back in 2011 when I was doing social science\n  at Stockholm University. The creation of communities had become a\n  passion of mine so I was exploring ways of finding data on\n  social networks. The Internet was the obvious place to look so I\n  found myself writing Python scripts to build simple web scrapers and\n  spiders.</p>\n\n  <p>It was exciting, I discovered coding makes me happy not just for\n  the results it creates but because I like the way it looks. Solving\n  problems is interesting.</p>"], ["question_id", 32], ["created_at", 2016-06-17 13:43:59 UTC], ["updated_at", 2016-06-17 13:43:59 UTC]]
  [1m[35m (0.6ms)[0m  [1m[35mCOMMIT[0m
Started GET "/api/v1/random" for ::1 at 2016-06-17 09:44:26 -0400
  [1m[36mActiveRecord::SchemaMigration Load (0.6ms)[0m  [1m[34mSELECT "schema_migrations".* FROM "schema_migrations"[0m
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (1.3ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.5ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 21]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (119.89ms)
Completed 500 Internal Server Error in 8421ms (Views: 279.1ms | ActiveRecord: 10.6ms)


  
SystemExit (exit):
  
app/controllers/api/v1/questions_controller.rb:22:in `getRandomQuestion'
Started GET "/api/v1/random" for ::1 at 2016-06-17 09:44:48 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.8ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 2]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (310.12ms)
Completed 200 OK in 380ms (Views: 316.7ms | ActiveRecord: 8.2ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-17 09:44:52 -0400
Processing by Api::V1::AnswersController#create as HTML
  Parameters: {"content"=>"hello", "question_id"=>"2", "answer"=>{"content"=>"hello", "question_id"=>"2"}}
  [1m[36mQuestion Load (0.5ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
  [1m[35m (3.5ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.9ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "hello"], ["question_id", 2], ["created_at", 2016-06-17 13:44:52 UTC], ["updated_at", 2016-06-17 13:44:52 UTC]]
  [1m[35m (2.7ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 102ms (ActiveRecord: 7.6ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 09:44:55 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.6ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 24]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (59.49ms)
Completed 200 OK in 110ms (Views: 65.7ms | ActiveRecord: 1.3ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-17 09:44:57 -0400
Processing by Api::V1::AnswersController#create as HTML
  Parameters: {"content"=>"hello", "question_id"=>"24", "answer"=>{"content"=>"hello", "question_id"=>"24"}}
  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 24], ["LIMIT", 1]]
  [1m[35m (0.6ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.7ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "hello"], ["question_id", 24], ["created_at", 2016-06-17 13:44:58 UTC], ["updated_at", 2016-06-17 13:44:58 UTC]]
  [1m[35m (2.8ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 117ms (ActiveRecord: 4.8ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 09:44:59 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (1.6ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.6ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 10]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (70.76ms)
Completed 200 OK in 130ms (Views: 78.6ms | ActiveRecord: 2.2ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-17 09:45:02 -0400
Processing by Api::V1::AnswersController#create as HTML
  Parameters: {"content"=>"hello", "question_id"=>"10", "answer"=>{"content"=>"hello", "question_id"=>"10"}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 10], ["LIMIT", 1]]
  [1m[35m (0.7ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.8ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "hello"], ["question_id", 10], ["created_at", 2016-06-17 13:45:02 UTC], ["updated_at", 2016-06-17 13:45:02 UTC]]
  [1m[35m (40.6ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 149ms (ActiveRecord: 42.8ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 09:45:03 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.6ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 11]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (72.17ms)
Completed 200 OK in 120ms (Views: 78.2ms | ActiveRecord: 1.3ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-17 09:45:06 -0400
Processing by Api::V1::AnswersController#create as HTML
  Parameters: {"content"=>"hello", "question_id"=>"11", "answer"=>{"content"=>"hello", "question_id"=>"11"}}
  [1m[36mQuestion Load (1.1ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 11], ["LIMIT", 1]]
  [1m[35m (0.5ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.8ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "hello"], ["question_id", 11], ["created_at", 2016-06-17 13:45:06 UTC], ["updated_at", 2016-06-17 13:45:06 UTC]]
  [1m[35m (2.8ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 119ms (ActiveRecord: 5.3ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 09:45:07 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.6ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 18]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (74.97ms)
Completed 200 OK in 122ms (Views: 81.4ms | ActiveRecord: 1.4ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-17 09:45:10 -0400
Processing by Api::V1::AnswersController#create as HTML
  Parameters: {"content"=>"hello", "question_id"=>"18", "answer"=>{"content"=>"hello", "question_id"=>"18"}}
  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 18], ["LIMIT", 1]]
  [1m[35m (0.7ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (4.2ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "hello"], ["question_id", 18], ["created_at", 2016-06-17 13:45:10 UTC], ["updated_at", 2016-06-17 13:45:10 UTC]]
  [1m[35m (16.9ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 128ms (ActiveRecord: 22.5ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 09:45:11 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.9ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 29]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (74.02ms)
Completed 200 OK in 125ms (Views: 83.6ms | ActiveRecord: 1.7ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-17 09:45:13 -0400
Processing by Api::V1::AnswersController#create as HTML
  Parameters: {"content"=>"hello", "question_id"=>"29", "answer"=>{"content"=>"hello", "question_id"=>"29"}}
  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 29], ["LIMIT", 1]]
  [1m[35m (0.5ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.7ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "hello"], ["question_id", 29], ["created_at", 2016-06-17 13:45:14 UTC], ["updated_at", 2016-06-17 13:45:14 UTC]]
  [1m[35m (12.5ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 116ms (ActiveRecord: 14.3ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 09:45:15 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.9ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.6ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 16]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (67.88ms)
Completed 200 OK in 117ms (Views: 74.4ms | ActiveRecord: 1.5ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-17 09:45:17 -0400
Processing by Api::V1::AnswersController#create as HTML
  Parameters: {"content"=>"hello", "question_id"=>"16", "answer"=>{"content"=>"hello", "question_id"=>"16"}}
  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 16], ["LIMIT", 1]]
  [1m[35m (0.5ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (1.2ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "hello"], ["question_id", 16], ["created_at", 2016-06-17 13:45:17 UTC], ["updated_at", 2016-06-17 13:45:17 UTC]]
  [1m[35m (3.3ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 109ms (ActiveRecord: 5.6ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 09:45:18 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.6ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 6]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (68.9ms)
Completed 200 OK in 118ms (Views: 75.7ms | ActiveRecord: 1.3ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-17 09:45:22 -0400
Processing by Api::V1::AnswersController#create as HTML
  Parameters: {"content"=>"hello", "question_id"=>"6", "answer"=>{"content"=>"hello", "question_id"=>"6"}}
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 6], ["LIMIT", 1]]
  [1m[35m (3.6ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.9ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "hello"], ["question_id", 6], ["created_at", 2016-06-17 13:45:22 UTC], ["updated_at", 2016-06-17 13:45:22 UTC]]
  [1m[35m (1.5ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 115ms (ActiveRecord: 6.6ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 09:45:23 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.6ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 27]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (66.99ms)
Completed 200 OK in 117ms (Views: 76.8ms | ActiveRecord: 1.4ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-17 09:45:25 -0400
Processing by Api::V1::AnswersController#create as HTML
  Parameters: {"content"=>"hello", "question_id"=>"27", "answer"=>{"content"=>"hello", "question_id"=>"27"}}
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 27], ["LIMIT", 1]]
  [1m[35m (0.5ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.7ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "hello"], ["question_id", 27], ["created_at", 2016-06-17 13:45:25 UTC], ["updated_at", 2016-06-17 13:45:25 UTC]]
  [1m[35m (153.3ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 260ms (ActiveRecord: 155.2ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 09:45:26 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (1.4ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.6ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 8]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (63.15ms)
Completed 200 OK in 122ms (Views: 73.3ms | ActiveRecord: 2.0ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-17 09:45:28 -0400
Processing by Api::V1::AnswersController#create as HTML
  Parameters: {"content"=>"hello", "question_id"=>"8", "answer"=>{"content"=>"hello", "question_id"=>"8"}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 8], ["LIMIT", 1]]
  [1m[35m (0.6ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.7ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "hello"], ["question_id", 8], ["created_at", 2016-06-17 13:45:28 UTC], ["updated_at", 2016-06-17 13:45:28 UTC]]
  [1m[35m (1.4ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 110ms (ActiveRecord: 3.5ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 09:45:29 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.5ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 19]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (63.45ms)
Completed 200 OK in 112ms (Views: 70.7ms | ActiveRecord: 1.3ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-17 09:45:31 -0400
Processing by Api::V1::AnswersController#create as HTML
  Parameters: {"content"=>"hello", "question_id"=>"19", "answer"=>{"content"=>"hello", "question_id"=>"19"}}
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 19], ["LIMIT", 1]]
  [1m[35m (0.5ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.7ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "hello"], ["question_id", 19], ["created_at", 2016-06-17 13:45:31 UTC], ["updated_at", 2016-06-17 13:45:31 UTC]]
  [1m[35m (3.0ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 107ms (ActiveRecord: 4.8ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 09:45:32 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.5ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 7]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (66.64ms)
Completed 200 OK in 115ms (Views: 78.3ms | ActiveRecord: 1.3ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-17 09:45:34 -0400
Processing by Api::V1::AnswersController#create as HTML
  Parameters: {"content"=>"hello", "question_id"=>"7", "answer"=>{"content"=>"hello", "question_id"=>"7"}}
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 7], ["LIMIT", 1]]
  [1m[35m (0.6ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.8ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "hello"], ["question_id", 7], ["created_at", 2016-06-17 13:45:34 UTC], ["updated_at", 2016-06-17 13:45:34 UTC]]
  [1m[35m (3.6ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 106ms (ActiveRecord: 5.6ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 09:45:35 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.7ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 30]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (81.76ms)
Completed 200 OK in 136ms (Views: 90.9ms | ActiveRecord: 1.5ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-17 09:45:36 -0400
Processing by Api::V1::AnswersController#create as HTML
  Parameters: {"content"=>"hello", "question_id"=>"30", "answer"=>{"content"=>"hello", "question_id"=>"30"}}
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 30], ["LIMIT", 1]]
  [1m[35m (0.5ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.7ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "hello"], ["question_id", 30], ["created_at", 2016-06-17 13:45:36 UTC], ["updated_at", 2016-06-17 13:45:36 UTC]]
  [1m[35m (3.4ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 105ms (ActiveRecord: 5.0ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 09:45:37 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (1.3ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.6ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 27]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (106.75ms)
Completed 200 OK in 165ms (Views: 114.0ms | ActiveRecord: 1.8ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-17 09:45:40 -0400
Processing by Api::V1::AnswersController#create as HTML
  Parameters: {"content"=>"hello", "question_id"=>"27", "answer"=>{"content"=>"hello", "question_id"=>"27"}}
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 27], ["LIMIT", 1]]
  [1m[35m (0.5ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.7ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "hello"], ["question_id", 27], ["created_at", 2016-06-17 13:45:40 UTC], ["updated_at", 2016-06-17 13:45:40 UTC]]
  [1m[35m (2.9ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 115ms (ActiveRecord: 4.8ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 09:45:41 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.6ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 2]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (145.52ms)
Completed 200 OK in 201ms (Views: 152.0ms | ActiveRecord: 1.3ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-17 09:45:43 -0400
Processing by Api::V1::AnswersController#create as HTML
  Parameters: {"content"=>"hello", "question_id"=>"2", "answer"=>{"content"=>"hello", "question_id"=>"2"}}
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
  [1m[35m (0.5ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.7ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "hello"], ["question_id", 2], ["created_at", 2016-06-17 13:45:43 UTC], ["updated_at", 2016-06-17 13:45:43 UTC]]
  [1m[35m (8.4ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 112ms (ActiveRecord: 10.2ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 09:45:44 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.5ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 9]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (63.8ms)
Completed 200 OK in 112ms (Views: 70.2ms | ActiveRecord: 1.3ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-17 09:45:46 -0400
Processing by Api::V1::AnswersController#create as HTML
  Parameters: {"content"=>"hello", "question_id"=>"9", "answer"=>{"content"=>"hello", "question_id"=>"9"}}
  [1m[36mQuestion Load (0.5ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 9], ["LIMIT", 1]]
  [1m[35m (0.7ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.7ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "hello"], ["question_id", 9], ["created_at", 2016-06-17 13:45:46 UTC], ["updated_at", 2016-06-17 13:45:46 UTC]]
  [1m[35m (3.3ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 115ms (ActiveRecord: 5.3ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 09:45:47 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.9ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 25]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (68.94ms)
Completed 200 OK in 115ms (Views: 74.8ms | ActiveRecord: 1.7ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-17 09:45:50 -0400
Processing by Api::V1::AnswersController#create as HTML
  Parameters: {"content"=>"hello", "question_id"=>"25", "answer"=>{"content"=>"hello", "question_id"=>"25"}}
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 25], ["LIMIT", 1]]
  [1m[35m (0.5ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.7ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "hello"], ["question_id", 25], ["created_at", 2016-06-17 13:45:50 UTC], ["updated_at", 2016-06-17 13:45:50 UTC]]
  [1m[35m (2.8ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 110ms (ActiveRecord: 4.5ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 09:46:04 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.5ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 21]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (71.51ms)
Completed 200 OK in 133ms (Views: 82.6ms | ActiveRecord: 1.4ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-17 09:46:06 -0400
Processing by Api::V1::AnswersController#create as HTML
  Parameters: {"content"=>"hello", "question_id"=>"21", "answer"=>{"content"=>"hello", "question_id"=>"21"}}
  [1m[36mQuestion Load (0.9ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 21], ["LIMIT", 1]]
  [1m[35m (0.5ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.7ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "hello"], ["question_id", 21], ["created_at", 2016-06-17 13:46:07 UTC], ["updated_at", 2016-06-17 13:46:07 UTC]]
  [1m[35m (1.6ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 112ms (ActiveRecord: 3.7ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 09:46:08 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.7ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 30]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (96.17ms)
Completed 200 OK in 143ms (Views: 102.4ms | ActiveRecord: 1.4ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-17 09:46:10 -0400
Processing by Api::V1::AnswersController#create as HTML
  Parameters: {"content"=>"hello", "question_id"=>"30", "answer"=>{"content"=>"hello", "question_id"=>"30"}}
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 30], ["LIMIT", 1]]
  [1m[35m (0.8ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (4.1ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "hello"], ["question_id", 30], ["created_at", 2016-06-17 13:46:10 UTC], ["updated_at", 2016-06-17 13:46:10 UTC]]
  [1m[35m (2.8ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 109ms (ActiveRecord: 8.3ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 09:46:11 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.5ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 20]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (71.2ms)
Completed 200 OK in 123ms (Views: 81.2ms | ActiveRecord: 1.3ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-17 09:46:13 -0400
Processing by Api::V1::AnswersController#create as HTML
  Parameters: {"content"=>"aaa", "question_id"=>"20", "answer"=>{"content"=>"aaa", "question_id"=>"20"}}
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 20], ["LIMIT", 1]]
  [1m[35m (0.7ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.7ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "aaa"], ["question_id", 20], ["created_at", 2016-06-17 13:46:13 UTC], ["updated_at", 2016-06-17 13:46:13 UTC]]
  [1m[35m (2.9ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 118ms (ActiveRecord: 4.9ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 09:46:14 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (1.0ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 23]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (81.13ms)
Completed 200 OK in 132ms (Views: 88.4ms | ActiveRecord: 1.7ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-17 09:46:15 -0400
Processing by Api::V1::AnswersController#create as HTML
  Parameters: {"content"=>"dfff", "question_id"=>"23", "answer"=>{"content"=>"dfff", "question_id"=>"23"}}
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 23], ["LIMIT", 1]]
  [1m[35m (0.7ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.8ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "dfff"], ["question_id", 23], ["created_at", 2016-06-17 13:46:15 UTC], ["updated_at", 2016-06-17 13:46:15 UTC]]
  [1m[35m (3.7ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 114ms (ActiveRecord: 5.8ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 09:46:16 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.9ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.9ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 27]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (134.05ms)
Completed 200 OK in 187ms (Views: 140.2ms | ActiveRecord: 1.9ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-17 09:46:18 -0400
Processing by Api::V1::AnswersController#create as HTML
  Parameters: {"content"=>"dddd", "question_id"=>"27", "answer"=>{"content"=>"dddd", "question_id"=>"27"}}
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 27], ["LIMIT", 1]]
  [1m[35m (0.5ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.7ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "dddd"], ["question_id", 27], ["created_at", 2016-06-17 13:46:18 UTC], ["updated_at", 2016-06-17 13:46:18 UTC]]
  [1m[35m (279.2ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 387ms (ActiveRecord: 281.0ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 09:46:20 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (4.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 30]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (134.92ms)
Completed 200 OK in 187ms (Views: 142.1ms | ActiveRecord: 4.9ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-17 09:46:21 -0400
Processing by Api::V1::AnswersController#create as HTML
  Parameters: {"content"=>"aaaa", "question_id"=>"30", "answer"=>{"content"=>"aaaa", "question_id"=>"30"}}
  [1m[36mQuestion Load (1.0ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 30], ["LIMIT", 1]]
  [1m[35m (0.5ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.7ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "aaaa"], ["question_id", 30], ["created_at", 2016-06-17 13:46:21 UTC], ["updated_at", 2016-06-17 13:46:21 UTC]]
  [1m[35m (2.8ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 118ms (ActiveRecord: 5.0ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 09:46:22 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (5.4ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.9ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 21]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (97.74ms)
Completed 200 OK in 156ms (Views: 106.3ms | ActiveRecord: 6.3ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-17 09:46:24 -0400
Processing by Api::V1::AnswersController#create as HTML
  Parameters: {"content"=>"ssss", "question_id"=>"21", "answer"=>{"content"=>"ssss", "question_id"=>"21"}}
  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 21], ["LIMIT", 1]]
  [1m[35m (0.6ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.8ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "ssss"], ["question_id", 21], ["created_at", 2016-06-17 13:46:24 UTC], ["updated_at", 2016-06-17 13:46:24 UTC]]
  [1m[35m (1.5ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 106ms (ActiveRecord: 3.6ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 09:46:24 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.6ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 18]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (104.35ms)
Completed 200 OK in 156ms (Views: 111.2ms | ActiveRecord: 1.4ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-17 09:46:26 -0400
Processing by Api::V1::AnswersController#create as HTML
  Parameters: {"content"=>"dddd", "question_id"=>"18", "answer"=>{"content"=>"dddd", "question_id"=>"18"}}
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 18], ["LIMIT", 1]]
  [1m[35m (0.7ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.7ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "dddd"], ["question_id", 18], ["created_at", 2016-06-17 13:46:26 UTC], ["updated_at", 2016-06-17 13:46:26 UTC]]
  [1m[35m (2.9ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 111ms (ActiveRecord: 4.9ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 09:46:27 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.9ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.6ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 29]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (100.68ms)
Completed 200 OK in 155ms (Views: 107.4ms | ActiveRecord: 1.5ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 09:46:28 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (1.0ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.6ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 22]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (78.45ms)
Completed 200 OK in 130ms (Views: 84.6ms | ActiveRecord: 1.6ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-17 09:46:31 -0400
Processing by Api::V1::AnswersController#create as HTML
  Parameters: {"content"=>"fffff", "question_id"=>"22", "answer"=>{"content"=>"fffff", "question_id"=>"22"}}
  [1m[36mQuestion Load (1.0ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 22], ["LIMIT", 1]]
  [1m[35m (0.5ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.9ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "fffff"], ["question_id", 22], ["created_at", 2016-06-17 13:46:31 UTC], ["updated_at", 2016-06-17 13:46:31 UTC]]
  [1m[35m (17.2ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 135ms (ActiveRecord: 19.5ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 09:46:32 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.6ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 26]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (75.32ms)
Completed 200 OK in 132ms (Views: 85.7ms | ActiveRecord: 1.3ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-17 09:46:34 -0400
Processing by Api::V1::AnswersController#create as HTML
  Parameters: {"content"=>"ffff", "question_id"=>"26", "answer"=>{"content"=>"ffff", "question_id"=>"26"}}
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 26], ["LIMIT", 1]]
  [1m[35m (0.6ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.8ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "ffff"], ["question_id", 26], ["created_at", 2016-06-17 13:46:34 UTC], ["updated_at", 2016-06-17 13:46:34 UTC]]
  [1m[35m (1.4ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 112ms (ActiveRecord: 3.2ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 09:46:34 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.7ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 9]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (100.73ms)
Completed 200 OK in 152ms (Views: 110.8ms | ActiveRecord: 1.4ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-17 09:46:36 -0400
Processing by Api::V1::AnswersController#create as HTML
  Parameters: {"content"=>"gggg", "question_id"=>"9", "answer"=>{"content"=>"gggg", "question_id"=>"9"}}
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 9], ["LIMIT", 1]]
  [1m[35m (0.5ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.7ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "gggg"], ["question_id", 9], ["created_at", 2016-06-17 13:46:36 UTC], ["updated_at", 2016-06-17 13:46:36 UTC]]
  [1m[35m (1.2ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 110ms (ActiveRecord: 3.0ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 09:46:37 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.7ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 4]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (129.64ms)
Completed 200 OK in 181ms (Views: 139.8ms | ActiveRecord: 1.4ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-17 09:46:38 -0400
Processing by Api::V1::AnswersController#create as HTML
  Parameters: {"content"=>"hhhh", "question_id"=>"4", "answer"=>{"content"=>"hhhh", "question_id"=>"4"}}
  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 4], ["LIMIT", 1]]
  [1m[35m (0.5ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.7ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "hhhh"], ["question_id", 4], ["created_at", 2016-06-17 13:46:38 UTC], ["updated_at", 2016-06-17 13:46:38 UTC]]
  [1m[35m (1.2ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 109ms (ActiveRecord: 3.1ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 09:46:39 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.6ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 14]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (73.33ms)
Completed 200 OK in 120ms (Views: 79.6ms | ActiveRecord: 1.4ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-17 09:46:40 -0400
Processing by Api::V1::AnswersController#create as HTML
  Parameters: {"content"=>"dddd", "question_id"=>"14", "answer"=>{"content"=>"dddd", "question_id"=>"14"}}
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 14], ["LIMIT", 1]]
  [1m[35m (0.8ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.7ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "dddd"], ["question_id", 14], ["created_at", 2016-06-17 13:46:40 UTC], ["updated_at", 2016-06-17 13:46:40 UTC]]
  [1m[35m (1.3ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 113ms (ActiveRecord: 3.4ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 09:46:41 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.9ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 24]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (103.57ms)
Completed 200 OK in 152ms (Views: 109.5ms | ActiveRecord: 1.7ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-17 09:46:42 -0400
Processing by Api::V1::AnswersController#create as HTML
  Parameters: {"content"=>"aaaa", "question_id"=>"24", "answer"=>{"content"=>"aaaa", "question_id"=>"24"}}
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 24], ["LIMIT", 1]]
  [1m[35m (0.5ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.7ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "aaaa"], ["question_id", 24], ["created_at", 2016-06-17 13:46:42 UTC], ["updated_at", 2016-06-17 13:46:42 UTC]]
  [1m[35m (1.5ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 108ms (ActiveRecord: 3.3ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 09:46:43 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.6ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 20]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (105.63ms)
Completed 200 OK in 155ms (Views: 115.3ms | ActiveRecord: 1.3ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-17 09:46:45 -0400
Processing by Api::V1::AnswersController#create as HTML
  Parameters: {"content"=>"ssss", "question_id"=>"20", "answer"=>{"content"=>"ssss", "question_id"=>"20"}}
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 20], ["LIMIT", 1]]
  [1m[35m (0.5ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (1.1ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "ssss"], ["question_id", 20], ["created_at", 2016-06-17 13:46:45 UTC], ["updated_at", 2016-06-17 13:46:45 UTC]]
  [1m[35m (1.3ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 115ms (ActiveRecord: 3.6ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 09:46:46 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (1.3ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 29]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (103.77ms)
Completed 200 OK in 153ms (Views: 110.9ms | ActiveRecord: 2.1ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 09:47:06 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.6ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 15]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (70.36ms)
Completed 200 OK in 128ms (Views: 82.3ms | ActiveRecord: 1.4ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-17 09:47:08 -0400
Processing by Api::V1::AnswersController#create as HTML
  Parameters: {"content"=>"sss", "question_id"=>"15", "answer"=>{"content"=>"sss", "question_id"=>"15"}}
  [1m[36mQuestion Load (1.0ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 15], ["LIMIT", 1]]
  [1m[35m (0.5ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (1.0ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "sss"], ["question_id", 15], ["created_at", 2016-06-17 13:47:08 UTC], ["updated_at", 2016-06-17 13:47:08 UTC]]
  [1m[35m (2.6ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 125ms (ActiveRecord: 5.1ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 09:47:38 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.8ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 7]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (120.41ms)
Completed 200 OK in 181ms (Views: 128.4ms | ActiveRecord: 1.6ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-17 09:48:31 -0400
Processing by Api::V1::AnswersController#create as HTML
  Parameters: {"content"=>"sss", "question_id"=>"7", "answer"=>{"content"=>"sss", "question_id"=>"7"}}
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 7], ["LIMIT", 1]]
  [1m[35m (0.6ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.8ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "sss"], ["question_id", 7], ["created_at", 2016-06-17 13:48:31 UTC], ["updated_at", 2016-06-17 13:48:31 UTC]]
  [1m[35m (53.0ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 180ms (ActiveRecord: 55.0ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 09:48:48 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.6ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 8]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (114.93ms)
Completed 200 OK in 174ms (Views: 121.9ms | ActiveRecord: 1.4ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 09:52:50 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.7ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 13]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (243.51ms)
Completed 200 OK in 311ms (Views: 258.4ms | ActiveRecord: 1.5ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-17 09:52:52 -0400
Processing by Api::V1::AnswersController#create as HTML
  Parameters: {"content"=>"sss", "question_id"=>"13", "answer"=>{"content"=>"sss", "question_id"=>"13"}}
  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 13], ["LIMIT", 1]]
  [1m[35m (0.8ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.7ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "sss"], ["question_id", 13], ["created_at", 2016-06-17 13:52:52 UTC], ["updated_at", 2016-06-17 13:52:52 UTC]]
  [1m[35m (40.2ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 163ms (ActiveRecord: 42.5ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 09:52:54 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (4.6ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (1.0ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 4]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (175.4ms)
Completed 200 OK in 238ms (Views: 189.7ms | ActiveRecord: 5.6ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-17 09:52:56 -0400
Processing by Api::V1::AnswersController#create as HTML
  Parameters: {"content"=>"aaaa", "question_id"=>"4", "answer"=>{"content"=>"aaaa", "question_id"=>"4"}}
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 4], ["LIMIT", 1]]
  [1m[35m (0.6ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.7ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "aaaa"], ["question_id", 4], ["created_at", 2016-06-17 13:52:56 UTC], ["updated_at", 2016-06-17 13:52:56 UTC]]
  [1m[35m (2.7ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 121ms (ActiveRecord: 4.7ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 09:53:11 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (1.4ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.6ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 18]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (140.57ms)
Completed 200 OK in 193ms (Views: 147.3ms | ActiveRecord: 2.0ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-17 09:53:13 -0400
Processing by Api::V1::AnswersController#create as HTML
  Parameters: {"content"=>"sss", "question_id"=>"18", "answer"=>{"content"=>"sss", "question_id"=>"18"}}
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 18], ["LIMIT", 1]]
  [1m[35m (0.6ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.7ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "sss"], ["question_id", 18], ["created_at", 2016-06-17 13:53:13 UTC], ["updated_at", 2016-06-17 13:53:13 UTC]]
  [1m[35m (3.3ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 125ms (ActiveRecord: 5.3ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 09:53:15 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.6ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 14]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (121.14ms)
Completed 200 OK in 181ms (Views: 129.7ms | ActiveRecord: 1.4ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-17 09:53:17 -0400
Processing by Api::V1::AnswersController#create as HTML
  Parameters: {"content"=>"aaaa", "question_id"=>"14", "answer"=>{"content"=>"aaaa", "question_id"=>"14"}}
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 14], ["LIMIT", 1]]
  [1m[35m (0.5ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.9ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "aaaa"], ["question_id", 14], ["created_at", 2016-06-17 13:53:17 UTC], ["updated_at", 2016-06-17 13:53:17 UTC]]
  [1m[35m (2.9ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 137ms (ActiveRecord: 5.0ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 09:53:19 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.9ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.6ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 4]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (202.41ms)
Completed 200 OK in 257ms (Views: 209.8ms | ActiveRecord: 1.5ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-17 09:53:22 -0400
Processing by Api::V1::AnswersController#create as HTML
  Parameters: {"content"=>"aaa", "question_id"=>"4", "answer"=>{"content"=>"aaa", "question_id"=>"4"}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 4], ["LIMIT", 1]]
  [1m[35m (0.9ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.7ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "aaa"], ["question_id", 4], ["created_at", 2016-06-17 13:53:22 UTC], ["updated_at", 2016-06-17 13:53:22 UTC]]
  [1m[35m (2.9ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 126ms (ActiveRecord: 5.4ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 09:53:25 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.7ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 23]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (111.22ms)
Completed 200 OK in 168ms (Views: 122.7ms | ActiveRecord: 1.4ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-17 09:53:27 -0400
Processing by Api::V1::AnswersController#create as HTML
  Parameters: {"content"=>"aaa", "question_id"=>"23", "answer"=>{"content"=>"aaa", "question_id"=>"23"}}
  [1m[36mQuestion Load (0.9ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 23], ["LIMIT", 1]]
  [1m[35m (0.6ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.7ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "aaa"], ["question_id", 23], ["created_at", 2016-06-17 13:53:27 UTC], ["updated_at", 2016-06-17 13:53:27 UTC]]
  [1m[35m (4.7ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 131ms (ActiveRecord: 6.8ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 09:53:31 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.6ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 10]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (109.49ms)
Completed 200 OK in 168ms (Views: 116.3ms | ActiveRecord: 1.4ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-17 09:53:34 -0400
Processing by Api::V1::AnswersController#create as HTML
  Parameters: {"content"=>"w", "question_id"=>"10", "answer"=>{"content"=>"w", "question_id"=>"10"}}
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 10], ["LIMIT", 1]]
  [1m[35m (0.6ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.8ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "w"], ["question_id", 10], ["created_at", 2016-06-17 13:53:34 UTC], ["updated_at", 2016-06-17 13:53:34 UTC]]
  [1m[35m (2.8ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 124ms (ActiveRecord: 4.7ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 09:54:13 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.9ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.8ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 28]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (80.06ms)
Completed 200 OK in 141ms (Views: 91.4ms | ActiveRecord: 1.7ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 09:54:38 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.9ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.7ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 20]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (152.37ms)
Completed 200 OK in 214ms (Views: 161.0ms | ActiveRecord: 1.6ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-17 09:55:02 -0400
Processing by Api::V1::AnswersController#create as HTML
  Parameters: {"content"=>"sss", "question_id"=>"20", "answer"=>{"content"=>"sss", "question_id"=>"20"}}
  [1m[36mQuestion Load (1.1ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 20], ["LIMIT", 1]]
  [1m[35m (1.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (1.0ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "sss"], ["question_id", 20], ["created_at", 2016-06-17 13:55:02 UTC], ["updated_at", 2016-06-17 13:55:02 UTC]]
  [1m[35m (236.9ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 412ms (ActiveRecord: 240.3ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 09:55:06 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.6ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 22]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (123.08ms)
Completed 200 OK in 181ms (Views: 137.2ms | ActiveRecord: 1.3ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-17 09:55:08 -0400
Processing by Api::V1::AnswersController#create as HTML
  Parameters: {"content"=>"aaaa", "question_id"=>"22", "answer"=>{"content"=>"aaaa", "question_id"=>"22"}}
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 22], ["LIMIT", 1]]
  [1m[35m (0.7ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.8ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "aaaa"], ["question_id", 22], ["created_at", 2016-06-17 13:55:09 UTC], ["updated_at", 2016-06-17 13:55:09 UTC]]
  [1m[35m (1.4ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 121ms (ActiveRecord: 3.4ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 09:55:46 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.8ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 20]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (181.38ms)
Completed 200 OK in 245ms (Views: 190.2ms | ActiveRecord: 1.6ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-17 09:57:30 -0400
Processing by Api::V1::AnswersController#create as HTML
  Parameters: {"content"=>"sss", "question_id"=>"20", "answer"=>{"content"=>"sss", "question_id"=>"20"}}
  [1m[36mQuestion Load (1.1ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 20], ["LIMIT", 1]]
  [1m[35m (0.5ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (1.2ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "sss"], ["question_id", 20], ["created_at", 2016-06-17 13:57:30 UTC], ["updated_at", 2016-06-17 13:57:30 UTC]]
  [1m[35m (43.6ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 200ms (ActiveRecord: 46.4ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 09:57:32 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (1.5ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.9ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 3]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (85.58ms)
Completed 200 OK in 147ms (Views: 96.0ms | ActiveRecord: 2.4ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 09:58:26 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (1.0ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.6ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 10]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (159.34ms)
Completed 200 OK in 222ms (Views: 166.1ms | ActiveRecord: 1.6ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-17 09:59:07 -0400
Processing by Api::V1::AnswersController#create as HTML
  Parameters: {"attributes"=>{"content"=>"adasdasd", "question_id"=>"10"}, "answer"=>{}}
  [1m[36mQuestion Load (1.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" IS NULL LIMIT $1[0m  [["LIMIT", 1]]
Completed 500 Internal Server Error in 31ms (ActiveRecord: 1.2ms)


  
NoMethodError (undefined method `answers' for nil:NilClass):
  
app/controllers/api/v1/answers_controller.rb:15:in `create'
Started GET "/api/v1/random" for ::1 at 2016-06-17 09:59:45 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (1.2ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.7ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 19]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (138.69ms)
Completed 200 OK in 199ms (Views: 146.7ms | ActiveRecord: 1.9ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-17 10:01:23 -0400
Processing by Api::V1::AnswersController#create as HTML
  Parameters: {"attributes"=>{"content"=>"aaaaa", "question_id"=>"19"}, "answer"=>{}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" IS NULL LIMIT $1[0m  [["LIMIT", 1]]
Completed 500 Internal Server Error in 25ms (ActiveRecord: 0.8ms)


  
NoMethodError (undefined method `answers' for nil:NilClass):
  
app/controllers/api/v1/answers_controller.rb:15:in `create'
Started GET "/api/v1/random" for ::1 at 2016-06-17 10:01:35 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (1.0ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.7ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 19]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (120.45ms)
Completed 200 OK in 184ms (Views: 128.0ms | ActiveRecord: 1.6ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-17 10:01:37 -0400
Processing by Api::V1::AnswersController#create as HTML
  Parameters: {"attributes"=>{"content"=>"asaasas", "question_id"=>"19"}, "answer"=>{}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" IS NULL LIMIT $1[0m  [["LIMIT", 1]]
Completed 500 Internal Server Error in 22ms (ActiveRecord: 0.8ms)


  
NoMethodError (undefined method `answers' for nil:NilClass):
  
app/controllers/api/v1/answers_controller.rb:15:in `create'
Started GET "/api/v1/random" for ::1 at 2016-06-17 10:02:27 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.6ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 24]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (394.89ms)
Completed 200 OK in 536ms (Views: 429.2ms | ActiveRecord: 11.8ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 10:02:29 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.6ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 13]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (114.17ms)
Completed 200 OK in 177ms (Views: 132.2ms | ActiveRecord: 1.4ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-17 10:02:31 -0400
Processing by Api::V1::AnswersController#create as HTML
  Parameters: {"attributes"=>{"content"=>"asasasa", "question_id"=>"13"}, "answer"=>{}}
  [1m[36mQuestion Load (1.1ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 13], ["LIMIT", 1]]
  [1m[35m (6.0ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.9ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "asasasa"], ["question_id", 13], ["created_at", 2016-06-17 14:02:32 UTC], ["updated_at", 2016-06-17 14:02:32 UTC]]
  [1m[35m (67.5ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 221ms (ActiveRecord: 75.5ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 10:02:34 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.6ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 5]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (81.63ms)
Completed 200 OK in 143ms (Views: 96.4ms | ActiveRecord: 1.5ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 10:02:49 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.7ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 18]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (196.45ms)
Completed 200 OK in 253ms (Views: 203.7ms | ActiveRecord: 1.4ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-17 10:02:50 -0400
Processing by Api::V1::AnswersController#create as HTML
  Parameters: {"attributes"=>{"content"=>"qqqqqq", "question_id"=>"18"}, "answer"=>{}}
  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 18], ["LIMIT", 1]]
  [1m[35m (0.6ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (1.0ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "qqqqqq"], ["question_id", 18], ["created_at", 2016-06-17 14:02:50 UTC], ["updated_at", 2016-06-17 14:02:50 UTC]]
  [1m[35m (2.3ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 139ms (ActiveRecord: 4.5ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 10:02:52 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (1.1ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 23]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (150.26ms)
Completed 200 OK in 216ms (Views: 163.5ms | ActiveRecord: 1.9ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-17 10:02:55 -0400
Processing by Api::V1::AnswersController#create as HTML
  Parameters: {"attributes"=>{"content"=>"aaaaa", "question_id"=>"23"}, "answer"=>{}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 23], ["LIMIT", 1]]
  [1m[35m (0.7ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (77.5ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "aaaaa"], ["question_id", 23], ["created_at", 2016-06-17 14:02:55 UTC], ["updated_at", 2016-06-17 14:02:55 UTC]]
  [1m[35m (1.7ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 214ms (ActiveRecord: 80.6ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 10:02:56 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.6ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 28]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (82.02ms)
Completed 200 OK in 144ms (Views: 95.6ms | ActiveRecord: 1.4ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 10:03:14 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (1.0ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 17]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (92.75ms)
Completed 200 OK in 150ms (Views: 103.0ms | ActiveRecord: 1.7ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 10:03:23 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.7ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 20]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (228.36ms)
Completed 200 OK in 292ms (Views: 244.0ms | ActiveRecord: 1.5ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-17 10:03:27 -0400
Processing by Api::V1::AnswersController#create as HTML
  Parameters: {"attributes"=>{"content"=>"qqqqq", "question_id"=>"20"}, "answer"=>{}}
  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 20], ["LIMIT", 1]]
  [1m[35m (0.6ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (1.2ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "qqqqq"], ["question_id", 20], ["created_at", 2016-06-17 14:03:27 UTC], ["updated_at", 2016-06-17 14:03:27 UTC]]
  [1m[35m (3.1ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 152ms (ActiveRecord: 5.5ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 10:03:29 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (5.1ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.9ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 13]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (165.37ms)
Completed 200 OK in 227ms (Views: 177.1ms | ActiveRecord: 6.0ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-17 10:03:32 -0400
Processing by Api::V1::AnswersController#create as HTML
  Parameters: {"attributes"=>{"content"=>"a", "question_id"=>"13"}, "answer"=>{}}
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 13], ["LIMIT", 1]]
  [1m[35m (0.6ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.8ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "a"], ["question_id", 13], ["created_at", 2016-06-17 14:03:32 UTC], ["updated_at", 2016-06-17 14:03:32 UTC]]
  [1m[35m (2.8ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 138ms (ActiveRecord: 4.8ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 10:03:34 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (1.4ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.7ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 12]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (90.01ms)
Completed 200 OK in 157ms (Views: 101.5ms | ActiveRecord: 2.1ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 10:05:47 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (1.3ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.6ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 32]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (170.49ms)
Completed 200 OK in 234ms (Views: 177.9ms | ActiveRecord: 1.9ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-17 10:05:48 -0400
Processing by Api::V1::AnswersController#create as HTML
  Parameters: {"attributes"=>{"content"=>"a", "question_id"=>"32"}, "answer"=>{}}
  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 32], ["LIMIT", 1]]
  [1m[35m (0.8ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.8ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "a"], ["question_id", 32], ["created_at", 2016-06-17 14:05:48 UTC], ["updated_at", 2016-06-17 14:05:48 UTC]]
  [1m[35m (11.5ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 151ms (ActiveRecord: 13.8ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 10:05:50 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (1.1ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 11]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (129.77ms)
Completed 200 OK in 190ms (Views: 140.8ms | ActiveRecord: 1.9ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-17 10:05:52 -0400
Processing by Api::V1::AnswersController#create as HTML
  Parameters: {"attributes"=>{"content"=>"a", "question_id"=>"11"}, "answer"=>{}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 11], ["LIMIT", 1]]
  [1m[35m (0.6ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (1.2ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "a"], ["question_id", 11], ["created_at", 2016-06-17 14:05:52 UTC], ["updated_at", 2016-06-17 14:05:52 UTC]]
  [1m[35m (3.2ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 144ms (ActiveRecord: 5.9ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 10:05:54 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.6ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 31]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (151.27ms)
Completed 200 OK in 219ms (Views: 163.3ms | ActiveRecord: 1.4ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-17 10:05:55 -0400
Processing by Api::V1::AnswersController#create as HTML
  Parameters: {"attributes"=>{"content"=>"a", "question_id"=>"31"}, "answer"=>{}}
  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 31], ["LIMIT", 1]]
  [1m[35m (0.5ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.8ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "a"], ["question_id", 31], ["created_at", 2016-06-17 14:05:55 UTC], ["updated_at", 2016-06-17 14:05:55 UTC]]
  [1m[35m (2.8ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 130ms (ActiveRecord: 4.8ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 10:05:57 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.9ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.6ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 29]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (123.65ms)
Completed 200 OK in 189ms (Views: 136.7ms | ActiveRecord: 1.5ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-17 10:05:58 -0400
Processing by Api::V1::AnswersController#create as HTML
  Parameters: {"attributes"=>{"content"=>"a", "question_id"=>"29"}, "answer"=>{}}
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 29], ["LIMIT", 1]]
  [1m[35m (0.5ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.7ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "a"], ["question_id", 29], ["created_at", 2016-06-17 14:05:58 UTC], ["updated_at", 2016-06-17 14:05:58 UTC]]
  [1m[35m (3.2ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 143ms (ActiveRecord: 5.1ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 10:05:59 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.6ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 11]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (161.68ms)
Completed 200 OK in 237ms (Views: 180.3ms | ActiveRecord: 1.5ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-17 10:06:01 -0400
Processing by Api::V1::AnswersController#create as HTML
  Parameters: {"attributes"=>{"content"=>"qa", "question_id"=>"11"}, "answer"=>{}}
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 11], ["LIMIT", 1]]
  [1m[35m (0.8ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.8ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "qa"], ["question_id", 11], ["created_at", 2016-06-17 14:06:01 UTC], ["updated_at", 2016-06-17 14:06:01 UTC]]
  [1m[35m (2.8ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 139ms (ActiveRecord: 5.0ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 10:06:02 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.9ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.6ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 11]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (206.47ms)
Completed 200 OK in 277ms (Views: 218.1ms | ActiveRecord: 1.5ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-17 10:06:04 -0400
Processing by Api::V1::AnswersController#create as HTML
  Parameters: {"attributes"=>{"content"=>"a", "question_id"=>"11"}, "answer"=>{}}
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 11], ["LIMIT", 1]]
  [1m[35m (0.5ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.8ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "a"], ["question_id", 11], ["created_at", 2016-06-17 14:06:04 UTC], ["updated_at", 2016-06-17 14:06:04 UTC]]
  [1m[35m (3.1ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 149ms (ActiveRecord: 5.1ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 10:06:05 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.9ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.9ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 18]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (245.96ms)
Completed 200 OK in 307ms (Views: 254.1ms | ActiveRecord: 1.7ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-17 10:06:07 -0400
Processing by Api::V1::AnswersController#create as HTML
  Parameters: {"attributes"=>{"content"=>"a", "question_id"=>"18"}, "answer"=>{}}
  [1m[36mQuestion Load (1.0ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 18], ["LIMIT", 1]]
  [1m[35m (0.7ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (1.2ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "a"], ["question_id", 18], ["created_at", 2016-06-17 14:06:07 UTC], ["updated_at", 2016-06-17 14:06:07 UTC]]
  [1m[35m (3.0ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 155ms (ActiveRecord: 5.9ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 10:06:07 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (1.3ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.9ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 7]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (177.6ms)
Completed 200 OK in 247ms (Views: 184.8ms | ActiveRecord: 2.2ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-17 10:06:09 -0400
Processing by Api::V1::AnswersController#create as HTML
  Parameters: {"attributes"=>{"content"=>"a", "question_id"=>"7"}, "answer"=>{}}
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 7], ["LIMIT", 1]]
  [1m[35m (0.6ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.7ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "a"], ["question_id", 7], ["created_at", 2016-06-17 14:06:09 UTC], ["updated_at", 2016-06-17 14:06:09 UTC]]
  [1m[35m (2.7ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 146ms (ActiveRecord: 4.6ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 10:06:10 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (1.0ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.7ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 2]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (235.84ms)
Completed 200 OK in 305ms (Views: 252.6ms | ActiveRecord: 1.7ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-17 10:06:12 -0400
Processing by Api::V1::AnswersController#create as HTML
  Parameters: {"attributes"=>{"content"=>"a", "question_id"=>"2"}, "answer"=>{}}
  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
  [1m[35m (0.7ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (1.1ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "a"], ["question_id", 2], ["created_at", 2016-06-17 14:06:12 UTC], ["updated_at", 2016-06-17 14:06:12 UTC]]
  [1m[35m (1.5ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 142ms (ActiveRecord: 3.9ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 10:06:13 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (1.2ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.7ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 5]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (96.46ms)
Completed 200 OK in 166ms (Views: 104.9ms | ActiveRecord: 1.8ms)


  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."content" = $1 LIMIT $2[0m  [["content", "What did you like least about your last job?"], ["LIMIT", 1]]
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."content" = $1 LIMIT $2[0m  [["content", "What did you like least about your last job?"], ["LIMIT", 1]]
  [1m[36mAnswer Load (0.4ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 5]]
Started GET "/api/v1/random" for ::1 at 2016-06-17 10:07:51 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.7ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 4]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (287.19ms)
Completed 200 OK in 360ms (Views: 299.6ms | ActiveRecord: 1.4ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-17 10:07:53 -0400
Processing by Api::V1::AnswersController#create as HTML
  Parameters: {"attributes"=>{"content"=>"a", "question_id"=>"4"}, "answer"=>{}}
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 4], ["LIMIT", 1]]
  [1m[35m (6.9ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.7ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "a"], ["question_id", 4], ["created_at", 2016-06-17 14:07:53 UTC], ["updated_at", 2016-06-17 14:07:53 UTC]]
  [1m[35m (60.0ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 203ms (ActiveRecord: 68.3ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 10:07:54 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.7ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 8]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (136.64ms)
Completed 200 OK in 200ms (Views: 151.4ms | ActiveRecord: 1.4ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-17 10:07:56 -0400
Processing by Api::V1::AnswersController#create as HTML
  Parameters: {"attributes"=>{"content"=>"a", "question_id"=>"8"}, "answer"=>{}}
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 8], ["LIMIT", 1]]
  [1m[35m (0.5ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.8ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "a"], ["question_id", 8], ["created_at", 2016-06-17 14:07:56 UTC], ["updated_at", 2016-06-17 14:07:56 UTC]]
  [1m[35m (2.9ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 151ms (ActiveRecord: 4.9ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 10:07:57 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (1.0ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 4]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (341.99ms)
Completed 200 OK in 414ms (Views: 351.9ms | ActiveRecord: 1.7ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-17 10:08:00 -0400
Processing by Api::V1::AnswersController#create as HTML
  Parameters: {"attributes"=>{"content"=>"a", "question_id"=>"4"}, "answer"=>{}}
  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 4], ["LIMIT", 1]]
  [1m[35m (0.7ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.8ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "a"], ["question_id", 4], ["created_at", 2016-06-17 14:08:00 UTC], ["updated_at", 2016-06-17 14:08:00 UTC]]
  [1m[35m (16.3ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 272ms (ActiveRecord: 18.4ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 10:08:01 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.9ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 17]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (71.18ms)
Completed 200 OK in 119ms (Views: 77.4ms | ActiveRecord: 1.7ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 10:08:08 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.6ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 12]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (83.08ms)
Completed 200 OK in 140ms (Views: 93.0ms | ActiveRecord: 1.4ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 10:08:11 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.7ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 2]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (233.39ms)
Completed 200 OK in 292ms (Views: 241.5ms | ActiveRecord: 1.4ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-17 10:08:13 -0400
Processing by Api::V1::AnswersController#create as HTML
  Parameters: {"attributes"=>{"content"=>"aa", "question_id"=>"2"}, "answer"=>{}}
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
  [1m[35m (0.7ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.8ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "aa"], ["question_id", 2], ["created_at", 2016-06-17 14:08:13 UTC], ["updated_at", 2016-06-17 14:08:13 UTC]]
  [1m[35m (3.3ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 122ms (ActiveRecord: 5.4ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 10:08:37 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.7ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 22]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (138.24ms)
Completed 200 OK in 192ms (Views: 146.2ms | ActiveRecord: 1.5ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-17 10:08:53 -0400
Processing by Api::V1::AnswersController#create as HTML
  Parameters: {"attributes"=>{"content"=>"a", "question_id"=>"22"}, "answer"=>{}}
  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 22], ["LIMIT", 1]]
  [1m[35m (0.5ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.8ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "a"], ["question_id", 22], ["created_at", 2016-06-17 14:08:53 UTC], ["updated_at", 2016-06-17 14:08:53 UTC]]
  [1m[35m (54.8ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 176ms (ActiveRecord: 56.8ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 10:08:54 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (1.3ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.7ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 26]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (108.81ms)
Completed 200 OK in 165ms (Views: 118.1ms | ActiveRecord: 1.9ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-17 10:09:02 -0400
Processing by Api::V1::AnswersController#create as HTML
  Parameters: {"attributes"=>{"content"=>"a", "question_id"=>"26"}, "answer"=>{}}
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 26], ["LIMIT", 1]]
  [1m[35m (0.8ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (1.1ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "a"], ["question_id", 26], ["created_at", 2016-06-17 14:09:02 UTC], ["updated_at", 2016-06-17 14:09:02 UTC]]
  [1m[35m (3.0ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 126ms (ActiveRecord: 5.6ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 10:09:03 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (1.3ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 32]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (150.39ms)
Completed 200 OK in 201ms (Views: 156.4ms | ActiveRecord: 2.1ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-17 10:09:15 -0400
Processing by Api::V1::AnswersController#create as HTML
  Parameters: {"attributes"=>{"content"=>"a", "question_id"=>"32"}, "answer"=>{}}
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 32], ["LIMIT", 1]]
  [1m[35m (0.5ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.8ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "a"], ["question_id", 32], ["created_at", 2016-06-17 14:09:15 UTC], ["updated_at", 2016-06-17 14:09:15 UTC]]
  [1m[35m (2.8ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 116ms (ActiveRecord: 4.7ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 10:09:16 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (1.4ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (1.1ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 25]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (108.7ms)
Completed 200 OK in 207ms (Views: 115.1ms | ActiveRecord: 2.5ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-17 10:09:23 -0400
Processing by Api::V1::AnswersController#create as HTML
  Parameters: {"attributes"=>{"content"=>"a", "question_id"=>"25"}, "answer"=>{}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 25], ["LIMIT", 1]]
  [1m[35m (0.8ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (1.3ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "a"], ["question_id", 25], ["created_at", 2016-06-17 14:09:23 UTC], ["updated_at", 2016-06-17 14:09:23 UTC]]
  [1m[35m (2.8ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 134ms (ActiveRecord: 5.6ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 10:09:25 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.6ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 5]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (76.54ms)
Completed 200 OK in 130ms (Views: 83.2ms | ActiveRecord: 1.4ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 10:10:58 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (1.3ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.6ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 30]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (169.36ms)
Completed 200 OK in 233ms (Views: 182.3ms | ActiveRecord: 1.9ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-17 10:11:03 -0400
Processing by Api::V1::AnswersController#create as HTML
  Parameters: {"attributes"=>{"content"=>"a", "question_id"=>"30"}, "answer"=>{}}
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 30], ["LIMIT", 1]]
  [1m[35m (0.6ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (1.0ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "a"], ["question_id", 30], ["created_at", 2016-06-17 14:11:03 UTC], ["updated_at", 2016-06-17 14:11:03 UTC]]
  [1m[35m (75.3ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 183ms (ActiveRecord: 77.4ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 10:11:03 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (6.3ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (1.0ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 5]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (82.8ms)
Completed 200 OK in 143ms (Views: 89.4ms | ActiveRecord: 7.3ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 10:14:26 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (1.3ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.7ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 4]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (348.49ms)
Completed 200 OK in 417ms (Views: 357.8ms | ActiveRecord: 2.0ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-17 10:14:28 -0400
Processing by Api::V1::AnswersController#create as HTML
  Parameters: {"attributes"=>{"content"=>"aaa", "question_id"=>"4"}, "answer"=>{}}
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 4], ["LIMIT", 1]]
  [1m[35m (0.6ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.8ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "aaa"], ["question_id", 4], ["created_at", 2016-06-17 14:14:28 UTC], ["updated_at", 2016-06-17 14:14:28 UTC]]
  [1m[35m (1.9ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 112ms (ActiveRecord: 3.9ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 10:14:29 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.9ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.8ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 5]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (74.98ms)
Completed 200 OK in 125ms (Views: 81.4ms | ActiveRecord: 1.7ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 10:15:23 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.9ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.6ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 10]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (147.92ms)
Completed 200 OK in 202ms (Views: 155.5ms | ActiveRecord: 1.5ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-17 10:15:27 -0400
Processing by Api::V1::AnswersController#create as HTML
  Parameters: {"attributes"=>{"content"=>"aaa", "question_id"=>"10"}, "answer"=>{}}
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 10], ["LIMIT", 1]]
  [1m[35m (0.6ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.8ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "aaa"], ["question_id", 10], ["created_at", 2016-06-17 14:15:27 UTC], ["updated_at", 2016-06-17 14:15:27 UTC]]
  [1m[35m (66.2ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 185ms (ActiveRecord: 68.3ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 10:15:28 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (1.4ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.6ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 23]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (160.64ms)
Completed 200 OK in 223ms (Views: 170.0ms | ActiveRecord: 2.0ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 10:15:32 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (4.4ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.6ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 18]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (231.94ms)
Completed 200 OK in 284ms (Views: 239.6ms | ActiveRecord: 5.0ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-17 10:15:35 -0400
Processing by Api::V1::AnswersController#create as HTML
  Parameters: {"attributes"=>{"content"=>"sss", "question_id"=>"18"}, "answer"=>{}}
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 18], ["LIMIT", 1]]
  [1m[35m (0.6ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.9ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "sss"], ["question_id", 18], ["created_at", 2016-06-17 14:15:36 UTC], ["updated_at", 2016-06-17 14:15:36 UTC]]
  [1m[35m (2.7ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 118ms (ActiveRecord: 4.7ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 10:15:36 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.6ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 23]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (168.56ms)
Completed 200 OK in 228ms (Views: 184.1ms | ActiveRecord: 1.4ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-17 10:15:41 -0400
Processing by Api::V1::AnswersController#create as HTML
  Parameters: {"attributes"=>{"content"=>"aaaa", "question_id"=>"23"}, "answer"=>{}}
  [1m[36mQuestion Load (1.0ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 23], ["LIMIT", 1]]
  [1m[35m (3.9ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.8ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "aaaa"], ["question_id", 23], ["created_at", 2016-06-17 14:15:41 UTC], ["updated_at", 2016-06-17 14:15:41 UTC]]
  [1m[35m (38.8ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 161ms (ActiveRecord: 44.5ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 10:15:41 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.6ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 32]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (181.92ms)
Completed 200 OK in 234ms (Views: 189.0ms | ActiveRecord: 1.4ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-17 10:15:46 -0400
Processing by Api::V1::AnswersController#create as HTML
  Parameters: {"attributes"=>{"content"=>"qqqqqq", "question_id"=>"32"}, "answer"=>{}}
  [1m[36mQuestion Load (1.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 32], ["LIMIT", 1]]
  [1m[35m (0.6ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (1.2ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "qqqqqq"], ["question_id", 32], ["created_at", 2016-06-17 14:15:46 UTC], ["updated_at", 2016-06-17 14:15:46 UTC]]
  [1m[35m (2.9ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 131ms (ActiveRecord: 5.9ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 10:15:47 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.7ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 13]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (174.11ms)
Completed 200 OK in 228ms (Views: 183.4ms | ActiveRecord: 1.4ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-17 10:15:53 -0400
Processing by Api::V1::AnswersController#create as HTML
  Parameters: {"attributes"=>{"content"=>"aaaa", "question_id"=>"13"}, "answer"=>{}}
  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 13], ["LIMIT", 1]]
  [1m[35m (0.8ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.8ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "aaaa"], ["question_id", 13], ["created_at", 2016-06-17 14:15:53 UTC], ["updated_at", 2016-06-17 14:15:53 UTC]]
  [1m[35m (3.2ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 119ms (ActiveRecord: 5.4ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 10:15:54 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.6ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 15]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (100.54ms)
Completed 200 OK in 153ms (Views: 110.7ms | ActiveRecord: 1.4ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-17 10:15:57 -0400
Processing by Api::V1::AnswersController#create as HTML
  Parameters: {"attributes"=>{"content"=>"aaaa", "question_id"=>"15"}, "answer"=>{}}
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 15], ["LIMIT", 1]]
  [1m[35m (0.5ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (1.0ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "aaaa"], ["question_id", 15], ["created_at", 2016-06-17 14:15:57 UTC], ["updated_at", 2016-06-17 14:15:57 UTC]]
  [1m[35m (2.6ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 117ms (ActiveRecord: 4.7ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 10:15:58 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.9ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.6ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 5]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (72.43ms)
Completed 200 OK in 128ms (Views: 84.4ms | ActiveRecord: 1.5ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 10:16:03 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (1.1ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 11]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (203.19ms)
Completed 200 OK in 252ms (Views: 209.4ms | ActiveRecord: 1.9ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 10:17:05 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.9ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.6ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 14]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (133.15ms)
Completed 200 OK in 197ms (Views: 148.7ms | ActiveRecord: 1.5ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-17 10:17:07 -0400
Processing by Api::V1::AnswersController#create as HTML
  Parameters: {"attributes"=>{"content"=>"sss", "question_id"=>"14"}, "answer"=>{}}
  [1m[36mQuestion Load (4.0ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 14], ["LIMIT", 1]]
  [1m[35m (0.6ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (1.0ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "sss"], ["question_id", 14], ["created_at", 2016-06-17 14:17:07 UTC], ["updated_at", 2016-06-17 14:17:07 UTC]]
  [1m[35m (58.2ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 179ms (ActiveRecord: 63.7ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 10:17:11 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.9ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.9ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 31]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (165.98ms)
Completed 200 OK in 219ms (Views: 176.0ms | ActiveRecord: 1.8ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-17 10:17:13 -0400
Processing by Api::V1::AnswersController#create as HTML
  Parameters: {"attributes"=>{"content"=>"ssss", "question_id"=>"31"}, "answer"=>{}}
  [1m[36mQuestion Load (0.9ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 31], ["LIMIT", 1]]
  [1m[35m (0.5ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.7ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "ssss"], ["question_id", 31], ["created_at", 2016-06-17 14:17:13 UTC], ["updated_at", 2016-06-17 14:17:13 UTC]]
  [1m[35m (3.1ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 126ms (ActiveRecord: 5.2ms)


  [1m[36mQuestion Load (1.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."content" = $1 LIMIT $2[0m  [["content", "What did you like least about your last job?"], ["LIMIT", 1]]
  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."content" = $1 LIMIT $2[0m  [["content", "What did you like least about your last job?"], ["LIMIT", 1]]
  [1m[36mAnswer Load (0.5ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 5]]
Started GET "/api/v1/random" for ::1 at 2016-06-17 10:24:08 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.9ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.8ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 11]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (460.01ms)
Completed 200 OK in 601ms (Views: 493.4ms | ActiveRecord: 13.1ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-17 10:24:42 -0400
Processing by Api::V1::AnswersController#create as HTML
  Parameters: {"attributes"=>{"content"=>"ssss", "question_id"=>"11"}, "answer"=>{}}
  [1m[36mQuestion Load (1.0ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 11], ["LIMIT", 1]]
  [1m[35m (0.6ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (1.9ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "ssss"], ["question_id", 11], ["created_at", 2016-06-17 14:24:42 UTC], ["updated_at", 2016-06-17 14:24:42 UTC]]
  [1m[35m (76.0ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 221ms (ActiveRecord: 79.6ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 10:24:43 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.7ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 17]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (86.07ms)
Completed 200 OK in 142ms (Views: 97.2ms | ActiveRecord: 1.5ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 10:25:32 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.6ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 24]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (150.16ms)
Completed 200 OK in 207ms (Views: 157.8ms | ActiveRecord: 1.4ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-17 10:25:34 -0400
Processing by Api::V1::AnswersController#create as HTML
  Parameters: {"attributes"=>{"content"=>"aaaa", "question_id"=>"24"}, "answer"=>{}}
  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 24], ["LIMIT", 1]]
  [1m[35m (0.8ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.7ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "aaaa"], ["question_id", 24], ["created_at", 2016-06-17 14:25:34 UTC], ["updated_at", 2016-06-17 14:25:34 UTC]]
  [1m[35m (2.8ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 126ms (ActiveRecord: 5.0ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 10:25:35 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.6ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 9]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (150.31ms)
Completed 200 OK in 202ms (Views: 157.4ms | ActiveRecord: 1.4ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-17 10:25:38 -0400
Processing by Api::V1::AnswersController#create as HTML
  Parameters: {"attributes"=>{"content"=>"aaass", "question_id"=>"9"}, "answer"=>{}}
  [1m[36mQuestion Load (0.9ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 9], ["LIMIT", 1]]
  [1m[35m (0.6ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.8ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "aaass"], ["question_id", 9], ["created_at", 2016-06-17 14:25:38 UTC], ["updated_at", 2016-06-17 14:25:38 UTC]]
  [1m[35m (2.7ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 133ms (ActiveRecord: 5.0ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 10:25:39 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (1.0ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 8]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (149.39ms)
Completed 200 OK in 209ms (Views: 160.2ms | ActiveRecord: 1.8ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-17 10:25:42 -0400
Processing by Api::V1::AnswersController#create as HTML
  Parameters: {"attributes"=>{"content"=>"aaaa", "question_id"=>"8"}, "answer"=>{}}
  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 8], ["LIMIT", 1]]
  [1m[35m (0.6ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.7ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "aaaa"], ["question_id", 8], ["created_at", 2016-06-17 14:25:42 UTC], ["updated_at", 2016-06-17 14:25:42 UTC]]
  [1m[35m (2.0ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 126ms (ActiveRecord: 3.9ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 10:25:43 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.6ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 17]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (94.46ms)
Completed 200 OK in 159ms (Views: 105.4ms | ActiveRecord: 1.4ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 10:25:50 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.6ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 31]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (222.47ms)
Completed 200 OK in 278ms (Views: 233.7ms | ActiveRecord: 1.5ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-17 10:25:52 -0400
Processing by Api::V1::AnswersController#create as HTML
  Parameters: {"attributes"=>{"content"=>"aaaaaa", "question_id"=>"31"}, "answer"=>{}}
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 31], ["LIMIT", 1]]
  [1m[35m (0.7ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.7ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "aaaaaa"], ["question_id", 31], ["created_at", 2016-06-17 14:25:52 UTC], ["updated_at", 2016-06-17 14:25:52 UTC]]
  [1m[35m (4.5ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 134ms (ActiveRecord: 6.6ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 10:25:54 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (1.0ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (1.0ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 2]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (290.01ms)
Completed 200 OK in 347ms (Views: 296.9ms | ActiveRecord: 2.0ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-17 10:26:07 -0400
Processing by Api::V1::AnswersController#create as HTML
  Parameters: {"attributes"=>{"content"=>"a", "question_id"=>"2"}, "answer"=>{}}
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
  [1m[35m (4.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.7ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "a"], ["question_id", 2], ["created_at", 2016-06-17 14:26:08 UTC], ["updated_at", 2016-06-17 14:26:08 UTC]]
  [1m[35m (3.2ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 131ms (ActiveRecord: 8.6ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 10:26:09 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (1.0ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.7ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 6]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (122.27ms)
Completed 200 OK in 186ms (Views: 130.2ms | ActiveRecord: 1.7ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-17 10:26:11 -0400
Processing by Api::V1::AnswersController#create as HTML
  Parameters: {"attributes"=>{"content"=>"a", "question_id"=>"6"}, "answer"=>{}}
  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 6], ["LIMIT", 1]]
  [1m[35m (0.6ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.8ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "a"], ["question_id", 6], ["created_at", 2016-06-17 14:26:11 UTC], ["updated_at", 2016-06-17 14:26:11 UTC]]
  [1m[35m (3.0ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 125ms (ActiveRecord: 5.0ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 10:26:12 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (1.0ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.9ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 19]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (112.17ms)
Completed 200 OK in 185ms (Views: 122.6ms | ActiveRecord: 2.0ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-17 10:26:14 -0400
Processing by Api::V1::AnswersController#create as HTML
  Parameters: {"attributes"=>{"content"=>"a", "question_id"=>"19"}, "answer"=>{}}
  [1m[36mQuestion Load (0.9ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 19], ["LIMIT", 1]]
  [1m[35m (0.6ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (95.5ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "a"], ["question_id", 19], ["created_at", 2016-06-17 14:26:14 UTC], ["updated_at", 2016-06-17 14:26:14 UTC]]
  [1m[35m (5.3ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 241ms (ActiveRecord: 102.2ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 10:26:15 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.6ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 4]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (368.35ms)
Completed 200 OK in 424ms (Views: 375.4ms | ActiveRecord: 1.4ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-17 10:26:19 -0400
Processing by Api::V1::AnswersController#create as HTML
  Parameters: {"attributes"=>{"content"=>"aaaa", "question_id"=>"4"}, "answer"=>{}}
  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 4], ["LIMIT", 1]]
  [1m[35m (0.7ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (6.7ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "aaaa"], ["question_id", 4], ["created_at", 2016-06-17 14:26:19 UTC], ["updated_at", 2016-06-17 14:26:19 UTC]]
  [1m[35m (3.1ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 142ms (ActiveRecord: 11.2ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 10:26:20 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (1.1ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.9ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 30]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (226.71ms)
Completed 200 OK in 292ms (Views: 237.9ms | ActiveRecord: 2.0ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-17 10:26:22 -0400
Processing by Api::V1::AnswersController#create as HTML
  Parameters: {"attributes"=>{"content"=>"aaaa", "question_id"=>"30"}, "answer"=>{}}
  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 30], ["LIMIT", 1]]
  [1m[35m (0.6ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (1.0ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "aaaa"], ["question_id", 30], ["created_at", 2016-06-17 14:26:22 UTC], ["updated_at", 2016-06-17 14:26:22 UTC]]
  [1m[35m (3.0ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 127ms (ActiveRecord: 5.2ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 10:26:23 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (1.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 10]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (193.86ms)
Completed 200 OK in 256ms (Views: 200.3ms | ActiveRecord: 2.0ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-17 10:26:26 -0400
Processing by Api::V1::AnswersController#create as HTML
  Parameters: {"attributes"=>{"content"=>"aaaa", "question_id"=>"10"}, "answer"=>{}}
  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 10], ["LIMIT", 1]]
  [1m[35m (0.6ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.9ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "aaaa"], ["question_id", 10], ["created_at", 2016-06-17 14:26:26 UTC], ["updated_at", 2016-06-17 14:26:26 UTC]]
  [1m[35m (2.6ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 139ms (ActiveRecord: 4.8ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 10:26:27 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.6ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 12]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (88.33ms)
Completed 200 OK in 150ms (Views: 100.2ms | ActiveRecord: 1.4ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 10:27:47 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.6ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 2]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (570.42ms)
Completed 200 OK in 728ms (Views: 625.8ms | ActiveRecord: 11.3ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-17 10:27:57 -0400
Processing by Api::V1::AnswersController#create as HTML
  Parameters: {"attributes"=>{"content"=>"aaa", "question_id"=>"2"}, "answer"=>{}}
Completed 500 Internal Server Error in 23581ms (ActiveRecord: 0.0ms)


  
SystemExit (exit):
  
app/controllers/api/v1/answers_controller.rb:14:in `create'
Started POST "/api/v1/answers" for ::1 at 2016-06-17 10:28:24 -0400
Processing by Api::V1::AnswersController#create as HTML
  Parameters: {"attributes"=>{"content"=>"aaa", "question_id"=>"2"}, "answer"=>{}}
  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
  [1m[35m (0.6ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (5.2ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "aaa"], ["question_id", 2], ["created_at", 2016-06-17 14:28:26 UTC], ["updated_at", 2016-06-17 14:28:26 UTC]]
  [1m[35m (1.6ms)[0m  [1m[35mCOMMIT[0m
Completed 500 Internal Server Error in 11763ms (ActiveRecord: 18.1ms)


  
SystemExit (exit):
  
app/controllers/api/v1/answers_controller.rb:18:in `create'
Started GET "/api/v1/random" for ::1 at 2016-06-17 10:28:39 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (1.1ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (1.0ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 21]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (245.31ms)
Completed 200 OK in 414ms (Views: 351.0ms | ActiveRecord: 2.8ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 10:28:40 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.8ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 18]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (313.29ms)
Completed 200 OK in 377ms (Views: 320.6ms | ActiveRecord: 1.6ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-17 10:28:44 -0400
Processing by Api::V1::AnswersController#create as HTML
  Parameters: {"attributes"=>{"content"=>"ssss", "question_id"=>"18"}, "answer"=>{}}
  [1m[36mQuestion Load (1.3ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 18], ["LIMIT", 1]]
  [1m[35m (4.5ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (2.2ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "ssss"], ["question_id", 18], ["created_at", 2016-06-17 14:28:44 UTC], ["updated_at", 2016-06-17 14:28:44 UTC]]
  [1m[35m (91.0ms)[0m  [1m[35mCOMMIT[0m
Completed 500 Internal Server Error in 34132ms (ActiveRecord: 99.0ms)


  
SystemExit (exit):
  
app/controllers/api/v1/answers_controller.rb:18:in `create'
Started GET "/api/v1/random" for ::1 at 2016-06-17 10:29:25 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.6ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 11]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (534.71ms)
Completed 200 OK in 666ms (Views: 553.7ms | ActiveRecord: 11.1ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-17 10:29:33 -0400
Processing by Api::V1::AnswersController#create as HTML
  Parameters: {"attributes"=>{"content"=>"aaa", "question_id"=>"11"}, "answer"=>{}}
  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 11], ["LIMIT", 1]]
  [1m[35m (0.6ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (1.5ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "aaa"], ["question_id", 11], ["created_at", 2016-06-17 14:29:33 UTC], ["updated_at", 2016-06-17 14:29:33 UTC]]
  [1m[35m (2.7ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 171ms (ActiveRecord: 5.6ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 10:29:34 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (1.9ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.9ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 24]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (232.58ms)
Completed 200 OK in 310ms (Views: 245.7ms | ActiveRecord: 2.8ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-17 10:29:36 -0400
Processing by Api::V1::AnswersController#create as HTML
  Parameters: {"attributes"=>{"content"=>"aaaaa", "question_id"=>"24"}, "answer"=>{}}
  [1m[36mQuestion Load (0.9ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 24], ["LIMIT", 1]]
  [1m[35m (0.6ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.8ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "aaaaa"], ["question_id", 24], ["created_at", 2016-06-17 14:29:36 UTC], ["updated_at", 2016-06-17 14:29:36 UTC]]
  [1m[35m (3.1ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 145ms (ActiveRecord: 5.4ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 10:29:37 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.9ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.7ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 12]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (95.43ms)
Completed 200 OK in 165ms (Views: 107.9ms | ActiveRecord: 1.6ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 10:30:07 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (5.5ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.8ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 2]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (421.83ms)
Completed 200 OK in 496ms (Views: 436.7ms | ActiveRecord: 6.3ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-17 10:30:10 -0400
Processing by Api::V1::AnswersController#create as HTML
  Parameters: {"attributes"=>{"content"=>"sss", "question_id"=>"2"}, "answer"=>{}}
  [1m[36mQuestion Load (1.5ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
  [1m[35m (0.6ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.7ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "sss"], ["question_id", 2], ["created_at", 2016-06-17 14:30:10 UTC], ["updated_at", 2016-06-17 14:30:10 UTC]]
  [1m[35m (261.2ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 422ms (ActiveRecord: 264.0ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 10:30:12 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.9ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.7ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 3]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (96.78ms)
Completed 200 OK in 165ms (Views: 106.9ms | ActiveRecord: 1.6ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 10:30:43 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.7ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 6]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (167.34ms)
Completed 200 OK in 236ms (Views: 179.0ms | ActiveRecord: 1.5ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-17 10:30:50 -0400
Processing by Api::V1::AnswersController#create as HTML
  Parameters: {"attributes"=>{"content"=>"a", "question_id"=>"6"}, "answer"=>{}}
  [1m[36mQuestion Load (0.9ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 6], ["LIMIT", 1]]
  [1m[35m (0.8ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (5.5ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "a"], ["question_id", 6], ["created_at", 2016-06-17 14:30:50 UTC], ["updated_at", 2016-06-17 14:30:50 UTC]]
Started POST "/api/v1/answers" for ::1 at 2016-06-17 10:30:50 -0400
Processing by Api::V1::AnswersController#create as HTML
  Parameters: {"attributes"=>{"content"=>"a", "question_id"=>"6"}, "answer"=>{}}
  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 6], ["LIMIT", 1]]
  [1m[35m (43.2ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 277ms (ActiveRecord: 50.4ms)


  [1m[35m (21.7ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.8ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "a"], ["question_id", 6], ["created_at", 2016-06-17 14:30:50 UTC], ["updated_at", 2016-06-17 14:30:50 UTC]]
  [1m[35m (1.2ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 186ms (ActiveRecord: 24.4ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 10:30:55 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.8ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 6]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (260.33ms)
Completed 200 OK in 328ms (Views: 269.0ms | ActiveRecord: 1.6ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-17 10:31:00 -0400
Processing by Api::V1::AnswersController#create as HTML
  Parameters: {"attributes"=>{"content"=>"aaaa", "question_id"=>"6"}, "answer"=>{}}
  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 6], ["LIMIT", 1]]
  [1m[35m (0.7ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.8ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "aaaa"], ["question_id", 6], ["created_at", 2016-06-17 14:31:00 UTC], ["updated_at", 2016-06-17 14:31:00 UTC]]
  [1m[35m (2.9ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 151ms (ActiveRecord: 5.0ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 10:31:02 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (1.6ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.8ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 1]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (97.15ms)
Completed 200 OK in 166ms (Views: 105.7ms | ActiveRecord: 2.4ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 10:31:11 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (1.1ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.7ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 11]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (330.74ms)
Completed 200 OK in 402ms (Views: 338.5ms | ActiveRecord: 1.8ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-17 10:31:14 -0400
Processing by Api::V1::AnswersController#create as HTML
  Parameters: {"attributes"=>{"content"=>"sss", "question_id"=>"11"}, "answer"=>{}}
  [1m[36mQuestion Load (1.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 11], ["LIMIT", 1]]
  [1m[35m (0.6ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (1.1ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "sss"], ["question_id", 11], ["created_at", 2016-06-17 14:31:14 UTC], ["updated_at", 2016-06-17 14:31:14 UTC]]
  [1m[35m (2.7ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 160ms (ActiveRecord: 5.7ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 10:31:16 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (1.0ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.6ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 6]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (304.24ms)
Completed 200 OK in 373ms (Views: 312.5ms | ActiveRecord: 1.7ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-17 10:31:19 -0400
Processing by Api::V1::AnswersController#create as HTML
  Parameters: {"attributes"=>{"content"=>"ssss", "question_id"=>"6"}, "answer"=>{}}
  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 6], ["LIMIT", 1]]
  [1m[35m (0.7ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.8ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "ssss"], ["question_id", 6], ["created_at", 2016-06-17 14:31:19 UTC], ["updated_at", 2016-06-17 14:31:19 UTC]]
  [1m[35m (3.6ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 153ms (ActiveRecord: 5.7ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 10:31:20 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (1.1ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.7ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 2]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (438.99ms)
Completed 200 OK in 516ms (Views: 456.3ms | ActiveRecord: 1.8ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-17 10:31:23 -0400
Processing by Api::V1::AnswersController#create as HTML
  Parameters: {"attributes"=>{"content"=>"sss", "question_id"=>"2"}, "answer"=>{}}
  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
  [1m[35m (0.5ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.8ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "sss"], ["question_id", 2], ["created_at", 2016-06-17 14:31:23 UTC], ["updated_at", 2016-06-17 14:31:23 UTC]]
  [1m[35m (2.7ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 158ms (ActiveRecord: 4.7ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 10:31:25 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.9ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.7ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 28]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (97.55ms)
Completed 200 OK in 168ms (Views: 110.3ms | ActiveRecord: 1.6ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 10:31:36 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.9ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.7ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 7]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (222.62ms)
Completed 200 OK in 289ms (Views: 230.6ms | ActiveRecord: 1.6ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-17 10:31:44 -0400
Processing by Api::V1::AnswersController#create as HTML
  Parameters: {"attributes"=>{"content"=>"aaaa", "question_id"=>"7"}, "answer"=>{}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 7], ["LIMIT", 1]]
  [1m[35m (0.6ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.8ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "aaaa"], ["question_id", 7], ["created_at", 2016-06-17 14:31:44 UTC], ["updated_at", 2016-06-17 14:31:44 UTC]]
  [1m[35m (157.3ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 314ms (ActiveRecord: 159.5ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 10:31:46 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (1.6ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.7ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 24]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (260.39ms)
Completed 200 OK in 341ms (Views: 273.7ms | ActiveRecord: 2.3ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-17 10:31:49 -0400
Processing by Api::V1::AnswersController#create as HTML
  Parameters: {"attributes"=>{"content"=>"aaaa", "question_id"=>"24"}, "answer"=>{}}
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 24], ["LIMIT", 1]]
  [1m[35m (0.7ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.7ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "aaaa"], ["question_id", 24], ["created_at", 2016-06-17 14:31:49 UTC], ["updated_at", 2016-06-17 14:31:49 UTC]]
  [1m[35m (3.1ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 166ms (ActiveRecord: 5.2ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 10:31:51 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.7ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 1]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (99.72ms)
Completed 200 OK in 176ms (Views: 113.3ms | ActiveRecord: 1.5ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 10:31:59 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.9ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.7ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 11]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (369.93ms)
Completed 200 OK in 446ms (Views: 382.9ms | ActiveRecord: 1.6ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-17 10:32:04 -0400
Processing by Api::V1::AnswersController#create as HTML
  Parameters: {"attributes"=>{"content"=>"aaa", "question_id"=>"11"}, "answer"=>{}}
  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 11], ["LIMIT", 1]]
  [1m[35m (0.7ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.8ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "aaa"], ["question_id", 11], ["created_at", 2016-06-17 14:32:04 UTC], ["updated_at", 2016-06-17 14:32:04 UTC]]
  [1m[35m (2.8ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 171ms (ActiveRecord: 5.0ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 10:32:07 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.9ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (1.1ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 32]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (252.28ms)
Completed 200 OK in 363ms (Views: 264.0ms | ActiveRecord: 2.0ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-17 10:32:12 -0400
Processing by Api::V1::AnswersController#create as HTML
  Parameters: {"attributes"=>{"content"=>"aaa", "question_id"=>"32"}, "answer"=>{}}
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 32], ["LIMIT", 1]]
  [1m[35m (0.7ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (1.1ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "aaa"], ["question_id", 32], ["created_at", 2016-06-17 14:32:12 UTC], ["updated_at", 2016-06-17 14:32:12 UTC]]
  [1m[35m (2.9ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 126ms (ActiveRecord: 5.3ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 10:32:13 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.6ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 3]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (77.64ms)
Completed 200 OK in 136ms (Views: 91.3ms | ActiveRecord: 1.4ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 10:32:20 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.9ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 20]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (241.24ms)
Completed 200 OK in 296ms (Views: 249.2ms | ActiveRecord: 1.7ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-17 10:32:24 -0400
Processing by Api::V1::AnswersController#create as HTML
  Parameters: {"attributes"=>{"content"=>"aaa", "question_id"=>"20"}, "answer"=>{}}
  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 20], ["LIMIT", 1]]
  [1m[35m (0.6ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (5.1ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "aaa"], ["question_id", 20], ["created_at", 2016-06-17 14:32:24 UTC], ["updated_at", 2016-06-17 14:32:24 UTC]]
  [1m[35m (2.6ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 131ms (ActiveRecord: 9.0ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 10:32:25 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.7ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 14]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (182.1ms)
Completed 200 OK in 234ms (Views: 189.3ms | ActiveRecord: 1.5ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-17 10:32:27 -0400
Processing by Api::V1::AnswersController#create as HTML
  Parameters: {"attributes"=>{"content"=>"aaa", "question_id"=>"14"}, "answer"=>{}}
  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 14], ["LIMIT", 1]]
  [1m[35m (0.9ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.9ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "aaa"], ["question_id", 14], ["created_at", 2016-06-17 14:32:27 UTC], ["updated_at", 2016-06-17 14:32:27 UTC]]
  [1m[35m (2.8ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 123ms (ActiveRecord: 5.3ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 10:32:30 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.6ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 7]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (191.3ms)
Completed 200 OK in 251ms (Views: 202.0ms | ActiveRecord: 1.4ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-17 10:32:32 -0400
Processing by Api::V1::AnswersController#create as HTML
  Parameters: {"attributes"=>{"content"=>"aaaa", "question_id"=>"7"}, "answer"=>{}}
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 7], ["LIMIT", 1]]
  [1m[35m (5.4ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.8ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "aaaa"], ["question_id", 7], ["created_at", 2016-06-17 14:32:32 UTC], ["updated_at", 2016-06-17 14:32:32 UTC]]
  [1m[35m (2.7ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 133ms (ActiveRecord: 9.5ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 10:32:40 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.6ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 1]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (74.85ms)
Completed 200 OK in 126ms (Views: 81.9ms | ActiveRecord: 1.4ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 10:32:55 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.7ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 18]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (308.04ms)
Completed 200 OK in 361ms (Views: 315.7ms | ActiveRecord: 1.4ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-17 10:32:58 -0400
Processing by Api::V1::AnswersController#create as HTML
  Parameters: {"attributes"=>{"content"=>"aaa", "question_id"=>"18"}, "answer"=>{}}
  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 18], ["LIMIT", 1]]
  [1m[35m (0.6ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (1.4ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "aaa"], ["question_id", 18], ["created_at", 2016-06-17 14:32:58 UTC], ["updated_at", 2016-06-17 14:32:58 UTC]]
  [1m[35m (2.8ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 128ms (ActiveRecord: 5.4ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 10:33:00 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.6ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 6]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (255.89ms)
Completed 200 OK in 313ms (Views: 264.9ms | ActiveRecord: 1.4ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-17 10:33:02 -0400
Processing by Api::V1::AnswersController#create as HTML
  Parameters: {"attributes"=>{"content"=>"ssss", "question_id"=>"6"}, "answer"=>{}}
  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 6], ["LIMIT", 1]]
  [1m[35m (0.6ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (1.1ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "ssss"], ["question_id", 6], ["created_at", 2016-06-17 14:33:02 UTC], ["updated_at", 2016-06-17 14:33:02 UTC]]
  [1m[35m (2.8ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 125ms (ActiveRecord: 5.0ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 10:33:03 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (1.0ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.8ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 24]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (242.24ms)
Completed 200 OK in 294ms (Views: 249.5ms | ActiveRecord: 1.8ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-17 10:33:06 -0400
Processing by Api::V1::AnswersController#create as HTML
  Parameters: {"attributes"=>{"content"=>"dddd", "question_id"=>"24"}, "answer"=>{}}
  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 24], ["LIMIT", 1]]
  [1m[35m (3.9ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.9ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "dddd"], ["question_id", 24], ["created_at", 2016-06-17 14:33:06 UTC], ["updated_at", 2016-06-17 14:33:06 UTC]]
  [1m[35m (1.9ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 130ms (ActiveRecord: 7.4ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 10:33:07 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (1.4ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.8ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 2]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (427.95ms)
Completed 200 OK in 486ms (Views: 435.2ms | ActiveRecord: 2.1ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-17 10:33:10 -0400
Processing by Api::V1::AnswersController#create as HTML
  Parameters: {"attributes"=>{"content"=>"ffff", "question_id"=>"2"}, "answer"=>{}}
  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
  [1m[35m (3.7ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.7ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "ffff"], ["question_id", 2], ["created_at", 2016-06-17 14:33:10 UTC], ["updated_at", 2016-06-17 14:33:10 UTC]]
  [1m[35m (2.7ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 122ms (ActiveRecord: 7.9ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 10:33:11 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.8ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 18]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (350.07ms)
Completed 200 OK in 410ms (Views: 363.5ms | ActiveRecord: 1.6ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-17 10:33:14 -0400
Processing by Api::V1::AnswersController#create as HTML
  Parameters: {"attributes"=>{"content"=>"sssss", "question_id"=>"18"}, "answer"=>{}}
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 18], ["LIMIT", 1]]
  [1m[35m (0.5ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (1.1ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "sssss"], ["question_id", 18], ["created_at", 2016-06-17 14:33:15 UTC], ["updated_at", 2016-06-17 14:33:15 UTC]]
  [1m[35m (2.7ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 134ms (ActiveRecord: 5.0ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 10:33:16 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (1.4ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.7ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 16]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (110.21ms)
Completed 200 OK in 172ms (Views: 117.5ms | ActiveRecord: 2.1ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-17 10:33:18 -0400
Processing by Api::V1::AnswersController#create as HTML
  Parameters: {"attributes"=>{"content"=>"dddd", "question_id"=>"16"}, "answer"=>{}}
  [1m[36mQuestion Load (4.3ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 16], ["LIMIT", 1]]
  [1m[35m (0.9ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (1.0ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "dddd"], ["question_id", 16], ["created_at", 2016-06-17 14:33:18 UTC], ["updated_at", 2016-06-17 14:33:18 UTC]]
  [1m[35m (4.8ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 145ms (ActiveRecord: 10.9ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 10:33:20 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.7ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 22]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (181.29ms)
Completed 200 OK in 246ms (Views: 194.6ms | ActiveRecord: 1.4ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-17 10:33:22 -0400
Processing by Api::V1::AnswersController#create as HTML
  Parameters: {"attributes"=>{"content"=>"aaaa", "question_id"=>"22"}, "answer"=>{}}
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 22], ["LIMIT", 1]]
  [1m[35m (0.6ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.8ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "aaaa"], ["question_id", 22], ["created_at", 2016-06-17 14:33:22 UTC], ["updated_at", 2016-06-17 14:33:22 UTC]]
  [1m[35m (3.1ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 134ms (ActiveRecord: 5.1ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 10:33:24 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (1.1ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 8]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (181.47ms)
Completed 200 OK in 246ms (Views: 192.1ms | ActiveRecord: 1.9ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-17 10:33:27 -0400
Processing by Api::V1::AnswersController#create as HTML
  Parameters: {"attributes"=>{"content"=>"ssss", "question_id"=>"8"}, "answer"=>{}}
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 8], ["LIMIT", 1]]
  [1m[35m (0.5ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.7ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "ssss"], ["question_id", 8], ["created_at", 2016-06-17 14:33:27 UTC], ["updated_at", 2016-06-17 14:33:27 UTC]]
  [1m[35m (2.8ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 126ms (ActiveRecord: 4.7ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 10:33:28 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.7ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 10]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (218.14ms)
Completed 200 OK in 273ms (Views: 226.0ms | ActiveRecord: 1.5ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-17 10:33:31 -0400
Processing by Api::V1::AnswersController#create as HTML
  Parameters: {"attributes"=>{"content"=>"dddd", "question_id"=>"10"}, "answer"=>{}}
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 10], ["LIMIT", 1]]
  [1m[35m (0.5ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.9ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "dddd"], ["question_id", 10], ["created_at", 2016-06-17 14:33:31 UTC], ["updated_at", 2016-06-17 14:33:31 UTC]]
  [1m[35m (3.1ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 130ms (ActiveRecord: 5.2ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 10:33:33 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.8ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 4]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (393.45ms)
Completed 200 OK in 453ms (Views: 401.7ms | ActiveRecord: 1.6ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-17 10:33:37 -0400
Processing by Api::V1::AnswersController#create as HTML
  Parameters: {"attributes"=>{"content"=>"ssss", "question_id"=>"4"}, "answer"=>{}}
  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 4], ["LIMIT", 1]]
  [1m[35m (0.6ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.8ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "ssss"], ["question_id", 4], ["created_at", 2016-06-17 14:33:37 UTC], ["updated_at", 2016-06-17 14:33:37 UTC]]
  [1m[35m (3.2ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 149ms (ActiveRecord: 5.2ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 10:33:39 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.6ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 27]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (184.77ms)
Completed 200 OK in 251ms (Views: 196.4ms | ActiveRecord: 1.4ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-17 10:33:42 -0400
Processing by Api::V1::AnswersController#create as HTML
  Parameters: {"attributes"=>{"content"=>"aaaa", "question_id"=>"27"}, "answer"=>{}}
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 27], ["LIMIT", 1]]
  [1m[35m (0.6ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.8ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "aaaa"], ["question_id", 27], ["created_at", 2016-06-17 14:33:42 UTC], ["updated_at", 2016-06-17 14:33:42 UTC]]
  [1m[35m (1.6ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 128ms (ActiveRecord: 3.6ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 10:33:44 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (1.6ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.7ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 23]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (200.51ms)
Completed 200 OK in 265ms (Views: 212.4ms | ActiveRecord: 2.2ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-17 10:33:46 -0400
Processing by Api::V1::AnswersController#create as HTML
  Parameters: {"attributes"=>{"content"=>"sssss", "question_id"=>"23"}, "answer"=>{}}
  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 23], ["LIMIT", 1]]
  [1m[35m (0.6ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.7ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "sssss"], ["question_id", 23], ["created_at", 2016-06-17 14:33:46 UTC], ["updated_at", 2016-06-17 14:33:46 UTC]]
  [1m[35m (2.8ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 124ms (ActiveRecord: 4.8ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 10:33:47 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (1.0ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 29]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (151.21ms)
Completed 200 OK in 216ms (Views: 162.0ms | ActiveRecord: 1.8ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-17 10:33:50 -0400
Processing by Api::V1::AnswersController#create as HTML
  Parameters: {"attributes"=>{"content"=>"aaaaa", "question_id"=>"29"}, "answer"=>{}}
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 29], ["LIMIT", 1]]
  [1m[35m (0.6ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (1.0ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "aaaaa"], ["question_id", 29], ["created_at", 2016-06-17 14:33:50 UTC], ["updated_at", 2016-06-17 14:33:50 UTC]]
  [1m[35m (4.5ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 131ms (ActiveRecord: 6.7ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 10:33:51 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.7ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 2]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (442.74ms)
Completed 200 OK in 513ms (Views: 458.8ms | ActiveRecord: 1.5ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-17 10:33:53 -0400
Processing by Api::V1::AnswersController#create as HTML
  Parameters: {"attributes"=>{"content"=>"ssss", "question_id"=>"2"}, "answer"=>{}}
  [1m[36mQuestion Load (0.9ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
  [1m[35m (0.6ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.7ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "ssss"], ["question_id", 2], ["created_at", 2016-06-17 14:33:53 UTC], ["updated_at", 2016-06-17 14:33:53 UTC]]
  [1m[35m (3.1ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 134ms (ActiveRecord: 5.3ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 10:33:53 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (1.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 29]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (193.52ms)
Completed 200 OK in 258ms (Views: 204.4ms | ActiveRecord: 2.0ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-17 10:33:55 -0400
Processing by Api::V1::AnswersController#create as HTML
  Parameters: {"attributes"=>{"content"=>"aaaa", "question_id"=>"29"}, "answer"=>{}}
  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 29], ["LIMIT", 1]]
  [1m[35m (0.6ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.7ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "aaaa"], ["question_id", 29], ["created_at", 2016-06-17 14:33:55 UTC], ["updated_at", 2016-06-17 14:33:55 UTC]]
  [1m[35m (3.2ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 126ms (ActiveRecord: 5.2ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 10:33:56 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.7ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 32]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (307.5ms)
Completed 200 OK in 366ms (Views: 316.4ms | ActiveRecord: 1.5ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-17 10:33:57 -0400
Processing by Api::V1::AnswersController#create as HTML
  Parameters: {"attributes"=>{"content"=>"sss", "question_id"=>"32"}, "answer"=>{}}
  [1m[36mQuestion Load (1.3ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 32], ["LIMIT", 1]]
  [1m[35m (0.9ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.8ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "sss"], ["question_id", 32], ["created_at", 2016-06-17 14:33:58 UTC], ["updated_at", 2016-06-17 14:33:58 UTC]]
  [1m[35m (1.3ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 148ms (ActiveRecord: 4.2ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 10:33:58 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.9ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.6ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 22]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (229.3ms)
Completed 200 OK in 288ms (Views: 242.5ms | ActiveRecord: 1.5ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-17 10:34:00 -0400
Processing by Api::V1::AnswersController#create as HTML
  Parameters: {"attributes"=>{"content"=>"aaa", "question_id"=>"22"}, "answer"=>{}}
  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 22], ["LIMIT", 1]]
  [1m[35m (0.6ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.8ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "aaa"], ["question_id", 22], ["created_at", 2016-06-17 14:34:00 UTC], ["updated_at", 2016-06-17 14:34:00 UTC]]
  [1m[35m (1.4ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 134ms (ActiveRecord: 3.4ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 10:34:01 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.6ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 19]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (153.3ms)
Completed 200 OK in 214ms (Views: 160.4ms | ActiveRecord: 1.5ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-17 10:34:02 -0400
Processing by Api::V1::AnswersController#create as HTML
  Parameters: {"attributes"=>{"content"=>"sss", "question_id"=>"19"}, "answer"=>{}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 19], ["LIMIT", 1]]
  [1m[35m (0.6ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.8ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "sss"], ["question_id", 19], ["created_at", 2016-06-17 14:34:02 UTC], ["updated_at", 2016-06-17 14:34:02 UTC]]
  [1m[35m (2.6ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 130ms (ActiveRecord: 4.8ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 10:34:03 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.7ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 20]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (295.03ms)
Completed 200 OK in 348ms (Views: 302.5ms | ActiveRecord: 1.5ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-17 10:34:04 -0400
Processing by Api::V1::AnswersController#create as HTML
  Parameters: {"attributes"=>{"content"=>"aaa", "question_id"=>"20"}, "answer"=>{}}
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 20], ["LIMIT", 1]]
  [1m[35m (0.5ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (1.1ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "aaa"], ["question_id", 20], ["created_at", 2016-06-17 14:34:04 UTC], ["updated_at", 2016-06-17 14:34:04 UTC]]
  [1m[35m (2.8ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 138ms (ActiveRecord: 5.1ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 10:34:06 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.8ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 8]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (231.17ms)
Completed 200 OK in 297ms (Views: 245.8ms | ActiveRecord: 1.5ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-17 10:34:07 -0400
Processing by Api::V1::AnswersController#create as HTML
  Parameters: {"attributes"=>{"content"=>"ssss", "question_id"=>"8"}, "answer"=>{}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 8], ["LIMIT", 1]]
  [1m[35m (0.5ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (1.1ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "ssss"], ["question_id", 8], ["created_at", 2016-06-17 14:34:07 UTC], ["updated_at", 2016-06-17 14:34:07 UTC]]
  [1m[35m (2.8ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 140ms (ActiveRecord: 5.2ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 10:34:08 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.9ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.8ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 4]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (429.15ms)
Completed 200 OK in 496ms (Views: 442.9ms | ActiveRecord: 1.6ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-17 10:34:09 -0400
Processing by Api::V1::AnswersController#create as HTML
  Parameters: {"attributes"=>{"content"=>"aaa", "question_id"=>"4"}, "answer"=>{}}
  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 4], ["LIMIT", 1]]
  [1m[35m (0.6ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.8ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "aaa"], ["question_id", 4], ["created_at", 2016-06-17 14:34:09 UTC], ["updated_at", 2016-06-17 14:34:09 UTC]]
  [1m[35m (2.7ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 133ms (ActiveRecord: 4.7ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 10:34:10 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.9ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 22]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (270.31ms)
Completed 200 OK in 335ms (Views: 277.5ms | ActiveRecord: 1.7ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-17 10:34:12 -0400
Processing by Api::V1::AnswersController#create as HTML
  Parameters: {"attributes"=>{"content"=>"sssss", "question_id"=>"22"}, "answer"=>{}}
  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 22], ["LIMIT", 1]]
  [1m[35m (0.6ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.8ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "sssss"], ["question_id", 22], ["created_at", 2016-06-17 14:34:12 UTC], ["updated_at", 2016-06-17 14:34:12 UTC]]
  [1m[35m (1.7ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 135ms (ActiveRecord: 3.8ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 10:34:12 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.6ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 28]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (94.19ms)
Completed 200 OK in 164ms (Views: 101.9ms | ActiveRecord: 1.4ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 10:36:08 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (1.2ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (1.0ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 11]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (354.13ms)
Completed 200 OK in 421ms (Views: 365.1ms | ActiveRecord: 2.2ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-17 10:36:10 -0400
Processing by Api::V1::AnswersController#create as HTML
  Parameters: {"attributes"=>{"content"=>"ssss", "question_id"=>"11"}, "answer"=>{}}
  [1m[36mQuestion Load (4.6ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 11], ["LIMIT", 1]]
  [1m[35m (0.5ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.7ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "ssss"], ["question_id", 11], ["created_at", 2016-06-17 14:36:10 UTC], ["updated_at", 2016-06-17 14:36:10 UTC]]
  [1m[35m (3.1ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 144ms (ActiveRecord: 8.9ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 10:46:19 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.7ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 16]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (155.69ms)
Completed 200 OK in 220ms (Views: 170.9ms | ActiveRecord: 1.5ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 10:48:18 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.9ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 22]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (305.79ms)
Completed 200 OK in 369ms (Views: 317.2ms | ActiveRecord: 1.7ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 10:50:12 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.6ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 20]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (336.59ms)
Completed 200 OK in 403ms (Views: 351.6ms | ActiveRecord: 1.5ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 10:50:33 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.7ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 26]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (150.33ms)
Completed 200 OK in 215ms (Views: 161.9ms | ActiveRecord: 1.5ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 10:51:46 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (4.7ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.7ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 25]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (147.81ms)
Completed 200 OK in 220ms (Views: 159.1ms | ActiveRecord: 5.3ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 10:51:47 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (4.7ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 11]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (398.78ms)
Completed 200 OK in 460ms (Views: 406.6ms | ActiveRecord: 5.5ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 10:51:48 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (1.3ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.6ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 7]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (245.43ms)
Completed 200 OK in 319ms (Views: 265.0ms | ActiveRecord: 2.0ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 10:51:50 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (1.0ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.9ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 17]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (86.39ms)
Completed 200 OK in 156ms (Views: 104.9ms | ActiveRecord: 1.9ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 10:52:59 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.7ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 27]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (217.0ms)
Completed 200 OK in 283ms (Views: 227.2ms | ActiveRecord: 1.5ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 10:53:04 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.7ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 29]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (232.29ms)
Completed 200 OK in 295ms (Views: 245.7ms | ActiveRecord: 1.5ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 10:54:18 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.7ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 6]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (333.53ms)
Completed 200 OK in 397ms (Views: 345.2ms | ActiveRecord: 1.5ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 10:54:49 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.7ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 1]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (84.83ms)
Completed 200 OK in 149ms (Views: 101.5ms | ActiveRecord: 1.5ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 10:54:50 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.6ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 3]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (81.77ms)
Completed 200 OK in 149ms (Views: 88.9ms | ActiveRecord: 1.4ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 10:54:51 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (4.6ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (1.0ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 18]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (384.75ms)
Completed 200 OK in 444ms (Views: 391.9ms | ActiveRecord: 5.7ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 10:54:52 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.6ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 12]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (88.98ms)
Completed 200 OK in 153ms (Views: 100.5ms | ActiveRecord: 1.5ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 10:54:54 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.6ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 26]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (154.19ms)
Completed 200 OK in 216ms (Views: 161.8ms | ActiveRecord: 1.4ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 10:55:02 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.7ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 16]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (167.11ms)
Completed 200 OK in 227ms (Views: 176.6ms | ActiveRecord: 1.5ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 10:55:36 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.8ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 26]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (153.34ms)
Completed 200 OK in 212ms (Views: 160.5ms | ActiveRecord: 1.6ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 10:55:52 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.7ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 10]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (253.09ms)
Completed 200 OK in 311ms (Views: 260.4ms | ActiveRecord: 1.5ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 10:56:30 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.7ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 17]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (95.26ms)
Completed 200 OK in 159ms (Views: 102.4ms | ActiveRecord: 1.5ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 10:57:44 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.7ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 2]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (521.02ms)
Completed 200 OK in 581ms (Views: 530.7ms | ActiveRecord: 1.5ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 10:57:48 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (1.0ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 13]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (235.39ms)
Completed 200 OK in 306ms (Views: 250.2ms | ActiveRecord: 1.8ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 10:57:49 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.7ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 5]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (94.82ms)
Completed 200 OK in 159ms (Views: 102.1ms | ActiveRecord: 1.6ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 10:57:50 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (1.4ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (4.9ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 20]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (337.57ms)
Completed 200 OK in 402ms (Views: 340.7ms | ActiveRecord: 6.3ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 10:57:51 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (1.0ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 22]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (299.61ms)
Completed 200 OK in 365ms (Views: 314.8ms | ActiveRecord: 1.7ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 10:57:52 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (1.1ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 31]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (271.68ms)
Completed 200 OK in 339ms (Views: 287.3ms | ActiveRecord: 1.9ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 10:57:53 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.7ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 29]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (227.82ms)
Completed 200 OK in 300ms (Views: 244.8ms | ActiveRecord: 1.5ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 10:57:54 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.7ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 5]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (83.51ms)
Completed 200 OK in 158ms (Views: 98.1ms | ActiveRecord: 1.5ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 10:57:55 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (1.0ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.9ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 31]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (279.23ms)
Completed 200 OK in 343ms (Views: 286.4ms | ActiveRecord: 2.0ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 10:57:56 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (1.5ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.9ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 28]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (99.51ms)
Completed 200 OK in 171ms (Views: 112.9ms | ActiveRecord: 2.4ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 10:58:03 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.6ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 12]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (90.02ms)
Completed 200 OK in 159ms (Views: 101.9ms | ActiveRecord: 1.4ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 10:58:04 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.7ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 23]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (269.0ms)
Completed 200 OK in 341ms (Views: 285.6ms | ActiveRecord: 1.5ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 10:58:05 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.7ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 5]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (94.3ms)
Completed 200 OK in 167ms (Views: 114.1ms | ActiveRecord: 1.5ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 10:58:05 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.7ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 19]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (204.78ms)
Completed 200 OK in 272ms (Views: 216.4ms | ActiveRecord: 1.5ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 10:58:05 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.7ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 17]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (97.5ms)
Completed 200 OK in 174ms (Views: 107.6ms | ActiveRecord: 1.5ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 10:58:06 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.7ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 21]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (161.25ms)
Completed 200 OK in 225ms (Views: 172.6ms | ActiveRecord: 1.5ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 10:58:06 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.7ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 6]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (350.92ms)
Completed 200 OK in 419ms (Views: 358.4ms | ActiveRecord: 1.5ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 10:58:07 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (4.9ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.7ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 32]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (354.35ms)
Completed 200 OK in 427ms (Views: 366.2ms | ActiveRecord: 5.6ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 10:58:08 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (5.0ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.7ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 1]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (95.19ms)
Completed 200 OK in 168ms (Views: 109.9ms | ActiveRecord: 5.7ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 10:58:08 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (1.4ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.7ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 16]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (169.5ms)
Completed 200 OK in 250ms (Views: 185.8ms | ActiveRecord: 2.1ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 10:58:09 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.7ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 9]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (197.64ms)
Completed 200 OK in 274ms (Views: 213.2ms | ActiveRecord: 1.5ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 10:58:10 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (1.0ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.6ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 3]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (91.71ms)
Completed 200 OK in 161ms (Views: 104.1ms | ActiveRecord: 1.6ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 10:58:10 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (1.2ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.9ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 26]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (171.1ms)
Completed 200 OK in 235ms (Views: 178.2ms | ActiveRecord: 2.1ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 10:58:11 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (1.0ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.7ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 4]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (502.49ms)
Completed 200 OK in 580ms (Views: 515.4ms | ActiveRecord: 1.7ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 10:58:12 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (1.2ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.8ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 31]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (288.26ms)
Completed 200 OK in 369ms (Views: 305.0ms | ActiveRecord: 2.0ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 10:58:12 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.8ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 31]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (314.19ms)
Completed 200 OK in 380ms (Views: 325.8ms | ActiveRecord: 1.6ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 10:58:14 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.8ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 31]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (293.61ms)
Completed 200 OK in 364ms (Views: 305.7ms | ActiveRecord: 1.6ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 10:58:19 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (7.4ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 17]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (103.27ms)
Completed 200 OK in 169ms (Views: 104.7ms | ActiveRecord: 8.3ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 10:58:20 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.7ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 14]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (216.96ms)
Completed 200 OK in 321ms (Views: 233.0ms | ActiveRecord: 1.5ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 10:58:22 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.6ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 12]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (84.01ms)
Completed 200 OK in 139ms (Views: 91.0ms | ActiveRecord: 1.4ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 10:58:23 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.6ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 26]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (142.75ms)
Completed 200 OK in 211ms (Views: 153.8ms | ActiveRecord: 1.4ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 10:58:24 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (1.0ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 5]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (81.36ms)
Completed 200 OK in 133ms (Views: 88.2ms | ActiveRecord: 1.8ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 10:59:22 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (1.4ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.7ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 31]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (240.2ms)
Completed 200 OK in 300ms (Views: 251.2ms | ActiveRecord: 2.1ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 10:59:23 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (1.6ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.7ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 7]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (236.8ms)
Completed 200 OK in 310ms (Views: 254.9ms | ActiveRecord: 2.3ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 10:59:24 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.9ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (1.1ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 17]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (88.38ms)
Completed 200 OK in 142ms (Views: 95.5ms | ActiveRecord: 2.0ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 10:59:24 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.7ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 19]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (185.31ms)
Completed 200 OK in 244ms (Views: 193.1ms | ActiveRecord: 1.5ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 11:02:12 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (1.2ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.7ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 10]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (255.27ms)
Completed 200 OK in 317ms (Views: 262.7ms | ActiveRecord: 1.9ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-17 11:02:18 -0400
Processing by Api::V1::AnswersController#create as HTML
  Parameters: {"attributes"=>{"content"=>"asasasa", "question_id"=>"10"}, "answer"=>{}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 10], ["LIMIT", 1]]
  [1m[35m (0.8ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.8ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "asasasa"], ["question_id", 10], ["created_at", 2016-06-17 15:02:19 UTC], ["updated_at", 2016-06-17 15:02:19 UTC]]
  [1m[35m (225.8ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 361ms (ActiveRecord: 228.2ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 11:04:18 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (1.3ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 19]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (180.19ms)
Completed 200 OK in 238ms (Views: 191.8ms | ActiveRecord: 2.0ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-17 11:04:21 -0400
Processing by Api::V1::AnswersController#create as HTML
  Parameters: {"attributes"=>{"content"=>"sdsdsdsd", "question_id"=>"19"}, "answer"=>{}}
  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 19], ["LIMIT", 1]]
  [1m[35m (0.7ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.8ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "sdsdsdsd"], ["question_id", 19], ["created_at", 2016-06-17 15:04:21 UTC], ["updated_at", 2016-06-17 15:04:21 UTC]]
  [1m[35m (3.3ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 132ms (ActiveRecord: 5.5ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 11:06:58 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (1.9ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (1.0ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 28]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (88.39ms)
Completed 200 OK in 151ms (Views: 96.7ms | ActiveRecord: 2.9ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-17 11:07:00 -0400
Processing by Api::V1::AnswersController#create as HTML
  Parameters: {"attributes"=>{"content"=>"adadad", "question_id"=>"28"}, "answer"=>{}}
  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 28], ["LIMIT", 1]]
  [1m[35m (0.6ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (1.0ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "adadad"], ["question_id", 28], ["created_at", 2016-06-17 15:07:00 UTC], ["updated_at", 2016-06-17 15:07:00 UTC]]
  [1m[35m (26.7ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 156ms (ActiveRecord: 29.0ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 11:07:13 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.9ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.7ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 4]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (456.51ms)
Completed 200 OK in 513ms (Views: 464.3ms | ActiveRecord: 1.5ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-17 11:07:15 -0400
Processing by Api::V1::AnswersController#create as HTML
  Parameters: {"attributes"=>{"content"=>"asasasa", "question_id"=>"4"}, "answer"=>{}}
  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 4], ["LIMIT", 1]]
  [1m[35m (0.6ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.8ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "asasasa"], ["question_id", 4], ["created_at", 2016-06-17 15:07:15 UTC], ["updated_at", 2016-06-17 15:07:15 UTC]]
  [1m[35m (1.4ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 134ms (ActiveRecord: 3.6ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 11:07:22 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.9ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.8ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 21]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (151.59ms)
Completed 200 OK in 206ms (Views: 159.0ms | ActiveRecord: 1.7ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-17 11:07:25 -0400
Processing by Api::V1::AnswersController#create as HTML
  Parameters: {"attributes"=>{"content"=>"aaaaassss", "question_id"=>"21"}, "answer"=>{}}
  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 21], ["LIMIT", 1]]
  [1m[35m (0.6ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.8ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "aaaaassss"], ["question_id", 21], ["created_at", 2016-06-17 15:07:25 UTC], ["updated_at", 2016-06-17 15:07:25 UTC]]
  [1m[35m (1.5ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 133ms (ActiveRecord: 3.7ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 11:07:52 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (1.0ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.7ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 20]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (330.36ms)
Completed 200 OK in 396ms (Views: 344.1ms | ActiveRecord: 1.7ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-17 11:07:54 -0400
Processing by Api::V1::AnswersController#create as HTML
  Parameters: {"attributes"=>{"content"=>"sssss", "question_id"=>"20"}, "answer"=>{}}
  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 20], ["LIMIT", 1]]
  [1m[35m (0.5ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.9ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "sssss"], ["question_id", 20], ["created_at", 2016-06-17 15:07:54 UTC], ["updated_at", 2016-06-17 15:07:54 UTC]]
  [1m[35m (145.2ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 272ms (ActiveRecord: 147.3ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 11:08:51 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.9ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.6ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 10]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (279.21ms)
Completed 200 OK in 336ms (Views: 286.9ms | ActiveRecord: 1.5ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-17 11:08:54 -0400
Processing by Api::V1::AnswersController#create as HTML
  Parameters: {"attributes"=>{"content"=>"sqsaasasa", "question_id"=>"10"}, "answer"=>{}}
  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 10], ["LIMIT", 1]]
  [1m[35m (0.6ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.9ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "sqsaasasa"], ["question_id", 10], ["created_at", 2016-06-17 15:08:54 UTC], ["updated_at", 2016-06-17 15:08:54 UTC]]
  [1m[35m (23.0ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 149ms (ActiveRecord: 25.1ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 11:10:14 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.9ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (1.1ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 27]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (216.15ms)
Completed 200 OK in 271ms (Views: 226.9ms | ActiveRecord: 2.0ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 11:11:30 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.7ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 10]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (337.41ms)
Completed 200 OK in 399ms (Views: 345.5ms | ActiveRecord: 1.4ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 11:11:51 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (1.0ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.6ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 7]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (257.27ms)
Completed 200 OK in 316ms (Views: 267.6ms | ActiveRecord: 1.6ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 11:13:06 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (1.3ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.7ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 22]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (262.91ms)
Completed 200 OK in 330ms (Views: 273.8ms | ActiveRecord: 2.0ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 11:13:08 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.6ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 14]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (213.15ms)
Completed 200 OK in 279ms (Views: 227.5ms | ActiveRecord: 1.4ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 11:13:09 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (4.4ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 1]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (99.51ms)
Completed 200 OK in 161ms (Views: 103.0ms | ActiveRecord: 5.3ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 11:13:10 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.9ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (1.1ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 21]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (192.16ms)
Completed 200 OK in 249ms (Views: 198.9ms | ActiveRecord: 2.0ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 11:13:10 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.7ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 14]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (228.45ms)
Completed 200 OK in 286ms (Views: 235.5ms | ActiveRecord: 1.4ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 11:13:56 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.7ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 7]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (247.41ms)
Completed 200 OK in 307ms (Views: 255.1ms | ActiveRecord: 1.4ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-17 11:14:04 -0400
Processing by Api::V1::AnswersController#create as HTML
  Parameters: {"attributes"=>{"content"=>"wwdfwd", "question_id"=>"7"}, "answer"=>{}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 7], ["LIMIT", 1]]
  [1m[35m (0.5ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.8ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "wwdfwd"], ["question_id", 7], ["created_at", 2016-06-17 15:14:04 UTC], ["updated_at", 2016-06-17 15:14:04 UTC]]
  [1m[35m (70.5ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 209ms (ActiveRecord: 72.7ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 11:15:10 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (1.0ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.8ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 10]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (325.01ms)
Completed 200 OK in 388ms (Views: 339.0ms | ActiveRecord: 1.8ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 11:15:43 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.7ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 5]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (77.06ms)
Completed 200 OK in 138ms (Views: 91.2ms | ActiveRecord: 1.5ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-17 11:15:47 -0400
Processing by Api::V1::AnswersController#create as HTML
  Parameters: {"attributes"=>{"content"=>"adadadada", "question_id"=>"5"}, "answer"=>{}}
  [1m[36mQuestion Load (0.9ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 5], ["LIMIT", 1]]
  [1m[35m (0.6ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (1.2ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "adadadada"], ["question_id", 5], ["created_at", 2016-06-17 15:15:47 UTC], ["updated_at", 2016-06-17 15:15:47 UTC]]
  [1m[35m (67.8ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 204ms (ActiveRecord: 70.4ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 11:16:09 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (1.0ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.7ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 19]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (216.6ms)
Completed 200 OK in 278ms (Views: 223.8ms | ActiveRecord: 1.7ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-17 11:16:12 -0400
Processing by Api::V1::AnswersController#create as HTML
  Parameters: {"attributes"=>{"content"=>"asfdas", "question_id"=>"19"}, "answer"=>{}}
  [1m[36mQuestion Load (1.0ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 19], ["LIMIT", 1]]
  [1m[35m (0.6ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.8ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "asfdas"], ["question_id", 19], ["created_at", 2016-06-17 15:16:12 UTC], ["updated_at", 2016-06-17 15:16:12 UTC]]
  [1m[35m (3.1ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 147ms (ActiveRecord: 5.4ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 11:17:13 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (1.0ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.7ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 23]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (254.97ms)
Completed 200 OK in 325ms (Views: 269.9ms | ActiveRecord: 1.7ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-17 11:17:18 -0400
Processing by Api::V1::AnswersController#create as HTML
  Parameters: {"attributes"=>{"content"=>"asaasa", "question_id"=>"23"}, "answer"=>{}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 23], ["LIMIT", 1]]
  [1m[35m (0.6ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.8ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "asaasa"], ["question_id", 23], ["created_at", 2016-06-17 15:17:18 UTC], ["updated_at", 2016-06-17 15:17:18 UTC]]
  [1m[35m (299.5ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 426ms (ActiveRecord: 301.7ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 11:17:32 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (1.3ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 24]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (299.77ms)
Completed 200 OK in 360ms (Views: 310.1ms | ActiveRecord: 2.1ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 11:17:48 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (1.1ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.9ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 18]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (378.27ms)
Completed 200 OK in 448ms (Views: 389.5ms | ActiveRecord: 2.0ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 11:18:23 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.6ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 18]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (402.56ms)
Completed 200 OK in 463ms (Views: 414.0ms | ActiveRecord: 1.4ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 11:18:27 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.9ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 23]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (297.73ms)
Completed 200 OK in 359ms (Views: 307.2ms | ActiveRecord: 1.7ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 11:18:30 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.7ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 16]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (171.81ms)
Completed 200 OK in 232ms (Views: 181.3ms | ActiveRecord: 1.5ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 11:18:31 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (1.1ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.6ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 6]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (323.62ms)
Completed 200 OK in 390ms (Views: 331.1ms | ActiveRecord: 1.8ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 11:18:31 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.7ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 14]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (222.82ms)
Completed 200 OK in 281ms (Views: 230.3ms | ActiveRecord: 1.4ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 11:18:33 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.7ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 18]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (408.85ms)
Completed 200 OK in 467ms (Views: 416.1ms | ActiveRecord: 1.4ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 11:18:34 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.7ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 7]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (295.78ms)
Completed 200 OK in 359ms (Views: 306.1ms | ActiveRecord: 1.4ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 11:18:37 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (1.2ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (1.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 8]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (434.37ms)
Completed 200 OK in 496ms (Views: 441.2ms | ActiveRecord: 2.4ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 11:18:39 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.7ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 27]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (235.35ms)
Completed 200 OK in 294ms (Views: 242.6ms | ActiveRecord: 1.5ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 11:18:44 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.6ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 26]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (151.48ms)
Completed 200 OK in 209ms (Views: 158.8ms | ActiveRecord: 1.5ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 11:23:15 -0400
  [1m[36mActiveRecord::SchemaMigration Load (0.6ms)[0m  [1m[34mSELECT "schema_migrations".* FROM "schema_migrations"[0m
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.5ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 9]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (86.74ms)
Completed 200 OK in 145ms (Views: 134.4ms | ActiveRecord: 7.6ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-17 11:23:23 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"i don't KNOW!!!"}, "relationships"=>{"question"=>{"data"=>nil}}, "type"=>"answers"}, "answer"=>{}}
Completed 500 Internal Server Error in 1ms (ActiveRecord: 0.0ms)


  
NoMethodError (undefined method `pry' for #<Binding:0x007ff3b2e215c8>):
  
app/controllers/api/v1/answers_controller.rb:10:in `create'
Started POST "/api/v1/answers" for ::1 at 2016-06-17 11:23:48 -0400
  [1m[36mActiveRecord::SchemaMigration Load (0.5ms)[0m  [1m[34mSELECT "schema_migrations".* FROM "schema_migrations"[0m
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"i don't KNOW!!!"}, "relationships"=>{"question"=>{"data"=>nil}}, "type"=>"answers"}, "answer"=>{}}
Completed 500 Internal Server Error in 0ms (ActiveRecord: 2.0ms)


  
NoMethodError (undefined method `pry' for #<Binding:0x007fd46c4fa518>):
  
app/controllers/api/v1/answers_controller.rb:10:in `create'
Started POST "/api/v1/answers" for ::1 at 2016-06-17 11:24:14 -0400
  [1m[36mActiveRecord::SchemaMigration Load (0.4ms)[0m  [1m[34mSELECT "schema_migrations".* FROM "schema_migrations"[0m
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"i don't KNOW!!!"}, "relationships"=>{"question"=>{"data"=>nil}}, "type"=>"answers"}, "answer"=>{}}
Completed 500 Internal Server Error in 1ms (ActiveRecord: 1.8ms)


  
NoMethodError (undefined method `pry' for #<Binding:0x007f993440f5e0>):
  
app/controllers/api/v1/answers_controller.rb:10:in `create'
Started POST "/api/v1/answers" for ::1 at 2016-06-17 11:24:38 -0400
  
LoadError (cannot load such file -- pry):
  
app/controllers/api/v1/answers_controller.rb:1:in `<top (required)>'
Started POST "/api/v1/answers" for ::1 at 2016-06-17 11:24:59 -0400
  [1m[36mActiveRecord::SchemaMigration Load (0.4ms)[0m  [1m[34mSELECT "schema_migrations".* FROM "schema_migrations"[0m
  
LoadError (cannot load such file -- pry):
  
app/controllers/api/v1/answers_controller.rb:1:in `<top (required)>'
Started POST "/api/v1/answers" for ::1 at 2016-06-17 11:25:11 -0400
  
LoadError (cannot load such file -- pry):
  
app/controllers/api/v1/answers_controller.rb:1:in `<top (required)>'
Started POST "/api/v1/answers" for ::1 at 2016-06-17 11:25:19 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"i don't KNOW!!!"}, "relationships"=>{"question"=>{"data"=>nil}}, "type"=>"answers"}, "answer"=>{}}
Completed 500 Internal Server Error in 34585ms (ActiveRecord: 1.9ms)


  
SystemExit (exit):
  
app/controllers/api/v1/answers_controller.rb:13:in `create'
Started GET "/api/v1/random" for ::1 at 2016-06-17 11:26:11 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (1.3ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 23]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (331.8ms)
Completed 200 OK in 465ms (Views: 406.2ms | ActiveRecord: 8.6ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-17 11:31:13 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"something"}, "relationships"=>{"question"=>{"data"=>nil}}, "type"=>"answers"}, "answer"=>{}}
Completed 500 Internal Server Error in 18116ms (ActiveRecord: 0.0ms)


  
SystemExit (exit):
  
app/controllers/api/v1/answers_controller.rb:13:in `create'
Started GET "/api/v1/random" for ::1 at 2016-06-17 11:38:39 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (1.0ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 5]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (91.29ms)
Completed 200 OK in 133ms (Views: 98.7ms | ActiveRecord: 1.7ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-17 11:38:50 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"nothing! jk lol"}, "question"=>nil, "type"=>"answers"}, "answer"=>{}}
Completed 500 Internal Server Error in 22739ms (ActiveRecord: 0.0ms)


  
SystemExit (exit):
  
app/controllers/api/v1/answers_controller.rb:13:in `create'
Started POST "/api/v1/answers" for ::1 at 2016-06-17 11:40:12 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"nothing! jk lol"}, "question"=>{"data"=>{"attributes"=>{"content"=>"test"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Completed 500 Internal Server Error in 335364ms (ActiveRecord: 0.0ms)


  
SystemExit (exit):
  
app/controllers/api/v1/answers_controller.rb:13:in `create'
Started GET "/api/v1/random" for ::1 at 2016-06-17 11:45:49 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (2.0ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.9ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 8]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (199.54ms)
Completed 200 OK in 260ms (Views: 204.6ms | ActiveRecord: 3.5ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 11:47:06 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (1.3ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 29]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (181.54ms)
Completed 200 OK in 227ms (Views: 192.0ms | ActiveRecord: 2.1ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 11:47:23 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.9ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.8ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 11]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (313.05ms)
Completed 200 OK in 369ms (Views: 319.8ms | ActiveRecord: 1.7ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 11:48:34 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (1.1ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 10]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (270.07ms)
Completed 200 OK in 319ms (Views: 275.6ms | ActiveRecord: 1.8ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 11:48:56 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (1.1ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.9ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 4]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (382.33ms)
Completed 200 OK in 436ms (Views: 392.7ms | ActiveRecord: 2.0ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 11:50:52 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (1.0ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (1.1ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 25]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (113.94ms)
Completed 200 OK in 169ms (Views: 122.8ms | ActiveRecord: 2.1ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-17 11:51:05 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"asdasd"}, "question"=>{"data"=>{"id"=>"25", "attributes"=>{"content"=>"Describe your production deployment process?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Completed 500 Internal Server Error in 182861ms (ActiveRecord: 0.0ms)


  
SystemExit (exit):
  
app/controllers/api/v1/answers_controller.rb:13:in `create'
Started GET "/api/v1/random" for ::1 at 2016-06-17 11:54:19 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (1.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (1.3ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 26]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (381.67ms)
Completed 200 OK in 514ms (Views: 411.4ms | ActiveRecord: 17.9ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-17 11:54:25 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"hello"}, "question"=>{"data"=>{"id"=>"26", "attributes"=>{"content"=>"Why do you want to work for us?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", nil], ["LIMIT", 1]]
Completed 500 Internal Server Error in 48ms (ActiveRecord: 0.7ms)


  
NoMethodError (undefined method `answers' for nil:NilClass):
  
app/controllers/api/v1/answers_controller.rb:14:in `create'
Started GET "/api/v1/random" for ::1 at 2016-06-17 11:54:43 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (1.0ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.8ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 21]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (402.03ms)
Completed 200 OK in 549ms (Views: 438.9ms | ActiveRecord: 12.6ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-17 11:54:47 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"aaaa"}, "question"=>{"data"=>{"id"=>"21", "attributes"=>{"content"=>"What is the difference between classical inheritance and prototypal inheritance? "}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: attributes, type
Unpermitted parameters: attributes, type
Unpermitted parameters: attributes, type
Completed 500 Internal Server Error in 149547ms (ActiveRecord: 0.0ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 11:57:16 -0400
  
SystemExit (exit):
  
app/controllers/api/v1/answers_controller.rb:14:in `create'
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (5.7ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (1.0ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 18]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (655.29ms)
Completed 200 OK in 807ms (Views: 692.1ms | ActiveRecord: 15.5ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-17 11:57:23 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"aas"}, "question"=>{"data"=>{"id"=>"18", "attributes"=>{"content"=>"What are your short-term goals."}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.9ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 18], ["LIMIT", 1]]
  [1m[35m (0.5ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (90.4ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "aas"], ["question_id", 18], ["created_at", 2016-06-17 15:57:23 UTC], ["updated_at", 2016-06-17 15:57:23 UTC]]
  [1m[35m (40.8ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 297ms (ActiveRecord: 132.7ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 11:58:25 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (1.0ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (1.1ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 26]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (155.76ms)
Completed 200 OK in 228ms (Views: 170.6ms | ActiveRecord: 2.1ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-17 11:58:27 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"asasa"}, "question"=>{"data"=>{"id"=>"26", "attributes"=>{"content"=>"Why do you want to work for us?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 26], ["LIMIT", 1]]
  [1m[35m (0.5ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.8ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "asasa"], ["question_id", 26], ["created_at", 2016-06-17 15:58:28 UTC], ["updated_at", 2016-06-17 15:58:28 UTC]]
  [1m[35m (33.6ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 261ms (ActiveRecord: 35.7ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 11:58:51 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (1.3ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (4.5ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 14]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (226.29ms)
Completed 200 OK in 295ms (Views: 235.4ms | ActiveRecord: 5.9ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-17 12:01:02 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"adasdas"}, "question"=>{"data"=>{"id"=>"14", "attributes"=>{"content"=>"Why do you want to work with us?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (6.8ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 14], ["LIMIT", 1]]
  [1m[35m (0.6ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (1.0ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "adasdas"], ["question_id", 14], ["created_at", 2016-06-17 16:01:03 UTC], ["updated_at", 2016-06-17 16:01:03 UTC]]
  [1m[35m (47.2ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 216ms (ActiveRecord: 55.7ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 12:01:04 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (1.0ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 14]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (262.61ms)
Completed 200 OK in 325ms (Views: 275.8ms | ActiveRecord: 1.8ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-17 12:01:06 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"asasas"}, "question"=>{"data"=>{"id"=>"14", "attributes"=>{"content"=>"Why do you want to work with us?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 14], ["LIMIT", 1]]
  [1m[35m (0.5ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.8ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "asasas"], ["question_id", 14], ["created_at", 2016-06-17 16:01:06 UTC], ["updated_at", 2016-06-17 16:01:06 UTC]]
  [1m[35m (53.4ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 197ms (ActiveRecord: 55.5ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 12:01:10 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.7ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 19]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (259.94ms)
Completed 200 OK in 393ms (Views: 340.1ms | ActiveRecord: 1.5ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-17 12:01:12 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"adfaf"}, "question"=>{"data"=>{"id"=>"19", "attributes"=>{"content"=>"Do you have any questions for me?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 19], ["LIMIT", 1]]
  [1m[35m (0.9ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.8ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "adfaf"], ["question_id", 19], ["created_at", 2016-06-17 16:01:12 UTC], ["updated_at", 2016-06-17 16:01:12 UTC]]
  [1m[35m (3.1ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 164ms (ActiveRecord: 5.6ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 12:01:13 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.7ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 24]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (308.17ms)
Completed 200 OK in 374ms (Views: 325.7ms | ActiveRecord: 1.5ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-17 12:01:15 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"aaaa"}, "question"=>{"data"=>{"id"=>"24", "attributes"=>{"content"=>"Why do you want to be a web developer?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 24], ["LIMIT", 1]]
  [1m[35m (0.5ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.8ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "aaaa"], ["question_id", 24], ["created_at", 2016-06-17 16:01:15 UTC], ["updated_at", 2016-06-17 16:01:15 UTC]]
  [1m[35m (40.0ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 195ms (ActiveRecord: 42.1ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 12:01:31 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.6ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 17]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (94.18ms)
Completed 200 OK in 158ms (Views: 110.7ms | ActiveRecord: 1.5ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-17 12:01:32 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"sss"}, "question"=>{"data"=>{"id"=>"17", "attributes"=>{"content"=>"Tell me about the most recent project you worked on. What were your responsibilities?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 17], ["LIMIT", 1]]
  [1m[35m (0.5ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.8ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "sss"], ["question_id", 17], ["created_at", 2016-06-17 16:01:32 UTC], ["updated_at", 2016-06-17 16:01:32 UTC]]
  [1m[35m (3.0ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 158ms (ActiveRecord: 5.0ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 12:01:35 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.6ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 11]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (413.27ms)
Completed 200 OK in 473ms (Views: 425.5ms | ActiveRecord: 1.5ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-17 12:01:37 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"aadffsf"}, "question"=>{"data"=>{"id"=>"11", "attributes"=>{"content"=>"Describe a time when you were able to improve upon the design that was originally suggested?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 11], ["LIMIT", 1]]
  [1m[35m (0.6ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.8ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "aadffsf"], ["question_id", 11], ["created_at", 2016-06-17 16:01:38 UTC], ["updated_at", 2016-06-17 16:01:38 UTC]]
  [1m[35m (2.7ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 155ms (ActiveRecord: 4.9ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 12:01:40 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (1.0ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (4.7ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 19]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (310.22ms)
Completed 200 OK in 388ms (Views: 324.6ms | ActiveRecord: 5.7ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-17 12:01:42 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"qqqq"}, "question"=>{"data"=>{"id"=>"19", "attributes"=>{"content"=>"Do you have any questions for me?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (1.3ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 19], ["LIMIT", 1]]
  [1m[35m (1.0ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.8ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "qqqq"], ["question_id", 19], ["created_at", 2016-06-17 16:01:42 UTC], ["updated_at", 2016-06-17 16:01:42 UTC]]
  [1m[35m (2.0ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 161ms (ActiveRecord: 5.1ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 12:02:13 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.7ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 11]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (439.7ms)
Completed 200 OK in 513ms (Views: 459.9ms | ActiveRecord: 1.5ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-17 12:04:32 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"aaaaa"}, "question"=>{"data"=>{"id"=>"11", "attributes"=>{"content"=>"Describe a time when you were able to improve upon the design that was originally suggested?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 11], ["LIMIT", 1]]
  [1m[35m (0.6ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.8ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "aaaaa"], ["question_id", 11], ["created_at", 2016-06-17 16:04:32 UTC], ["updated_at", 2016-06-17 16:04:32 UTC]]
  [1m[35m (1.4ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 166ms (ActiveRecord: 3.6ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 12:04:34 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (5.1ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.7ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 17]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (141.63ms)
Completed 200 OK in 207ms (Views: 149.4ms | ActiveRecord: 5.8ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-17 12:04:37 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"asdasdas"}, "question"=>{"data"=>{"id"=>"17", "attributes"=>{"content"=>"Tell me about the most recent project you worked on. What were your responsibilities?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 17], ["LIMIT", 1]]
  [1m[35m (0.6ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (1.0ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "asdasdas"], ["question_id", 17], ["created_at", 2016-06-17 16:04:37 UTC], ["updated_at", 2016-06-17 16:04:37 UTC]]
  [1m[35m (2.6ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 160ms (ActiveRecord: 4.8ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 12:04:38 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.8ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 19]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (347.3ms)
Completed 200 OK in 413ms (Views: 358.8ms | ActiveRecord: 1.6ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-17 12:04:41 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"sasaff"}, "question"=>{"data"=>{"id"=>"19", "attributes"=>{"content"=>"Do you have any questions for me?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 19], ["LIMIT", 1]]
  [1m[35m (0.6ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.9ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "sasaff"], ["question_id", 19], ["created_at", 2016-06-17 16:04:41 UTC], ["updated_at", 2016-06-17 16:04:41 UTC]]
  [1m[35m (2.9ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 152ms (ActiveRecord: 5.0ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 12:04:43 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.6ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 1]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (96.95ms)
Completed 200 OK in 168ms (Views: 114.0ms | ActiveRecord: 1.4ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-17 12:04:44 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"sDFSSFA"}, "question"=>{"data"=>{"id"=>"1", "attributes"=>{"content"=>"What are you looking for in terms of career development?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (1.3ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  [1m[35m (0.6ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.8ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "sDFSSFA"], ["question_id", 1], ["created_at", 2016-06-17 16:04:45 UTC], ["updated_at", 2016-06-17 16:04:45 UTC]]
  [1m[35m (2.6ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 161ms (ActiveRecord: 5.3ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 12:05:05 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (1.2ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.7ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 11]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (509.74ms)
Completed 200 OK in 576ms (Views: 521.3ms | ActiveRecord: 1.9ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-17 12:06:51 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"aaa"}, "question"=>{"data"=>{"id"=>"11", "attributes"=>{"content"=>"Describe a time when you were able to improve upon the design that was originally suggested?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 11], ["LIMIT", 1]]
  [1m[35m (0.6ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (1.2ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "aaa"], ["question_id", 11], ["created_at", 2016-06-17 16:06:51 UTC], ["updated_at", 2016-06-17 16:06:51 UTC]]
  [1m[35m (32.6ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 204ms (ActiveRecord: 35.2ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 12:06:52 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.7ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 31]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (288.43ms)
Completed 200 OK in 349ms (Views: 296.6ms | ActiveRecord: 1.6ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 12:07:39 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (1.0ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (1.0ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 5]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (131.29ms)
Completed 200 OK in 196ms (Views: 142.7ms | ActiveRecord: 2.0ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 12:09:46 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.7ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 25]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (154.83ms)
Completed 200 OK in 222ms (Views: 166.9ms | ActiveRecord: 1.5ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 12:11:23 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (1.5ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 32]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (364.51ms)
Completed 200 OK in 427ms (Views: 371.1ms | ActiveRecord: 2.3ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 12:14:55 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (1.6ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.8ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 23]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (310.05ms)
Completed 200 OK in 385ms (Views: 322.8ms | ActiveRecord: 2.4ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 12:56:01 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (1.4ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (1.0ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 4]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (551.48ms)
Completed 200 OK in 617ms (Views: 559.1ms | ActiveRecord: 2.4ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 12:56:22 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.9ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.7ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 17]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (184.44ms)
Completed 200 OK in 252ms (Views: 192.4ms | ActiveRecord: 1.6ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 12:57:56 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (1.0ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.7ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 12]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (100.91ms)
Completed 200 OK in 163ms (Views: 108.9ms | ActiveRecord: 1.6ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 12:58:09 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.9ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.9ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 27]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (244.04ms)
Completed 200 OK in 317ms (Views: 259.8ms | ActiveRecord: 1.8ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 12:59:50 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.6ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 23]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (340.19ms)
Completed 200 OK in 408ms (Views: 349.7ms | ActiveRecord: 1.4ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 13:00:19 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (1.2ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.8ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 26]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (226.38ms)
Completed 200 OK in 300ms (Views: 238.7ms | ActiveRecord: 2.0ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 13:03:59 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.8ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 6]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (365.66ms)
Completed 200 OK in 432ms (Views: 377.4ms | ActiveRecord: 1.7ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-17 13:04:03 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"asfas"}, "question"=>{"data"=>{"id"=>"6", "attributes"=>{"content"=>"How does the web work?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.9ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 6], ["LIMIT", 1]]
  [1m[35m (1.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (1.9ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "asfas"], ["question_id", 6], ["created_at", 2016-06-17 17:04:04 UTC], ["updated_at", 2016-06-17 17:04:04 UTC]]
  [1m[35m (74.9ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 258ms (ActiveRecord: 78.8ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 13:08:13 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.9ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 13]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (222.21ms)
Completed 200 OK in 279ms (Views: 229.6ms | ActiveRecord: 1.7ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 13:08:23 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (1.0ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 26]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (191.44ms)
Completed 200 OK in 248ms (Views: 198.3ms | ActiveRecord: 1.8ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-17 13:08:25 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"adad"}, "question"=>{"data"=>{"id"=>"26", "attributes"=>{"content"=>"Why do you want to work for us?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.9ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 26], ["LIMIT", 1]]
  [1m[35m (0.6ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (1.0ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "adad"], ["question_id", 26], ["created_at", 2016-06-17 17:08:25 UTC], ["updated_at", 2016-06-17 17:08:25 UTC]]
  [1m[35m (1.7ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 153ms (ActiveRecord: 4.1ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 13:09:14 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (1.1ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (4.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 18]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (436.41ms)
Completed 200 OK in 492ms (Views: 441.3ms | ActiveRecord: 5.3ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 13:09:18 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.6ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 3]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (81.53ms)
Completed 200 OK in 148ms (Views: 91.6ms | ActiveRecord: 1.4ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 13:09:21 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (1.9ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.8ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 28]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (115.01ms)
Completed 200 OK in 178ms (Views: 122.3ms | ActiveRecord: 2.6ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 13:09:22 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (1.1ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 21]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (189.69ms)
Completed 200 OK in 246ms (Views: 196.9ms | ActiveRecord: 1.9ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-17 13:09:28 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"bladibla"}, "question"=>{"data"=>{"id"=>"21", "attributes"=>{"content"=>"What is the difference between classical inheritance and prototypal inheritance? "}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (1.0ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 21], ["LIMIT", 1]]
  [1m[35m (0.7ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.8ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "bladibla"], ["question_id", 21], ["created_at", 2016-06-17 17:09:28 UTC], ["updated_at", 2016-06-17 17:09:28 UTC]]
  [1m[35m (2.3ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 153ms (ActiveRecord: 4.8ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 13:13:44 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (1.4ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.9ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 12]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (92.32ms)
Completed 200 OK in 156ms (Views: 101.2ms | ActiveRecord: 2.3ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 13:14:08 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (1.3ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (1.3ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 8]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (276.4ms)
Completed 200 OK in 344ms (Views: 288.9ms | ActiveRecord: 2.5ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-17 13:14:11 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"sfsfsfsf"}, "question"=>{"data"=>{"id"=>"8", "attributes"=>{"content"=>"How did you learn programming?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (1.5ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 8], ["LIMIT", 1]]
  [1m[35m (0.6ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (147.1ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "sfsfsfsf"], ["question_id", 8], ["created_at", 2016-06-17 17:14:11 UTC], ["updated_at", 2016-06-17 17:14:11 UTC]]
  [1m[35m (35.5ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 354ms (ActiveRecord: 184.7ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 13:14:46 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.9ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.7ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 25]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (178.61ms)
Completed 200 OK in 243ms (Views: 187.0ms | ActiveRecord: 1.6ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-17 13:14:49 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"saffasfasf"}, "question"=>{"data"=>{"id"=>"25", "attributes"=>{"content"=>"Describe your production deployment process?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 25], ["LIMIT", 1]]
  [1m[35m (0.6ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (1.6ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "saffasfasf"], ["question_id", 25], ["created_at", 2016-06-17 17:14:49 UTC], ["updated_at", 2016-06-17 17:14:49 UTC]]
  [1m[35m (72.0ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 226ms (ActiveRecord: 75.0ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 13:14:57 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (1.1ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.6ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 12]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (99.79ms)
Completed 200 OK in 159ms (Views: 107.6ms | ActiveRecord: 1.8ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 13:15:06 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (1.7ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.7ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 31]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (269.35ms)
Completed 200 OK in 348ms (Views: 278.8ms | ActiveRecord: 2.4ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-17 13:15:11 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"asfasfas"}, "question"=>{"data"=>{"id"=>"31", "attributes"=>{"content"=>"How does the web work?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.9ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 31], ["LIMIT", 1]]
  [1m[35m (1.0ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (1.3ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "asfasfas"], ["question_id", 31], ["created_at", 2016-06-17 17:15:11 UTC], ["updated_at", 2016-06-17 17:15:11 UTC]]
  [1m[35m (59.1ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 210ms (ActiveRecord: 62.3ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 13:15:47 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.9ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.7ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 29]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (216.84ms)
Completed 200 OK in 286ms (Views: 233.6ms | ActiveRecord: 1.7ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-17 13:15:49 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"asffasf"}, "question"=>{"data"=>{"id"=>"29", "attributes"=>{"content"=>"How do you evaluate success?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 29], ["LIMIT", 1]]
  [1m[35m (0.6ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.9ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "asffasf"], ["question_id", 29], ["created_at", 2016-06-17 17:15:49 UTC], ["updated_at", 2016-06-17 17:15:49 UTC]]
  [1m[35m (30.8ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 193ms (ActiveRecord: 33.0ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 13:16:36 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (1.2ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (1.3ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 15]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (189.41ms)
Completed 200 OK in 257ms (Views: 203.0ms | ActiveRecord: 2.5ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-17 13:16:39 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"asffasf"}, "question"=>{"data"=>{"id"=>"15", "attributes"=>{"content"=>"Can you name two programming paradigms important for JavaScript app developers?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.9ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 15], ["LIMIT", 1]]
  [1m[35m (0.6ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.9ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "asffasf"], ["question_id", 15], ["created_at", 2016-06-17 17:16:39 UTC], ["updated_at", 2016-06-17 17:16:39 UTC]]
  [1m[35m (35.6ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 183ms (ActiveRecord: 38.0ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 13:16:53 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.9ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (1.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 4]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (519.28ms)
Completed 200 OK in 587ms (Views: 528.3ms | ActiveRecord: 2.0ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-17 13:16:56 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"asfasf"}, "question"=>{"data"=>{"id"=>"4", "attributes"=>{"content"=>"Explain the process of web development to a middle school kid."}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.9ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 4], ["LIMIT", 1]]
  [1m[35m (1.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (10.3ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "asfasf"], ["question_id", 4], ["created_at", 2016-06-17 17:16:56 UTC], ["updated_at", 2016-06-17 17:16:56 UTC]]
  [1m[35m (4.9ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 173ms (ActiveRecord: 17.3ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 13:17:23 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (1.0ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.8ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 5]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (132.37ms)
Completed 200 OK in 195ms (Views: 140.6ms | ActiveRecord: 1.7ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-17 13:17:25 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"asfasffe"}, "question"=>{"data"=>{"id"=>"5", "attributes"=>{"content"=>"What did you like least about your last job?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (1.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 5], ["LIMIT", 1]]
  [1m[35m (0.6ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (1.5ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "asfasffe"], ["question_id", 5], ["created_at", 2016-06-17 17:17:26 UTC], ["updated_at", 2016-06-17 17:17:26 UTC]]
  [1m[35m (1.6ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 171ms (ActiveRecord: 4.8ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 13:17:36 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (1.0ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.8ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 8]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (289.16ms)
Completed 200 OK in 348ms (Views: 297.6ms | ActiveRecord: 1.8ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-17 13:17:39 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"wqrqwr"}, "question"=>{"data"=>{"id"=>"8", "attributes"=>{"content"=>"How did you learn programming?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.9ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 8], ["LIMIT", 1]]
  [1m[35m (0.6ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.8ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "wqrqwr"], ["question_id", 8], ["created_at", 2016-06-17 17:17:39 UTC], ["updated_at", 2016-06-17 17:17:39 UTC]]
  [1m[35m (16.7ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 163ms (ActiveRecord: 19.0ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 13:18:36 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (1.2ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (1.9ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 6]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (411.34ms)
Completed 200 OK in 474ms (Views: 419.3ms | ActiveRecord: 3.0ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 13:19:31 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (1.0ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (1.5ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 2]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (482.93ms)
Completed 200 OK in 541ms (Views: 492.7ms | ActiveRecord: 2.5ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-17 13:20:17 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"asfaeef"}, "question"=>{"data"=>{"id"=>"2", "attributes"=>{"content"=>"How many ways can you center a div?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
  [1m[35m (0.8ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (1.0ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "asfaeef"], ["question_id", 2], ["created_at", 2016-06-17 17:20:17 UTC], ["updated_at", 2016-06-17 17:20:17 UTC]]
  [1m[35m (28.5ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 195ms (ActiveRecord: 31.0ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 13:20:25 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (1.0ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.7ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 17]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (145.97ms)
Completed 200 OK in 208ms (Views: 158.8ms | ActiveRecord: 1.7ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 13:20:28 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.7ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 12]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (84.19ms)
Completed 200 OK in 150ms (Views: 92.4ms | ActiveRecord: 1.5ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 13:20:29 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.9ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.7ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 4]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (530.49ms)
Completed 200 OK in 591ms (Views: 538.5ms | ActiveRecord: 1.6ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 13:20:29 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.9ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 18]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (427.27ms)
Completed 200 OK in 488ms (Views: 439.7ms | ActiveRecord: 1.7ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 13:20:30 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.9ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.8ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 30]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (253.92ms)
Completed 200 OK in 317ms (Views: 265.4ms | ActiveRecord: 1.7ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 13:20:31 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.7ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 28]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (118.36ms)
Completed 200 OK in 179ms (Views: 131.6ms | ActiveRecord: 1.5ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 13:20:32 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.9ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.9ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 13]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (228.99ms)
Completed 200 OK in 295ms (Views: 236.9ms | ActiveRecord: 1.8ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 13:20:33 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (1.0ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.7ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 9]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (199.2ms)
Completed 200 OK in 269ms (Views: 213.4ms | ActiveRecord: 1.7ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 13:20:34 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.7ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 8]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (396.42ms)
Completed 200 OK in 463ms (Views: 412.7ms | ActiveRecord: 1.5ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 13:20:35 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (1.0ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (1.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 15]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (311.25ms)
Completed 200 OK in 377ms (Views: 321.7ms | ActiveRecord: 2.2ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 13:21:03 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (1.3ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.8ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 5]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (146.67ms)
Completed 200 OK in 211ms (Views: 158.2ms | ActiveRecord: 2.1ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 14:10:56 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (1.4ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.9ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 8]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (335.33ms)
Completed 200 OK in 400ms (Views: 343.3ms | ActiveRecord: 2.2ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-17 14:10:59 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"asdgadsgr"}, "question"=>{"data"=>{"id"=>"8", "attributes"=>{"content"=>"How did you learn programming?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (1.0ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 8], ["LIMIT", 1]]
  [1m[35m (0.8ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (79.4ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "asdgadsgr"], ["question_id", 8], ["created_at", 2016-06-17 18:10:59 UTC], ["updated_at", 2016-06-17 18:10:59 UTC]]
  [1m[35m (35.4ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 266ms (ActiveRecord: 116.5ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-17 14:16:01 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"srsff"}, "question"=>{"data"=>{"id"=>"5", "attributes"=>{"content"=>"What did you like least about your last job?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 5], ["LIMIT", 1]]
  [1m[35m (0.6ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (1.5ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "srsff"], ["question_id", 5], ["created_at", 2016-06-17 18:16:01 UTC], ["updated_at", 2016-06-17 18:16:01 UTC]]
  [1m[35m (22.2ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 181ms (ActiveRecord: 25.0ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 14:17:28 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.9ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (1.0ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 4]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (535.65ms)
Completed 200 OK in 595ms (Views: 546.7ms | ActiveRecord: 1.9ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-17 14:19:52 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"sadgasdg"}, "question"=>{"data"=>{"id"=>"4", "attributes"=>{"content"=>"Explain the process of web development to a middle school kid."}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 4], ["LIMIT", 1]]
  [1m[35m (0.6ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.8ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "sadgasdg"], ["question_id", 4], ["created_at", 2016-06-17 18:19:52 UTC], ["updated_at", 2016-06-17 18:19:52 UTC]]
  [1m[35m (28.6ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 170ms (ActiveRecord: 30.7ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 14:20:10 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (1.5ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.7ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 20]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (361.61ms)
Completed 200 OK in 423ms (Views: 373.2ms | ActiveRecord: 2.2ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-17 14:20:23 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"qskejbg[aslgnae]hwer\n\nasfohq[lkga\nsfahafshadf\nfashadfhfsahfd\n\n,cqwpg"}, "question"=>{"data"=>{"id"=>"20", "attributes"=>{"content"=>"Please walk me through one of the projects on your resume."}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 20], ["LIMIT", 1]]
  [1m[35m (0.6ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (1.4ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "qskejbg[aslgnae]hwer\n\nasfohq[lkga\nsfahafshadf\nfashadfhfsahfd\n\n,cqwpg"], ["question_id", 20], ["created_at", 2016-06-17 18:20:24 UTC], ["updated_at", 2016-06-17 18:20:24 UTC]]
  [1m[35m (1.4ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 142ms (ActiveRecord: 4.0ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 14:22:49 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.9ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (1.1ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 28]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (128.36ms)
Completed 200 OK in 198ms (Views: 137.0ms | ActiveRecord: 1.9ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-17 14:22:52 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"glkjgpg"}, "question"=>{"data"=>{"id"=>"28", "attributes"=>{"content"=>"Do you have any questions for me?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 28], ["LIMIT", 1]]
  [1m[35m (0.6ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.9ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "glkjgpg"], ["question_id", 28], ["created_at", 2016-06-17 18:22:52 UTC], ["updated_at", 2016-06-17 18:22:52 UTC]]
  [1m[35m (1.8ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 146ms (ActiveRecord: 3.8ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 14:23:03 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (1.6ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (1.1ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 9]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (196.84ms)
Completed 200 OK in 264ms (Views: 207.0ms | ActiveRecord: 2.7ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 14:23:04 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (1.5ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.8ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 22]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (314.52ms)
Completed 200 OK in 386ms (Views: 327.1ms | ActiveRecord: 2.3ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-17 14:23:06 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"asfeffe"}, "question"=>{"data"=>{"id"=>"22", "attributes"=>{"content"=>"Can you tell me about a challenge you've faced at work and how you got through it?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.9ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 22], ["LIMIT", 1]]
  [1m[35m (1.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.8ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "asfeffe"], ["question_id", 22], ["created_at", 2016-06-17 18:23:06 UTC], ["updated_at", 2016-06-17 18:23:06 UTC]]
  [1m[35m (31.0ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 281ms (ActiveRecord: 33.8ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 14:23:15 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (1.4ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (1.1ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 11]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (531.5ms)
Completed 200 OK in 599ms (Views: 538.7ms | ActiveRecord: 2.5ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 14:23:16 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (5.5ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.9ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 20]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (395.16ms)
Completed 200 OK in 465ms (Views: 406.8ms | ActiveRecord: 6.4ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 14:23:17 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.7ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 16]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (157.26ms)
Completed 200 OK in 229ms (Views: 172.8ms | ActiveRecord: 1.4ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 14:23:33 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (1.3ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 11]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (513.75ms)
Completed 200 OK in 579ms (Views: 526.8ms | ActiveRecord: 2.1ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 14:23:34 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (1.0ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.9ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 24]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (340.24ms)
Completed 200 OK in 406ms (Views: 352.2ms | ActiveRecord: 1.8ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 14:23:36 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.7ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 31]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (320.77ms)
Completed 200 OK in 386ms (Views: 331.9ms | ActiveRecord: 1.5ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 14:23:37 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.7ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 11]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (522.33ms)
Completed 200 OK in 581ms (Views: 530.0ms | ActiveRecord: 1.5ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 14:23:42 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.9ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.6ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 32]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (333.37ms)
Completed 200 OK in 403ms (Views: 349.1ms | ActiveRecord: 1.6ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 14:23:42 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.7ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 22]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (350.74ms)
Completed 200 OK in 416ms (Views: 358.1ms | ActiveRecord: 1.5ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 14:23:44 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (1.1ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.7ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 12]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (93.26ms)
Completed 200 OK in 171ms (Views: 105.2ms | ActiveRecord: 1.8ms)


  [1m[35m (64.1ms)[0m  [1m[34mSELECT pg_try_advisory_lock(7064053580037655320);[0m
  [1m[36mActiveRecord::SchemaMigration Load (0.6ms)[0m  [1m[34mSELECT "schema_migrations".* FROM "schema_migrations"[0m
Migrating to AddDefaultsToVoteVariables (20160617182704)
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35m (39.3ms)[0m  [1m[35mALTER TABLE "answers" ALTER COLUMN "vote_score" TYPE integer[0m
  [1m[35m (24.3ms)[0m  [1m[35mALTER TABLE "answers" ALTER COLUMN "vote_score" SET DEFAULT 0[0m
  [1m[35m (0.4ms)[0m  [1m[35mALTER TABLE "answers" ALTER COLUMN "vote_count" TYPE integer[0m
  [1m[35m (0.6ms)[0m  [1m[35mALTER TABLE "answers" ALTER COLUMN "vote_count" SET DEFAULT 0[0m
  [1m[35mSQL (0.5ms)[0m  [1m[32mINSERT INTO "schema_migrations" ("version") VALUES ($1) RETURNING "version"[0m  [["version", "20160617182704"]]
  [1m[35m (18.1ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mActiveRecord::InternalMetadata Load (0.5ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" ORDER BY "ar_internal_metadata"."key" ASC LIMIT $1[0m  [["LIMIT", 1]]
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35m (0.1ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.2ms)[0m  [1m[34mSELECT pg_advisory_unlock(7064053580037655320)[0m
  [1m[36mActiveRecord::SchemaMigration Load (0.2ms)[0m  [1m[34mSELECT "schema_migrations".* FROM "schema_migrations"[0m
  [1m[35m (51.1ms)[0m  [1m[34mSELECT t2.oid::regclass::text AS to_table, a1.attname AS column, a2.attname AS primary_key, c.conname AS name, c.confupdtype AS on_update, c.confdeltype AS on_delete
FROM pg_constraint c
JOIN pg_class t1 ON c.conrelid = t1.oid
JOIN pg_class t2 ON c.confrelid = t2.oid
JOIN pg_attribute a1 ON a1.attnum = c.conkey[1] AND a1.attrelid = t1.oid
JOIN pg_attribute a2 ON a2.attnum = c.confkey[1] AND a2.attrelid = t2.oid
JOIN pg_namespace t3 ON c.connamespace = t3.oid
WHERE c.contype = 'f'
  AND t1.relname = 'answers'
  AND t3.nspname = ANY (current_schemas(false))
ORDER BY c.conname
[0m
  [1m[35m (4.3ms)[0m  [1m[34mSELECT t2.oid::regclass::text AS to_table, a1.attname AS column, a2.attname AS primary_key, c.conname AS name, c.confupdtype AS on_update, c.confdeltype AS on_delete
FROM pg_constraint c
JOIN pg_class t1 ON c.conrelid = t1.oid
JOIN pg_class t2 ON c.confrelid = t2.oid
JOIN pg_attribute a1 ON a1.attnum = c.conkey[1] AND a1.attrelid = t1.oid
JOIN pg_attribute a2 ON a2.attnum = c.confkey[1] AND a2.attrelid = t2.oid
JOIN pg_namespace t3 ON c.connamespace = t3.oid
WHERE c.contype = 'f'
  AND t1.relname = 'questions'
  AND t3.nspname = ANY (current_schemas(false))
ORDER BY c.conname
[0m
  [1m[36mActiveRecord::SchemaMigration Load (0.7ms)[0m  [1m[34mSELECT "schema_migrations".* FROM "schema_migrations"[0m
  [1m[35m (0.3ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1[0m  [["key", :environment]]
  [1m[36mActiveRecord::SchemaMigration Load (0.1ms)[0m  [1m[34mSELECT "schema_migrations".* FROM "schema_migrations"[0m
  [1m[35m (0.1ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1[0m  [["key", :environment]]
  [1m[36mActiveRecord::SchemaMigration Load (0.1ms)[0m  [1m[34mSELECT "schema_migrations".* FROM "schema_migrations"[0m
  [1m[35m (0.1ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1[0m  [["key", :environment]]
  [1m[35m (262.4ms)[0m  [1m[35mDROP DATABASE IF EXISTS "QIQAPI_development"[0m
  [1m[35m (219.3ms)[0m  [1m[35mDROP DATABASE IF EXISTS "QIQAPI_test"[0m
  [1m[35m (3082.7ms)[0m  [1m[35mCREATE DATABASE "QIQAPI_development" ENCODING = 'unicode'[0m
  [1m[35m (581.4ms)[0m  [1m[35mCREATE DATABASE "QIQAPI_test" ENCODING = 'unicode'[0m
  [1m[35mSQL (0.4ms)[0m  [1m[35mCREATE EXTENSION IF NOT EXISTS "plpgsql"[0m
  [1m[35m (31.8ms)[0m  [1m[35mCREATE TABLE "answers" ("id" serial primary key, "vote_score" integer DEFAULT 0, "vote_count" integer DEFAULT 0, "content" character varying, "question_id" integer, "created_at" timestamp, "updated_at" timestamp)[0m
  [1m[35m (4.3ms)[0m  [1m[35mCREATE TABLE "questions" ("id" serial primary key, "content" character varying, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  [1m[35m (3.2ms)[0m  [1m[35mCREATE TABLE "schema_migrations" ("version" character varying PRIMARY KEY)[0m
  [1m[35m (0.4ms)[0m  [1m[34mSELECT version FROM "schema_migrations"[0m
  [1m[35m (0.7ms)[0m  [1m[32mINSERT INTO "schema_migrations" (version) VALUES ('20160617182704')[0m
  [1m[35m (0.6ms)[0m  [1m[32mINSERT INTO schema_migrations (version) VALUES ('20160615195122'), ('20160615195241'), ('20160615195717');

[0m
  [1m[35m (17.1ms)[0m  [1m[35mCREATE TABLE "ar_internal_metadata" ("key" character varying PRIMARY KEY, "value" character varying, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  [1m[36mActiveRecord::InternalMetadata Load (0.4ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" ORDER BY "ar_internal_metadata"."key" ASC LIMIT $1[0m  [["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "ar_internal_metadata" ("key", "value", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "key"[0m  [["key", "environment"], ["value", "development"], ["created_at", 2016-06-17 18:29:14 UTC], ["updated_at", 2016-06-17 18:29:14 UTC]]
  [1m[35m (0.9ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mActiveRecord::InternalMetadata Load (0.2ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" ORDER BY "ar_internal_metadata"."key" ASC LIMIT $1[0m  [["LIMIT", 1]]
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35m (0.2ms)[0m  [1m[35mCOMMIT[0m
  [1m[35mSQL (0.4ms)[0m  [1m[35mCREATE EXTENSION IF NOT EXISTS "plpgsql"[0m
  [1m[35m (51.4ms)[0m  [1m[35mCREATE TABLE "answers" ("id" serial primary key, "vote_score" integer DEFAULT 0, "vote_count" integer DEFAULT 0, "content" character varying, "question_id" integer, "created_at" timestamp, "updated_at" timestamp)[0m
  [1m[35m (21.1ms)[0m  [1m[35mCREATE TABLE "questions" ("id" serial primary key, "content" character varying, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  [1m[35m (4.1ms)[0m  [1m[35mCREATE TABLE "schema_migrations" ("version" character varying PRIMARY KEY)[0m
  [1m[35m (0.4ms)[0m  [1m[34mSELECT version FROM "schema_migrations"[0m
  [1m[35m (0.8ms)[0m  [1m[32mINSERT INTO "schema_migrations" (version) VALUES ('20160617182704')[0m
  [1m[35m (0.7ms)[0m  [1m[32mINSERT INTO schema_migrations (version) VALUES ('20160615195122'), ('20160615195241'), ('20160615195717');

[0m
  [1m[35m (4.4ms)[0m  [1m[35mCREATE TABLE "ar_internal_metadata" ("key" character varying PRIMARY KEY, "value" character varying, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  [1m[36mActiveRecord::InternalMetadata Load (0.3ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" ORDER BY "ar_internal_metadata"."key" ASC LIMIT $1[0m  [["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "ar_internal_metadata" ("key", "value", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "key"[0m  [["key", "environment"], ["value", "development"], ["created_at", 2016-06-17 18:29:14 UTC], ["updated_at", 2016-06-17 18:29:14 UTC]]
  [1m[35m (0.7ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mActiveRecord::InternalMetadata Load (0.2ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" ORDER BY "ar_internal_metadata"."key" ASC LIMIT $1[0m  [["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35m (0.1ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mActiveRecord::SchemaMigration Load (0.3ms)[0m  [1m[34mSELECT "schema_migrations".* FROM "schema_migrations"[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.6ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "What are you looking for in terms of career development?"], ["created_at", 2016-06-17 18:29:14 UTC], ["updated_at", 2016-06-17 18:29:14 UTC]]
  [1m[35m (16.0ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "How many ways can you center a div?"], ["created_at", 2016-06-17 18:29:14 UTC], ["updated_at", 2016-06-17 18:29:14 UTC]]
  [1m[35m (0.8ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "What are your strengths and weaknesses?"], ["created_at", 2016-06-17 18:29:14 UTC], ["updated_at", 2016-06-17 18:29:14 UTC]]
  [1m[35m (1.0ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "Explain the process of web development to a middle school kid."], ["created_at", 2016-06-17 18:29:14 UTC], ["updated_at", 2016-06-17 18:29:14 UTC]]
  [1m[35m (0.8ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "What did you like least about your last job?"], ["created_at", 2016-06-17 18:29:14 UTC], ["updated_at", 2016-06-17 18:29:14 UTC]]
  [1m[35m (0.8ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "How does the web work?"], ["created_at", 2016-06-17 18:29:14 UTC], ["updated_at", 2016-06-17 18:29:14 UTC]]
  [1m[35m (2.7ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "What is function hoisting in JavaScript?"], ["created_at", 2016-06-17 18:29:14 UTC], ["updated_at", 2016-06-17 18:29:14 UTC]]
  [1m[35m (0.7ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "How did you learn programming?"], ["created_at", 2016-06-17 18:29:14 UTC], ["updated_at", 2016-06-17 18:29:14 UTC]]
  [1m[35m (0.9ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "What is a closure?"], ["created_at", 2016-06-17 18:29:14 UTC], ["updated_at", 2016-06-17 18:29:14 UTC]]
  [1m[35m (0.6ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "How did you learn web development?"], ["created_at", 2016-06-17 18:29:14 UTC], ["updated_at", 2016-06-17 18:29:14 UTC]]
  [1m[35m (0.6ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "Describe a time when you were able to improve upon the design that was originally suggested?"], ["created_at", 2016-06-17 18:29:14 UTC], ["updated_at", 2016-06-17 18:29:14 UTC]]
  [1m[35m (0.7ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "So tell me about yourself."], ["created_at", 2016-06-17 18:29:14 UTC], ["updated_at", 2016-06-17 18:29:14 UTC]]
  [1m[35m (0.7ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "Where would you like to be in your career five years from now?"], ["created_at", 2016-06-17 18:29:14 UTC], ["updated_at", 2016-06-17 18:29:14 UTC]]
  [1m[35m (1.7ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "Why do you want to work with us?"], ["created_at", 2016-06-17 18:29:14 UTC], ["updated_at", 2016-06-17 18:29:14 UTC]]
  [1m[35m (0.7ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "Can you name two programming paradigms important for JavaScript app developers?"], ["created_at", 2016-06-17 18:29:14 UTC], ["updated_at", 2016-06-17 18:29:14 UTC]]
  [1m[35m (1.0ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "Tell me about your long-term goals."], ["created_at", 2016-06-17 18:29:14 UTC], ["updated_at", 2016-06-17 18:29:14 UTC]]
  [1m[35m (0.8ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "Tell me about the most recent project you worked on. What were your responsibilities?"], ["created_at", 2016-06-17 18:29:14 UTC], ["updated_at", 2016-06-17 18:29:14 UTC]]
  [1m[35m (0.9ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "What are your short-term goals."], ["created_at", 2016-06-17 18:29:14 UTC], ["updated_at", 2016-06-17 18:29:14 UTC]]
  [1m[35m (0.8ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "Do you have any questions for me?"], ["created_at", 2016-06-17 18:29:14 UTC], ["updated_at", 2016-06-17 18:29:14 UTC]]
  [1m[35m (1.0ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "Please walk me through one of the projects on your resume."], ["created_at", 2016-06-17 18:29:14 UTC], ["updated_at", 2016-06-17 18:29:14 UTC]]
  [1m[35m (0.8ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "What is the difference between classical inheritance and prototypal inheritance? "], ["created_at", 2016-06-17 18:29:14 UTC], ["updated_at", 2016-06-17 18:29:14 UTC]]
  [1m[35m (0.6ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "Can you tell me about a challenge you've faced at work and how you got through it?"], ["created_at", 2016-06-17 18:29:14 UTC], ["updated_at", 2016-06-17 18:29:14 UTC]]
  [1m[35m (0.7ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "Explain a polymorphic association?"], ["created_at", 2016-06-17 18:29:14 UTC], ["updated_at", 2016-06-17 18:29:14 UTC]]
  [1m[35m (0.6ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "Why do you want to be a web developer?"], ["created_at", 2016-06-17 18:29:14 UTC], ["updated_at", 2016-06-17 18:29:14 UTC]]
  [1m[35m (0.8ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "Describe your production deployment process?"], ["created_at", 2016-06-17 18:29:14 UTC], ["updated_at", 2016-06-17 18:29:14 UTC]]
  [1m[35m (2.0ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "Why do you want to work for us?"], ["created_at", 2016-06-17 18:29:14 UTC], ["updated_at", 2016-06-17 18:29:14 UTC]]
  [1m[35m (0.7ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "How would you declare and use a constructor in Ruby?"], ["created_at", 2016-06-17 18:29:14 UTC], ["updated_at", 2016-06-17 18:29:14 UTC]]
  [1m[35m (0.7ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "Do you have any questions for me?"], ["created_at", 2016-06-17 18:29:14 UTC], ["updated_at", 2016-06-17 18:29:14 UTC]]
  [1m[35m (0.7ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "How do you evaluate success?"], ["created_at", 2016-06-17 18:29:14 UTC], ["updated_at", 2016-06-17 18:29:14 UTC]]
  [1m[35m (0.7ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "How would you describe your work style?"], ["created_at", 2016-06-17 18:29:14 UTC], ["updated_at", 2016-06-17 18:29:14 UTC]]
  [1m[35m (0.6ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.7ms)[0m  [1m[32mINSERT INTO "answers" ("vote_score", "vote_count", "content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["vote_score", 15], ["vote_count", 20], ["content", "<p>Three, and more than you'd expect!</p>\n\n  <p>You could center a div horizontally, vertically, or both and there are\n  a ton of ways to do them each. It also depends on what you're trying to\n  center. The most common way I do it is using the margins. If you set\n    a div's margin to 0 auto, to will automatically get the width of the\n    client's screen and use that information to center the div.</p>\n\n  <p>If I had text within a div, I wold use the text-align: center css\n  attribute on the div.</p>"], ["question_id", 2], ["created_at", 2016-06-17 18:29:15 UTC], ["updated_at", 2016-06-17 18:29:15 UTC]]
  [1m[35m (32.0ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "answers" ("vote_score", "vote_count", "content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["vote_score", -5], ["vote_count", 7], ["content", "<p>Just use margin dude.</p>"], ["question_id", 2], ["created_at", 2016-06-17 18:29:15 UTC], ["updated_at", 2016-06-17 18:29:15 UTC]]
  [1m[35m (0.9ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "answers" ("vote_score", "vote_count", "content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["vote_score", 2], ["vote_count", 2], ["content", "<p>You know when you write notes and pass them to Suzie from\n  down the street? That's kind of what I do. Websites are like notes\n  you want your friends to read. For them to read your notes, you\n  need to also give them the note right? Well that is what the Internet\n  does for you. It sends the websites to the people who want to read\n  them.</p>\n\n  <p>The best part is, you know how you don't want Ms. Robinson to see\n  you pass that note? It's like that with the Internet too. There's\n  ways of keeping the visits to your website secret!</p>"], ["question_id", 4], ["created_at", 2016-06-17 18:29:15 UTC], ["updated_at", 2016-06-17 18:29:15 UTC]]
  [1m[35m (0.6ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "answers" ("vote_score", "vote_count", "content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["vote_score", -7], ["vote_count", 12], ["content", "<p>Web development is like, you know, creating front end\n  presentations of backend APIs using asynchronious requests.</p>"], ["question_id", 4], ["created_at", 2016-06-17 18:29:15 UTC], ["updated_at", 2016-06-17 18:29:15 UTC]]
  [1m[35m (0.9ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "How does the web work?"], ["created_at", 2016-06-17 18:29:15 UTC], ["updated_at", 2016-06-17 18:29:15 UTC]]
  [1m[35m (0.7ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "answers" ("vote_score", "vote_count", "content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["vote_score", -20], ["vote_count", 22], ["content", "<p>It's a series of tubes.</p>"], ["question_id", 31], ["created_at", 2016-06-17 18:29:15 UTC], ["updated_at", 2016-06-17 18:29:15 UTC]]
  [1m[35m (0.7ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "answers" ("vote_score", "vote_count", "content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["vote_score", 5], ["vote_count", 7], ["content", "The Internet has a technical side and a social side. There's the\n  infrastructure, like routers, cables, satelites, ISPs, servers,\n  and website code, and there are the users who participate in the\n  Internet by creating content for it's applications and browsing\n  the sites.</p>\n\n  <p>I imagine you guys are interested in the technical side though\n  right? (Yes)</p>\n\n  <p>In short, I'd say it's a communication network designed\n  to deliver messages between computers. One of the most interesting\n  things about it, I think, is that in the end, it really is a\n  bunch of cables! Some run under the oceans, others go through\n  mountains and under forests. Some signals travel through space! All\n  the code we write goes through those cables, I think that's pretty\n  amazing!</p>"], ["question_id", 31], ["created_at", 2016-06-17 18:29:15 UTC], ["updated_at", 2016-06-17 18:29:15 UTC]]
  [1m[35m (0.7ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "How did you learn programming?"], ["created_at", 2016-06-17 18:29:15 UTC], ["updated_at", 2016-06-17 18:29:15 UTC]]
  [1m[35m (0.9ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "answers" ("vote_score", "vote_count", "content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["vote_score", -3], ["vote_count", 4], ["content", "<p>I just started Googling it you know, and I liked doing it so\n  I ended up trying to do it professionally.</p>"], ["question_id", 32], ["created_at", 2016-06-17 18:29:15 UTC], ["updated_at", 2016-06-17 18:29:15 UTC]]
  [1m[35m (0.7ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "answers" ("vote_score", "vote_count", "content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["vote_score", -3], ["vote_count", 4], ["content", "<p>For me, it started back in 2011 when I was doing social science\n  at Stockholm University. The creation of communities had become a\n  passion of mine so I was exploring ways of finding data on\n  social networks. The Internet was the obvious place to look so I\n  found myself writing Python scripts to build simple web scrapers and\n  spiders.</p>\n\n  <p>It was exciting, I discovered coding makes me happy not just for\n  the results it creates but because I like the way it looks. Solving\n  problems is interesting.</p>"], ["question_id", 32], ["created_at", 2016-06-17 18:29:15 UTC], ["updated_at", 2016-06-17 18:29:15 UTC]]
  [1m[35m (0.7ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mAnswer Load (0.6ms)[0m  [1m[34mSELECT "answers".* FROM "answers"[0m
Started GET "/api/v1/random" for ::1 at 2016-06-17 14:30:48 -0400
  [1m[36mActiveRecord::SchemaMigration Load (0.5ms)[0m  [1m[34mSELECT "schema_migrations".* FROM "schema_migrations"[0m
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.5ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 8]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (47.37ms)
Completed 200 OK in 139ms (Views: 128.9ms | ActiveRecord: 6.1ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 14:30:58 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 17]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (2.66ms)
Completed 200 OK in 5ms (Views: 2.9ms | ActiveRecord: 0.6ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 14:34:32 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 19]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (2.63ms)
Completed 200 OK in 5ms (Views: 2.9ms | ActiveRecord: 0.6ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-17 14:36:22 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"asdgafgafs"}, "question"=>{"data"=>{"id"=>"19", "attributes"=>{"content"=>"Do you have any questions for me?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 19], ["LIMIT", 1]]
  [1m[35m (0.3ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.6ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "asdgafgafs"], ["question_id", 19], ["created_at", 2016-06-17 18:36:22 UTC], ["updated_at", 2016-06-17 18:36:22 UTC]]
  [1m[35m (16.3ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 121ms (ActiveRecord: 18.6ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 14:36:26 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 21]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (2.69ms)
Completed 200 OK in 5ms (Views: 3.0ms | ActiveRecord: 0.6ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-17 14:36:27 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"gwerger"}, "question"=>{"data"=>{"id"=>"21", "attributes"=>{"content"=>"What is the difference between classical inheritance and prototypal inheritance? "}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 21], ["LIMIT", 1]]
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "gwerger"], ["question_id", 21], ["created_at", 2016-06-17 18:36:27 UTC], ["updated_at", 2016-06-17 18:36:27 UTC]]
  [1m[35m (2.3ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 8ms (ActiveRecord: 3.0ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 14:36:28 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 3]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (3.04ms)
Completed 200 OK in 6ms (Views: 3.4ms | ActiveRecord: 0.6ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-17 14:36:30 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"qwtqretw"}, "question"=>{"data"=>{"id"=>"3", "attributes"=>{"content"=>"What are your strengths and weaknesses?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 3], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "qwtqretw"], ["question_id", 3], ["created_at", 2016-06-17 18:36:30 UTC], ["updated_at", 2016-06-17 18:36:30 UTC]]
  [1m[35m (2.2ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 8ms (ActiveRecord: 2.9ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 14:36:30 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.5ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 14]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (3.01ms)
Completed 200 OK in 6ms (Views: 3.3ms | ActiveRecord: 0.7ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-17 14:36:32 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"qwetyq4wy4y"}, "question"=>{"data"=>{"id"=>"14", "attributes"=>{"content"=>"Why do you want to work with us?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 14], ["LIMIT", 1]]
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "qwetyq4wy4y"], ["question_id", 14], ["created_at", 2016-06-17 18:36:32 UTC], ["updated_at", 2016-06-17 18:36:32 UTC]]
  [1m[35m (2.1ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 8ms (ActiveRecord: 2.9ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 14:36:33 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 11]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (2.33ms)
Completed 200 OK in 4ms (Views: 2.6ms | ActiveRecord: 0.5ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-17 14:36:34 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"qwetqtqewtwe"}, "question"=>{"data"=>{"id"=>"11", "attributes"=>{"content"=>"Describe a time when you were able to improve upon the design that was originally suggested?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 11], ["LIMIT", 1]]
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "qwetqtqewtwe"], ["question_id", 11], ["created_at", 2016-06-17 18:36:34 UTC], ["updated_at", 2016-06-17 18:36:34 UTC]]
  [1m[35m (2.1ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 8ms (ActiveRecord: 2.9ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 14:36:35 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 31]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (106.59ms)
Completed 200 OK in 109ms (Views: 106.9ms | ActiveRecord: 0.8ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-17 14:36:37 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"qwewrwtyqw"}, "question"=>{"data"=>{"id"=>"31", "attributes"=>{"content"=>"How does the web work?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 31], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "qwewrwtyqw"], ["question_id", 31], ["created_at", 2016-06-17 18:36:37 UTC], ["updated_at", 2016-06-17 18:36:37 UTC]]
  [1m[35m (2.2ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 7ms (ActiveRecord: 2.9ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 14:37:41 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 29]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (3.42ms)
Completed 200 OK in 7ms (Views: 3.9ms | ActiveRecord: 0.8ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-17 14:37:43 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"sadvasd"}, "question"=>{"data"=>{"id"=>"29", "attributes"=>{"content"=>"How do you evaluate success?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 29], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "sadvasd"], ["question_id", 29], ["created_at", 2016-06-17 18:37:43 UTC], ["updated_at", 2016-06-17 18:37:43 UTC]]
  [1m[35m (44.6ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 49ms (ActiveRecord: 45.3ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 14:37:50 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 19]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (4.11ms)
Completed 200 OK in 7ms (Views: 4.5ms | ActiveRecord: 0.8ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 14:39:31 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 25]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (3.18ms)
Completed 200 OK in 6ms (Views: 3.6ms | ActiveRecord: 0.8ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-17 14:39:33 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"asdfwdFE"}, "question"=>{"data"=>{"id"=>"25", "attributes"=>{"content"=>"Describe your production deployment process?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 25], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "asdfwdFE"], ["question_id", 25], ["created_at", 2016-06-17 18:39:33 UTC], ["updated_at", 2016-06-17 18:39:33 UTC]]
  [1m[35m (2.2ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 7ms (ActiveRecord: 3.0ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 14:39:34 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.5ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 30]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (2.48ms)
Completed 200 OK in 5ms (Views: 2.8ms | ActiveRecord: 0.6ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-17 14:39:36 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"asdfdsfds"}, "question"=>{"data"=>{"id"=>"30", "attributes"=>{"content"=>"How would you describe your work style?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 30], ["LIMIT", 1]]
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "asdfdsfds"], ["question_id", 30], ["created_at", 2016-06-17 18:39:36 UTC], ["updated_at", 2016-06-17 18:39:36 UTC]]
  [1m[35m (2.1ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 8ms (ActiveRecord: 2.9ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 14:39:37 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 11]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (106.75ms)
Completed 200 OK in 109ms (Views: 107.2ms | ActiveRecord: 0.5ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-17 14:39:39 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"arwrharsghd"}, "question"=>{"data"=>{"id"=>"11", "attributes"=>{"content"=>"Describe a time when you were able to improve upon the design that was originally suggested?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 11], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "arwrharsghd"], ["question_id", 11], ["created_at", 2016-06-17 18:39:39 UTC], ["updated_at", 2016-06-17 18:39:39 UTC]]
  [1m[35m (2.2ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 7ms (ActiveRecord: 3.0ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 14:40:24 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 3]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (5.15ms)
Completed 200 OK in 8ms (Views: 5.6ms | ActiveRecord: 0.8ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 14:42:30 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 24]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (2.4ms)
Completed 200 OK in 4ms (Views: 2.7ms | ActiveRecord: 0.5ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-17 14:42:32 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"dsgdg"}, "question"=>{"data"=>{"id"=>"24", "attributes"=>{"content"=>"Why do you want to be a web developer?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 24], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "dsgdg"], ["question_id", 24], ["created_at", 2016-06-17 18:42:32 UTC], ["updated_at", 2016-06-17 18:42:32 UTC]]
  [1m[35m (42.3ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 48ms (ActiveRecord: 42.9ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 14:42:33 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 19]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (3.25ms)
Completed 200 OK in 26ms (Views: 3.6ms | ActiveRecord: 0.7ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-17 14:42:34 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"asdgsdg"}, "question"=>{"data"=>{"id"=>"19", "attributes"=>{"content"=>"Do you have any questions for me?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 19], ["LIMIT", 1]]
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "asdgsdg"], ["question_id", 19], ["created_at", 2016-06-17 18:42:34 UTC], ["updated_at", 2016-06-17 18:42:34 UTC]]
  [1m[35m (2.1ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 7ms (ActiveRecord: 2.8ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 14:42:50 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.1ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 28]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (2.65ms)
Completed 200 OK in 5ms (Views: 3.0ms | ActiveRecord: 0.5ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-17 14:42:52 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"sadggr"}, "question"=>{"data"=>{"id"=>"28", "attributes"=>{"content"=>"Do you have any questions for me?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 28], ["LIMIT", 1]]
  [1m[35m (0.3ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "sadggr"], ["question_id", 28], ["created_at", 2016-06-17 18:42:52 UTC], ["updated_at", 2016-06-17 18:42:52 UTC]]
  [1m[35m (2.5ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 8ms (ActiveRecord: 3.4ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 14:42:53 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.5ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.4ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 9]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (4.27ms)
Completed 200 OK in 7ms (Views: 4.4ms | ActiveRecord: 1.0ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-17 14:42:55 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"asdfsrg"}, "question"=>{"data"=>{"id"=>"9", "attributes"=>{"content"=>"What is a closure?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 9], ["LIMIT", 1]]
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "asdfsrg"], ["question_id", 9], ["created_at", 2016-06-17 18:42:55 UTC], ["updated_at", 2016-06-17 18:42:55 UTC]]
  [1m[35m (2.0ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 8ms (ActiveRecord: 2.8ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 14:42:55 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 28]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (3.85ms)
Completed 200 OK in 6ms (Views: 4.1ms | ActiveRecord: 0.5ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 14:42:56 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 6]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (3.23ms)
Completed 200 OK in 6ms (Views: 3.6ms | ActiveRecord: 0.6ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-17 14:42:58 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"rasgrgasrg"}, "question"=>{"data"=>{"id"=>"6", "attributes"=>{"content"=>"How does the web work?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 6], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "rasgrgasrg"], ["question_id", 6], ["created_at", 2016-06-17 18:42:58 UTC], ["updated_at", 2016-06-17 18:42:58 UTC]]
  [1m[35m (2.1ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 8ms (ActiveRecord: 2.9ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 14:42:59 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 7]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (3.0ms)
Completed 200 OK in 5ms (Views: 3.3ms | ActiveRecord: 0.6ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-17 14:43:00 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"rsagrsgr"}, "question"=>{"data"=>{"id"=>"7", "attributes"=>{"content"=>"What is function hoisting in JavaScript?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 7], ["LIMIT", 1]]
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "rsagrsgr"], ["question_id", 7], ["created_at", 2016-06-17 18:43:00 UTC], ["updated_at", 2016-06-17 18:43:00 UTC]]
  [1m[35m (15.9ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 22ms (ActiveRecord: 16.6ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 14:43:01 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.5ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.3ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 25]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (5.26ms)
Completed 200 OK in 8ms (Views: 5.6ms | ActiveRecord: 0.8ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-17 14:43:03 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"asrgrrgs"}, "question"=>{"data"=>{"id"=>"25", "attributes"=>{"content"=>"Describe your production deployment process?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 25], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "asrgrrgs"], ["question_id", 25], ["created_at", 2016-06-17 18:43:03 UTC], ["updated_at", 2016-06-17 18:43:03 UTC]]
  [1m[35m (11.9ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 17ms (ActiveRecord: 12.5ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 14:43:03 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.5ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 18]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (2.97ms)
Completed 200 OK in 6ms (Views: 3.3ms | ActiveRecord: 0.6ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-17 14:43:05 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"rsgragrsg"}, "question"=>{"data"=>{"id"=>"18", "attributes"=>{"content"=>"What are your short-term goals."}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 18], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "rsgragrsg"], ["question_id", 18], ["created_at", 2016-06-17 18:43:05 UTC], ["updated_at", 2016-06-17 18:43:05 UTC]]
  [1m[35m (7.7ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 14ms (ActiveRecord: 8.5ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 14:43:06 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 2]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (4.19ms)
Completed 200 OK in 7ms (Views: 4.6ms | ActiveRecord: 0.7ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-17 14:43:07 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"arsgrgr"}, "question"=>{"data"=>{"id"=>"2", "attributes"=>{"content"=>"How many ways can you center a div?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "arsgrgr"], ["question_id", 2], ["created_at", 2016-06-17 18:43:07 UTC], ["updated_at", 2016-06-17 18:43:07 UTC]]
  [1m[35m (2.2ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 8ms (ActiveRecord: 2.9ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 14:50:35 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.3ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 19]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (5.62ms)
Completed 200 OK in 9ms (Views: 6.1ms | ActiveRecord: 0.9ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-17 14:50:37 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"sadgasdg"}, "question"=>{"data"=>{"id"=>"19", "attributes"=>{"content"=>"Do you have any questions for me?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 19], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "sadgasdg"], ["question_id", 19], ["created_at", 2016-06-17 18:50:37 UTC], ["updated_at", 2016-06-17 18:50:37 UTC]]
  [1m[35m (73.4ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 79ms (ActiveRecord: 74.0ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 14:50:52 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.1ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 30]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (2.92ms)
Completed 200 OK in 5ms (Views: 3.2ms | ActiveRecord: 0.5ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-17 14:50:54 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"asdgasdgsg"}, "question"=>{"data"=>{"id"=>"30", "attributes"=>{"content"=>"How would you describe your work style?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 30], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "asdgasdgsg"], ["question_id", 30], ["created_at", 2016-06-17 18:50:54 UTC], ["updated_at", 2016-06-17 18:50:54 UTC]]
  [1m[35m (2.2ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 7ms (ActiveRecord: 2.8ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 14:51:05 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 30]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (3.96ms)
Completed 200 OK in 6ms (Views: 4.4ms | ActiveRecord: 0.5ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-17 14:51:07 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"asdfdsfadsf"}, "question"=>{"data"=>{"id"=>"30", "attributes"=>{"content"=>"How would you describe your work style?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 30], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "asdfdsfadsf"], ["question_id", 30], ["created_at", 2016-06-17 18:51:07 UTC], ["updated_at", 2016-06-17 18:51:07 UTC]]
  [1m[35m (0.8ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 6ms (ActiveRecord: 1.5ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 14:52:06 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.1ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 18]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (3.14ms)
Completed 200 OK in 5ms (Views: 3.4ms | ActiveRecord: 0.5ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-17 14:52:08 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"asfsfg"}, "question"=>{"data"=>{"id"=>"18", "attributes"=>{"content"=>"What are your short-term goals."}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 18], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "asfsfg"], ["question_id", 18], ["created_at", 2016-06-17 18:52:08 UTC], ["updated_at", 2016-06-17 18:52:08 UTC]]
  [1m[35m (2.2ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 8ms (ActiveRecord: 2.8ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 14:52:28 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.1ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 17]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (2.3ms)
Completed 200 OK in 4ms (Views: 2.6ms | ActiveRecord: 0.5ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-17 14:52:30 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"dsagasd"}, "question"=>{"data"=>{"id"=>"17", "attributes"=>{"content"=>"Tell me about the most recent project you worked on. What were your responsibilities?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 17], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "dsagasd"], ["question_id", 17], ["created_at", 2016-06-17 18:52:30 UTC], ["updated_at", 2016-06-17 18:52:30 UTC]]
  [1m[35m (2.1ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 7ms (ActiveRecord: 2.7ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 14:52:31 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.1ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 18]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (3.51ms)
Completed 200 OK in 6ms (Views: 3.8ms | ActiveRecord: 0.5ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-17 14:52:33 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"asdgads"}, "question"=>{"data"=>{"id"=>"18", "attributes"=>{"content"=>"What are your short-term goals."}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 18], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "asdgads"], ["question_id", 18], ["created_at", 2016-06-17 18:52:33 UTC], ["updated_at", 2016-06-17 18:52:33 UTC]]
  [1m[35m (2.1ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 7ms (ActiveRecord: 2.8ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 14:54:11 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.3ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 1]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (4.41ms)
Completed 200 OK in 8ms (Views: 4.8ms | ActiveRecord: 0.8ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-17 14:54:13 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"asgsdg"}, "question"=>{"data"=>{"id"=>"1", "attributes"=>{"content"=>"What are you looking for in terms of career development?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "asgsdg"], ["question_id", 1], ["created_at", 2016-06-17 18:54:13 UTC], ["updated_at", 2016-06-17 18:54:13 UTC]]
  [1m[35m (2.5ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 8ms (ActiveRecord: 3.1ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 14:54:14 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 3]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (3.48ms)
Completed 200 OK in 6ms (Views: 3.8ms | ActiveRecord: 0.6ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-17 14:54:15 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"asdgsdg"}, "question"=>{"data"=>{"id"=>"3", "attributes"=>{"content"=>"What are your strengths and weaknesses?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 3], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "asdgsdg"], ["question_id", 3], ["created_at", 2016-06-17 18:54:15 UTC], ["updated_at", 2016-06-17 18:54:15 UTC]]
  [1m[35m (2.2ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 8ms (ActiveRecord: 2.9ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 14:54:53 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 17]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (3.12ms)
Completed 200 OK in 5ms (Views: 3.4ms | ActiveRecord: 0.5ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-17 14:54:55 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"asdfdsf"}, "question"=>{"data"=>{"id"=>"17", "attributes"=>{"content"=>"Tell me about the most recent project you worked on. What were your responsibilities?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 17], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "asdfdsf"], ["question_id", 17], ["created_at", 2016-06-17 18:54:55 UTC], ["updated_at", 2016-06-17 18:54:55 UTC]]
  [1m[35m (14.3ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 19ms (ActiveRecord: 14.9ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 14:55:23 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 3]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (5.0ms)
Completed 200 OK in 8ms (Views: 5.4ms | ActiveRecord: 0.8ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 14:55:24 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.1ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 17]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (3.75ms)
Completed 200 OK in 6ms (Views: 4.1ms | ActiveRecord: 0.5ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-17 14:55:27 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"asdgasdgas"}, "question"=>{"data"=>{"id"=>"3", "attributes"=>{"content"=>"What are your strengths and weaknesses?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 3], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "asdgasdgas"], ["question_id", 3], ["created_at", 2016-06-17 18:55:27 UTC], ["updated_at", 2016-06-17 18:55:27 UTC]]
  [1m[35m (2.1ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 7ms (ActiveRecord: 2.7ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 14:57:15 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 32]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (5.53ms)
Completed 200 OK in 9ms (Views: 6.0ms | ActiveRecord: 0.8ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-17 14:57:17 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"asdgadsgdas"}, "question"=>{"data"=>{"id"=>"32", "attributes"=>{"content"=>"How did you learn programming?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 32], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "asdgadsgdas"], ["question_id", 32], ["created_at", 2016-06-17 18:57:17 UTC], ["updated_at", 2016-06-17 18:57:17 UTC]]
  [1m[35m (2.1ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 7ms (ActiveRecord: 2.8ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 15:00:00 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 25]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (5.91ms)
Completed 200 OK in 9ms (Views: 6.4ms | ActiveRecord: 0.8ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-17 15:00:01 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"asdfsdfads"}, "question"=>{"data"=>{"id"=>"25", "attributes"=>{"content"=>"Describe your production deployment process?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 25], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "asdfsdfads"], ["question_id", 25], ["created_at", 2016-06-17 19:00:01 UTC], ["updated_at", 2016-06-17 19:00:01 UTC]]
  [1m[35m (2.2ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 7ms (ActiveRecord: 2.8ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 15:00:47 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 22]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (2.15ms)
Completed 200 OK in 4ms (Views: 2.5ms | ActiveRecord: 0.5ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-17 15:00:48 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"asdfasdf"}, "question"=>{"data"=>{"id"=>"22", "attributes"=>{"content"=>"Can you tell me about a challenge you've faced at work and how you got through it?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 22], ["LIMIT", 1]]
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "asdfasdf"], ["question_id", 22], ["created_at", 2016-06-17 19:00:48 UTC], ["updated_at", 2016-06-17 19:00:48 UTC]]
  [1m[35m (35.6ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 43ms (ActiveRecord: 36.4ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 15:00:50 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 31]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (5.32ms)
Completed 200 OK in 8ms (Views: 5.6ms | ActiveRecord: 0.6ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-17 15:00:51 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"asdfasdf"}, "question"=>{"data"=>{"id"=>"31", "attributes"=>{"content"=>"How does the web work?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 31], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "asdfasdf"], ["question_id", 31], ["created_at", 2016-06-17 19:00:51 UTC], ["updated_at", 2016-06-17 19:00:51 UTC]]
  [1m[35m (1.0ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 6ms (ActiveRecord: 1.6ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 15:01:43 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 29]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (2.91ms)
Completed 200 OK in 5ms (Views: 3.2ms | ActiveRecord: 0.5ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-17 15:01:44 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"dsfgsdf"}, "question"=>{"data"=>{"id"=>"29", "attributes"=>{"content"=>"How do you evaluate success?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 29], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "dsfgsdf"], ["question_id", 29], ["created_at", 2016-06-17 19:01:44 UTC], ["updated_at", 2016-06-17 19:01:44 UTC]]
  [1m[35m (57.9ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 63ms (ActiveRecord: 58.6ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 15:06:14 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 1]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (5.5ms)
Completed 200 OK in 9ms (Views: 6.0ms | ActiveRecord: 1.0ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-17 15:06:15 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"asdfadsf"}, "question"=>{"data"=>{"id"=>"1", "attributes"=>{"content"=>"What are you looking for in terms of career development?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "asdfadsf"], ["question_id", 1], ["created_at", 2016-06-17 19:06:15 UTC], ["updated_at", 2016-06-17 19:06:15 UTC]]
  [1m[35m (2.2ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 7ms (ActiveRecord: 2.9ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 15:06:38 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 27]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (3.14ms)
Completed 200 OK in 6ms (Views: 3.6ms | ActiveRecord: 1.0ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-17 15:06:39 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"asdfadsf"}, "question"=>{"data"=>{"id"=>"27", "attributes"=>{"content"=>"How would you declare and use a constructor in Ruby?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 27], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "asdfadsf"], ["question_id", 27], ["created_at", 2016-06-17 19:06:39 UTC], ["updated_at", 2016-06-17 19:06:39 UTC]]
  [1m[35m (2.1ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 7ms (ActiveRecord: 2.8ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 15:06:40 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 18]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (8.71ms)
Completed 200 OK in 11ms (Views: 9.0ms | ActiveRecord: 0.6ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-17 15:06:41 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"asdfadf"}, "question"=>{"data"=>{"id"=>"18", "attributes"=>{"content"=>"What are your short-term goals."}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 18], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "asdfadf"], ["question_id", 18], ["created_at", 2016-06-17 19:06:41 UTC], ["updated_at", 2016-06-17 19:06:41 UTC]]
  [1m[35m (16.9ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 23ms (ActiveRecord: 17.6ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 15:07:15 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 3]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (6.11ms)
Completed 200 OK in 9ms (Views: 6.4ms | ActiveRecord: 0.8ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-17 15:07:16 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"sadfdas"}, "question"=>{"data"=>{"id"=>"3", "attributes"=>{"content"=>"What are your strengths and weaknesses?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 3], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "sadfdas"], ["question_id", 3], ["created_at", 2016-06-17 19:07:16 UTC], ["updated_at", 2016-06-17 19:07:16 UTC]]
  [1m[35m (62.0ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 68ms (ActiveRecord: 62.7ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 15:08:17 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 25]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (6.58ms)
Completed 200 OK in 10ms (Views: 6.9ms | ActiveRecord: 0.8ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-17 15:08:19 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"asdfadsf"}, "question"=>{"data"=>{"id"=>"25", "attributes"=>{"content"=>"Describe your production deployment process?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 25], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "asdfadsf"], ["question_id", 25], ["created_at", 2016-06-17 19:08:19 UTC], ["updated_at", 2016-06-17 19:08:19 UTC]]
  [1m[35m (56.2ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 62ms (ActiveRecord: 56.8ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 15:10:41 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.3ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 6]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (3.64ms)
Completed 200 OK in 6ms (Views: 3.8ms | ActiveRecord: 0.6ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-17 15:10:53 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"asdf;ladsjfgo[dskngads[]kgnads[gnasd[gj ado[igha[dsoghas[doghafs[oghas[doghasd[gohasd[gohasdg[ohadsg[ohadsg[oadshg[oadshg[aosdghjasdo[ghasd[oiklghads[klgh[asdlghasd[oghasd[oghasoghioty=e08ty0reihga]foan go[asfhv[oasn[voaef npaosklfvmafspj"}, "question"=>{"data"=>{"id"=>"6", "attributes"=>{"content"=>"How does the web work?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 6], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "asdf;ladsjfgo[dskngads[]kgnads[gnasd[gj ado[igha[dsoghas[doghafs[oghas[doghasd[gohasd[gohasdg[ohadsg[ohadsg[oadshg[oadshg[aosdghjasdo[ghasd[oiklghads[klgh[asdlghasd[oghasd[oghasoghioty=e08ty0reihga]foan go[asfhv[oasn[voaef npaosklfvmafspj"], ["question_id", 6], ["created_at", 2016-06-17 19:10:53 UTC], ["updated_at", 2016-06-17 19:10:53 UTC]]
  [1m[35m (2.2ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 8ms (ActiveRecord: 2.9ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 15:10:54 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 2]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (4.52ms)
Completed 200 OK in 7ms (Views: 4.8ms | ActiveRecord: 0.6ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-17 15:10:57 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"asdgadasdf;ladsjfgo[dskngads[]kgnads[gnasd[gj ado[igha[dsoghas[doghafs[oghas[doghasd[gohasd[gohasdg[ohadsg[ohadsg[oadshg[oadshg[aosdghjasdo[ghasd[oiklghads[klgh[asdlghasd[oghasd[oghasoghioty=e08ty0reihga]foan go[asfhv[oasn[voaef npaosklfvmafspj"}, "question"=>{"data"=>{"id"=>"2", "attributes"=>{"content"=>"How many ways can you center a div?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "asdgadasdf;ladsjfgo[dskngads[]kgnads[gnasd[gj ado[igha[dsoghas[doghafs[oghas[doghasd[gohasd[gohasdg[ohadsg[ohadsg[oadshg[oadshg[aosdghjasdo[ghasd[oiklghads[klgh[asdlghasd[oghasd[oghasoghioty=e08ty0reihga]foan go[asfhv[oasn[voaef npaosklfvmafspj"], ["question_id", 2], ["created_at", 2016-06-17 19:10:57 UTC], ["updated_at", 2016-06-17 19:10:57 UTC]]
  [1m[35m (2.1ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 8ms (ActiveRecord: 2.8ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 15:11:13 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 13]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (2.38ms)
Completed 200 OK in 5ms (Views: 2.7ms | ActiveRecord: 0.5ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-17 15:11:15 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"dsafadssdf"}, "question"=>{"data"=>{"id"=>"13", "attributes"=>{"content"=>"Where would you like to be in your career five years from now?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 13], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "dsafadssdf"], ["question_id", 13], ["created_at", 2016-06-17 19:11:15 UTC], ["updated_at", 2016-06-17 19:11:15 UTC]]
  [1m[35m (2.1ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 7ms (ActiveRecord: 2.8ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 15:11:16 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.1ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 30]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (4.04ms)
Completed 200 OK in 6ms (Views: 4.4ms | ActiveRecord: 0.5ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-17 15:11:17 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"asdfadsf"}, "question"=>{"data"=>{"id"=>"30", "attributes"=>{"content"=>"How would you describe your work style?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 30], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "asdfadsf"], ["question_id", 30], ["created_at", 2016-06-17 19:11:17 UTC], ["updated_at", 2016-06-17 19:11:17 UTC]]
  [1m[35m (2.1ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 7ms (ActiveRecord: 2.7ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 15:12:01 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 2]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (5.09ms)
Completed 200 OK in 7ms (Views: 5.3ms | ActiveRecord: 0.5ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-17 15:12:02 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"asdfadsdfs"}, "question"=>{"data"=>{"id"=>"2", "attributes"=>{"content"=>"How many ways can you center a div?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "asdfadsdfs"], ["question_id", 2], ["created_at", 2016-06-17 19:12:02 UTC], ["updated_at", 2016-06-17 19:12:02 UTC]]
  [1m[35m (2.1ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 7ms (ActiveRecord: 2.7ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 15:12:11 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 16]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (2.61ms)
Completed 200 OK in 5ms (Views: 2.8ms | ActiveRecord: 0.5ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-17 15:12:13 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"sadfasdfasdf"}, "question"=>{"data"=>{"id"=>"16", "attributes"=>{"content"=>"Tell me about your long-term goals."}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 16], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "sadfasdfasdf"], ["question_id", 16], ["created_at", 2016-06-17 19:12:13 UTC], ["updated_at", 2016-06-17 19:12:13 UTC]]
  [1m[35m (2.6ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 9ms (ActiveRecord: 3.2ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 15:12:16 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 4]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (4.4ms)
Completed 200 OK in 7ms (Views: 4.8ms | ActiveRecord: 0.6ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-17 15:12:17 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"asdfadsfads"}, "question"=>{"data"=>{"id"=>"4", "attributes"=>{"content"=>"Explain the process of web development to a middle school kid."}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 4], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "asdfadsfads"], ["question_id", 4], ["created_at", 2016-06-17 19:12:17 UTC], ["updated_at", 2016-06-17 19:12:17 UTC]]
  [1m[35m (2.1ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 7ms (ActiveRecord: 2.8ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 15:18:43 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.5ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.7ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 4]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (5.43ms)
Completed 200 OK in 9ms (Views: 5.5ms | ActiveRecord: 1.2ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-17 15:18:45 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"asdfadsf"}, "question"=>{"data"=>{"id"=>"4", "attributes"=>{"content"=>"Explain the process of web development to a middle school kid."}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 4], ["LIMIT", 1]]
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "asdfadsf"], ["question_id", 4], ["created_at", 2016-06-17 19:18:45 UTC], ["updated_at", 2016-06-17 19:18:45 UTC]]
  [1m[35m (24.8ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 34ms (ActiveRecord: 25.8ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 15:19:35 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 32]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (6.19ms)
Completed 200 OK in 9ms (Views: 6.6ms | ActiveRecord: 0.8ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-17 15:19:37 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"afasdfd"}, "question"=>{"data"=>{"id"=>"32", "attributes"=>{"content"=>"How did you learn programming?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 32], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "afasdfd"], ["question_id", 32], ["created_at", 2016-06-17 19:19:37 UTC], ["updated_at", 2016-06-17 19:19:37 UTC]]
  [1m[35m (2.1ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 7ms (ActiveRecord: 2.8ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 15:23:40 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.3ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 16]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (6.7ms)
Completed 200 OK in 10ms (Views: 7.0ms | ActiveRecord: 0.9ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 15:23:52 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 15]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (3.48ms)
Completed 200 OK in 7ms (Views: 3.8ms | ActiveRecord: 0.8ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 15:24:09 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 3]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (6.13ms)
Completed 200 OK in 9ms (Views: 6.5ms | ActiveRecord: 0.6ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 15:25:59 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 2]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (8.64ms)
Completed 200 OK in 13ms (Views: 9.2ms | ActiveRecord: 0.8ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-17 15:26:01 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"asdfdsfads"}, "question"=>{"data"=>{"id"=>"2", "attributes"=>{"content"=>"How many ways can you center a div?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "asdfdsfads"], ["question_id", 2], ["created_at", 2016-06-17 19:26:01 UTC], ["updated_at", 2016-06-17 19:26:01 UTC]]
  [1m[35m (69.1ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 76ms (ActiveRecord: 69.8ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 15:27:03 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.5ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 13]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (5.53ms)
Completed 200 OK in 9ms (Views: 6.1ms | ActiveRecord: 0.7ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-17 15:27:05 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"asdfadsf"}, "question"=>{"data"=>{"id"=>"13", "attributes"=>{"content"=>"Where would you like to be in your career five years from now?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 13], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "asdfadsf"], ["question_id", 13], ["created_at", 2016-06-17 19:27:05 UTC], ["updated_at", 2016-06-17 19:27:05 UTC]]
  [1m[35m (75.3ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 81ms (ActiveRecord: 76.0ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 15:27:51 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.5ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 24]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (4.45ms)
Completed 200 OK in 7ms (Views: 5.0ms | ActiveRecord: 0.6ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-17 15:27:52 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"asdfadsf"}, "question"=>{"data"=>{"id"=>"24", "attributes"=>{"content"=>"Why do you want to be a web developer?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 24], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "asdfadsf"], ["question_id", 24], ["created_at", 2016-06-17 19:27:52 UTC], ["updated_at", 2016-06-17 19:27:52 UTC]]
  [1m[35m (57.5ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 63ms (ActiveRecord: 58.1ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 15:28:27 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 8]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (3.64ms)
Completed 200 OK in 7ms (Views: 4.1ms | ActiveRecord: 0.8ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-17 15:28:28 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"asdgsdag"}, "question"=>{"data"=>{"id"=>"8", "attributes"=>{"content"=>"How did you learn programming?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 8], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "asdgsdag"], ["question_id", 8], ["created_at", 2016-06-17 19:28:28 UTC], ["updated_at", 2016-06-17 19:28:28 UTC]]
  [1m[35m (2.2ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 8ms (ActiveRecord: 2.8ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 15:28:30 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 15]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (2.87ms)
Completed 200 OK in 5ms (Views: 3.3ms | ActiveRecord: 0.5ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-17 15:28:32 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"asdfdasf"}, "question"=>{"data"=>{"id"=>"15", "attributes"=>{"content"=>"Can you name two programming paradigms important for JavaScript app developers?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 15], ["LIMIT", 1]]
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "asdfdasf"], ["question_id", 15], ["created_at", 2016-06-17 19:28:32 UTC], ["updated_at", 2016-06-17 19:28:32 UTC]]
  [1m[35m (2.3ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 9ms (ActiveRecord: 3.0ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 15:28:33 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.3ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 24]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (7.87ms)
Completed 200 OK in 11ms (Views: 8.2ms | ActiveRecord: 0.7ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-17 15:28:34 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"asdfadsfdas"}, "question"=>{"data"=>{"id"=>"24", "attributes"=>{"content"=>"Why do you want to be a web developer?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 24], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "asdfadsfdas"], ["question_id", 24], ["created_at", 2016-06-17 19:28:34 UTC], ["updated_at", 2016-06-17 19:28:34 UTC]]
  [1m[35m (2.1ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 10ms (ActiveRecord: 2.9ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 15:29:06 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 2]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (7.95ms)
Completed 200 OK in 11ms (Views: 8.3ms | ActiveRecord: 0.8ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-17 15:29:07 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"asdadsfads"}, "question"=>{"data"=>{"id"=>"2", "attributes"=>{"content"=>"How many ways can you center a div?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "asdadsfads"], ["question_id", 2], ["created_at", 2016-06-17 19:29:07 UTC], ["updated_at", 2016-06-17 19:29:07 UTC]]
  [1m[35m (118.6ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 124ms (ActiveRecord: 119.2ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 15:34:15 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.3ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 10]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (3.49ms)
Completed 200 OK in 7ms (Views: 3.8ms | ActiveRecord: 0.9ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-17 15:34:17 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"asdfasdfs"}, "question"=>{"data"=>{"id"=>"10", "attributes"=>{"content"=>"How did you learn web development?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 10], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "asdfasdfs"], ["question_id", 10], ["created_at", 2016-06-17 19:34:17 UTC], ["updated_at", 2016-06-17 19:34:17 UTC]]
  [1m[35m (28.3ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 48ms (ActiveRecord: 29.0ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 15:34:19 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 29]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (4.57ms)
Completed 200 OK in 7ms (Views: 4.9ms | ActiveRecord: 0.6ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-17 15:34:21 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"adsfadsfads"}, "question"=>{"data"=>{"id"=>"29", "attributes"=>{"content"=>"How do you evaluate success?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 29], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "adsfadsfads"], ["question_id", 29], ["created_at", 2016-06-17 19:34:21 UTC], ["updated_at", 2016-06-17 19:34:21 UTC]]
  [1m[35m (2.1ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 7ms (ActiveRecord: 2.8ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 15:34:46 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 23]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (3.49ms)
Completed 200 OK in 7ms (Views: 4.0ms | ActiveRecord: 0.8ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-17 15:34:47 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"sadfdasf"}, "question"=>{"data"=>{"id"=>"23", "attributes"=>{"content"=>"Explain a polymorphic association?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 23], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "sadfdasf"], ["question_id", 23], ["created_at", 2016-06-17 19:34:47 UTC], ["updated_at", 2016-06-17 19:34:47 UTC]]
  [1m[35m (2.2ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 7ms (ActiveRecord: 2.9ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 15:34:56 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 18]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (26.9ms)
Completed 200 OK in 29ms (Views: 27.3ms | ActiveRecord: 0.5ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-17 15:34:57 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"adsfadsf"}, "question"=>{"data"=>{"id"=>"18", "attributes"=>{"content"=>"What are your short-term goals."}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 18], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "adsfadsf"], ["question_id", 18], ["created_at", 2016-06-17 19:34:57 UTC], ["updated_at", 2016-06-17 19:34:57 UTC]]
  [1m[35m (2.2ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 7ms (ActiveRecord: 2.8ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 15:36:13 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.3ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 18]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (6.66ms)
Completed 200 OK in 9ms (Views: 6.9ms | ActiveRecord: 0.7ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-17 15:36:15 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"asdfasd"}, "question"=>{"data"=>{"id"=>"18", "attributes"=>{"content"=>"What are your short-term goals."}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 18], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "asdfasd"], ["question_id", 18], ["created_at", 2016-06-17 19:36:15 UTC], ["updated_at", 2016-06-17 19:36:15 UTC]]
  [1m[35m (72.3ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 78ms (ActiveRecord: 73.0ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 15:38:05 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.3ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 31]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (11.23ms)
Completed 200 OK in 15ms (Views: 11.8ms | ActiveRecord: 1.0ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 15:38:06 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 2]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (8.84ms)
Completed 200 OK in 11ms (Views: 9.1ms | ActiveRecord: 0.6ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 15:38:06 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 26]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (82.52ms)
Completed 200 OK in 86ms (Views: 83.0ms | ActiveRecord: 0.8ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 15:38:55 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.5ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 2]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (12.37ms)
Completed 200 OK in 15ms (Views: 12.4ms | ActiveRecord: 1.1ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-17 15:38:59 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"dsdsa"}, "question"=>{"data"=>{"id"=>"2", "attributes"=>{"content"=>"How many ways can you center a div?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "dsdsa"], ["question_id", 2], ["created_at", 2016-06-17 19:38:59 UTC], ["updated_at", 2016-06-17 19:38:59 UTC]]
  [1m[35m (62.3ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 67ms (ActiveRecord: 62.9ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 15:41:02 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.5ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.3ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 30]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (7.14ms)
Completed 200 OK in 10ms (Views: 7.5ms | ActiveRecord: 0.8ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-17 15:41:04 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"xzxzxz"}, "question"=>{"data"=>{"id"=>"30", "attributes"=>{"content"=>"How would you describe your work style?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 30], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (68.4ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "xzxzxz"], ["question_id", 30], ["created_at", 2016-06-17 19:41:04 UTC], ["updated_at", 2016-06-17 19:41:04 UTC]]
  [1m[35m (18.6ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 92ms (ActiveRecord: 87.3ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 15:43:06 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.9ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.5ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 24]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (15.59ms)
Completed 200 OK in 34ms (Views: 18.5ms | ActiveRecord: 1.4ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-17 15:43:10 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"dssdsad"}, "question"=>{"data"=>{"id"=>"24", "attributes"=>{"content"=>"Why do you want to be a web developer?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 24], ["LIMIT", 1]]
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.5ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "dssdsad"], ["question_id", 24], ["created_at", 2016-06-17 19:43:10 UTC], ["updated_at", 2016-06-17 19:43:10 UTC]]
  [1m[35m (31.3ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 43ms (ActiveRecord: 32.3ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 15:45:29 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 29]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (7.06ms)
Completed 200 OK in 11ms (Views: 7.7ms | ActiveRecord: 0.9ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-17 15:45:32 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"sdsdsd"}, "question"=>{"data"=>{"id"=>"29", "attributes"=>{"content"=>"How do you evaluate success?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 29], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.5ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "sdsdsd"], ["question_id", 29], ["created_at", 2016-06-17 19:45:32 UTC], ["updated_at", 2016-06-17 19:45:32 UTC]]
  [1m[35m (140.8ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 147ms (ActiveRecord: 141.7ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 15:45:47 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 6]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (5.91ms)
Completed 200 OK in 9ms (Views: 6.2ms | ActiveRecord: 1.0ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 15:47:07 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.4ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 10]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (4.28ms)
Completed 200 OK in 7ms (Views: 4.4ms | ActiveRecord: 0.8ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-17 15:47:11 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"sasa"}, "question"=>{"data"=>{"id"=>"10", "attributes"=>{"content"=>"How did you learn web development?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 10], ["LIMIT", 1]]
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "sasa"], ["question_id", 10], ["created_at", 2016-06-17 19:47:11 UTC], ["updated_at", 2016-06-17 19:47:11 UTC]]
  [1m[35m (298.2ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 567ms (ActiveRecord: 299.2ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 15:47:59 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 4]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (6.79ms)
Completed 200 OK in 9ms (Views: 7.2ms | ActiveRecord: 0.6ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 15:48:52 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 29]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (5.98ms)
Completed 200 OK in 8ms (Views: 6.3ms | ActiveRecord: 0.6ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 15:49:01 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 8]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (3.81ms)
Completed 200 OK in 6ms (Views: 4.2ms | ActiveRecord: 0.5ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 15:49:15 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 22]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (3.5ms)
Completed 200 OK in 6ms (Views: 4.0ms | ActiveRecord: 0.5ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-17 15:49:18 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"yo"}, "question"=>{"data"=>{"id"=>"22", "attributes"=>{"content"=>"Can you tell me about a challenge you've faced at work and how you got through it?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 22], ["LIMIT", 1]]
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "yo"], ["question_id", 22], ["created_at", 2016-06-17 19:49:18 UTC], ["updated_at", 2016-06-17 19:49:18 UTC]]
  [1m[35m (0.7ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 6ms (ActiveRecord: 1.5ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 15:50:00 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 9]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (4.13ms)
Completed 200 OK in 6ms (Views: 4.6ms | ActiveRecord: 0.5ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-17 15:50:07 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"sasas"}, "question"=>{"data"=>{"id"=>"9", "attributes"=>{"content"=>"What is a closure?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 9], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "sasas"], ["question_id", 9], ["created_at", 2016-06-17 19:50:07 UTC], ["updated_at", 2016-06-17 19:50:07 UTC]]
  [1m[35m (2.3ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 10ms (ActiveRecord: 3.1ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 15:50:15 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 17]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (5.52ms)
Completed 200 OK in 9ms (Views: 5.9ms | ActiveRecord: 0.8ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 15:51:12 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.3ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 23]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (5.78ms)
Completed 200 OK in 9ms (Views: 6.1ms | ActiveRecord: 0.9ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-17 15:51:14 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"mo"}, "question"=>{"data"=>{"id"=>"23", "attributes"=>{"content"=>"Explain a polymorphic association?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 23], ["LIMIT", 1]]
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.5ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "mo"], ["question_id", 23], ["created_at", 2016-06-17 19:51:14 UTC], ["updated_at", 2016-06-17 19:51:14 UTC]]
  [1m[35m (65.4ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 73ms (ActiveRecord: 66.3ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 15:58:36 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 15]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (4.72ms)
Completed 200 OK in 9ms (Views: 5.5ms | ActiveRecord: 0.8ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-17 15:58:38 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"dfgdfs"}, "question"=>{"data"=>{"id"=>"15", "attributes"=>{"content"=>"Can you name two programming paradigms important for JavaScript app developers?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 15], ["LIMIT", 1]]
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "dfgdfs"], ["question_id", 15], ["created_at", 2016-06-17 19:58:38 UTC], ["updated_at", 2016-06-17 19:58:38 UTC]]
  [1m[35m (29.4ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 38ms (ActiveRecord: 30.2ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 15:59:19 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 15]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (6.22ms)
Completed 200 OK in 9ms (Views: 6.5ms | ActiveRecord: 0.8ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-17 15:59:21 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"dsdsd"}, "question"=>{"data"=>{"id"=>"15", "attributes"=>{"content"=>"Can you name two programming paradigms important for JavaScript app developers?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 15], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "dsdsd"], ["question_id", 15], ["created_at", 2016-06-17 19:59:21 UTC], ["updated_at", 2016-06-17 19:59:21 UTC]]
  [1m[35m (2.2ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 8ms (ActiveRecord: 2.9ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 15:59:36 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.3ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 19]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (7.75ms)
Completed 200 OK in 12ms (Views: 8.2ms | ActiveRecord: 1.0ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-17 15:59:38 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"sdsds"}, "question"=>{"data"=>{"id"=>"19", "attributes"=>{"content"=>"Do you have any questions for me?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 19], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "sdsds"], ["question_id", 19], ["created_at", 2016-06-17 19:59:38 UTC], ["updated_at", 2016-06-17 19:59:38 UTC]]
  [1m[35m (2.2ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 76ms (ActiveRecord: 2.9ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 16:01:20 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.5ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 18]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (12.04ms)
Completed 200 OK in 15ms (Views: 12.6ms | ActiveRecord: 0.7ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-17 16:01:22 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"saasas"}, "question"=>{"data"=>{"id"=>"18", "attributes"=>{"content"=>"What are your short-term goals."}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 18], ["LIMIT", 1]]
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "saasas"], ["question_id", 18], ["created_at", 2016-06-17 20:01:22 UTC], ["updated_at", 2016-06-17 20:01:22 UTC]]
  [1m[35m (25.7ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 32ms (ActiveRecord: 26.5ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 16:01:54 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 27]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (3.17ms)
Completed 200 OK in 5ms (Views: 3.4ms | ActiveRecord: 0.6ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-17 16:01:57 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"id"}, "question"=>{"data"=>{"id"=>"27", "attributes"=>{"content"=>"How would you declare and use a constructor in Ruby?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 27], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "id"], ["question_id", 27], ["created_at", 2016-06-17 20:01:57 UTC], ["updated_at", 2016-06-17 20:01:57 UTC]]
  [1m[35m (0.7ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 6ms (ActiveRecord: 1.4ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 16:03:58 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.5ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 3]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (5.18ms)
Completed 200 OK in 7ms (Views: 5.5ms | ActiveRecord: 0.6ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-17 16:04:00 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"dsdsdsds"}, "question"=>{"data"=>{"id"=>"3", "attributes"=>{"content"=>"What are your strengths and weaknesses?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.5ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 3], ["LIMIT", 1]]
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "dsdsdsds"], ["question_id", 3], ["created_at", 2016-06-17 20:04:00 UTC], ["updated_at", 2016-06-17 20:04:00 UTC]]
  [1m[35m (32.7ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 42ms (ActiveRecord: 33.8ms)


Started GET "/api/v1/answers" for ::1 at 2016-06-17 16:07:22 -0400
Processing by Api::V1::AnswersController#index as JSON
  [1m[36mAnswer Load (0.6ms)[0m  [1m[34mSELECT "answers".* FROM "answers"[0m
[active_model_serializers]   [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.0ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 4], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.0ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 4], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 31], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.0ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 31], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 32], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.0ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 32], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mQuestion Load (0.1ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 19], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mQuestion Load (0.1ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 21], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 3], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 14], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 11], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.0ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 31], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 29], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mQuestion Load (0.1ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 25], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 30], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.0ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 11], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 24], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.0ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 19], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 28], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 9], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mQuestion Load (0.1ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 6], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mQuestion Load (0.1ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 7], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.0ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 25], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 18], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.0ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.0ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 19], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.0ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 30], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.0ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 30], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.0ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 18], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mQuestion Load (0.1ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 17], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.0ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 18], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mQuestion Load (0.1ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.0ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 3], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.0ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 17], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.0ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 3], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.0ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 32], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.0ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 25], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mQuestion Load (0.1ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 22], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.0ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 31], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.0ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 29], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.0ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mQuestion Load (0.1ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 27], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.0ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 18], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.0ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 3], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.0ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 25], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.1ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 6], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.0ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 13], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.0ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 30], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.0ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mQuestion Load (0.1ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 16], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.0ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 4], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.0ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 4], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.0ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 32], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.0ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.0ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 13], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.0ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 24], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 8], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mQuestion Load (0.1ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 15], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.0ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 24], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.0ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mQuestion Load (0.1ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 10], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.0ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 29], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mQuestion Load (0.1ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 23], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.0ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 18], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.0ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 18], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.0ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.0ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 30], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.0ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 24], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.0ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 29], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.0ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 10], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.0ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 22], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.1ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 9], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.0ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 23], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.0ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 15], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.0ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 15], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.0ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 19], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.0ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 18], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.0ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 27], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.0ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 3], ["LIMIT", 1]]
[active_model_serializers] Rendered ActiveModel::Serializer::CollectionSerializer with ActiveModelSerializers::Adapter::JsonApi (149.8ms)
Completed 200 OK in 156ms (Views: 148.7ms | ActiveRecord: 6.5ms)


Started GET "/api/v1/answers/11" for ::1 at 2016-06-17 16:08:45 -0400
  
AbstractController::ActionNotFound (The action 'show' could not be found for Api::V1::AnswersController):
  
actionpack (5.0.0.rc1) lib/abstract_controller/base.rb:121:in `process'
actionpack (5.0.0.rc1) lib/action_controller/metal.rb:190:in `dispatch'
actionpack (5.0.0.rc1) lib/action_controller/metal.rb:262:in `dispatch'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:50:in `dispatch'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:32:in `serve'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:39:in `block in serve'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:26:in `each'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:26:in `serve'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:725:in `call'
actionview (5.0.0.rc1) lib/action_view/digestor.rb:12:in `call'
rack (2.0.0.rc1) lib/rack/etag.rb:25:in `call'
rack (2.0.0.rc1) lib/rack/conditional_get.rb:25:in `call'
rack (2.0.0.rc1) lib/rack/head.rb:12:in `call'
activerecord (5.0.0.rc1) lib/active_record/migration.rb:552:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/callbacks.rb:38:in `block in call'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:97:in `__run_callbacks__'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:750:in `_run_call_callbacks'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:90:in `run_callbacks'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/callbacks.rb:36:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/remote_ip.rb:79:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/debug_exceptions.rb:49:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/show_exceptions.rb:31:in `call'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:36:in `call_app'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:24:in `block in call'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:70:in `block in tagged'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:26:in `tagged'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:70:in `tagged'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:24:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/request_id.rb:24:in `call'
rack (2.0.0.rc1) lib/rack/runtime.rb:22:in `call'
activesupport (5.0.0.rc1) lib/active_support/cache/strategy/local_cache_middleware.rb:28:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/static.rb:136:in `call'
rack (2.0.0.rc1) lib/rack/sendfile.rb:111:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
railties (5.0.0.rc1) lib/rails/engine.rb:522:in `call'
puma (3.4.0) lib/puma/configuration.rb:224:in `call'
puma (3.4.0) lib/puma/server.rb:569:in `handle_request'
puma (3.4.0) lib/puma/server.rb:406:in `process_client'
puma (3.4.0) lib/puma/server.rb:271:in `block in run'
puma (3.4.0) lib/puma/thread_pool.rb:114:in `call'
puma (3.4.0) lib/puma/thread_pool.rb:114:in `block in spawn_thread'
Started GET "/api/v1/answers/11" for ::1 at 2016-06-17 16:08:45 -0400
  
AbstractController::ActionNotFound (The action 'show' could not be found for Api::V1::AnswersController):
  
actionpack (5.0.0.rc1) lib/abstract_controller/base.rb:121:in `process'
actionpack (5.0.0.rc1) lib/action_controller/metal.rb:190:in `dispatch'
actionpack (5.0.0.rc1) lib/action_controller/metal.rb:262:in `dispatch'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:50:in `dispatch'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:32:in `serve'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:39:in `block in serve'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:26:in `each'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:26:in `serve'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:725:in `call'
actionview (5.0.0.rc1) lib/action_view/digestor.rb:12:in `call'
rack (2.0.0.rc1) lib/rack/etag.rb:25:in `call'
rack (2.0.0.rc1) lib/rack/conditional_get.rb:25:in `call'
rack (2.0.0.rc1) lib/rack/head.rb:12:in `call'
activerecord (5.0.0.rc1) lib/active_record/migration.rb:552:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/callbacks.rb:38:in `block in call'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:97:in `__run_callbacks__'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:750:in `_run_call_callbacks'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:90:in `run_callbacks'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/callbacks.rb:36:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/remote_ip.rb:79:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/debug_exceptions.rb:49:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/show_exceptions.rb:31:in `call'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:36:in `call_app'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:24:in `block in call'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:70:in `block in tagged'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:26:in `tagged'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:70:in `tagged'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:24:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/request_id.rb:24:in `call'
rack (2.0.0.rc1) lib/rack/runtime.rb:22:in `call'
activesupport (5.0.0.rc1) lib/active_support/cache/strategy/local_cache_middleware.rb:28:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/static.rb:136:in `call'
rack (2.0.0.rc1) lib/rack/sendfile.rb:111:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
railties (5.0.0.rc1) lib/rails/engine.rb:522:in `call'
puma (3.4.0) lib/puma/configuration.rb:224:in `call'
puma (3.4.0) lib/puma/server.rb:569:in `handle_request'
puma (3.4.0) lib/puma/server.rb:406:in `process_client'
puma (3.4.0) lib/puma/server.rb:271:in `block in run'
puma (3.4.0) lib/puma/thread_pool.rb:114:in `call'
puma (3.4.0) lib/puma/thread_pool.rb:114:in `block in spawn_thread'
Started GET "/api/v1/answers/11" for ::1 at 2016-06-17 16:08:46 -0400
  
AbstractController::ActionNotFound (The action 'show' could not be found for Api::V1::AnswersController):
  
actionpack (5.0.0.rc1) lib/abstract_controller/base.rb:121:in `process'
actionpack (5.0.0.rc1) lib/action_controller/metal.rb:190:in `dispatch'
actionpack (5.0.0.rc1) lib/action_controller/metal.rb:262:in `dispatch'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:50:in `dispatch'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:32:in `serve'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:39:in `block in serve'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:26:in `each'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:26:in `serve'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:725:in `call'
actionview (5.0.0.rc1) lib/action_view/digestor.rb:12:in `call'
rack (2.0.0.rc1) lib/rack/etag.rb:25:in `call'
rack (2.0.0.rc1) lib/rack/conditional_get.rb:25:in `call'
rack (2.0.0.rc1) lib/rack/head.rb:12:in `call'
activerecord (5.0.0.rc1) lib/active_record/migration.rb:552:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/callbacks.rb:38:in `block in call'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:97:in `__run_callbacks__'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:750:in `_run_call_callbacks'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:90:in `run_callbacks'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/callbacks.rb:36:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/remote_ip.rb:79:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/debug_exceptions.rb:49:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/show_exceptions.rb:31:in `call'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:36:in `call_app'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:24:in `block in call'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:70:in `block in tagged'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:26:in `tagged'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:70:in `tagged'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:24:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/request_id.rb:24:in `call'
rack (2.0.0.rc1) lib/rack/runtime.rb:22:in `call'
activesupport (5.0.0.rc1) lib/active_support/cache/strategy/local_cache_middleware.rb:28:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/static.rb:136:in `call'
rack (2.0.0.rc1) lib/rack/sendfile.rb:111:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
railties (5.0.0.rc1) lib/rails/engine.rb:522:in `call'
puma (3.4.0) lib/puma/configuration.rb:224:in `call'
puma (3.4.0) lib/puma/server.rb:569:in `handle_request'
puma (3.4.0) lib/puma/server.rb:406:in `process_client'
puma (3.4.0) lib/puma/server.rb:271:in `block in run'
puma (3.4.0) lib/puma/thread_pool.rb:114:in `call'
puma (3.4.0) lib/puma/thread_pool.rb:114:in `block in spawn_thread'
Started GET "/api/v1/random" for ::1 at 2016-06-17 16:08:47 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 12]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (2.85ms)
Completed 200 OK in 5ms (Views: 3.2ms | ActiveRecord: 0.5ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-17 16:08:49 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"dsdsadsa"}, "question"=>{"data"=>{"id"=>"12", "attributes"=>{"content"=>"So tell me about yourself."}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.9ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 12], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.7ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "dsdsadsa"], ["question_id", 12], ["created_at", 2016-06-17 20:08:49 UTC], ["updated_at", 2016-06-17 20:08:49 UTC]]
  [1m[35m (82.0ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 89ms (ActiveRecord: 83.7ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 16:08:52 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 20]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (2.85ms)
Completed 200 OK in 5ms (Views: 3.2ms | ActiveRecord: 0.6ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-17 16:08:53 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"dsads"}, "question"=>{"data"=>{"id"=>"20", "attributes"=>{"content"=>"Please walk me through one of the projects on your resume."}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 20], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.5ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "dsads"], ["question_id", 20], ["created_at", 2016-06-17 20:08:53 UTC], ["updated_at", 2016-06-17 20:08:53 UTC]]
  [1m[35m (2.1ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 9ms (ActiveRecord: 3.2ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 16:08:54 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 22]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (4.01ms)
Completed 200 OK in 6ms (Views: 4.3ms | ActiveRecord: 0.4ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-17 16:08:56 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"dsadsa"}, "question"=>{"data"=>{"id"=>"22", "attributes"=>{"content"=>"Can you tell me about a challenge you've faced at work and how you got through it?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 22], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "dsadsa"], ["question_id", 22], ["created_at", 2016-06-17 20:08:56 UTC], ["updated_at", 2016-06-17 20:08:56 UTC]]
  [1m[35m (2.1ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 8ms (ActiveRecord: 2.8ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 16:10:30 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 11]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (3.86ms)
Completed 200 OK in 6ms (Views: 4.1ms | ActiveRecord: 0.6ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-17 16:10:32 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"dsds"}, "question"=>{"data"=>{"id"=>"11", "attributes"=>{"content"=>"Describe a time when you were able to improve upon the design that was originally suggested?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 11], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "dsds"], ["question_id", 11], ["created_at", 2016-06-17 20:10:32 UTC], ["updated_at", 2016-06-17 20:10:32 UTC]]
  [1m[35m (107.5ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 113ms (ActiveRecord: 108.3ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 16:11:57 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.4ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 32]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (9.01ms)
Completed 200 OK in 14ms (Views: 9.9ms | ActiveRecord: 1.1ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-17 16:11:58 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"asdfads"}, "question"=>{"data"=>{"id"=>"32", "attributes"=>{"content"=>"How did you learn programming?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 32], ["LIMIT", 1]]
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.5ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "asdfads"], ["question_id", 32], ["created_at", 2016-06-17 20:11:58 UTC], ["updated_at", 2016-06-17 20:11:58 UTC]]
  [1m[35m (34.8ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 112ms (ActiveRecord: 35.8ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 16:12:28 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 27]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (4.63ms)
Completed 200 OK in 7ms (Views: 4.9ms | ActiveRecord: 0.6ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-17 16:12:30 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"adsfadsf"}, "question"=>{"data"=>{"id"=>"27", "attributes"=>{"content"=>"How would you declare and use a constructor in Ruby?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 27], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "adsfadsf"], ["question_id", 27], ["created_at", 2016-06-17 20:12:30 UTC], ["updated_at", 2016-06-17 20:12:30 UTC]]
  [1m[35m (2.1ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 8ms (ActiveRecord: 2.8ms)


Started GET "/api/v1/answers" for ::1 at 2016-06-17 16:13:41 -0400
Processing by Api::V1::AnswersController#index as JSON
  [1m[36mAnswer Load (0.6ms)[0m  [1m[34mSELECT "answers".* FROM "answers"[0m
[active_model_serializers]   [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.0ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 4], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.0ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 4], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 31], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.1ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 31], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mQuestion Load (0.1ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 32], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.0ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 32], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mQuestion Load (0.1ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 19], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mQuestion Load (0.1ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 21], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mQuestion Load (0.1ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 3], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mQuestion Load (0.1ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 14], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 11], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.0ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 31], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 29], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mQuestion Load (0.1ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 25], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mQuestion Load (0.1ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 30], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.0ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 11], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 24], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.0ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 19], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mQuestion Load (0.1ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 28], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 9], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mQuestion Load (0.1ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 6], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mQuestion Load (0.1ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 7], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.0ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 25], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 18], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.0ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.0ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 19], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.0ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 30], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.0ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 30], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.0ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 18], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mQuestion Load (0.1ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 17], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.0ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 18], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mQuestion Load (0.1ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.0ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 3], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.0ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 17], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.0ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 3], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.0ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 32], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.0ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 25], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 22], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.0ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 31], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.0ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 29], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.0ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 27], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.0ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 18], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.0ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 3], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.0ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 25], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.0ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 6], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.0ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 13], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.0ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 30], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.0ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mQuestion Load (0.1ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 16], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.0ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 4], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.0ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 4], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.0ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 32], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.0ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.0ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 13], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.0ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 24], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 8], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 15], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.0ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 24], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.0ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 10], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.0ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 29], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mQuestion Load (0.1ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 23], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.0ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 18], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.0ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 18], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.0ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.0ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 30], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.0ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 24], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.0ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 29], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.0ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 10], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.0ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 22], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.0ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 9], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.0ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 23], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.0ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 15], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.0ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 15], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.0ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 19], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.0ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 18], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.0ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 27], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.0ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 3], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 12], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mQuestion Load (0.1ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 20], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.0ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 22], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.0ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 11], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.0ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 32], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.0ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 27], ["LIMIT", 1]]
[active_model_serializers] Rendered ActiveModel::Serializer::CollectionSerializer with ActiveModelSerializers::Adapter::JsonApi (124.18ms)
Completed 200 OK in 132ms (Views: 124.6ms | ActiveRecord: 6.7ms)


Started GET "/api/v1/questions" for ::1 at 2016-06-17 16:13:55 -0400
Processing by Api::V1::QuestionsController#index as JSON
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
  [1m[36mAnswer Load (1.6ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" IN (1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32)[0m
[active_model_serializers] Rendered ActiveModel::Serializer::CollectionSerializer with ActiveModelSerializers::Adapter::JsonApi (85.81ms)
Completed 200 OK in 228ms (Views: 224.7ms | ActiveRecord: 2.0ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 16:14:24 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 22]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (6.6ms)
Completed 200 OK in 10ms (Views: 7.1ms | ActiveRecord: 0.8ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-17 16:14:25 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"asdads"}, "question"=>{"data"=>{"id"=>"22", "attributes"=>{"content"=>"Can you tell me about a challenge you've faced at work and how you got through it?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 22], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "asdads"], ["question_id", 22], ["created_at", 2016-06-17 20:14:25 UTC], ["updated_at", 2016-06-17 20:14:25 UTC]]
  [1m[35m (2.1ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 8ms (ActiveRecord: 3.0ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 16:18:50 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.4ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 22]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (14.77ms)
Completed 200 OK in 36ms (Views: 17.6ms | ActiveRecord: 1.1ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-17 16:18:51 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"asdfadsf"}, "question"=>{"data"=>{"id"=>"22", "attributes"=>{"content"=>"Can you tell me about a challenge you've faced at work and how you got through it?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (2.3ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 22], ["LIMIT", 1]]
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.6ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "asdfadsf"], ["question_id", 22], ["created_at", 2016-06-17 20:18:51 UTC], ["updated_at", 2016-06-17 20:18:51 UTC]]
  [1m[35m (70.0ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 85ms (ActiveRecord: 73.0ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 16:19:40 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.3ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 21]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (5.63ms)
Completed 200 OK in 9ms (Views: 6.0ms | ActiveRecord: 1.0ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-17 16:19:42 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"asdsad"}, "question"=>{"data"=>{"id"=>"21", "attributes"=>{"content"=>"What is the difference between classical inheritance and prototypal inheritance? "}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 21], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.5ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "asdsad"], ["question_id", 21], ["created_at", 2016-06-17 20:19:42 UTC], ["updated_at", 2016-06-17 20:19:42 UTC]]
  [1m[35m (36.5ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 43ms (ActiveRecord: 37.4ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 16:19:58 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.9ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.5ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 20]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (7.24ms)
Completed 200 OK in 12ms (Views: 7.6ms | ActiveRecord: 1.3ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-17 16:20:00 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"sg"}, "question"=>{"data"=>{"id"=>"20", "attributes"=>{"content"=>"Please walk me through one of the projects on your resume."}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 20], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "sg"], ["question_id", 20], ["created_at", 2016-06-17 20:20:00 UTC], ["updated_at", 2016-06-17 20:20:00 UTC]]
  [1m[35m (2.2ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 9ms (ActiveRecord: 2.9ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 16:20:53 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.3ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 3]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (33.77ms)
Completed 200 OK in 38ms (Views: 34.2ms | ActiveRecord: 1.0ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-17 16:20:54 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"asdfadsf"}, "question"=>{"data"=>{"id"=>"3", "attributes"=>{"content"=>"What are your strengths and weaknesses?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 3], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "asdfadsf"], ["question_id", 3], ["created_at", 2016-06-17 20:20:54 UTC], ["updated_at", 2016-06-17 20:20:54 UTC]]
  [1m[35m (63.9ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 69ms (ActiveRecord: 64.7ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 16:21:18 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 25]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (5.45ms)
Completed 200 OK in 8ms (Views: 5.7ms | ActiveRecord: 0.6ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-17 16:21:19 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"sadfasd"}, "question"=>{"data"=>{"id"=>"25", "attributes"=>{"content"=>"Describe your production deployment process?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 25], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.5ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "sadfasd"], ["question_id", 25], ["created_at", 2016-06-17 20:21:19 UTC], ["updated_at", 2016-06-17 20:21:19 UTC]]
  [1m[35m (2.1ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 8ms (ActiveRecord: 2.9ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 16:21:38 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 29]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (7.27ms)
Completed 200 OK in 11ms (Views: 7.7ms | ActiveRecord: 0.9ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-17 16:21:40 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"adsdasf"}, "question"=>{"data"=>{"id"=>"29", "attributes"=>{"content"=>"How do you evaluate success?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 29], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "adsdasf"], ["question_id", 29], ["created_at", 2016-06-17 20:21:40 UTC], ["updated_at", 2016-06-17 20:21:40 UTC]]
  [1m[35m (0.7ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 6ms (ActiveRecord: 1.4ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 16:21:54 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 9]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (4.04ms)
Completed 200 OK in 6ms (Views: 4.2ms | ActiveRecord: 0.6ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-17 16:21:56 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"asdfdas"}, "question"=>{"data"=>{"id"=>"9", "attributes"=>{"content"=>"What is a closure?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 9], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "asdfdas"], ["question_id", 9], ["created_at", 2016-06-17 20:21:56 UTC], ["updated_at", 2016-06-17 20:21:56 UTC]]
  [1m[35m (2.1ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 7ms (ActiveRecord: 2.8ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-17 16:21:58 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"id"=>"22", "attributes"=>{"content"=>"asdfsrg"}, "question"=>{"data"=>{"id"=>"9", "attributes"=>{"content"=>"What is a closure?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 9], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.5ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "asdfsrg"], ["question_id", 9], ["created_at", 2016-06-17 20:21:58 UTC], ["updated_at", 2016-06-17 20:21:58 UTC]]
  [1m[35m (2.3ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 8ms (ActiveRecord: 3.3ms)


Started PATCH "/api/v1/answers/22" for ::1 at 2016-06-17 16:21:59 -0400
  
AbstractController::ActionNotFound (The action 'update' could not be found for Api::V1::AnswersController):
  
actionpack (5.0.0.rc1) lib/abstract_controller/base.rb:121:in `process'
actionpack (5.0.0.rc1) lib/action_controller/metal.rb:190:in `dispatch'
actionpack (5.0.0.rc1) lib/action_controller/metal.rb:262:in `dispatch'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:50:in `dispatch'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:32:in `serve'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:39:in `block in serve'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:26:in `each'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:26:in `serve'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:725:in `call'
actionview (5.0.0.rc1) lib/action_view/digestor.rb:12:in `call'
rack (2.0.0.rc1) lib/rack/etag.rb:25:in `call'
rack (2.0.0.rc1) lib/rack/conditional_get.rb:38:in `call'
rack (2.0.0.rc1) lib/rack/head.rb:12:in `call'
activerecord (5.0.0.rc1) lib/active_record/migration.rb:552:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/callbacks.rb:38:in `block in call'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:97:in `__run_callbacks__'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:750:in `_run_call_callbacks'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:90:in `run_callbacks'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/callbacks.rb:36:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/remote_ip.rb:79:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/debug_exceptions.rb:49:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/show_exceptions.rb:31:in `call'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:36:in `call_app'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:24:in `block in call'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:70:in `block in tagged'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:26:in `tagged'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:70:in `tagged'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:24:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/request_id.rb:24:in `call'
rack (2.0.0.rc1) lib/rack/runtime.rb:22:in `call'
activesupport (5.0.0.rc1) lib/active_support/cache/strategy/local_cache_middleware.rb:28:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/static.rb:136:in `call'
rack (2.0.0.rc1) lib/rack/sendfile.rb:111:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
railties (5.0.0.rc1) lib/rails/engine.rb:522:in `call'
puma (3.4.0) lib/puma/configuration.rb:224:in `call'
puma (3.4.0) lib/puma/server.rb:569:in `handle_request'
puma (3.4.0) lib/puma/server.rb:406:in `process_client'
puma (3.4.0) lib/puma/server.rb:271:in `block in run'
puma (3.4.0) lib/puma/thread_pool.rb:114:in `call'
puma (3.4.0) lib/puma/thread_pool.rb:114:in `block in spawn_thread'
Started PATCH "/api/v1/answers/22" for ::1 at 2016-06-17 16:21:59 -0400
  
AbstractController::ActionNotFound (The action 'update' could not be found for Api::V1::AnswersController):
  
actionpack (5.0.0.rc1) lib/abstract_controller/base.rb:121:in `process'
actionpack (5.0.0.rc1) lib/action_controller/metal.rb:190:in `dispatch'
actionpack (5.0.0.rc1) lib/action_controller/metal.rb:262:in `dispatch'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:50:in `dispatch'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:32:in `serve'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:39:in `block in serve'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:26:in `each'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:26:in `serve'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:725:in `call'
actionview (5.0.0.rc1) lib/action_view/digestor.rb:12:in `call'
rack (2.0.0.rc1) lib/rack/etag.rb:25:in `call'
rack (2.0.0.rc1) lib/rack/conditional_get.rb:38:in `call'
rack (2.0.0.rc1) lib/rack/head.rb:12:in `call'
activerecord (5.0.0.rc1) lib/active_record/migration.rb:552:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/callbacks.rb:38:in `block in call'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:97:in `__run_callbacks__'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:750:in `_run_call_callbacks'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:90:in `run_callbacks'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/callbacks.rb:36:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/remote_ip.rb:79:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/debug_exceptions.rb:49:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/show_exceptions.rb:31:in `call'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:36:in `call_app'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:24:in `block in call'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:70:in `block in tagged'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:26:in `tagged'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:70:in `tagged'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:24:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/request_id.rb:24:in `call'
rack (2.0.0.rc1) lib/rack/runtime.rb:22:in `call'
activesupport (5.0.0.rc1) lib/active_support/cache/strategy/local_cache_middleware.rb:28:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/static.rb:136:in `call'
rack (2.0.0.rc1) lib/rack/sendfile.rb:111:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
railties (5.0.0.rc1) lib/rails/engine.rb:522:in `call'
puma (3.4.0) lib/puma/configuration.rb:224:in `call'
puma (3.4.0) lib/puma/server.rb:569:in `handle_request'
puma (3.4.0) lib/puma/server.rb:406:in `process_client'
puma (3.4.0) lib/puma/server.rb:271:in `block in run'
puma (3.4.0) lib/puma/thread_pool.rb:114:in `call'
puma (3.4.0) lib/puma/thread_pool.rb:114:in `block in spawn_thread'
Started PATCH "/api/v1/answers/22" for ::1 at 2016-06-17 16:21:59 -0400
  
AbstractController::ActionNotFound (The action 'update' could not be found for Api::V1::AnswersController):
  
actionpack (5.0.0.rc1) lib/abstract_controller/base.rb:121:in `process'
actionpack (5.0.0.rc1) lib/action_controller/metal.rb:190:in `dispatch'
actionpack (5.0.0.rc1) lib/action_controller/metal.rb:262:in `dispatch'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:50:in `dispatch'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:32:in `serve'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:39:in `block in serve'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:26:in `each'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:26:in `serve'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:725:in `call'
actionview (5.0.0.rc1) lib/action_view/digestor.rb:12:in `call'
rack (2.0.0.rc1) lib/rack/etag.rb:25:in `call'
rack (2.0.0.rc1) lib/rack/conditional_get.rb:38:in `call'
rack (2.0.0.rc1) lib/rack/head.rb:12:in `call'
activerecord (5.0.0.rc1) lib/active_record/migration.rb:552:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/callbacks.rb:38:in `block in call'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:97:in `__run_callbacks__'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:750:in `_run_call_callbacks'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:90:in `run_callbacks'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/callbacks.rb:36:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/remote_ip.rb:79:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/debug_exceptions.rb:49:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/show_exceptions.rb:31:in `call'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:36:in `call_app'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:24:in `block in call'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:70:in `block in tagged'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:26:in `tagged'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:70:in `tagged'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:24:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/request_id.rb:24:in `call'
rack (2.0.0.rc1) lib/rack/runtime.rb:22:in `call'
activesupport (5.0.0.rc1) lib/active_support/cache/strategy/local_cache_middleware.rb:28:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/static.rb:136:in `call'
rack (2.0.0.rc1) lib/rack/sendfile.rb:111:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
railties (5.0.0.rc1) lib/rails/engine.rb:522:in `call'
puma (3.4.0) lib/puma/configuration.rb:224:in `call'
puma (3.4.0) lib/puma/server.rb:569:in `handle_request'
puma (3.4.0) lib/puma/server.rb:406:in `process_client'
puma (3.4.0) lib/puma/server.rb:271:in `block in run'
puma (3.4.0) lib/puma/thread_pool.rb:114:in `call'
puma (3.4.0) lib/puma/thread_pool.rb:114:in `block in spawn_thread'
Started PATCH "/api/v1/answers/22" for ::1 at 2016-06-17 16:22:00 -0400
  
AbstractController::ActionNotFound (The action 'update' could not be found for Api::V1::AnswersController):
  
actionpack (5.0.0.rc1) lib/abstract_controller/base.rb:121:in `process'
actionpack (5.0.0.rc1) lib/action_controller/metal.rb:190:in `dispatch'
actionpack (5.0.0.rc1) lib/action_controller/metal.rb:262:in `dispatch'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:50:in `dispatch'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:32:in `serve'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:39:in `block in serve'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:26:in `each'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:26:in `serve'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:725:in `call'
actionview (5.0.0.rc1) lib/action_view/digestor.rb:12:in `call'
rack (2.0.0.rc1) lib/rack/etag.rb:25:in `call'
rack (2.0.0.rc1) lib/rack/conditional_get.rb:38:in `call'
rack (2.0.0.rc1) lib/rack/head.rb:12:in `call'
activerecord (5.0.0.rc1) lib/active_record/migration.rb:552:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/callbacks.rb:38:in `block in call'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:97:in `__run_callbacks__'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:750:in `_run_call_callbacks'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:90:in `run_callbacks'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/callbacks.rb:36:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/remote_ip.rb:79:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/debug_exceptions.rb:49:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/show_exceptions.rb:31:in `call'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:36:in `call_app'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:24:in `block in call'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:70:in `block in tagged'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:26:in `tagged'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:70:in `tagged'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:24:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/request_id.rb:24:in `call'
rack (2.0.0.rc1) lib/rack/runtime.rb:22:in `call'
activesupport (5.0.0.rc1) lib/active_support/cache/strategy/local_cache_middleware.rb:28:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/static.rb:136:in `call'
rack (2.0.0.rc1) lib/rack/sendfile.rb:111:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
railties (5.0.0.rc1) lib/rails/engine.rb:522:in `call'
puma (3.4.0) lib/puma/configuration.rb:224:in `call'
puma (3.4.0) lib/puma/server.rb:569:in `handle_request'
puma (3.4.0) lib/puma/server.rb:406:in `process_client'
puma (3.4.0) lib/puma/server.rb:271:in `block in run'
puma (3.4.0) lib/puma/thread_pool.rb:114:in `call'
puma (3.4.0) lib/puma/thread_pool.rb:114:in `block in spawn_thread'
Started PATCH "/api/v1/answers/22" for ::1 at 2016-06-17 16:22:00 -0400
  
AbstractController::ActionNotFound (The action 'update' could not be found for Api::V1::AnswersController):
  
actionpack (5.0.0.rc1) lib/abstract_controller/base.rb:121:in `process'
actionpack (5.0.0.rc1) lib/action_controller/metal.rb:190:in `dispatch'
actionpack (5.0.0.rc1) lib/action_controller/metal.rb:262:in `dispatch'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:50:in `dispatch'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:32:in `serve'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:39:in `block in serve'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:26:in `each'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:26:in `serve'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:725:in `call'
actionview (5.0.0.rc1) lib/action_view/digestor.rb:12:in `call'
rack (2.0.0.rc1) lib/rack/etag.rb:25:in `call'
rack (2.0.0.rc1) lib/rack/conditional_get.rb:38:in `call'
rack (2.0.0.rc1) lib/rack/head.rb:12:in `call'
activerecord (5.0.0.rc1) lib/active_record/migration.rb:552:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/callbacks.rb:38:in `block in call'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:97:in `__run_callbacks__'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:750:in `_run_call_callbacks'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:90:in `run_callbacks'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/callbacks.rb:36:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/remote_ip.rb:79:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/debug_exceptions.rb:49:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/show_exceptions.rb:31:in `call'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:36:in `call_app'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:24:in `block in call'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:70:in `block in tagged'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:26:in `tagged'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:70:in `tagged'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:24:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/request_id.rb:24:in `call'
rack (2.0.0.rc1) lib/rack/runtime.rb:22:in `call'
activesupport (5.0.0.rc1) lib/active_support/cache/strategy/local_cache_middleware.rb:28:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/static.rb:136:in `call'
rack (2.0.0.rc1) lib/rack/sendfile.rb:111:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
railties (5.0.0.rc1) lib/rails/engine.rb:522:in `call'
puma (3.4.0) lib/puma/configuration.rb:224:in `call'
puma (3.4.0) lib/puma/server.rb:569:in `handle_request'
puma (3.4.0) lib/puma/server.rb:406:in `process_client'
puma (3.4.0) lib/puma/server.rb:271:in `block in run'
puma (3.4.0) lib/puma/thread_pool.rb:114:in `call'
puma (3.4.0) lib/puma/thread_pool.rb:114:in `block in spawn_thread'
Started PATCH "/api/v1/answers/22" for ::1 at 2016-06-17 16:22:00 -0400
  
AbstractController::ActionNotFound (The action 'update' could not be found for Api::V1::AnswersController):
  
actionpack (5.0.0.rc1) lib/abstract_controller/base.rb:121:in `process'
actionpack (5.0.0.rc1) lib/action_controller/metal.rb:190:in `dispatch'
actionpack (5.0.0.rc1) lib/action_controller/metal.rb:262:in `dispatch'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:50:in `dispatch'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:32:in `serve'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:39:in `block in serve'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:26:in `each'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:26:in `serve'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:725:in `call'
actionview (5.0.0.rc1) lib/action_view/digestor.rb:12:in `call'
rack (2.0.0.rc1) lib/rack/etag.rb:25:in `call'
rack (2.0.0.rc1) lib/rack/conditional_get.rb:38:in `call'
rack (2.0.0.rc1) lib/rack/head.rb:12:in `call'
activerecord (5.0.0.rc1) lib/active_record/migration.rb:552:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/callbacks.rb:38:in `block in call'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:97:in `__run_callbacks__'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:750:in `_run_call_callbacks'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:90:in `run_callbacks'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/callbacks.rb:36:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/remote_ip.rb:79:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/debug_exceptions.rb:49:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/show_exceptions.rb:31:in `call'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:36:in `call_app'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:24:in `block in call'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:70:in `block in tagged'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:26:in `tagged'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:70:in `tagged'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:24:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/request_id.rb:24:in `call'
rack (2.0.0.rc1) lib/rack/runtime.rb:22:in `call'
activesupport (5.0.0.rc1) lib/active_support/cache/strategy/local_cache_middleware.rb:28:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/static.rb:136:in `call'
rack (2.0.0.rc1) lib/rack/sendfile.rb:111:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
railties (5.0.0.rc1) lib/rails/engine.rb:522:in `call'
puma (3.4.0) lib/puma/configuration.rb:224:in `call'
puma (3.4.0) lib/puma/server.rb:569:in `handle_request'
puma (3.4.0) lib/puma/server.rb:406:in `process_client'
puma (3.4.0) lib/puma/server.rb:271:in `block in run'
puma (3.4.0) lib/puma/thread_pool.rb:114:in `call'
puma (3.4.0) lib/puma/thread_pool.rb:114:in `block in spawn_thread'
Started PATCH "/api/v1/answers/22" for ::1 at 2016-06-17 16:22:00 -0400
  
AbstractController::ActionNotFound (The action 'update' could not be found for Api::V1::AnswersController):
  
actionpack (5.0.0.rc1) lib/abstract_controller/base.rb:121:in `process'
actionpack (5.0.0.rc1) lib/action_controller/metal.rb:190:in `dispatch'
actionpack (5.0.0.rc1) lib/action_controller/metal.rb:262:in `dispatch'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:50:in `dispatch'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:32:in `serve'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:39:in `block in serve'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:26:in `each'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:26:in `serve'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:725:in `call'
actionview (5.0.0.rc1) lib/action_view/digestor.rb:12:in `call'
rack (2.0.0.rc1) lib/rack/etag.rb:25:in `call'
rack (2.0.0.rc1) lib/rack/conditional_get.rb:38:in `call'
rack (2.0.0.rc1) lib/rack/head.rb:12:in `call'
activerecord (5.0.0.rc1) lib/active_record/migration.rb:552:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/callbacks.rb:38:in `block in call'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:97:in `__run_callbacks__'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:750:in `_run_call_callbacks'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:90:in `run_callbacks'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/callbacks.rb:36:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/remote_ip.rb:79:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/debug_exceptions.rb:49:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/show_exceptions.rb:31:in `call'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:36:in `call_app'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:24:in `block in call'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:70:in `block in tagged'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:26:in `tagged'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:70:in `tagged'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:24:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/request_id.rb:24:in `call'
rack (2.0.0.rc1) lib/rack/runtime.rb:22:in `call'
activesupport (5.0.0.rc1) lib/active_support/cache/strategy/local_cache_middleware.rb:28:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/static.rb:136:in `call'
rack (2.0.0.rc1) lib/rack/sendfile.rb:111:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
railties (5.0.0.rc1) lib/rails/engine.rb:522:in `call'
puma (3.4.0) lib/puma/configuration.rb:224:in `call'
puma (3.4.0) lib/puma/server.rb:569:in `handle_request'
puma (3.4.0) lib/puma/server.rb:406:in `process_client'
puma (3.4.0) lib/puma/server.rb:271:in `block in run'
puma (3.4.0) lib/puma/thread_pool.rb:114:in `call'
puma (3.4.0) lib/puma/thread_pool.rb:114:in `block in spawn_thread'
Started PATCH "/api/v1/answers/22" for ::1 at 2016-06-17 16:22:00 -0400
  
AbstractController::ActionNotFound (The action 'update' could not be found for Api::V1::AnswersController):
  
actionpack (5.0.0.rc1) lib/abstract_controller/base.rb:121:in `process'
actionpack (5.0.0.rc1) lib/action_controller/metal.rb:190:in `dispatch'
actionpack (5.0.0.rc1) lib/action_controller/metal.rb:262:in `dispatch'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:50:in `dispatch'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:32:in `serve'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:39:in `block in serve'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:26:in `each'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:26:in `serve'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:725:in `call'
actionview (5.0.0.rc1) lib/action_view/digestor.rb:12:in `call'
rack (2.0.0.rc1) lib/rack/etag.rb:25:in `call'
rack (2.0.0.rc1) lib/rack/conditional_get.rb:38:in `call'
rack (2.0.0.rc1) lib/rack/head.rb:12:in `call'
activerecord (5.0.0.rc1) lib/active_record/migration.rb:552:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/callbacks.rb:38:in `block in call'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:97:in `__run_callbacks__'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:750:in `_run_call_callbacks'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:90:in `run_callbacks'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/callbacks.rb:36:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/remote_ip.rb:79:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/debug_exceptions.rb:49:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/show_exceptions.rb:31:in `call'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:36:in `call_app'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:24:in `block in call'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:70:in `block in tagged'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:26:in `tagged'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:70:in `tagged'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:24:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/request_id.rb:24:in `call'
rack (2.0.0.rc1) lib/rack/runtime.rb:22:in `call'
activesupport (5.0.0.rc1) lib/active_support/cache/strategy/local_cache_middleware.rb:28:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/static.rb:136:in `call'
rack (2.0.0.rc1) lib/rack/sendfile.rb:111:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
railties (5.0.0.rc1) lib/rails/engine.rb:522:in `call'
puma (3.4.0) lib/puma/configuration.rb:224:in `call'
puma (3.4.0) lib/puma/server.rb:569:in `handle_request'
puma (3.4.0) lib/puma/server.rb:406:in `process_client'
puma (3.4.0) lib/puma/server.rb:271:in `block in run'
puma (3.4.0) lib/puma/thread_pool.rb:114:in `call'
puma (3.4.0) lib/puma/thread_pool.rb:114:in `block in spawn_thread'
Started PATCH "/api/v1/answers/22" for ::1 at 2016-06-17 16:22:00 -0400
  
AbstractController::ActionNotFound (The action 'update' could not be found for Api::V1::AnswersController):
  
actionpack (5.0.0.rc1) lib/abstract_controller/base.rb:121:in `process'
actionpack (5.0.0.rc1) lib/action_controller/metal.rb:190:in `dispatch'
actionpack (5.0.0.rc1) lib/action_controller/metal.rb:262:in `dispatch'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:50:in `dispatch'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:32:in `serve'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:39:in `block in serve'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:26:in `each'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:26:in `serve'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:725:in `call'
actionview (5.0.0.rc1) lib/action_view/digestor.rb:12:in `call'
rack (2.0.0.rc1) lib/rack/etag.rb:25:in `call'
rack (2.0.0.rc1) lib/rack/conditional_get.rb:38:in `call'
rack (2.0.0.rc1) lib/rack/head.rb:12:in `call'
activerecord (5.0.0.rc1) lib/active_record/migration.rb:552:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/callbacks.rb:38:in `block in call'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:97:in `__run_callbacks__'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:750:in `_run_call_callbacks'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:90:in `run_callbacks'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/callbacks.rb:36:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/remote_ip.rb:79:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/debug_exceptions.rb:49:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/show_exceptions.rb:31:in `call'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:36:in `call_app'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:24:in `block in call'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:70:in `block in tagged'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:26:in `tagged'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:70:in `tagged'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:24:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/request_id.rb:24:in `call'
rack (2.0.0.rc1) lib/rack/runtime.rb:22:in `call'
activesupport (5.0.0.rc1) lib/active_support/cache/strategy/local_cache_middleware.rb:28:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/static.rb:136:in `call'
rack (2.0.0.rc1) lib/rack/sendfile.rb:111:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
railties (5.0.0.rc1) lib/rails/engine.rb:522:in `call'
puma (3.4.0) lib/puma/configuration.rb:224:in `call'
puma (3.4.0) lib/puma/server.rb:569:in `handle_request'
puma (3.4.0) lib/puma/server.rb:406:in `process_client'
puma (3.4.0) lib/puma/server.rb:271:in `block in run'
puma (3.4.0) lib/puma/thread_pool.rb:114:in `call'
puma (3.4.0) lib/puma/thread_pool.rb:114:in `block in spawn_thread'
Started PATCH "/api/v1/answers/22" for ::1 at 2016-06-17 16:22:01 -0400
  
AbstractController::ActionNotFound (The action 'update' could not be found for Api::V1::AnswersController):
  
actionpack (5.0.0.rc1) lib/abstract_controller/base.rb:121:in `process'
actionpack (5.0.0.rc1) lib/action_controller/metal.rb:190:in `dispatch'
actionpack (5.0.0.rc1) lib/action_controller/metal.rb:262:in `dispatch'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:50:in `dispatch'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:32:in `serve'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:39:in `block in serve'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:26:in `each'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:26:in `serve'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:725:in `call'
actionview (5.0.0.rc1) lib/action_view/digestor.rb:12:in `call'
rack (2.0.0.rc1) lib/rack/etag.rb:25:in `call'
rack (2.0.0.rc1) lib/rack/conditional_get.rb:38:in `call'
rack (2.0.0.rc1) lib/rack/head.rb:12:in `call'
activerecord (5.0.0.rc1) lib/active_record/migration.rb:552:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/callbacks.rb:38:in `block in call'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:97:in `__run_callbacks__'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:750:in `_run_call_callbacks'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:90:in `run_callbacks'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/callbacks.rb:36:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/remote_ip.rb:79:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/debug_exceptions.rb:49:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/show_exceptions.rb:31:in `call'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:36:in `call_app'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:24:in `block in call'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:70:in `block in tagged'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:26:in `tagged'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:70:in `tagged'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:24:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/request_id.rb:24:in `call'
rack (2.0.0.rc1) lib/rack/runtime.rb:22:in `call'
activesupport (5.0.0.rc1) lib/active_support/cache/strategy/local_cache_middleware.rb:28:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/static.rb:136:in `call'
rack (2.0.0.rc1) lib/rack/sendfile.rb:111:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
railties (5.0.0.rc1) lib/rails/engine.rb:522:in `call'
puma (3.4.0) lib/puma/configuration.rb:224:in `call'
puma (3.4.0) lib/puma/server.rb:569:in `handle_request'
puma (3.4.0) lib/puma/server.rb:406:in `process_client'
puma (3.4.0) lib/puma/server.rb:271:in `block in run'
puma (3.4.0) lib/puma/thread_pool.rb:114:in `call'
puma (3.4.0) lib/puma/thread_pool.rb:114:in `block in spawn_thread'
Started PATCH "/api/v1/answers/22" for ::1 at 2016-06-17 16:22:01 -0400
  
AbstractController::ActionNotFound (The action 'update' could not be found for Api::V1::AnswersController):
  
actionpack (5.0.0.rc1) lib/abstract_controller/base.rb:121:in `process'
actionpack (5.0.0.rc1) lib/action_controller/metal.rb:190:in `dispatch'
actionpack (5.0.0.rc1) lib/action_controller/metal.rb:262:in `dispatch'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:50:in `dispatch'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:32:in `serve'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:39:in `block in serve'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:26:in `each'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:26:in `serve'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:725:in `call'
actionview (5.0.0.rc1) lib/action_view/digestor.rb:12:in `call'
rack (2.0.0.rc1) lib/rack/etag.rb:25:in `call'
rack (2.0.0.rc1) lib/rack/conditional_get.rb:38:in `call'
rack (2.0.0.rc1) lib/rack/head.rb:12:in `call'
activerecord (5.0.0.rc1) lib/active_record/migration.rb:552:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/callbacks.rb:38:in `block in call'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:97:in `__run_callbacks__'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:750:in `_run_call_callbacks'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:90:in `run_callbacks'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/callbacks.rb:36:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/remote_ip.rb:79:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/debug_exceptions.rb:49:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/show_exceptions.rb:31:in `call'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:36:in `call_app'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:24:in `block in call'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:70:in `block in tagged'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:26:in `tagged'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:70:in `tagged'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:24:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/request_id.rb:24:in `call'
rack (2.0.0.rc1) lib/rack/runtime.rb:22:in `call'
activesupport (5.0.0.rc1) lib/active_support/cache/strategy/local_cache_middleware.rb:28:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/static.rb:136:in `call'
rack (2.0.0.rc1) lib/rack/sendfile.rb:111:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
railties (5.0.0.rc1) lib/rails/engine.rb:522:in `call'
puma (3.4.0) lib/puma/configuration.rb:224:in `call'
puma (3.4.0) lib/puma/server.rb:569:in `handle_request'
puma (3.4.0) lib/puma/server.rb:406:in `process_client'
puma (3.4.0) lib/puma/server.rb:271:in `block in run'
puma (3.4.0) lib/puma/thread_pool.rb:114:in `call'
puma (3.4.0) lib/puma/thread_pool.rb:114:in `block in spawn_thread'
Started POST "/api/v1/answers" for ::1 at 2016-06-17 16:22:08 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"id"=>"75", "attributes"=>{"content"=>"sasas"}, "question"=>{"data"=>{"id"=>"9", "attributes"=>{"content"=>"What is a closure?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 9], ["LIMIT", 1]]
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "sasas"], ["question_id", 9], ["created_at", 2016-06-17 20:22:08 UTC], ["updated_at", 2016-06-17 20:22:08 UTC]]
  [1m[35m (2.2ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 8ms (ActiveRecord: 2.9ms)


Started PATCH "/api/v1/answers/75" for ::1 at 2016-06-17 16:22:08 -0400
  
AbstractController::ActionNotFound (The action 'update' could not be found for Api::V1::AnswersController):
  
actionpack (5.0.0.rc1) lib/abstract_controller/base.rb:121:in `process'
actionpack (5.0.0.rc1) lib/action_controller/metal.rb:190:in `dispatch'
actionpack (5.0.0.rc1) lib/action_controller/metal.rb:262:in `dispatch'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:50:in `dispatch'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:32:in `serve'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:39:in `block in serve'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:26:in `each'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:26:in `serve'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:725:in `call'
actionview (5.0.0.rc1) lib/action_view/digestor.rb:12:in `call'
rack (2.0.0.rc1) lib/rack/etag.rb:25:in `call'
rack (2.0.0.rc1) lib/rack/conditional_get.rb:38:in `call'
rack (2.0.0.rc1) lib/rack/head.rb:12:in `call'
activerecord (5.0.0.rc1) lib/active_record/migration.rb:552:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/callbacks.rb:38:in `block in call'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:97:in `__run_callbacks__'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:750:in `_run_call_callbacks'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:90:in `run_callbacks'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/callbacks.rb:36:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/remote_ip.rb:79:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/debug_exceptions.rb:49:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/show_exceptions.rb:31:in `call'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:36:in `call_app'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:24:in `block in call'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:70:in `block in tagged'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:26:in `tagged'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:70:in `tagged'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:24:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/request_id.rb:24:in `call'
rack (2.0.0.rc1) lib/rack/runtime.rb:22:in `call'
activesupport (5.0.0.rc1) lib/active_support/cache/strategy/local_cache_middleware.rb:28:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/static.rb:136:in `call'
rack (2.0.0.rc1) lib/rack/sendfile.rb:111:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
railties (5.0.0.rc1) lib/rails/engine.rb:522:in `call'
puma (3.4.0) lib/puma/configuration.rb:224:in `call'
puma (3.4.0) lib/puma/server.rb:569:in `handle_request'
puma (3.4.0) lib/puma/server.rb:406:in `process_client'
puma (3.4.0) lib/puma/server.rb:271:in `block in run'
puma (3.4.0) lib/puma/thread_pool.rb:114:in `call'
puma (3.4.0) lib/puma/thread_pool.rb:114:in `block in spawn_thread'
Started PATCH "/api/v1/answers/75" for ::1 at 2016-06-17 16:22:08 -0400
  
AbstractController::ActionNotFound (The action 'update' could not be found for Api::V1::AnswersController):
  
actionpack (5.0.0.rc1) lib/abstract_controller/base.rb:121:in `process'
actionpack (5.0.0.rc1) lib/action_controller/metal.rb:190:in `dispatch'
actionpack (5.0.0.rc1) lib/action_controller/metal.rb:262:in `dispatch'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:50:in `dispatch'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:32:in `serve'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:39:in `block in serve'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:26:in `each'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:26:in `serve'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:725:in `call'
actionview (5.0.0.rc1) lib/action_view/digestor.rb:12:in `call'
rack (2.0.0.rc1) lib/rack/etag.rb:25:in `call'
rack (2.0.0.rc1) lib/rack/conditional_get.rb:38:in `call'
rack (2.0.0.rc1) lib/rack/head.rb:12:in `call'
activerecord (5.0.0.rc1) lib/active_record/migration.rb:552:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/callbacks.rb:38:in `block in call'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:97:in `__run_callbacks__'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:750:in `_run_call_callbacks'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:90:in `run_callbacks'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/callbacks.rb:36:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/remote_ip.rb:79:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/debug_exceptions.rb:49:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/show_exceptions.rb:31:in `call'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:36:in `call_app'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:24:in `block in call'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:70:in `block in tagged'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:26:in `tagged'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:70:in `tagged'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:24:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/request_id.rb:24:in `call'
rack (2.0.0.rc1) lib/rack/runtime.rb:22:in `call'
activesupport (5.0.0.rc1) lib/active_support/cache/strategy/local_cache_middleware.rb:28:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/static.rb:136:in `call'
rack (2.0.0.rc1) lib/rack/sendfile.rb:111:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
railties (5.0.0.rc1) lib/rails/engine.rb:522:in `call'
puma (3.4.0) lib/puma/configuration.rb:224:in `call'
puma (3.4.0) lib/puma/server.rb:569:in `handle_request'
puma (3.4.0) lib/puma/server.rb:406:in `process_client'
puma (3.4.0) lib/puma/server.rb:271:in `block in run'
puma (3.4.0) lib/puma/thread_pool.rb:114:in `call'
puma (3.4.0) lib/puma/thread_pool.rb:114:in `block in spawn_thread'
Started PATCH "/api/v1/answers/75" for ::1 at 2016-06-17 16:22:08 -0400
  
AbstractController::ActionNotFound (The action 'update' could not be found for Api::V1::AnswersController):
  
actionpack (5.0.0.rc1) lib/abstract_controller/base.rb:121:in `process'
actionpack (5.0.0.rc1) lib/action_controller/metal.rb:190:in `dispatch'
actionpack (5.0.0.rc1) lib/action_controller/metal.rb:262:in `dispatch'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:50:in `dispatch'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:32:in `serve'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:39:in `block in serve'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:26:in `each'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:26:in `serve'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:725:in `call'
actionview (5.0.0.rc1) lib/action_view/digestor.rb:12:in `call'
rack (2.0.0.rc1) lib/rack/etag.rb:25:in `call'
rack (2.0.0.rc1) lib/rack/conditional_get.rb:38:in `call'
rack (2.0.0.rc1) lib/rack/head.rb:12:in `call'
activerecord (5.0.0.rc1) lib/active_record/migration.rb:552:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/callbacks.rb:38:in `block in call'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:97:in `__run_callbacks__'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:750:in `_run_call_callbacks'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:90:in `run_callbacks'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/callbacks.rb:36:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/remote_ip.rb:79:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/debug_exceptions.rb:49:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/show_exceptions.rb:31:in `call'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:36:in `call_app'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:24:in `block in call'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:70:in `block in tagged'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:26:in `tagged'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:70:in `tagged'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:24:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/request_id.rb:24:in `call'
rack (2.0.0.rc1) lib/rack/runtime.rb:22:in `call'
activesupport (5.0.0.rc1) lib/active_support/cache/strategy/local_cache_middleware.rb:28:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/static.rb:136:in `call'
rack (2.0.0.rc1) lib/rack/sendfile.rb:111:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
railties (5.0.0.rc1) lib/rails/engine.rb:522:in `call'
puma (3.4.0) lib/puma/configuration.rb:224:in `call'
puma (3.4.0) lib/puma/server.rb:569:in `handle_request'
puma (3.4.0) lib/puma/server.rb:406:in `process_client'
puma (3.4.0) lib/puma/server.rb:271:in `block in run'
puma (3.4.0) lib/puma/thread_pool.rb:114:in `call'
puma (3.4.0) lib/puma/thread_pool.rb:114:in `block in spawn_thread'
Started PATCH "/api/v1/answers/75" for ::1 at 2016-06-17 16:22:08 -0400
  
AbstractController::ActionNotFound (The action 'update' could not be found for Api::V1::AnswersController):
  
actionpack (5.0.0.rc1) lib/abstract_controller/base.rb:121:in `process'
actionpack (5.0.0.rc1) lib/action_controller/metal.rb:190:in `dispatch'
actionpack (5.0.0.rc1) lib/action_controller/metal.rb:262:in `dispatch'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:50:in `dispatch'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:32:in `serve'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:39:in `block in serve'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:26:in `each'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:26:in `serve'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:725:in `call'
actionview (5.0.0.rc1) lib/action_view/digestor.rb:12:in `call'
rack (2.0.0.rc1) lib/rack/etag.rb:25:in `call'
rack (2.0.0.rc1) lib/rack/conditional_get.rb:38:in `call'
rack (2.0.0.rc1) lib/rack/head.rb:12:in `call'
activerecord (5.0.0.rc1) lib/active_record/migration.rb:552:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/callbacks.rb:38:in `block in call'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:97:in `__run_callbacks__'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:750:in `_run_call_callbacks'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:90:in `run_callbacks'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/callbacks.rb:36:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/remote_ip.rb:79:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/debug_exceptions.rb:49:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/show_exceptions.rb:31:in `call'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:36:in `call_app'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:24:in `block in call'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:70:in `block in tagged'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:26:in `tagged'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:70:in `tagged'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:24:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/request_id.rb:24:in `call'
rack (2.0.0.rc1) lib/rack/runtime.rb:22:in `call'
activesupport (5.0.0.rc1) lib/active_support/cache/strategy/local_cache_middleware.rb:28:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/static.rb:136:in `call'
rack (2.0.0.rc1) lib/rack/sendfile.rb:111:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
railties (5.0.0.rc1) lib/rails/engine.rb:522:in `call'
puma (3.4.0) lib/puma/configuration.rb:224:in `call'
puma (3.4.0) lib/puma/server.rb:569:in `handle_request'
puma (3.4.0) lib/puma/server.rb:406:in `process_client'
puma (3.4.0) lib/puma/server.rb:271:in `block in run'
puma (3.4.0) lib/puma/thread_pool.rb:114:in `call'
puma (3.4.0) lib/puma/thread_pool.rb:114:in `block in spawn_thread'
Started PATCH "/api/v1/answers/75" for ::1 at 2016-06-17 16:22:10 -0400
  
AbstractController::ActionNotFound (The action 'update' could not be found for Api::V1::AnswersController):
  
actionpack (5.0.0.rc1) lib/abstract_controller/base.rb:121:in `process'
actionpack (5.0.0.rc1) lib/action_controller/metal.rb:190:in `dispatch'
actionpack (5.0.0.rc1) lib/action_controller/metal.rb:262:in `dispatch'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:50:in `dispatch'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:32:in `serve'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:39:in `block in serve'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:26:in `each'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:26:in `serve'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:725:in `call'
actionview (5.0.0.rc1) lib/action_view/digestor.rb:12:in `call'
rack (2.0.0.rc1) lib/rack/etag.rb:25:in `call'
rack (2.0.0.rc1) lib/rack/conditional_get.rb:38:in `call'
rack (2.0.0.rc1) lib/rack/head.rb:12:in `call'
activerecord (5.0.0.rc1) lib/active_record/migration.rb:552:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/callbacks.rb:38:in `block in call'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:97:in `__run_callbacks__'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:750:in `_run_call_callbacks'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:90:in `run_callbacks'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/callbacks.rb:36:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/remote_ip.rb:79:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/debug_exceptions.rb:49:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/show_exceptions.rb:31:in `call'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:36:in `call_app'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:24:in `block in call'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:70:in `block in tagged'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:26:in `tagged'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:70:in `tagged'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:24:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/request_id.rb:24:in `call'
rack (2.0.0.rc1) lib/rack/runtime.rb:22:in `call'
activesupport (5.0.0.rc1) lib/active_support/cache/strategy/local_cache_middleware.rb:28:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/static.rb:136:in `call'
rack (2.0.0.rc1) lib/rack/sendfile.rb:111:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
railties (5.0.0.rc1) lib/rails/engine.rb:522:in `call'
puma (3.4.0) lib/puma/configuration.rb:224:in `call'
puma (3.4.0) lib/puma/server.rb:569:in `handle_request'
puma (3.4.0) lib/puma/server.rb:406:in `process_client'
puma (3.4.0) lib/puma/server.rb:271:in `block in run'
puma (3.4.0) lib/puma/thread_pool.rb:114:in `call'
puma (3.4.0) lib/puma/thread_pool.rb:114:in `block in spawn_thread'
Started PATCH "/api/v1/answers/75" for ::1 at 2016-06-17 16:22:10 -0400
  
AbstractController::ActionNotFound (The action 'update' could not be found for Api::V1::AnswersController):
  
actionpack (5.0.0.rc1) lib/abstract_controller/base.rb:121:in `process'
actionpack (5.0.0.rc1) lib/action_controller/metal.rb:190:in `dispatch'
actionpack (5.0.0.rc1) lib/action_controller/metal.rb:262:in `dispatch'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:50:in `dispatch'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:32:in `serve'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:39:in `block in serve'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:26:in `each'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:26:in `serve'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:725:in `call'
actionview (5.0.0.rc1) lib/action_view/digestor.rb:12:in `call'
rack (2.0.0.rc1) lib/rack/etag.rb:25:in `call'
rack (2.0.0.rc1) lib/rack/conditional_get.rb:38:in `call'
rack (2.0.0.rc1) lib/rack/head.rb:12:in `call'
activerecord (5.0.0.rc1) lib/active_record/migration.rb:552:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/callbacks.rb:38:in `block in call'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:97:in `__run_callbacks__'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:750:in `_run_call_callbacks'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:90:in `run_callbacks'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/callbacks.rb:36:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/remote_ip.rb:79:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/debug_exceptions.rb:49:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/show_exceptions.rb:31:in `call'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:36:in `call_app'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:24:in `block in call'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:70:in `block in tagged'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:26:in `tagged'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:70:in `tagged'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:24:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/request_id.rb:24:in `call'
rack (2.0.0.rc1) lib/rack/runtime.rb:22:in `call'
activesupport (5.0.0.rc1) lib/active_support/cache/strategy/local_cache_middleware.rb:28:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/static.rb:136:in `call'
rack (2.0.0.rc1) lib/rack/sendfile.rb:111:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
railties (5.0.0.rc1) lib/rails/engine.rb:522:in `call'
puma (3.4.0) lib/puma/configuration.rb:224:in `call'
puma (3.4.0) lib/puma/server.rb:569:in `handle_request'
puma (3.4.0) lib/puma/server.rb:406:in `process_client'
puma (3.4.0) lib/puma/server.rb:271:in `block in run'
puma (3.4.0) lib/puma/thread_pool.rb:114:in `call'
puma (3.4.0) lib/puma/thread_pool.rb:114:in `block in spawn_thread'
Started PATCH "/api/v1/answers/75" for ::1 at 2016-06-17 16:22:10 -0400
  
AbstractController::ActionNotFound (The action 'update' could not be found for Api::V1::AnswersController):
  
actionpack (5.0.0.rc1) lib/abstract_controller/base.rb:121:in `process'
actionpack (5.0.0.rc1) lib/action_controller/metal.rb:190:in `dispatch'
actionpack (5.0.0.rc1) lib/action_controller/metal.rb:262:in `dispatch'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:50:in `dispatch'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:32:in `serve'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:39:in `block in serve'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:26:in `each'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:26:in `serve'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:725:in `call'
actionview (5.0.0.rc1) lib/action_view/digestor.rb:12:in `call'
rack (2.0.0.rc1) lib/rack/etag.rb:25:in `call'
rack (2.0.0.rc1) lib/rack/conditional_get.rb:38:in `call'
rack (2.0.0.rc1) lib/rack/head.rb:12:in `call'
activerecord (5.0.0.rc1) lib/active_record/migration.rb:552:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/callbacks.rb:38:in `block in call'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:97:in `__run_callbacks__'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:750:in `_run_call_callbacks'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:90:in `run_callbacks'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/callbacks.rb:36:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/remote_ip.rb:79:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/debug_exceptions.rb:49:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/show_exceptions.rb:31:in `call'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:36:in `call_app'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:24:in `block in call'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:70:in `block in tagged'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:26:in `tagged'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:70:in `tagged'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:24:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/request_id.rb:24:in `call'
rack (2.0.0.rc1) lib/rack/runtime.rb:22:in `call'
activesupport (5.0.0.rc1) lib/active_support/cache/strategy/local_cache_middleware.rb:28:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/static.rb:136:in `call'
rack (2.0.0.rc1) lib/rack/sendfile.rb:111:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
railties (5.0.0.rc1) lib/rails/engine.rb:522:in `call'
puma (3.4.0) lib/puma/configuration.rb:224:in `call'
puma (3.4.0) lib/puma/server.rb:569:in `handle_request'
puma (3.4.0) lib/puma/server.rb:406:in `process_client'
puma (3.4.0) lib/puma/server.rb:271:in `block in run'
puma (3.4.0) lib/puma/thread_pool.rb:114:in `call'
puma (3.4.0) lib/puma/thread_pool.rb:114:in `block in spawn_thread'
Started PATCH "/api/v1/answers/22" for ::1 at 2016-06-17 16:22:11 -0400
  
AbstractController::ActionNotFound (The action 'update' could not be found for Api::V1::AnswersController):
  
actionpack (5.0.0.rc1) lib/abstract_controller/base.rb:121:in `process'
actionpack (5.0.0.rc1) lib/action_controller/metal.rb:190:in `dispatch'
actionpack (5.0.0.rc1) lib/action_controller/metal.rb:262:in `dispatch'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:50:in `dispatch'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:32:in `serve'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:39:in `block in serve'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:26:in `each'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:26:in `serve'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:725:in `call'
actionview (5.0.0.rc1) lib/action_view/digestor.rb:12:in `call'
rack (2.0.0.rc1) lib/rack/etag.rb:25:in `call'
rack (2.0.0.rc1) lib/rack/conditional_get.rb:38:in `call'
rack (2.0.0.rc1) lib/rack/head.rb:12:in `call'
activerecord (5.0.0.rc1) lib/active_record/migration.rb:552:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/callbacks.rb:38:in `block in call'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:97:in `__run_callbacks__'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:750:in `_run_call_callbacks'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:90:in `run_callbacks'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/callbacks.rb:36:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/remote_ip.rb:79:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/debug_exceptions.rb:49:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/show_exceptions.rb:31:in `call'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:36:in `call_app'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:24:in `block in call'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:70:in `block in tagged'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:26:in `tagged'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:70:in `tagged'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:24:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/request_id.rb:24:in `call'
rack (2.0.0.rc1) lib/rack/runtime.rb:22:in `call'
activesupport (5.0.0.rc1) lib/active_support/cache/strategy/local_cache_middleware.rb:28:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/static.rb:136:in `call'
rack (2.0.0.rc1) lib/rack/sendfile.rb:111:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
railties (5.0.0.rc1) lib/rails/engine.rb:522:in `call'
puma (3.4.0) lib/puma/configuration.rb:224:in `call'
puma (3.4.0) lib/puma/server.rb:569:in `handle_request'
puma (3.4.0) lib/puma/server.rb:406:in `process_client'
puma (3.4.0) lib/puma/server.rb:271:in `block in run'
puma (3.4.0) lib/puma/thread_pool.rb:114:in `call'
puma (3.4.0) lib/puma/thread_pool.rb:114:in `block in spawn_thread'
Started PATCH "/api/v1/answers/22" for ::1 at 2016-06-17 16:22:12 -0400
  
AbstractController::ActionNotFound (The action 'update' could not be found for Api::V1::AnswersController):
  
actionpack (5.0.0.rc1) lib/abstract_controller/base.rb:121:in `process'
actionpack (5.0.0.rc1) lib/action_controller/metal.rb:190:in `dispatch'
actionpack (5.0.0.rc1) lib/action_controller/metal.rb:262:in `dispatch'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:50:in `dispatch'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:32:in `serve'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:39:in `block in serve'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:26:in `each'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:26:in `serve'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:725:in `call'
actionview (5.0.0.rc1) lib/action_view/digestor.rb:12:in `call'
rack (2.0.0.rc1) lib/rack/etag.rb:25:in `call'
rack (2.0.0.rc1) lib/rack/conditional_get.rb:38:in `call'
rack (2.0.0.rc1) lib/rack/head.rb:12:in `call'
activerecord (5.0.0.rc1) lib/active_record/migration.rb:552:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/callbacks.rb:38:in `block in call'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:97:in `__run_callbacks__'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:750:in `_run_call_callbacks'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:90:in `run_callbacks'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/callbacks.rb:36:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/remote_ip.rb:79:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/debug_exceptions.rb:49:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/show_exceptions.rb:31:in `call'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:36:in `call_app'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:24:in `block in call'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:70:in `block in tagged'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:26:in `tagged'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:70:in `tagged'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:24:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/request_id.rb:24:in `call'
rack (2.0.0.rc1) lib/rack/runtime.rb:22:in `call'
activesupport (5.0.0.rc1) lib/active_support/cache/strategy/local_cache_middleware.rb:28:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/static.rb:136:in `call'
rack (2.0.0.rc1) lib/rack/sendfile.rb:111:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
railties (5.0.0.rc1) lib/rails/engine.rb:522:in `call'
puma (3.4.0) lib/puma/configuration.rb:224:in `call'
puma (3.4.0) lib/puma/server.rb:569:in `handle_request'
puma (3.4.0) lib/puma/server.rb:406:in `process_client'
puma (3.4.0) lib/puma/server.rb:271:in `block in run'
puma (3.4.0) lib/puma/thread_pool.rb:114:in `call'
puma (3.4.0) lib/puma/thread_pool.rb:114:in `block in spawn_thread'
Started PATCH "/api/v1/answers/22" for ::1 at 2016-06-17 16:22:12 -0400
  
AbstractController::ActionNotFound (The action 'update' could not be found for Api::V1::AnswersController):
  
actionpack (5.0.0.rc1) lib/abstract_controller/base.rb:121:in `process'
actionpack (5.0.0.rc1) lib/action_controller/metal.rb:190:in `dispatch'
actionpack (5.0.0.rc1) lib/action_controller/metal.rb:262:in `dispatch'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:50:in `dispatch'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:32:in `serve'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:39:in `block in serve'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:26:in `each'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:26:in `serve'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:725:in `call'
actionview (5.0.0.rc1) lib/action_view/digestor.rb:12:in `call'
rack (2.0.0.rc1) lib/rack/etag.rb:25:in `call'
rack (2.0.0.rc1) lib/rack/conditional_get.rb:38:in `call'
rack (2.0.0.rc1) lib/rack/head.rb:12:in `call'
activerecord (5.0.0.rc1) lib/active_record/migration.rb:552:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/callbacks.rb:38:in `block in call'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:97:in `__run_callbacks__'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:750:in `_run_call_callbacks'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:90:in `run_callbacks'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/callbacks.rb:36:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/remote_ip.rb:79:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/debug_exceptions.rb:49:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/show_exceptions.rb:31:in `call'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:36:in `call_app'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:24:in `block in call'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:70:in `block in tagged'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:26:in `tagged'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:70:in `tagged'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:24:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/request_id.rb:24:in `call'
rack (2.0.0.rc1) lib/rack/runtime.rb:22:in `call'
activesupport (5.0.0.rc1) lib/active_support/cache/strategy/local_cache_middleware.rb:28:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/static.rb:136:in `call'
rack (2.0.0.rc1) lib/rack/sendfile.rb:111:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
railties (5.0.0.rc1) lib/rails/engine.rb:522:in `call'
puma (3.4.0) lib/puma/configuration.rb:224:in `call'
puma (3.4.0) lib/puma/server.rb:569:in `handle_request'
puma (3.4.0) lib/puma/server.rb:406:in `process_client'
puma (3.4.0) lib/puma/server.rb:271:in `block in run'
puma (3.4.0) lib/puma/thread_pool.rb:114:in `call'
puma (3.4.0) lib/puma/thread_pool.rb:114:in `block in spawn_thread'
Started PATCH "/api/v1/answers/75" for ::1 at 2016-06-17 16:22:13 -0400
  
AbstractController::ActionNotFound (The action 'update' could not be found for Api::V1::AnswersController):
  
actionpack (5.0.0.rc1) lib/abstract_controller/base.rb:121:in `process'
actionpack (5.0.0.rc1) lib/action_controller/metal.rb:190:in `dispatch'
actionpack (5.0.0.rc1) lib/action_controller/metal.rb:262:in `dispatch'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:50:in `dispatch'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:32:in `serve'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:39:in `block in serve'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:26:in `each'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:26:in `serve'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:725:in `call'
actionview (5.0.0.rc1) lib/action_view/digestor.rb:12:in `call'
rack (2.0.0.rc1) lib/rack/etag.rb:25:in `call'
rack (2.0.0.rc1) lib/rack/conditional_get.rb:38:in `call'
rack (2.0.0.rc1) lib/rack/head.rb:12:in `call'
activerecord (5.0.0.rc1) lib/active_record/migration.rb:552:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/callbacks.rb:38:in `block in call'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:97:in `__run_callbacks__'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:750:in `_run_call_callbacks'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:90:in `run_callbacks'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/callbacks.rb:36:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/remote_ip.rb:79:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/debug_exceptions.rb:49:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/show_exceptions.rb:31:in `call'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:36:in `call_app'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:24:in `block in call'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:70:in `block in tagged'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:26:in `tagged'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:70:in `tagged'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:24:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/request_id.rb:24:in `call'
rack (2.0.0.rc1) lib/rack/runtime.rb:22:in `call'
activesupport (5.0.0.rc1) lib/active_support/cache/strategy/local_cache_middleware.rb:28:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/static.rb:136:in `call'
rack (2.0.0.rc1) lib/rack/sendfile.rb:111:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
railties (5.0.0.rc1) lib/rails/engine.rb:522:in `call'
puma (3.4.0) lib/puma/configuration.rb:224:in `call'
puma (3.4.0) lib/puma/server.rb:569:in `handle_request'
puma (3.4.0) lib/puma/server.rb:406:in `process_client'
puma (3.4.0) lib/puma/server.rb:271:in `block in run'
puma (3.4.0) lib/puma/thread_pool.rb:114:in `call'
puma (3.4.0) lib/puma/thread_pool.rb:114:in `block in spawn_thread'
Started PATCH "/api/v1/answers/75" for ::1 at 2016-06-17 16:22:13 -0400
  
AbstractController::ActionNotFound (The action 'update' could not be found for Api::V1::AnswersController):
  
actionpack (5.0.0.rc1) lib/abstract_controller/base.rb:121:in `process'
actionpack (5.0.0.rc1) lib/action_controller/metal.rb:190:in `dispatch'
actionpack (5.0.0.rc1) lib/action_controller/metal.rb:262:in `dispatch'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:50:in `dispatch'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:32:in `serve'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:39:in `block in serve'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:26:in `each'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:26:in `serve'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:725:in `call'
actionview (5.0.0.rc1) lib/action_view/digestor.rb:12:in `call'
rack (2.0.0.rc1) lib/rack/etag.rb:25:in `call'
rack (2.0.0.rc1) lib/rack/conditional_get.rb:38:in `call'
rack (2.0.0.rc1) lib/rack/head.rb:12:in `call'
activerecord (5.0.0.rc1) lib/active_record/migration.rb:552:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/callbacks.rb:38:in `block in call'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:97:in `__run_callbacks__'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:750:in `_run_call_callbacks'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:90:in `run_callbacks'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/callbacks.rb:36:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/remote_ip.rb:79:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/debug_exceptions.rb:49:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/show_exceptions.rb:31:in `call'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:36:in `call_app'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:24:in `block in call'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:70:in `block in tagged'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:26:in `tagged'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:70:in `tagged'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:24:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/request_id.rb:24:in `call'
rack (2.0.0.rc1) lib/rack/runtime.rb:22:in `call'
activesupport (5.0.0.rc1) lib/active_support/cache/strategy/local_cache_middleware.rb:28:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/static.rb:136:in `call'
rack (2.0.0.rc1) lib/rack/sendfile.rb:111:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
railties (5.0.0.rc1) lib/rails/engine.rb:522:in `call'
puma (3.4.0) lib/puma/configuration.rb:224:in `call'
puma (3.4.0) lib/puma/server.rb:569:in `handle_request'
puma (3.4.0) lib/puma/server.rb:406:in `process_client'
puma (3.4.0) lib/puma/server.rb:271:in `block in run'
puma (3.4.0) lib/puma/thread_pool.rb:114:in `call'
puma (3.4.0) lib/puma/thread_pool.rb:114:in `block in spawn_thread'
Started PATCH "/api/v1/answers/75" for ::1 at 2016-06-17 16:22:13 -0400
  
AbstractController::ActionNotFound (The action 'update' could not be found for Api::V1::AnswersController):
  
actionpack (5.0.0.rc1) lib/abstract_controller/base.rb:121:in `process'
actionpack (5.0.0.rc1) lib/action_controller/metal.rb:190:in `dispatch'
actionpack (5.0.0.rc1) lib/action_controller/metal.rb:262:in `dispatch'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:50:in `dispatch'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:32:in `serve'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:39:in `block in serve'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:26:in `each'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:26:in `serve'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:725:in `call'
actionview (5.0.0.rc1) lib/action_view/digestor.rb:12:in `call'
rack (2.0.0.rc1) lib/rack/etag.rb:25:in `call'
rack (2.0.0.rc1) lib/rack/conditional_get.rb:38:in `call'
rack (2.0.0.rc1) lib/rack/head.rb:12:in `call'
activerecord (5.0.0.rc1) lib/active_record/migration.rb:552:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/callbacks.rb:38:in `block in call'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:97:in `__run_callbacks__'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:750:in `_run_call_callbacks'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:90:in `run_callbacks'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/callbacks.rb:36:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/remote_ip.rb:79:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/debug_exceptions.rb:49:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/show_exceptions.rb:31:in `call'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:36:in `call_app'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:24:in `block in call'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:70:in `block in tagged'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:26:in `tagged'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:70:in `tagged'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:24:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/request_id.rb:24:in `call'
rack (2.0.0.rc1) lib/rack/runtime.rb:22:in `call'
activesupport (5.0.0.rc1) lib/active_support/cache/strategy/local_cache_middleware.rb:28:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/static.rb:136:in `call'
rack (2.0.0.rc1) lib/rack/sendfile.rb:111:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
railties (5.0.0.rc1) lib/rails/engine.rb:522:in `call'
puma (3.4.0) lib/puma/configuration.rb:224:in `call'
puma (3.4.0) lib/puma/server.rb:569:in `handle_request'
puma (3.4.0) lib/puma/server.rb:406:in `process_client'
puma (3.4.0) lib/puma/server.rb:271:in `block in run'
puma (3.4.0) lib/puma/thread_pool.rb:114:in `call'
puma (3.4.0) lib/puma/thread_pool.rb:114:in `block in spawn_thread'
Started PATCH "/api/v1/answers/75" for ::1 at 2016-06-17 16:22:13 -0400
  
AbstractController::ActionNotFound (The action 'update' could not be found for Api::V1::AnswersController):
  
actionpack (5.0.0.rc1) lib/abstract_controller/base.rb:121:in `process'
actionpack (5.0.0.rc1) lib/action_controller/metal.rb:190:in `dispatch'
actionpack (5.0.0.rc1) lib/action_controller/metal.rb:262:in `dispatch'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:50:in `dispatch'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:32:in `serve'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:39:in `block in serve'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:26:in `each'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:26:in `serve'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:725:in `call'
actionview (5.0.0.rc1) lib/action_view/digestor.rb:12:in `call'
rack (2.0.0.rc1) lib/rack/etag.rb:25:in `call'
rack (2.0.0.rc1) lib/rack/conditional_get.rb:38:in `call'
rack (2.0.0.rc1) lib/rack/head.rb:12:in `call'
activerecord (5.0.0.rc1) lib/active_record/migration.rb:552:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/callbacks.rb:38:in `block in call'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:97:in `__run_callbacks__'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:750:in `_run_call_callbacks'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:90:in `run_callbacks'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/callbacks.rb:36:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/remote_ip.rb:79:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/debug_exceptions.rb:49:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/show_exceptions.rb:31:in `call'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:36:in `call_app'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:24:in `block in call'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:70:in `block in tagged'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:26:in `tagged'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:70:in `tagged'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:24:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/request_id.rb:24:in `call'
rack (2.0.0.rc1) lib/rack/runtime.rb:22:in `call'
activesupport (5.0.0.rc1) lib/active_support/cache/strategy/local_cache_middleware.rb:28:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/static.rb:136:in `call'
rack (2.0.0.rc1) lib/rack/sendfile.rb:111:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
railties (5.0.0.rc1) lib/rails/engine.rb:522:in `call'
puma (3.4.0) lib/puma/configuration.rb:224:in `call'
puma (3.4.0) lib/puma/server.rb:569:in `handle_request'
puma (3.4.0) lib/puma/server.rb:406:in `process_client'
puma (3.4.0) lib/puma/server.rb:271:in `block in run'
puma (3.4.0) lib/puma/thread_pool.rb:114:in `call'
puma (3.4.0) lib/puma/thread_pool.rb:114:in `block in spawn_thread'
Started PATCH "/api/v1/answers/75" for ::1 at 2016-06-17 16:22:13 -0400
  
AbstractController::ActionNotFound (The action 'update' could not be found for Api::V1::AnswersController):
  
actionpack (5.0.0.rc1) lib/abstract_controller/base.rb:121:in `process'
actionpack (5.0.0.rc1) lib/action_controller/metal.rb:190:in `dispatch'
actionpack (5.0.0.rc1) lib/action_controller/metal.rb:262:in `dispatch'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:50:in `dispatch'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:32:in `serve'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:39:in `block in serve'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:26:in `each'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:26:in `serve'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:725:in `call'
actionview (5.0.0.rc1) lib/action_view/digestor.rb:12:in `call'
rack (2.0.0.rc1) lib/rack/etag.rb:25:in `call'
rack (2.0.0.rc1) lib/rack/conditional_get.rb:38:in `call'
rack (2.0.0.rc1) lib/rack/head.rb:12:in `call'
activerecord (5.0.0.rc1) lib/active_record/migration.rb:552:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/callbacks.rb:38:in `block in call'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:97:in `__run_callbacks__'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:750:in `_run_call_callbacks'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:90:in `run_callbacks'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/callbacks.rb:36:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/remote_ip.rb:79:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/debug_exceptions.rb:49:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/show_exceptions.rb:31:in `call'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:36:in `call_app'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:24:in `block in call'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:70:in `block in tagged'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:26:in `tagged'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:70:in `tagged'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:24:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/request_id.rb:24:in `call'
rack (2.0.0.rc1) lib/rack/runtime.rb:22:in `call'
activesupport (5.0.0.rc1) lib/active_support/cache/strategy/local_cache_middleware.rb:28:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/static.rb:136:in `call'
rack (2.0.0.rc1) lib/rack/sendfile.rb:111:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
railties (5.0.0.rc1) lib/rails/engine.rb:522:in `call'
puma (3.4.0) lib/puma/configuration.rb:224:in `call'
puma (3.4.0) lib/puma/server.rb:569:in `handle_request'
puma (3.4.0) lib/puma/server.rb:406:in `process_client'
puma (3.4.0) lib/puma/server.rb:271:in `block in run'
puma (3.4.0) lib/puma/thread_pool.rb:114:in `call'
puma (3.4.0) lib/puma/thread_pool.rb:114:in `block in spawn_thread'
Started PATCH "/api/v1/answers/75" for ::1 at 2016-06-17 16:22:13 -0400
  
AbstractController::ActionNotFound (The action 'update' could not be found for Api::V1::AnswersController):
  
actionpack (5.0.0.rc1) lib/abstract_controller/base.rb:121:in `process'
actionpack (5.0.0.rc1) lib/action_controller/metal.rb:190:in `dispatch'
actionpack (5.0.0.rc1) lib/action_controller/metal.rb:262:in `dispatch'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:50:in `dispatch'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:32:in `serve'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:39:in `block in serve'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:26:in `each'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:26:in `serve'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:725:in `call'
actionview (5.0.0.rc1) lib/action_view/digestor.rb:12:in `call'
rack (2.0.0.rc1) lib/rack/etag.rb:25:in `call'
rack (2.0.0.rc1) lib/rack/conditional_get.rb:38:in `call'
rack (2.0.0.rc1) lib/rack/head.rb:12:in `call'
activerecord (5.0.0.rc1) lib/active_record/migration.rb:552:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/callbacks.rb:38:in `block in call'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:97:in `__run_callbacks__'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:750:in `_run_call_callbacks'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:90:in `run_callbacks'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/callbacks.rb:36:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/remote_ip.rb:79:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/debug_exceptions.rb:49:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/show_exceptions.rb:31:in `call'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:36:in `call_app'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:24:in `block in call'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:70:in `block in tagged'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:26:in `tagged'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:70:in `tagged'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:24:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/request_id.rb:24:in `call'
rack (2.0.0.rc1) lib/rack/runtime.rb:22:in `call'
activesupport (5.0.0.rc1) lib/active_support/cache/strategy/local_cache_middleware.rb:28:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/static.rb:136:in `call'
rack (2.0.0.rc1) lib/rack/sendfile.rb:111:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
railties (5.0.0.rc1) lib/rails/engine.rb:522:in `call'
puma (3.4.0) lib/puma/configuration.rb:224:in `call'
puma (3.4.0) lib/puma/server.rb:569:in `handle_request'
puma (3.4.0) lib/puma/server.rb:406:in `process_client'
puma (3.4.0) lib/puma/server.rb:271:in `block in run'
puma (3.4.0) lib/puma/thread_pool.rb:114:in `call'
puma (3.4.0) lib/puma/thread_pool.rb:114:in `block in spawn_thread'
Started PATCH "/api/v1/answers/75" for ::1 at 2016-06-17 16:22:14 -0400
  
AbstractController::ActionNotFound (The action 'update' could not be found for Api::V1::AnswersController):
  
actionpack (5.0.0.rc1) lib/abstract_controller/base.rb:121:in `process'
actionpack (5.0.0.rc1) lib/action_controller/metal.rb:190:in `dispatch'
actionpack (5.0.0.rc1) lib/action_controller/metal.rb:262:in `dispatch'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:50:in `dispatch'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:32:in `serve'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:39:in `block in serve'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:26:in `each'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:26:in `serve'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:725:in `call'
actionview (5.0.0.rc1) lib/action_view/digestor.rb:12:in `call'
rack (2.0.0.rc1) lib/rack/etag.rb:25:in `call'
rack (2.0.0.rc1) lib/rack/conditional_get.rb:38:in `call'
rack (2.0.0.rc1) lib/rack/head.rb:12:in `call'
activerecord (5.0.0.rc1) lib/active_record/migration.rb:552:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/callbacks.rb:38:in `block in call'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:97:in `__run_callbacks__'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:750:in `_run_call_callbacks'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:90:in `run_callbacks'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/callbacks.rb:36:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/remote_ip.rb:79:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/debug_exceptions.rb:49:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/show_exceptions.rb:31:in `call'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:36:in `call_app'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:24:in `block in call'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:70:in `block in tagged'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:26:in `tagged'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:70:in `tagged'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:24:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/request_id.rb:24:in `call'
rack (2.0.0.rc1) lib/rack/runtime.rb:22:in `call'
activesupport (5.0.0.rc1) lib/active_support/cache/strategy/local_cache_middleware.rb:28:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/static.rb:136:in `call'
rack (2.0.0.rc1) lib/rack/sendfile.rb:111:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
railties (5.0.0.rc1) lib/rails/engine.rb:522:in `call'
puma (3.4.0) lib/puma/configuration.rb:224:in `call'
puma (3.4.0) lib/puma/server.rb:569:in `handle_request'
puma (3.4.0) lib/puma/server.rb:406:in `process_client'
puma (3.4.0) lib/puma/server.rb:271:in `block in run'
puma (3.4.0) lib/puma/thread_pool.rb:114:in `call'
puma (3.4.0) lib/puma/thread_pool.rb:114:in `block in spawn_thread'
Started PATCH "/api/v1/answers/75" for ::1 at 2016-06-17 16:22:14 -0400
  
AbstractController::ActionNotFound (The action 'update' could not be found for Api::V1::AnswersController):
  
actionpack (5.0.0.rc1) lib/abstract_controller/base.rb:121:in `process'
actionpack (5.0.0.rc1) lib/action_controller/metal.rb:190:in `dispatch'
actionpack (5.0.0.rc1) lib/action_controller/metal.rb:262:in `dispatch'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:50:in `dispatch'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:32:in `serve'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:39:in `block in serve'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:26:in `each'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:26:in `serve'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:725:in `call'
actionview (5.0.0.rc1) lib/action_view/digestor.rb:12:in `call'
rack (2.0.0.rc1) lib/rack/etag.rb:25:in `call'
rack (2.0.0.rc1) lib/rack/conditional_get.rb:38:in `call'
rack (2.0.0.rc1) lib/rack/head.rb:12:in `call'
activerecord (5.0.0.rc1) lib/active_record/migration.rb:552:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/callbacks.rb:38:in `block in call'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:97:in `__run_callbacks__'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:750:in `_run_call_callbacks'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:90:in `run_callbacks'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/callbacks.rb:36:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/remote_ip.rb:79:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/debug_exceptions.rb:49:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/show_exceptions.rb:31:in `call'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:36:in `call_app'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:24:in `block in call'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:70:in `block in tagged'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:26:in `tagged'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:70:in `tagged'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:24:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/request_id.rb:24:in `call'
rack (2.0.0.rc1) lib/rack/runtime.rb:22:in `call'
activesupport (5.0.0.rc1) lib/active_support/cache/strategy/local_cache_middleware.rb:28:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/static.rb:136:in `call'
rack (2.0.0.rc1) lib/rack/sendfile.rb:111:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
railties (5.0.0.rc1) lib/rails/engine.rb:522:in `call'
puma (3.4.0) lib/puma/configuration.rb:224:in `call'
puma (3.4.0) lib/puma/server.rb:569:in `handle_request'
puma (3.4.0) lib/puma/server.rb:406:in `process_client'
puma (3.4.0) lib/puma/server.rb:271:in `block in run'
puma (3.4.0) lib/puma/thread_pool.rb:114:in `call'
puma (3.4.0) lib/puma/thread_pool.rb:114:in `block in spawn_thread'
Started PATCH "/api/v1/answers/75" for ::1 at 2016-06-17 16:22:14 -0400
  
AbstractController::ActionNotFound (The action 'update' could not be found for Api::V1::AnswersController):
  
actionpack (5.0.0.rc1) lib/abstract_controller/base.rb:121:in `process'
actionpack (5.0.0.rc1) lib/action_controller/metal.rb:190:in `dispatch'
actionpack (5.0.0.rc1) lib/action_controller/metal.rb:262:in `dispatch'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:50:in `dispatch'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:32:in `serve'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:39:in `block in serve'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:26:in `each'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:26:in `serve'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:725:in `call'
actionview (5.0.0.rc1) lib/action_view/digestor.rb:12:in `call'
rack (2.0.0.rc1) lib/rack/etag.rb:25:in `call'
rack (2.0.0.rc1) lib/rack/conditional_get.rb:38:in `call'
rack (2.0.0.rc1) lib/rack/head.rb:12:in `call'
activerecord (5.0.0.rc1) lib/active_record/migration.rb:552:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/callbacks.rb:38:in `block in call'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:97:in `__run_callbacks__'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:750:in `_run_call_callbacks'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:90:in `run_callbacks'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/callbacks.rb:36:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/remote_ip.rb:79:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/debug_exceptions.rb:49:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/show_exceptions.rb:31:in `call'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:36:in `call_app'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:24:in `block in call'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:70:in `block in tagged'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:26:in `tagged'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:70:in `tagged'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:24:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/request_id.rb:24:in `call'
rack (2.0.0.rc1) lib/rack/runtime.rb:22:in `call'
activesupport (5.0.0.rc1) lib/active_support/cache/strategy/local_cache_middleware.rb:28:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/static.rb:136:in `call'
rack (2.0.0.rc1) lib/rack/sendfile.rb:111:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
railties (5.0.0.rc1) lib/rails/engine.rb:522:in `call'
puma (3.4.0) lib/puma/configuration.rb:224:in `call'
puma (3.4.0) lib/puma/server.rb:569:in `handle_request'
puma (3.4.0) lib/puma/server.rb:406:in `process_client'
puma (3.4.0) lib/puma/server.rb:271:in `block in run'
puma (3.4.0) lib/puma/thread_pool.rb:114:in `call'
puma (3.4.0) lib/puma/thread_pool.rb:114:in `block in spawn_thread'
Started PATCH "/api/v1/answers/75" for ::1 at 2016-06-17 16:22:14 -0400
  
AbstractController::ActionNotFound (The action 'update' could not be found for Api::V1::AnswersController):
  
actionpack (5.0.0.rc1) lib/abstract_controller/base.rb:121:in `process'
actionpack (5.0.0.rc1) lib/action_controller/metal.rb:190:in `dispatch'
actionpack (5.0.0.rc1) lib/action_controller/metal.rb:262:in `dispatch'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:50:in `dispatch'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:32:in `serve'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:39:in `block in serve'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:26:in `each'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:26:in `serve'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:725:in `call'
actionview (5.0.0.rc1) lib/action_view/digestor.rb:12:in `call'
rack (2.0.0.rc1) lib/rack/etag.rb:25:in `call'
rack (2.0.0.rc1) lib/rack/conditional_get.rb:38:in `call'
rack (2.0.0.rc1) lib/rack/head.rb:12:in `call'
activerecord (5.0.0.rc1) lib/active_record/migration.rb:552:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/callbacks.rb:38:in `block in call'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:97:in `__run_callbacks__'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:750:in `_run_call_callbacks'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:90:in `run_callbacks'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/callbacks.rb:36:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/remote_ip.rb:79:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/debug_exceptions.rb:49:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/show_exceptions.rb:31:in `call'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:36:in `call_app'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:24:in `block in call'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:70:in `block in tagged'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:26:in `tagged'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:70:in `tagged'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:24:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/request_id.rb:24:in `call'
rack (2.0.0.rc1) lib/rack/runtime.rb:22:in `call'
activesupport (5.0.0.rc1) lib/active_support/cache/strategy/local_cache_middleware.rb:28:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/static.rb:136:in `call'
rack (2.0.0.rc1) lib/rack/sendfile.rb:111:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
railties (5.0.0.rc1) lib/rails/engine.rb:522:in `call'
puma (3.4.0) lib/puma/configuration.rb:224:in `call'
puma (3.4.0) lib/puma/server.rb:569:in `handle_request'
puma (3.4.0) lib/puma/server.rb:406:in `process_client'
puma (3.4.0) lib/puma/server.rb:271:in `block in run'
puma (3.4.0) lib/puma/thread_pool.rb:114:in `call'
puma (3.4.0) lib/puma/thread_pool.rb:114:in `block in spawn_thread'
Started PATCH "/api/v1/answers/75" for ::1 at 2016-06-17 16:22:14 -0400
  
AbstractController::ActionNotFound (The action 'update' could not be found for Api::V1::AnswersController):
  
actionpack (5.0.0.rc1) lib/abstract_controller/base.rb:121:in `process'
actionpack (5.0.0.rc1) lib/action_controller/metal.rb:190:in `dispatch'
actionpack (5.0.0.rc1) lib/action_controller/metal.rb:262:in `dispatch'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:50:in `dispatch'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:32:in `serve'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:39:in `block in serve'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:26:in `each'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:26:in `serve'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:725:in `call'
actionview (5.0.0.rc1) lib/action_view/digestor.rb:12:in `call'
rack (2.0.0.rc1) lib/rack/etag.rb:25:in `call'
rack (2.0.0.rc1) lib/rack/conditional_get.rb:38:in `call'
rack (2.0.0.rc1) lib/rack/head.rb:12:in `call'
activerecord (5.0.0.rc1) lib/active_record/migration.rb:552:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/callbacks.rb:38:in `block in call'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:97:in `__run_callbacks__'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:750:in `_run_call_callbacks'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:90:in `run_callbacks'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/callbacks.rb:36:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/remote_ip.rb:79:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/debug_exceptions.rb:49:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/show_exceptions.rb:31:in `call'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:36:in `call_app'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:24:in `block in call'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:70:in `block in tagged'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:26:in `tagged'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:70:in `tagged'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:24:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/request_id.rb:24:in `call'
rack (2.0.0.rc1) lib/rack/runtime.rb:22:in `call'
activesupport (5.0.0.rc1) lib/active_support/cache/strategy/local_cache_middleware.rb:28:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/static.rb:136:in `call'
rack (2.0.0.rc1) lib/rack/sendfile.rb:111:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
railties (5.0.0.rc1) lib/rails/engine.rb:522:in `call'
puma (3.4.0) lib/puma/configuration.rb:224:in `call'
puma (3.4.0) lib/puma/server.rb:569:in `handle_request'
puma (3.4.0) lib/puma/server.rb:406:in `process_client'
puma (3.4.0) lib/puma/server.rb:271:in `block in run'
puma (3.4.0) lib/puma/thread_pool.rb:114:in `call'
puma (3.4.0) lib/puma/thread_pool.rb:114:in `block in spawn_thread'
Started PATCH "/api/v1/answers/75" for ::1 at 2016-06-17 16:22:15 -0400
  
AbstractController::ActionNotFound (The action 'update' could not be found for Api::V1::AnswersController):
  
actionpack (5.0.0.rc1) lib/abstract_controller/base.rb:121:in `process'
actionpack (5.0.0.rc1) lib/action_controller/metal.rb:190:in `dispatch'
actionpack (5.0.0.rc1) lib/action_controller/metal.rb:262:in `dispatch'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:50:in `dispatch'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:32:in `serve'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:39:in `block in serve'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:26:in `each'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:26:in `serve'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:725:in `call'
actionview (5.0.0.rc1) lib/action_view/digestor.rb:12:in `call'
rack (2.0.0.rc1) lib/rack/etag.rb:25:in `call'
rack (2.0.0.rc1) lib/rack/conditional_get.rb:38:in `call'
rack (2.0.0.rc1) lib/rack/head.rb:12:in `call'
activerecord (5.0.0.rc1) lib/active_record/migration.rb:552:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/callbacks.rb:38:in `block in call'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:97:in `__run_callbacks__'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:750:in `_run_call_callbacks'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:90:in `run_callbacks'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/callbacks.rb:36:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/remote_ip.rb:79:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/debug_exceptions.rb:49:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/show_exceptions.rb:31:in `call'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:36:in `call_app'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:24:in `block in call'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:70:in `block in tagged'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:26:in `tagged'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:70:in `tagged'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:24:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/request_id.rb:24:in `call'
rack (2.0.0.rc1) lib/rack/runtime.rb:22:in `call'
activesupport (5.0.0.rc1) lib/active_support/cache/strategy/local_cache_middleware.rb:28:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/static.rb:136:in `call'
rack (2.0.0.rc1) lib/rack/sendfile.rb:111:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
railties (5.0.0.rc1) lib/rails/engine.rb:522:in `call'
puma (3.4.0) lib/puma/configuration.rb:224:in `call'
puma (3.4.0) lib/puma/server.rb:569:in `handle_request'
puma (3.4.0) lib/puma/server.rb:406:in `process_client'
puma (3.4.0) lib/puma/server.rb:271:in `block in run'
puma (3.4.0) lib/puma/thread_pool.rb:114:in `call'
puma (3.4.0) lib/puma/thread_pool.rb:114:in `block in spawn_thread'
Started PATCH "/api/v1/answers/75" for ::1 at 2016-06-17 16:22:15 -0400
  
AbstractController::ActionNotFound (The action 'update' could not be found for Api::V1::AnswersController):
  
actionpack (5.0.0.rc1) lib/abstract_controller/base.rb:121:in `process'
actionpack (5.0.0.rc1) lib/action_controller/metal.rb:190:in `dispatch'
actionpack (5.0.0.rc1) lib/action_controller/metal.rb:262:in `dispatch'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:50:in `dispatch'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:32:in `serve'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:39:in `block in serve'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:26:in `each'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:26:in `serve'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:725:in `call'
actionview (5.0.0.rc1) lib/action_view/digestor.rb:12:in `call'
rack (2.0.0.rc1) lib/rack/etag.rb:25:in `call'
rack (2.0.0.rc1) lib/rack/conditional_get.rb:38:in `call'
rack (2.0.0.rc1) lib/rack/head.rb:12:in `call'
activerecord (5.0.0.rc1) lib/active_record/migration.rb:552:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/callbacks.rb:38:in `block in call'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:97:in `__run_callbacks__'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:750:in `_run_call_callbacks'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:90:in `run_callbacks'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/callbacks.rb:36:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/remote_ip.rb:79:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/debug_exceptions.rb:49:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/show_exceptions.rb:31:in `call'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:36:in `call_app'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:24:in `block in call'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:70:in `block in tagged'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:26:in `tagged'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:70:in `tagged'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:24:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/request_id.rb:24:in `call'
rack (2.0.0.rc1) lib/rack/runtime.rb:22:in `call'
activesupport (5.0.0.rc1) lib/active_support/cache/strategy/local_cache_middleware.rb:28:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/static.rb:136:in `call'
rack (2.0.0.rc1) lib/rack/sendfile.rb:111:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
railties (5.0.0.rc1) lib/rails/engine.rb:522:in `call'
puma (3.4.0) lib/puma/configuration.rb:224:in `call'
puma (3.4.0) lib/puma/server.rb:569:in `handle_request'
puma (3.4.0) lib/puma/server.rb:406:in `process_client'
puma (3.4.0) lib/puma/server.rb:271:in `block in run'
puma (3.4.0) lib/puma/thread_pool.rb:114:in `call'
puma (3.4.0) lib/puma/thread_pool.rb:114:in `block in spawn_thread'
Started PATCH "/api/v1/answers/75" for ::1 at 2016-06-17 16:22:15 -0400
  
AbstractController::ActionNotFound (The action 'update' could not be found for Api::V1::AnswersController):
  
actionpack (5.0.0.rc1) lib/abstract_controller/base.rb:121:in `process'
actionpack (5.0.0.rc1) lib/action_controller/metal.rb:190:in `dispatch'
actionpack (5.0.0.rc1) lib/action_controller/metal.rb:262:in `dispatch'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:50:in `dispatch'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:32:in `serve'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:39:in `block in serve'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:26:in `each'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:26:in `serve'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:725:in `call'
actionview (5.0.0.rc1) lib/action_view/digestor.rb:12:in `call'
rack (2.0.0.rc1) lib/rack/etag.rb:25:in `call'
rack (2.0.0.rc1) lib/rack/conditional_get.rb:38:in `call'
rack (2.0.0.rc1) lib/rack/head.rb:12:in `call'
activerecord (5.0.0.rc1) lib/active_record/migration.rb:552:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/callbacks.rb:38:in `block in call'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:97:in `__run_callbacks__'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:750:in `_run_call_callbacks'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:90:in `run_callbacks'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/callbacks.rb:36:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/remote_ip.rb:79:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/debug_exceptions.rb:49:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/show_exceptions.rb:31:in `call'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:36:in `call_app'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:24:in `block in call'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:70:in `block in tagged'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:26:in `tagged'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:70:in `tagged'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:24:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/request_id.rb:24:in `call'
rack (2.0.0.rc1) lib/rack/runtime.rb:22:in `call'
activesupport (5.0.0.rc1) lib/active_support/cache/strategy/local_cache_middleware.rb:28:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/static.rb:136:in `call'
rack (2.0.0.rc1) lib/rack/sendfile.rb:111:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
railties (5.0.0.rc1) lib/rails/engine.rb:522:in `call'
puma (3.4.0) lib/puma/configuration.rb:224:in `call'
puma (3.4.0) lib/puma/server.rb:569:in `handle_request'
puma (3.4.0) lib/puma/server.rb:406:in `process_client'
puma (3.4.0) lib/puma/server.rb:271:in `block in run'
puma (3.4.0) lib/puma/thread_pool.rb:114:in `call'
puma (3.4.0) lib/puma/thread_pool.rb:114:in `block in spawn_thread'
Started PATCH "/api/v1/answers/75" for ::1 at 2016-06-17 16:22:15 -0400
  
AbstractController::ActionNotFound (The action 'update' could not be found for Api::V1::AnswersController):
  
actionpack (5.0.0.rc1) lib/abstract_controller/base.rb:121:in `process'
actionpack (5.0.0.rc1) lib/action_controller/metal.rb:190:in `dispatch'
actionpack (5.0.0.rc1) lib/action_controller/metal.rb:262:in `dispatch'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:50:in `dispatch'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:32:in `serve'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:39:in `block in serve'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:26:in `each'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:26:in `serve'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:725:in `call'
actionview (5.0.0.rc1) lib/action_view/digestor.rb:12:in `call'
rack (2.0.0.rc1) lib/rack/etag.rb:25:in `call'
rack (2.0.0.rc1) lib/rack/conditional_get.rb:38:in `call'
rack (2.0.0.rc1) lib/rack/head.rb:12:in `call'
activerecord (5.0.0.rc1) lib/active_record/migration.rb:552:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/callbacks.rb:38:in `block in call'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:97:in `__run_callbacks__'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:750:in `_run_call_callbacks'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:90:in `run_callbacks'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/callbacks.rb:36:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/remote_ip.rb:79:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/debug_exceptions.rb:49:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/show_exceptions.rb:31:in `call'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:36:in `call_app'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:24:in `block in call'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:70:in `block in tagged'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:26:in `tagged'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:70:in `tagged'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:24:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/request_id.rb:24:in `call'
rack (2.0.0.rc1) lib/rack/runtime.rb:22:in `call'
activesupport (5.0.0.rc1) lib/active_support/cache/strategy/local_cache_middleware.rb:28:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/static.rb:136:in `call'
rack (2.0.0.rc1) lib/rack/sendfile.rb:111:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
railties (5.0.0.rc1) lib/rails/engine.rb:522:in `call'
puma (3.4.0) lib/puma/configuration.rb:224:in `call'
puma (3.4.0) lib/puma/server.rb:569:in `handle_request'
puma (3.4.0) lib/puma/server.rb:406:in `process_client'
puma (3.4.0) lib/puma/server.rb:271:in `block in run'
puma (3.4.0) lib/puma/thread_pool.rb:114:in `call'
puma (3.4.0) lib/puma/thread_pool.rb:114:in `block in spawn_thread'
Started PATCH "/api/v1/answers/75" for ::1 at 2016-06-17 16:22:16 -0400
  
AbstractController::ActionNotFound (The action 'update' could not be found for Api::V1::AnswersController):
  
actionpack (5.0.0.rc1) lib/abstract_controller/base.rb:121:in `process'
actionpack (5.0.0.rc1) lib/action_controller/metal.rb:190:in `dispatch'
actionpack (5.0.0.rc1) lib/action_controller/metal.rb:262:in `dispatch'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:50:in `dispatch'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:32:in `serve'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:39:in `block in serve'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:26:in `each'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:26:in `serve'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:725:in `call'
actionview (5.0.0.rc1) lib/action_view/digestor.rb:12:in `call'
rack (2.0.0.rc1) lib/rack/etag.rb:25:in `call'
rack (2.0.0.rc1) lib/rack/conditional_get.rb:38:in `call'
rack (2.0.0.rc1) lib/rack/head.rb:12:in `call'
activerecord (5.0.0.rc1) lib/active_record/migration.rb:552:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/callbacks.rb:38:in `block in call'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:97:in `__run_callbacks__'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:750:in `_run_call_callbacks'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:90:in `run_callbacks'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/callbacks.rb:36:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/remote_ip.rb:79:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/debug_exceptions.rb:49:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/show_exceptions.rb:31:in `call'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:36:in `call_app'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:24:in `block in call'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:70:in `block in tagged'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:26:in `tagged'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:70:in `tagged'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:24:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/request_id.rb:24:in `call'
rack (2.0.0.rc1) lib/rack/runtime.rb:22:in `call'
activesupport (5.0.0.rc1) lib/active_support/cache/strategy/local_cache_middleware.rb:28:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/static.rb:136:in `call'
rack (2.0.0.rc1) lib/rack/sendfile.rb:111:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
railties (5.0.0.rc1) lib/rails/engine.rb:522:in `call'
puma (3.4.0) lib/puma/configuration.rb:224:in `call'
puma (3.4.0) lib/puma/server.rb:569:in `handle_request'
puma (3.4.0) lib/puma/server.rb:406:in `process_client'
puma (3.4.0) lib/puma/server.rb:271:in `block in run'
puma (3.4.0) lib/puma/thread_pool.rb:114:in `call'
puma (3.4.0) lib/puma/thread_pool.rb:114:in `block in spawn_thread'
Started PATCH "/api/v1/answers/75" for ::1 at 2016-06-17 16:22:16 -0400
Started PATCH "/api/v1/answers/75" for ::1 at 2016-06-17 16:22:16 -0400
  
  
AbstractController::ActionNotFound (The action 'update' could not be found for Api::V1::AnswersController):
AbstractController::ActionNotFound (The action 'update' could not be found for Api::V1::AnswersController):
  
  
actionpack (5.0.0.rc1) lib/abstract_controller/base.rb:121:in `process'
actionpack (5.0.0.rc1) lib/abstract_controller/base.rb:121:in `process'
actionpack (5.0.0.rc1) lib/action_controller/metal.rb:190:in `dispatch'
actionpack (5.0.0.rc1) lib/action_controller/metal.rb:190:in `dispatch'
actionpack (5.0.0.rc1) lib/action_controller/metal.rb:262:in `dispatch'
actionpack (5.0.0.rc1) lib/action_controller/metal.rb:262:in `dispatch'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:50:in `dispatch'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:50:in `dispatch'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:32:in `serve'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:32:in `serve'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:39:in `block in serve'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:39:in `block in serve'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:26:in `each'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:26:in `each'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:26:in `serve'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:26:in `serve'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:725:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:725:in `call'
actionview (5.0.0.rc1) lib/action_view/digestor.rb:12:in `call'
actionview (5.0.0.rc1) lib/action_view/digestor.rb:12:in `call'
rack (2.0.0.rc1) lib/rack/etag.rb:25:in `call'
rack (2.0.0.rc1) lib/rack/etag.rb:25:in `call'
rack (2.0.0.rc1) lib/rack/conditional_get.rb:38:in `call'
rack (2.0.0.rc1) lib/rack/conditional_get.rb:38:in `call'
rack (2.0.0.rc1) lib/rack/head.rb:12:in `call'
rack (2.0.0.rc1) lib/rack/head.rb:12:in `call'
activerecord (5.0.0.rc1) lib/active_record/migration.rb:552:in `call'
activerecord (5.0.0.rc1) lib/active_record/migration.rb:552:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/callbacks.rb:38:in `block in call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/callbacks.rb:38:in `block in call'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:97:in `__run_callbacks__'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:97:in `__run_callbacks__'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:750:in `_run_call_callbacks'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:750:in `_run_call_callbacks'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:90:in `run_callbacks'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:90:in `run_callbacks'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/callbacks.rb:36:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/callbacks.rb:36:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/remote_ip.rb:79:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/debug_exceptions.rb:49:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/remote_ip.rb:79:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/show_exceptions.rb:31:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/debug_exceptions.rb:49:in `call'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:36:in `call_app'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/show_exceptions.rb:31:in `call'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:24:in `block in call'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:36:in `call_app'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:70:in `block in tagged'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:24:in `block in call'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:26:in `tagged'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:70:in `block in tagged'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:70:in `tagged'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:26:in `tagged'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:24:in `call'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:70:in `tagged'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/request_id.rb:24:in `call'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:24:in `call'
rack (2.0.0.rc1) lib/rack/runtime.rb:22:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/request_id.rb:24:in `call'
activesupport (5.0.0.rc1) lib/active_support/cache/strategy/local_cache_middleware.rb:28:in `call'
rack (2.0.0.rc1) lib/rack/runtime.rb:22:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/executor.rb:12:in `call'
activesupport (5.0.0.rc1) lib/active_support/cache/strategy/local_cache_middleware.rb:28:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/static.rb:136:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/executor.rb:12:in `call'
rack (2.0.0.rc1) lib/rack/sendfile.rb:111:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/static.rb:136:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
rack (2.0.0.rc1) lib/rack/sendfile.rb:111:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
railties (5.0.0.rc1) lib/rails/engine.rb:522:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
puma (3.4.0) lib/puma/configuration.rb:224:in `call'
railties (5.0.0.rc1) lib/rails/engine.rb:522:in `call'
puma (3.4.0) lib/puma/server.rb:569:in `handle_request'
puma (3.4.0) lib/puma/configuration.rb:224:in `call'
puma (3.4.0) lib/puma/server.rb:406:in `process_client'
puma (3.4.0) lib/puma/server.rb:569:in `handle_request'
puma (3.4.0) lib/puma/server.rb:271:in `block in run'
puma (3.4.0) lib/puma/server.rb:406:in `process_client'
puma (3.4.0) lib/puma/thread_pool.rb:114:in `call'
puma (3.4.0) lib/puma/server.rb:271:in `block in run'
puma (3.4.0) lib/puma/thread_pool.rb:114:in `block in spawn_thread'
puma (3.4.0) lib/puma/thread_pool.rb:114:in `call'
puma (3.4.0) lib/puma/thread_pool.rb:114:in `block in spawn_thread'
Started PATCH "/api/v1/answers/75" for ::1 at 2016-06-17 16:22:16 -0400
  
AbstractController::ActionNotFound (The action 'update' could not be found for Api::V1::AnswersController):
  
actionpack (5.0.0.rc1) lib/abstract_controller/base.rb:121:in `process'
actionpack (5.0.0.rc1) lib/action_controller/metal.rb:190:in `dispatch'
actionpack (5.0.0.rc1) lib/action_controller/metal.rb:262:in `dispatch'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:50:in `dispatch'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:32:in `serve'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:39:in `block in serve'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:26:in `each'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:26:in `serve'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:725:in `call'
actionview (5.0.0.rc1) lib/action_view/digestor.rb:12:in `call'
rack (2.0.0.rc1) lib/rack/etag.rb:25:in `call'
rack (2.0.0.rc1) lib/rack/conditional_get.rb:38:in `call'
rack (2.0.0.rc1) lib/rack/head.rb:12:in `call'
activerecord (5.0.0.rc1) lib/active_record/migration.rb:552:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/callbacks.rb:38:in `block in call'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:97:in `__run_callbacks__'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:750:in `_run_call_callbacks'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:90:in `run_callbacks'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/callbacks.rb:36:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/remote_ip.rb:79:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/debug_exceptions.rb:49:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/show_exceptions.rb:31:in `call'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:36:in `call_app'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:24:in `block in call'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:70:in `block in tagged'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:26:in `tagged'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:70:in `tagged'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:24:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/request_id.rb:24:in `call'
rack (2.0.0.rc1) lib/rack/runtime.rb:22:in `call'
activesupport (5.0.0.rc1) lib/active_support/cache/strategy/local_cache_middleware.rb:28:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/static.rb:136:in `call'
rack (2.0.0.rc1) lib/rack/sendfile.rb:111:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
railties (5.0.0.rc1) lib/rails/engine.rb:522:in `call'
puma (3.4.0) lib/puma/configuration.rb:224:in `call'
puma (3.4.0) lib/puma/server.rb:569:in `handle_request'
puma (3.4.0) lib/puma/server.rb:406:in `process_client'
puma (3.4.0) lib/puma/server.rb:271:in `block in run'
puma (3.4.0) lib/puma/thread_pool.rb:114:in `call'
puma (3.4.0) lib/puma/thread_pool.rb:114:in `block in spawn_thread'
Started PATCH "/api/v1/answers/75" for ::1 at 2016-06-17 16:22:16 -0400
  
AbstractController::ActionNotFound (The action 'update' could not be found for Api::V1::AnswersController):
  
actionpack (5.0.0.rc1) lib/abstract_controller/base.rb:121:in `process'
actionpack (5.0.0.rc1) lib/action_controller/metal.rb:190:in `dispatch'
actionpack (5.0.0.rc1) lib/action_controller/metal.rb:262:in `dispatch'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:50:in `dispatch'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:32:in `serve'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:39:in `block in serve'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:26:in `each'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:26:in `serve'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:725:in `call'
actionview (5.0.0.rc1) lib/action_view/digestor.rb:12:in `call'
rack (2.0.0.rc1) lib/rack/etag.rb:25:in `call'
rack (2.0.0.rc1) lib/rack/conditional_get.rb:38:in `call'
rack (2.0.0.rc1) lib/rack/head.rb:12:in `call'
activerecord (5.0.0.rc1) lib/active_record/migration.rb:552:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/callbacks.rb:38:in `block in call'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:97:in `__run_callbacks__'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:750:in `_run_call_callbacks'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:90:in `run_callbacks'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/callbacks.rb:36:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/remote_ip.rb:79:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/debug_exceptions.rb:49:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/show_exceptions.rb:31:in `call'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:36:in `call_app'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:24:in `block in call'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:70:in `block in tagged'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:26:in `tagged'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:70:in `tagged'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:24:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/request_id.rb:24:in `call'
rack (2.0.0.rc1) lib/rack/runtime.rb:22:in `call'
activesupport (5.0.0.rc1) lib/active_support/cache/strategy/local_cache_middleware.rb:28:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/static.rb:136:in `call'
rack (2.0.0.rc1) lib/rack/sendfile.rb:111:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
railties (5.0.0.rc1) lib/rails/engine.rb:522:in `call'
puma (3.4.0) lib/puma/configuration.rb:224:in `call'
puma (3.4.0) lib/puma/server.rb:569:in `handle_request'
puma (3.4.0) lib/puma/server.rb:406:in `process_client'
puma (3.4.0) lib/puma/server.rb:271:in `block in run'
puma (3.4.0) lib/puma/thread_pool.rb:114:in `call'
puma (3.4.0) lib/puma/thread_pool.rb:114:in `block in spawn_thread'
Started PATCH "/api/v1/answers/75" for ::1 at 2016-06-17 16:22:16 -0400
  
AbstractController::ActionNotFound (The action 'update' could not be found for Api::V1::AnswersController):
  
actionpack (5.0.0.rc1) lib/abstract_controller/base.rb:121:in `process'
actionpack (5.0.0.rc1) lib/action_controller/metal.rb:190:in `dispatch'
actionpack (5.0.0.rc1) lib/action_controller/metal.rb:262:in `dispatch'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:50:in `dispatch'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:32:in `serve'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:39:in `block in serve'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:26:in `each'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:26:in `serve'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:725:in `call'
actionview (5.0.0.rc1) lib/action_view/digestor.rb:12:in `call'
rack (2.0.0.rc1) lib/rack/etag.rb:25:in `call'
rack (2.0.0.rc1) lib/rack/conditional_get.rb:38:in `call'
rack (2.0.0.rc1) lib/rack/head.rb:12:in `call'
activerecord (5.0.0.rc1) lib/active_record/migration.rb:552:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/callbacks.rb:38:in `block in call'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:97:in `__run_callbacks__'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:750:in `_run_call_callbacks'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:90:in `run_callbacks'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/callbacks.rb:36:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/remote_ip.rb:79:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/debug_exceptions.rb:49:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/show_exceptions.rb:31:in `call'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:36:in `call_app'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:24:in `block in call'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:70:in `block in tagged'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:26:in `tagged'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:70:in `tagged'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:24:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/request_id.rb:24:in `call'
rack (2.0.0.rc1) lib/rack/runtime.rb:22:in `call'
activesupport (5.0.0.rc1) lib/active_support/cache/strategy/local_cache_middleware.rb:28:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/static.rb:136:in `call'
rack (2.0.0.rc1) lib/rack/sendfile.rb:111:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
railties (5.0.0.rc1) lib/rails/engine.rb:522:in `call'
puma (3.4.0) lib/puma/configuration.rb:224:in `call'
puma (3.4.0) lib/puma/server.rb:569:in `handle_request'
puma (3.4.0) lib/puma/server.rb:406:in `process_client'
puma (3.4.0) lib/puma/server.rb:271:in `block in run'
puma (3.4.0) lib/puma/thread_pool.rb:114:in `call'
puma (3.4.0) lib/puma/thread_pool.rb:114:in `block in spawn_thread'
Started PATCH "/api/v1/answers/75" for ::1 at 2016-06-17 16:22:17 -0400
  
AbstractController::ActionNotFound (The action 'update' could not be found for Api::V1::AnswersController):
  
actionpack (5.0.0.rc1) lib/abstract_controller/base.rb:121:in `process'
actionpack (5.0.0.rc1) lib/action_controller/metal.rb:190:in `dispatch'
actionpack (5.0.0.rc1) lib/action_controller/metal.rb:262:in `dispatch'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:50:in `dispatch'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:32:in `serve'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:39:in `block in serve'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:26:in `each'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:26:in `serve'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:725:in `call'
actionview (5.0.0.rc1) lib/action_view/digestor.rb:12:in `call'
rack (2.0.0.rc1) lib/rack/etag.rb:25:in `call'
rack (2.0.0.rc1) lib/rack/conditional_get.rb:38:in `call'
rack (2.0.0.rc1) lib/rack/head.rb:12:in `call'
activerecord (5.0.0.rc1) lib/active_record/migration.rb:552:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/callbacks.rb:38:in `block in call'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:97:in `__run_callbacks__'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:750:in `_run_call_callbacks'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:90:in `run_callbacks'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/callbacks.rb:36:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/remote_ip.rb:79:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/debug_exceptions.rb:49:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/show_exceptions.rb:31:in `call'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:36:in `call_app'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:24:in `block in call'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:70:in `block in tagged'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:26:in `tagged'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:70:in `tagged'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:24:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/request_id.rb:24:in `call'
rack (2.0.0.rc1) lib/rack/runtime.rb:22:in `call'
activesupport (5.0.0.rc1) lib/active_support/cache/strategy/local_cache_middleware.rb:28:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/static.rb:136:in `call'
rack (2.0.0.rc1) lib/rack/sendfile.rb:111:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
railties (5.0.0.rc1) lib/rails/engine.rb:522:in `call'
puma (3.4.0) lib/puma/configuration.rb:224:in `call'
puma (3.4.0) lib/puma/server.rb:569:in `handle_request'
puma (3.4.0) lib/puma/server.rb:406:in `process_client'
puma (3.4.0) lib/puma/server.rb:271:in `block in run'
puma (3.4.0) lib/puma/thread_pool.rb:114:in `call'
puma (3.4.0) lib/puma/thread_pool.rb:114:in `block in spawn_thread'
Started PATCH "/api/v1/answers/75" for ::1 at 2016-06-17 16:22:17 -0400
  
AbstractController::ActionNotFound (The action 'update' could not be found for Api::V1::AnswersController):
  
actionpack (5.0.0.rc1) lib/abstract_controller/base.rb:121:in `process'
actionpack (5.0.0.rc1) lib/action_controller/metal.rb:190:in `dispatch'
actionpack (5.0.0.rc1) lib/action_controller/metal.rb:262:in `dispatch'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:50:in `dispatch'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:32:in `serve'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:39:in `block in serve'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:26:in `each'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:26:in `serve'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:725:in `call'
actionview (5.0.0.rc1) lib/action_view/digestor.rb:12:in `call'
rack (2.0.0.rc1) lib/rack/etag.rb:25:in `call'
rack (2.0.0.rc1) lib/rack/conditional_get.rb:38:in `call'
rack (2.0.0.rc1) lib/rack/head.rb:12:in `call'
activerecord (5.0.0.rc1) lib/active_record/migration.rb:552:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/callbacks.rb:38:in `block in call'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:97:in `__run_callbacks__'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:750:in `_run_call_callbacks'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:90:in `run_callbacks'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/callbacks.rb:36:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/remote_ip.rb:79:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/debug_exceptions.rb:49:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/show_exceptions.rb:31:in `call'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:36:in `call_app'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:24:in `block in call'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:70:in `block in tagged'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:26:in `tagged'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:70:in `tagged'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:24:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/request_id.rb:24:in `call'
rack (2.0.0.rc1) lib/rack/runtime.rb:22:in `call'
activesupport (5.0.0.rc1) lib/active_support/cache/strategy/local_cache_middleware.rb:28:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/static.rb:136:in `call'
rack (2.0.0.rc1) lib/rack/sendfile.rb:111:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
railties (5.0.0.rc1) lib/rails/engine.rb:522:in `call'
puma (3.4.0) lib/puma/configuration.rb:224:in `call'
puma (3.4.0) lib/puma/server.rb:569:in `handle_request'
puma (3.4.0) lib/puma/server.rb:406:in `process_client'
puma (3.4.0) lib/puma/server.rb:271:in `block in run'
puma (3.4.0) lib/puma/thread_pool.rb:114:in `call'
puma (3.4.0) lib/puma/thread_pool.rb:114:in `block in spawn_thread'
Started PATCH "/api/v1/answers/75" for ::1 at 2016-06-17 16:22:17 -0400
  
AbstractController::ActionNotFound (The action 'update' could not be found for Api::V1::AnswersController):
  
actionpack (5.0.0.rc1) lib/abstract_controller/base.rb:121:in `process'
actionpack (5.0.0.rc1) lib/action_controller/metal.rb:190:in `dispatch'
actionpack (5.0.0.rc1) lib/action_controller/metal.rb:262:in `dispatch'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:50:in `dispatch'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:32:in `serve'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:39:in `block in serve'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:26:in `each'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:26:in `serve'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:725:in `call'
actionview (5.0.0.rc1) lib/action_view/digestor.rb:12:in `call'
rack (2.0.0.rc1) lib/rack/etag.rb:25:in `call'
rack (2.0.0.rc1) lib/rack/conditional_get.rb:38:in `call'
rack (2.0.0.rc1) lib/rack/head.rb:12:in `call'
activerecord (5.0.0.rc1) lib/active_record/migration.rb:552:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/callbacks.rb:38:in `block in call'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:97:in `__run_callbacks__'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:750:in `_run_call_callbacks'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:90:in `run_callbacks'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/callbacks.rb:36:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/remote_ip.rb:79:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/debug_exceptions.rb:49:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/show_exceptions.rb:31:in `call'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:36:in `call_app'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:24:in `block in call'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:70:in `block in tagged'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:26:in `tagged'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:70:in `tagged'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:24:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/request_id.rb:24:in `call'
rack (2.0.0.rc1) lib/rack/runtime.rb:22:in `call'
activesupport (5.0.0.rc1) lib/active_support/cache/strategy/local_cache_middleware.rb:28:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/static.rb:136:in `call'
rack (2.0.0.rc1) lib/rack/sendfile.rb:111:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
railties (5.0.0.rc1) lib/rails/engine.rb:522:in `call'
puma (3.4.0) lib/puma/configuration.rb:224:in `call'
puma (3.4.0) lib/puma/server.rb:569:in `handle_request'
puma (3.4.0) lib/puma/server.rb:406:in `process_client'
puma (3.4.0) lib/puma/server.rb:271:in `block in run'
puma (3.4.0) lib/puma/thread_pool.rb:114:in `call'
puma (3.4.0) lib/puma/thread_pool.rb:114:in `block in spawn_thread'
Started PATCH "/api/v1/answers/75" for ::1 at 2016-06-17 16:22:17 -0400
  
AbstractController::ActionNotFound (The action 'update' could not be found for Api::V1::AnswersController):
  
actionpack (5.0.0.rc1) lib/abstract_controller/base.rb:121:in `process'
actionpack (5.0.0.rc1) lib/action_controller/metal.rb:190:in `dispatch'
actionpack (5.0.0.rc1) lib/action_controller/metal.rb:262:in `dispatch'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:50:in `dispatch'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:32:in `serve'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:39:in `block in serve'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:26:in `each'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:26:in `serve'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:725:in `call'
actionview (5.0.0.rc1) lib/action_view/digestor.rb:12:in `call'
rack (2.0.0.rc1) lib/rack/etag.rb:25:in `call'
rack (2.0.0.rc1) lib/rack/conditional_get.rb:38:in `call'
rack (2.0.0.rc1) lib/rack/head.rb:12:in `call'
activerecord (5.0.0.rc1) lib/active_record/migration.rb:552:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/callbacks.rb:38:in `block in call'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:97:in `__run_callbacks__'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:750:in `_run_call_callbacks'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:90:in `run_callbacks'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/callbacks.rb:36:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/remote_ip.rb:79:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/debug_exceptions.rb:49:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/show_exceptions.rb:31:in `call'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:36:in `call_app'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:24:in `block in call'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:70:in `block in tagged'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:26:in `tagged'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:70:in `tagged'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:24:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/request_id.rb:24:in `call'
rack (2.0.0.rc1) lib/rack/runtime.rb:22:in `call'
activesupport (5.0.0.rc1) lib/active_support/cache/strategy/local_cache_middleware.rb:28:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/static.rb:136:in `call'
rack (2.0.0.rc1) lib/rack/sendfile.rb:111:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
railties (5.0.0.rc1) lib/rails/engine.rb:522:in `call'
puma (3.4.0) lib/puma/configuration.rb:224:in `call'
puma (3.4.0) lib/puma/server.rb:569:in `handle_request'
puma (3.4.0) lib/puma/server.rb:406:in `process_client'
puma (3.4.0) lib/puma/server.rb:271:in `block in run'
puma (3.4.0) lib/puma/thread_pool.rb:114:in `call'
puma (3.4.0) lib/puma/thread_pool.rb:114:in `block in spawn_thread'
Started PATCH "/api/v1/answers/75" for ::1 at 2016-06-17 16:22:17 -0400
  
AbstractController::ActionNotFound (The action 'update' could not be found for Api::V1::AnswersController):
  
actionpack (5.0.0.rc1) lib/abstract_controller/base.rb:121:in `process'
actionpack (5.0.0.rc1) lib/action_controller/metal.rb:190:in `dispatch'
actionpack (5.0.0.rc1) lib/action_controller/metal.rb:262:in `dispatch'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:50:in `dispatch'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:32:in `serve'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:39:in `block in serve'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:26:in `each'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:26:in `serve'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:725:in `call'
actionview (5.0.0.rc1) lib/action_view/digestor.rb:12:in `call'
rack (2.0.0.rc1) lib/rack/etag.rb:25:in `call'
rack (2.0.0.rc1) lib/rack/conditional_get.rb:38:in `call'
rack (2.0.0.rc1) lib/rack/head.rb:12:in `call'
activerecord (5.0.0.rc1) lib/active_record/migration.rb:552:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/callbacks.rb:38:in `block in call'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:97:in `__run_callbacks__'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:750:in `_run_call_callbacks'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:90:in `run_callbacks'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/callbacks.rb:36:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/remote_ip.rb:79:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/debug_exceptions.rb:49:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/show_exceptions.rb:31:in `call'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:36:in `call_app'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:24:in `block in call'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:70:in `block in tagged'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:26:in `tagged'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:70:in `tagged'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:24:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/request_id.rb:24:in `call'
rack (2.0.0.rc1) lib/rack/runtime.rb:22:in `call'
activesupport (5.0.0.rc1) lib/active_support/cache/strategy/local_cache_middleware.rb:28:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/static.rb:136:in `call'
rack (2.0.0.rc1) lib/rack/sendfile.rb:111:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
railties (5.0.0.rc1) lib/rails/engine.rb:522:in `call'
puma (3.4.0) lib/puma/configuration.rb:224:in `call'
puma (3.4.0) lib/puma/server.rb:569:in `handle_request'
puma (3.4.0) lib/puma/server.rb:406:in `process_client'
puma (3.4.0) lib/puma/server.rb:271:in `block in run'
puma (3.4.0) lib/puma/thread_pool.rb:114:in `call'
puma (3.4.0) lib/puma/thread_pool.rb:114:in `block in spawn_thread'
Started PATCH "/api/v1/answers/75" for ::1 at 2016-06-17 16:22:17 -0400
  
AbstractController::ActionNotFound (The action 'update' could not be found for Api::V1::AnswersController):
  
actionpack (5.0.0.rc1) lib/abstract_controller/base.rb:121:in `process'
actionpack (5.0.0.rc1) lib/action_controller/metal.rb:190:in `dispatch'
actionpack (5.0.0.rc1) lib/action_controller/metal.rb:262:in `dispatch'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:50:in `dispatch'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:32:in `serve'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:39:in `block in serve'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:26:in `each'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:26:in `serve'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:725:in `call'
actionview (5.0.0.rc1) lib/action_view/digestor.rb:12:in `call'
rack (2.0.0.rc1) lib/rack/etag.rb:25:in `call'
rack (2.0.0.rc1) lib/rack/conditional_get.rb:38:in `call'
rack (2.0.0.rc1) lib/rack/head.rb:12:in `call'
activerecord (5.0.0.rc1) lib/active_record/migration.rb:552:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/callbacks.rb:38:in `block in call'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:97:in `__run_callbacks__'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:750:in `_run_call_callbacks'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:90:in `run_callbacks'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/callbacks.rb:36:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/remote_ip.rb:79:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/debug_exceptions.rb:49:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/show_exceptions.rb:31:in `call'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:36:in `call_app'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:24:in `block in call'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:70:in `block in tagged'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:26:in `tagged'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:70:in `tagged'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:24:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/request_id.rb:24:in `call'
rack (2.0.0.rc1) lib/rack/runtime.rb:22:in `call'
activesupport (5.0.0.rc1) lib/active_support/cache/strategy/local_cache_middleware.rb:28:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/static.rb:136:in `call'
rack (2.0.0.rc1) lib/rack/sendfile.rb:111:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
railties (5.0.0.rc1) lib/rails/engine.rb:522:in `call'
puma (3.4.0) lib/puma/configuration.rb:224:in `call'
puma (3.4.0) lib/puma/server.rb:569:in `handle_request'
puma (3.4.0) lib/puma/server.rb:406:in `process_client'
puma (3.4.0) lib/puma/server.rb:271:in `block in run'
puma (3.4.0) lib/puma/thread_pool.rb:114:in `call'
puma (3.4.0) lib/puma/thread_pool.rb:114:in `block in spawn_thread'
Started PATCH "/api/v1/answers/75" for ::1 at 2016-06-17 16:22:18 -0400
  
AbstractController::ActionNotFound (The action 'update' could not be found for Api::V1::AnswersController):
  
actionpack (5.0.0.rc1) lib/abstract_controller/base.rb:121:in `process'
actionpack (5.0.0.rc1) lib/action_controller/metal.rb:190:in `dispatch'
actionpack (5.0.0.rc1) lib/action_controller/metal.rb:262:in `dispatch'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:50:in `dispatch'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:32:in `serve'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:39:in `block in serve'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:26:in `each'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:26:in `serve'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:725:in `call'
actionview (5.0.0.rc1) lib/action_view/digestor.rb:12:in `call'
rack (2.0.0.rc1) lib/rack/etag.rb:25:in `call'
rack (2.0.0.rc1) lib/rack/conditional_get.rb:38:in `call'
rack (2.0.0.rc1) lib/rack/head.rb:12:in `call'
activerecord (5.0.0.rc1) lib/active_record/migration.rb:552:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/callbacks.rb:38:in `block in call'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:97:in `__run_callbacks__'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:750:in `_run_call_callbacks'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:90:in `run_callbacks'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/callbacks.rb:36:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/remote_ip.rb:79:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/debug_exceptions.rb:49:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/show_exceptions.rb:31:in `call'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:36:in `call_app'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:24:in `block in call'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:70:in `block in tagged'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:26:in `tagged'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:70:in `tagged'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:24:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/request_id.rb:24:in `call'
rack (2.0.0.rc1) lib/rack/runtime.rb:22:in `call'
activesupport (5.0.0.rc1) lib/active_support/cache/strategy/local_cache_middleware.rb:28:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/static.rb:136:in `call'
rack (2.0.0.rc1) lib/rack/sendfile.rb:111:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
railties (5.0.0.rc1) lib/rails/engine.rb:522:in `call'
puma (3.4.0) lib/puma/configuration.rb:224:in `call'
puma (3.4.0) lib/puma/server.rb:569:in `handle_request'
puma (3.4.0) lib/puma/server.rb:406:in `process_client'
puma (3.4.0) lib/puma/server.rb:271:in `block in run'
puma (3.4.0) lib/puma/thread_pool.rb:114:in `call'
puma (3.4.0) lib/puma/thread_pool.rb:114:in `block in spawn_thread'
Started PATCH "/api/v1/answers/75" for ::1 at 2016-06-17 16:22:18 -0400
  
AbstractController::ActionNotFound (The action 'update' could not be found for Api::V1::AnswersController):
  
actionpack (5.0.0.rc1) lib/abstract_controller/base.rb:121:in `process'
actionpack (5.0.0.rc1) lib/action_controller/metal.rb:190:in `dispatch'
actionpack (5.0.0.rc1) lib/action_controller/metal.rb:262:in `dispatch'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:50:in `dispatch'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:32:in `serve'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:39:in `block in serve'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:26:in `each'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:26:in `serve'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:725:in `call'
actionview (5.0.0.rc1) lib/action_view/digestor.rb:12:in `call'
rack (2.0.0.rc1) lib/rack/etag.rb:25:in `call'
rack (2.0.0.rc1) lib/rack/conditional_get.rb:38:in `call'
rack (2.0.0.rc1) lib/rack/head.rb:12:in `call'
activerecord (5.0.0.rc1) lib/active_record/migration.rb:552:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/callbacks.rb:38:in `block in call'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:97:in `__run_callbacks__'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:750:in `_run_call_callbacks'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:90:in `run_callbacks'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/callbacks.rb:36:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/remote_ip.rb:79:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/debug_exceptions.rb:49:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/show_exceptions.rb:31:in `call'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:36:in `call_app'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:24:in `block in call'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:70:in `block in tagged'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:26:in `tagged'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:70:in `tagged'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:24:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/request_id.rb:24:in `call'
rack (2.0.0.rc1) lib/rack/runtime.rb:22:in `call'
activesupport (5.0.0.rc1) lib/active_support/cache/strategy/local_cache_middleware.rb:28:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/static.rb:136:in `call'
rack (2.0.0.rc1) lib/rack/sendfile.rb:111:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
railties (5.0.0.rc1) lib/rails/engine.rb:522:in `call'
puma (3.4.0) lib/puma/configuration.rb:224:in `call'
puma (3.4.0) lib/puma/server.rb:569:in `handle_request'
puma (3.4.0) lib/puma/server.rb:406:in `process_client'
puma (3.4.0) lib/puma/server.rb:271:in `block in run'
puma (3.4.0) lib/puma/thread_pool.rb:114:in `call'
puma (3.4.0) lib/puma/thread_pool.rb:114:in `block in spawn_thread'
Started PATCH "/api/v1/answers/75" for ::1 at 2016-06-17 16:22:18 -0400
  
AbstractController::ActionNotFound (The action 'update' could not be found for Api::V1::AnswersController):
  
actionpack (5.0.0.rc1) lib/abstract_controller/base.rb:121:in `process'
actionpack (5.0.0.rc1) lib/action_controller/metal.rb:190:in `dispatch'
actionpack (5.0.0.rc1) lib/action_controller/metal.rb:262:in `dispatch'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:50:in `dispatch'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:32:in `serve'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:39:in `block in serve'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:26:in `each'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:26:in `serve'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:725:in `call'
actionview (5.0.0.rc1) lib/action_view/digestor.rb:12:in `call'
rack (2.0.0.rc1) lib/rack/etag.rb:25:in `call'
rack (2.0.0.rc1) lib/rack/conditional_get.rb:38:in `call'
rack (2.0.0.rc1) lib/rack/head.rb:12:in `call'
activerecord (5.0.0.rc1) lib/active_record/migration.rb:552:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/callbacks.rb:38:in `block in call'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:97:in `__run_callbacks__'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:750:in `_run_call_callbacks'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:90:in `run_callbacks'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/callbacks.rb:36:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/remote_ip.rb:79:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/debug_exceptions.rb:49:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/show_exceptions.rb:31:in `call'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:36:in `call_app'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:24:in `block in call'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:70:in `block in tagged'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:26:in `tagged'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:70:in `tagged'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:24:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/request_id.rb:24:in `call'
rack (2.0.0.rc1) lib/rack/runtime.rb:22:in `call'
activesupport (5.0.0.rc1) lib/active_support/cache/strategy/local_cache_middleware.rb:28:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/static.rb:136:in `call'
rack (2.0.0.rc1) lib/rack/sendfile.rb:111:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
railties (5.0.0.rc1) lib/rails/engine.rb:522:in `call'
puma (3.4.0) lib/puma/configuration.rb:224:in `call'
puma (3.4.0) lib/puma/server.rb:569:in `handle_request'
puma (3.4.0) lib/puma/server.rb:406:in `process_client'
puma (3.4.0) lib/puma/server.rb:271:in `block in run'
puma (3.4.0) lib/puma/thread_pool.rb:114:in `call'
puma (3.4.0) lib/puma/thread_pool.rb:114:in `block in spawn_thread'
Started PATCH "/api/v1/answers/75" for ::1 at 2016-06-17 16:22:18 -0400
  
AbstractController::ActionNotFound (The action 'update' could not be found for Api::V1::AnswersController):
  
actionpack (5.0.0.rc1) lib/abstract_controller/base.rb:121:in `process'
actionpack (5.0.0.rc1) lib/action_controller/metal.rb:190:in `dispatch'
actionpack (5.0.0.rc1) lib/action_controller/metal.rb:262:in `dispatch'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:50:in `dispatch'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:32:in `serve'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:39:in `block in serve'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:26:in `each'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:26:in `serve'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:725:in `call'
actionview (5.0.0.rc1) lib/action_view/digestor.rb:12:in `call'
rack (2.0.0.rc1) lib/rack/etag.rb:25:in `call'
rack (2.0.0.rc1) lib/rack/conditional_get.rb:38:in `call'
rack (2.0.0.rc1) lib/rack/head.rb:12:in `call'
activerecord (5.0.0.rc1) lib/active_record/migration.rb:552:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/callbacks.rb:38:in `block in call'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:97:in `__run_callbacks__'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:750:in `_run_call_callbacks'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:90:in `run_callbacks'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/callbacks.rb:36:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/remote_ip.rb:79:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/debug_exceptions.rb:49:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/show_exceptions.rb:31:in `call'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:36:in `call_app'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:24:in `block in call'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:70:in `block in tagged'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:26:in `tagged'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:70:in `tagged'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:24:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/request_id.rb:24:in `call'
rack (2.0.0.rc1) lib/rack/runtime.rb:22:in `call'
activesupport (5.0.0.rc1) lib/active_support/cache/strategy/local_cache_middleware.rb:28:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/static.rb:136:in `call'
rack (2.0.0.rc1) lib/rack/sendfile.rb:111:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
railties (5.0.0.rc1) lib/rails/engine.rb:522:in `call'
puma (3.4.0) lib/puma/configuration.rb:224:in `call'
puma (3.4.0) lib/puma/server.rb:569:in `handle_request'
puma (3.4.0) lib/puma/server.rb:406:in `process_client'
puma (3.4.0) lib/puma/server.rb:271:in `block in run'
puma (3.4.0) lib/puma/thread_pool.rb:114:in `call'
puma (3.4.0) lib/puma/thread_pool.rb:114:in `block in spawn_thread'
Started PATCH "/api/v1/answers/75" for ::1 at 2016-06-17 16:22:18 -0400
  
AbstractController::ActionNotFound (The action 'update' could not be found for Api::V1::AnswersController):
  
actionpack (5.0.0.rc1) lib/abstract_controller/base.rb:121:in `process'
actionpack (5.0.0.rc1) lib/action_controller/metal.rb:190:in `dispatch'
actionpack (5.0.0.rc1) lib/action_controller/metal.rb:262:in `dispatch'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:50:in `dispatch'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:32:in `serve'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:39:in `block in serve'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:26:in `each'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:26:in `serve'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:725:in `call'
actionview (5.0.0.rc1) lib/action_view/digestor.rb:12:in `call'
rack (2.0.0.rc1) lib/rack/etag.rb:25:in `call'
rack (2.0.0.rc1) lib/rack/conditional_get.rb:38:in `call'
rack (2.0.0.rc1) lib/rack/head.rb:12:in `call'
activerecord (5.0.0.rc1) lib/active_record/migration.rb:552:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/callbacks.rb:38:in `block in call'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:97:in `__run_callbacks__'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:750:in `_run_call_callbacks'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:90:in `run_callbacks'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/callbacks.rb:36:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/remote_ip.rb:79:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/debug_exceptions.rb:49:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/show_exceptions.rb:31:in `call'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:36:in `call_app'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:24:in `block in call'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:70:in `block in tagged'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:26:in `tagged'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:70:in `tagged'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:24:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/request_id.rb:24:in `call'
rack (2.0.0.rc1) lib/rack/runtime.rb:22:in `call'
activesupport (5.0.0.rc1) lib/active_support/cache/strategy/local_cache_middleware.rb:28:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/static.rb:136:in `call'
rack (2.0.0.rc1) lib/rack/sendfile.rb:111:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
railties (5.0.0.rc1) lib/rails/engine.rb:522:in `call'
puma (3.4.0) lib/puma/configuration.rb:224:in `call'
puma (3.4.0) lib/puma/server.rb:569:in `handle_request'
puma (3.4.0) lib/puma/server.rb:406:in `process_client'
puma (3.4.0) lib/puma/server.rb:271:in `block in run'
puma (3.4.0) lib/puma/thread_pool.rb:114:in `call'
puma (3.4.0) lib/puma/thread_pool.rb:114:in `block in spawn_thread'
Started PATCH "/api/v1/answers/75" for ::1 at 2016-06-17 16:22:19 -0400
  
AbstractController::ActionNotFound (The action 'update' could not be found for Api::V1::AnswersController):
  
actionpack (5.0.0.rc1) lib/abstract_controller/base.rb:121:in `process'
actionpack (5.0.0.rc1) lib/action_controller/metal.rb:190:in `dispatch'
actionpack (5.0.0.rc1) lib/action_controller/metal.rb:262:in `dispatch'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:50:in `dispatch'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:32:in `serve'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:39:in `block in serve'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:26:in `each'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:26:in `serve'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:725:in `call'
actionview (5.0.0.rc1) lib/action_view/digestor.rb:12:in `call'
rack (2.0.0.rc1) lib/rack/etag.rb:25:in `call'
rack (2.0.0.rc1) lib/rack/conditional_get.rb:38:in `call'
rack (2.0.0.rc1) lib/rack/head.rb:12:in `call'
activerecord (5.0.0.rc1) lib/active_record/migration.rb:552:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/callbacks.rb:38:in `block in call'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:97:in `__run_callbacks__'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:750:in `_run_call_callbacks'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:90:in `run_callbacks'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/callbacks.rb:36:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/remote_ip.rb:79:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/debug_exceptions.rb:49:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/show_exceptions.rb:31:in `call'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:36:in `call_app'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:24:in `block in call'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:70:in `block in tagged'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:26:in `tagged'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:70:in `tagged'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:24:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/request_id.rb:24:in `call'
rack (2.0.0.rc1) lib/rack/runtime.rb:22:in `call'
activesupport (5.0.0.rc1) lib/active_support/cache/strategy/local_cache_middleware.rb:28:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/static.rb:136:in `call'
rack (2.0.0.rc1) lib/rack/sendfile.rb:111:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
railties (5.0.0.rc1) lib/rails/engine.rb:522:in `call'
puma (3.4.0) lib/puma/configuration.rb:224:in `call'
puma (3.4.0) lib/puma/server.rb:569:in `handle_request'
puma (3.4.0) lib/puma/server.rb:406:in `process_client'
puma (3.4.0) lib/puma/server.rb:271:in `block in run'
puma (3.4.0) lib/puma/thread_pool.rb:114:in `call'
puma (3.4.0) lib/puma/thread_pool.rb:114:in `block in spawn_thread'
Started PATCH "/api/v1/answers/75" for ::1 at 2016-06-17 16:22:19 -0400
  
AbstractController::ActionNotFound (The action 'update' could not be found for Api::V1::AnswersController):
  
actionpack (5.0.0.rc1) lib/abstract_controller/base.rb:121:in `process'
actionpack (5.0.0.rc1) lib/action_controller/metal.rb:190:in `dispatch'
actionpack (5.0.0.rc1) lib/action_controller/metal.rb:262:in `dispatch'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:50:in `dispatch'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:32:in `serve'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:39:in `block in serve'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:26:in `each'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:26:in `serve'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:725:in `call'
actionview (5.0.0.rc1) lib/action_view/digestor.rb:12:in `call'
rack (2.0.0.rc1) lib/rack/etag.rb:25:in `call'
rack (2.0.0.rc1) lib/rack/conditional_get.rb:38:in `call'
rack (2.0.0.rc1) lib/rack/head.rb:12:in `call'
activerecord (5.0.0.rc1) lib/active_record/migration.rb:552:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/callbacks.rb:38:in `block in call'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:97:in `__run_callbacks__'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:750:in `_run_call_callbacks'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:90:in `run_callbacks'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/callbacks.rb:36:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/remote_ip.rb:79:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/debug_exceptions.rb:49:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/show_exceptions.rb:31:in `call'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:36:in `call_app'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:24:in `block in call'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:70:in `block in tagged'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:26:in `tagged'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:70:in `tagged'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:24:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/request_id.rb:24:in `call'
rack (2.0.0.rc1) lib/rack/runtime.rb:22:in `call'
activesupport (5.0.0.rc1) lib/active_support/cache/strategy/local_cache_middleware.rb:28:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/static.rb:136:in `call'
rack (2.0.0.rc1) lib/rack/sendfile.rb:111:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
railties (5.0.0.rc1) lib/rails/engine.rb:522:in `call'
puma (3.4.0) lib/puma/configuration.rb:224:in `call'
puma (3.4.0) lib/puma/server.rb:569:in `handle_request'
puma (3.4.0) lib/puma/server.rb:406:in `process_client'
puma (3.4.0) lib/puma/server.rb:271:in `block in run'
puma (3.4.0) lib/puma/thread_pool.rb:114:in `call'
puma (3.4.0) lib/puma/thread_pool.rb:114:in `block in spawn_thread'
Started PATCH "/api/v1/answers/75" for ::1 at 2016-06-17 16:22:19 -0400
  
AbstractController::ActionNotFound (The action 'update' could not be found for Api::V1::AnswersController):
  
actionpack (5.0.0.rc1) lib/abstract_controller/base.rb:121:in `process'
actionpack (5.0.0.rc1) lib/action_controller/metal.rb:190:in `dispatch'
actionpack (5.0.0.rc1) lib/action_controller/metal.rb:262:in `dispatch'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:50:in `dispatch'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:32:in `serve'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:39:in `block in serve'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:26:in `each'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:26:in `serve'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:725:in `call'
actionview (5.0.0.rc1) lib/action_view/digestor.rb:12:in `call'
rack (2.0.0.rc1) lib/rack/etag.rb:25:in `call'
rack (2.0.0.rc1) lib/rack/conditional_get.rb:38:in `call'
rack (2.0.0.rc1) lib/rack/head.rb:12:in `call'
activerecord (5.0.0.rc1) lib/active_record/migration.rb:552:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/callbacks.rb:38:in `block in call'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:97:in `__run_callbacks__'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:750:in `_run_call_callbacks'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:90:in `run_callbacks'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/callbacks.rb:36:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/remote_ip.rb:79:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/debug_exceptions.rb:49:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/show_exceptions.rb:31:in `call'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:36:in `call_app'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:24:in `block in call'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:70:in `block in tagged'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:26:in `tagged'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:70:in `tagged'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:24:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/request_id.rb:24:in `call'
rack (2.0.0.rc1) lib/rack/runtime.rb:22:in `call'
activesupport (5.0.0.rc1) lib/active_support/cache/strategy/local_cache_middleware.rb:28:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/static.rb:136:in `call'
rack (2.0.0.rc1) lib/rack/sendfile.rb:111:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
railties (5.0.0.rc1) lib/rails/engine.rb:522:in `call'
puma (3.4.0) lib/puma/configuration.rb:224:in `call'
puma (3.4.0) lib/puma/server.rb:569:in `handle_request'
puma (3.4.0) lib/puma/server.rb:406:in `process_client'
puma (3.4.0) lib/puma/server.rb:271:in `block in run'
puma (3.4.0) lib/puma/thread_pool.rb:114:in `call'
puma (3.4.0) lib/puma/thread_pool.rb:114:in `block in spawn_thread'
Started PATCH "/api/v1/answers/75" for ::1 at 2016-06-17 16:22:19 -0400
  
AbstractController::ActionNotFound (The action 'update' could not be found for Api::V1::AnswersController):
  
actionpack (5.0.0.rc1) lib/abstract_controller/base.rb:121:in `process'
actionpack (5.0.0.rc1) lib/action_controller/metal.rb:190:in `dispatch'
actionpack (5.0.0.rc1) lib/action_controller/metal.rb:262:in `dispatch'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:50:in `dispatch'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:32:in `serve'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:39:in `block in serve'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:26:in `each'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:26:in `serve'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:725:in `call'
actionview (5.0.0.rc1) lib/action_view/digestor.rb:12:in `call'
rack (2.0.0.rc1) lib/rack/etag.rb:25:in `call'
rack (2.0.0.rc1) lib/rack/conditional_get.rb:38:in `call'
rack (2.0.0.rc1) lib/rack/head.rb:12:in `call'
activerecord (5.0.0.rc1) lib/active_record/migration.rb:552:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/callbacks.rb:38:in `block in call'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:97:in `__run_callbacks__'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:750:in `_run_call_callbacks'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:90:in `run_callbacks'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/callbacks.rb:36:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/remote_ip.rb:79:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/debug_exceptions.rb:49:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/show_exceptions.rb:31:in `call'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:36:in `call_app'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:24:in `block in call'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:70:in `block in tagged'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:26:in `tagged'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:70:in `tagged'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:24:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/request_id.rb:24:in `call'
rack (2.0.0.rc1) lib/rack/runtime.rb:22:in `call'
activesupport (5.0.0.rc1) lib/active_support/cache/strategy/local_cache_middleware.rb:28:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/static.rb:136:in `call'
rack (2.0.0.rc1) lib/rack/sendfile.rb:111:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
railties (5.0.0.rc1) lib/rails/engine.rb:522:in `call'
puma (3.4.0) lib/puma/configuration.rb:224:in `call'
puma (3.4.0) lib/puma/server.rb:569:in `handle_request'
puma (3.4.0) lib/puma/server.rb:406:in `process_client'
puma (3.4.0) lib/puma/server.rb:271:in `block in run'
puma (3.4.0) lib/puma/thread_pool.rb:114:in `call'
puma (3.4.0) lib/puma/thread_pool.rb:114:in `block in spawn_thread'
Started PATCH "/api/v1/answers/75" for ::1 at 2016-06-17 16:22:19 -0400
  
AbstractController::ActionNotFound (The action 'update' could not be found for Api::V1::AnswersController):
  
actionpack (5.0.0.rc1) lib/abstract_controller/base.rb:121:in `process'
actionpack (5.0.0.rc1) lib/action_controller/metal.rb:190:in `dispatch'
actionpack (5.0.0.rc1) lib/action_controller/metal.rb:262:in `dispatch'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:50:in `dispatch'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:32:in `serve'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:39:in `block in serve'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:26:in `each'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:26:in `serve'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:725:in `call'
actionview (5.0.0.rc1) lib/action_view/digestor.rb:12:in `call'
rack (2.0.0.rc1) lib/rack/etag.rb:25:in `call'
rack (2.0.0.rc1) lib/rack/conditional_get.rb:38:in `call'
rack (2.0.0.rc1) lib/rack/head.rb:12:in `call'
activerecord (5.0.0.rc1) lib/active_record/migration.rb:552:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/callbacks.rb:38:in `block in call'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:97:in `__run_callbacks__'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:750:in `_run_call_callbacks'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:90:in `run_callbacks'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/callbacks.rb:36:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/remote_ip.rb:79:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/debug_exceptions.rb:49:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/show_exceptions.rb:31:in `call'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:36:in `call_app'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:24:in `block in call'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:70:in `block in tagged'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:26:in `tagged'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:70:in `tagged'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:24:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/request_id.rb:24:in `call'
rack (2.0.0.rc1) lib/rack/runtime.rb:22:in `call'
activesupport (5.0.0.rc1) lib/active_support/cache/strategy/local_cache_middleware.rb:28:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/static.rb:136:in `call'
rack (2.0.0.rc1) lib/rack/sendfile.rb:111:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
railties (5.0.0.rc1) lib/rails/engine.rb:522:in `call'
puma (3.4.0) lib/puma/configuration.rb:224:in `call'
puma (3.4.0) lib/puma/server.rb:569:in `handle_request'
puma (3.4.0) lib/puma/server.rb:406:in `process_client'
puma (3.4.0) lib/puma/server.rb:271:in `block in run'
puma (3.4.0) lib/puma/thread_pool.rb:114:in `call'
puma (3.4.0) lib/puma/thread_pool.rb:114:in `block in spawn_thread'
Started PATCH "/api/v1/answers/75" for ::1 at 2016-06-17 16:22:20 -0400
  
AbstractController::ActionNotFound (The action 'update' could not be found for Api::V1::AnswersController):
  
actionpack (5.0.0.rc1) lib/abstract_controller/base.rb:121:in `process'
actionpack (5.0.0.rc1) lib/action_controller/metal.rb:190:in `dispatch'
actionpack (5.0.0.rc1) lib/action_controller/metal.rb:262:in `dispatch'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:50:in `dispatch'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:32:in `serve'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:39:in `block in serve'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:26:in `each'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:26:in `serve'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:725:in `call'
actionview (5.0.0.rc1) lib/action_view/digestor.rb:12:in `call'
rack (2.0.0.rc1) lib/rack/etag.rb:25:in `call'
rack (2.0.0.rc1) lib/rack/conditional_get.rb:38:in `call'
rack (2.0.0.rc1) lib/rack/head.rb:12:in `call'
activerecord (5.0.0.rc1) lib/active_record/migration.rb:552:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/callbacks.rb:38:in `block in call'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:97:in `__run_callbacks__'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:750:in `_run_call_callbacks'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:90:in `run_callbacks'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/callbacks.rb:36:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/remote_ip.rb:79:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/debug_exceptions.rb:49:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/show_exceptions.rb:31:in `call'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:36:in `call_app'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:24:in `block in call'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:70:in `block in tagged'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:26:in `tagged'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:70:in `tagged'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:24:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/request_id.rb:24:in `call'
rack (2.0.0.rc1) lib/rack/runtime.rb:22:in `call'
activesupport (5.0.0.rc1) lib/active_support/cache/strategy/local_cache_middleware.rb:28:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/static.rb:136:in `call'
rack (2.0.0.rc1) lib/rack/sendfile.rb:111:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
railties (5.0.0.rc1) lib/rails/engine.rb:522:in `call'
puma (3.4.0) lib/puma/configuration.rb:224:in `call'
puma (3.4.0) lib/puma/server.rb:569:in `handle_request'
puma (3.4.0) lib/puma/server.rb:406:in `process_client'
puma (3.4.0) lib/puma/server.rb:271:in `block in run'
puma (3.4.0) lib/puma/thread_pool.rb:114:in `call'
puma (3.4.0) lib/puma/thread_pool.rb:114:in `block in spawn_thread'
Started PATCH "/api/v1/answers/75" for ::1 at 2016-06-17 16:22:20 -0400
  
AbstractController::ActionNotFound (The action 'update' could not be found for Api::V1::AnswersController):
  
actionpack (5.0.0.rc1) lib/abstract_controller/base.rb:121:in `process'
actionpack (5.0.0.rc1) lib/action_controller/metal.rb:190:in `dispatch'
actionpack (5.0.0.rc1) lib/action_controller/metal.rb:262:in `dispatch'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:50:in `dispatch'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:32:in `serve'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:39:in `block in serve'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:26:in `each'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:26:in `serve'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:725:in `call'
actionview (5.0.0.rc1) lib/action_view/digestor.rb:12:in `call'
rack (2.0.0.rc1) lib/rack/etag.rb:25:in `call'
rack (2.0.0.rc1) lib/rack/conditional_get.rb:38:in `call'
rack (2.0.0.rc1) lib/rack/head.rb:12:in `call'
activerecord (5.0.0.rc1) lib/active_record/migration.rb:552:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/callbacks.rb:38:in `block in call'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:97:in `__run_callbacks__'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:750:in `_run_call_callbacks'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:90:in `run_callbacks'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/callbacks.rb:36:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/remote_ip.rb:79:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/debug_exceptions.rb:49:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/show_exceptions.rb:31:in `call'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:36:in `call_app'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:24:in `block in call'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:70:in `block in tagged'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:26:in `tagged'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:70:in `tagged'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:24:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/request_id.rb:24:in `call'
rack (2.0.0.rc1) lib/rack/runtime.rb:22:in `call'
activesupport (5.0.0.rc1) lib/active_support/cache/strategy/local_cache_middleware.rb:28:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/static.rb:136:in `call'
rack (2.0.0.rc1) lib/rack/sendfile.rb:111:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
railties (5.0.0.rc1) lib/rails/engine.rb:522:in `call'
puma (3.4.0) lib/puma/configuration.rb:224:in `call'
puma (3.4.0) lib/puma/server.rb:569:in `handle_request'
puma (3.4.0) lib/puma/server.rb:406:in `process_client'
puma (3.4.0) lib/puma/server.rb:271:in `block in run'
puma (3.4.0) lib/puma/thread_pool.rb:114:in `call'
puma (3.4.0) lib/puma/thread_pool.rb:114:in `block in spawn_thread'
Started PATCH "/api/v1/answers/75" for ::1 at 2016-06-17 16:22:20 -0400
  
AbstractController::ActionNotFound (The action 'update' could not be found for Api::V1::AnswersController):
  
actionpack (5.0.0.rc1) lib/abstract_controller/base.rb:121:in `process'
actionpack (5.0.0.rc1) lib/action_controller/metal.rb:190:in `dispatch'
actionpack (5.0.0.rc1) lib/action_controller/metal.rb:262:in `dispatch'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:50:in `dispatch'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:32:in `serve'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:39:in `block in serve'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:26:in `each'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:26:in `serve'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:725:in `call'
actionview (5.0.0.rc1) lib/action_view/digestor.rb:12:in `call'
rack (2.0.0.rc1) lib/rack/etag.rb:25:in `call'
rack (2.0.0.rc1) lib/rack/conditional_get.rb:38:in `call'
rack (2.0.0.rc1) lib/rack/head.rb:12:in `call'
activerecord (5.0.0.rc1) lib/active_record/migration.rb:552:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/callbacks.rb:38:in `block in call'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:97:in `__run_callbacks__'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:750:in `_run_call_callbacks'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:90:in `run_callbacks'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/callbacks.rb:36:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/remote_ip.rb:79:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/debug_exceptions.rb:49:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/show_exceptions.rb:31:in `call'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:36:in `call_app'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:24:in `block in call'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:70:in `block in tagged'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:26:in `tagged'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:70:in `tagged'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:24:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/request_id.rb:24:in `call'
rack (2.0.0.rc1) lib/rack/runtime.rb:22:in `call'
activesupport (5.0.0.rc1) lib/active_support/cache/strategy/local_cache_middleware.rb:28:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/static.rb:136:in `call'
rack (2.0.0.rc1) lib/rack/sendfile.rb:111:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
railties (5.0.0.rc1) lib/rails/engine.rb:522:in `call'
puma (3.4.0) lib/puma/configuration.rb:224:in `call'
puma (3.4.0) lib/puma/server.rb:569:in `handle_request'
puma (3.4.0) lib/puma/server.rb:406:in `process_client'
puma (3.4.0) lib/puma/server.rb:271:in `block in run'
puma (3.4.0) lib/puma/thread_pool.rb:114:in `call'
puma (3.4.0) lib/puma/thread_pool.rb:114:in `block in spawn_thread'
Started PATCH "/api/v1/answers/75" for ::1 at 2016-06-17 16:22:20 -0400
  
AbstractController::ActionNotFound (The action 'update' could not be found for Api::V1::AnswersController):
  
actionpack (5.0.0.rc1) lib/abstract_controller/base.rb:121:in `process'
actionpack (5.0.0.rc1) lib/action_controller/metal.rb:190:in `dispatch'
actionpack (5.0.0.rc1) lib/action_controller/metal.rb:262:in `dispatch'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:50:in `dispatch'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:32:in `serve'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:39:in `block in serve'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:26:in `each'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:26:in `serve'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:725:in `call'
actionview (5.0.0.rc1) lib/action_view/digestor.rb:12:in `call'
rack (2.0.0.rc1) lib/rack/etag.rb:25:in `call'
rack (2.0.0.rc1) lib/rack/conditional_get.rb:38:in `call'
rack (2.0.0.rc1) lib/rack/head.rb:12:in `call'
activerecord (5.0.0.rc1) lib/active_record/migration.rb:552:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/callbacks.rb:38:in `block in call'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:97:in `__run_callbacks__'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:750:in `_run_call_callbacks'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:90:in `run_callbacks'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/callbacks.rb:36:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/remote_ip.rb:79:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/debug_exceptions.rb:49:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/show_exceptions.rb:31:in `call'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:36:in `call_app'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:24:in `block in call'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:70:in `block in tagged'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:26:in `tagged'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:70:in `tagged'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:24:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/request_id.rb:24:in `call'
rack (2.0.0.rc1) lib/rack/runtime.rb:22:in `call'
activesupport (5.0.0.rc1) lib/active_support/cache/strategy/local_cache_middleware.rb:28:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/static.rb:136:in `call'
rack (2.0.0.rc1) lib/rack/sendfile.rb:111:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
railties (5.0.0.rc1) lib/rails/engine.rb:522:in `call'
puma (3.4.0) lib/puma/configuration.rb:224:in `call'
puma (3.4.0) lib/puma/server.rb:569:in `handle_request'
puma (3.4.0) lib/puma/server.rb:406:in `process_client'
puma (3.4.0) lib/puma/server.rb:271:in `block in run'
puma (3.4.0) lib/puma/thread_pool.rb:114:in `call'
puma (3.4.0) lib/puma/thread_pool.rb:114:in `block in spawn_thread'
Started PATCH "/api/v1/answers/75" for ::1 at 2016-06-17 16:22:21 -0400
  
AbstractController::ActionNotFound (The action 'update' could not be found for Api::V1::AnswersController):
  
actionpack (5.0.0.rc1) lib/abstract_controller/base.rb:121:in `process'
actionpack (5.0.0.rc1) lib/action_controller/metal.rb:190:in `dispatch'
actionpack (5.0.0.rc1) lib/action_controller/metal.rb:262:in `dispatch'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:50:in `dispatch'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:32:in `serve'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:39:in `block in serve'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:26:in `each'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:26:in `serve'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:725:in `call'
actionview (5.0.0.rc1) lib/action_view/digestor.rb:12:in `call'
rack (2.0.0.rc1) lib/rack/etag.rb:25:in `call'
rack (2.0.0.rc1) lib/rack/conditional_get.rb:38:in `call'
rack (2.0.0.rc1) lib/rack/head.rb:12:in `call'
activerecord (5.0.0.rc1) lib/active_record/migration.rb:552:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/callbacks.rb:38:in `block in call'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:97:in `__run_callbacks__'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:750:in `_run_call_callbacks'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:90:in `run_callbacks'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/callbacks.rb:36:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/remote_ip.rb:79:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/debug_exceptions.rb:49:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/show_exceptions.rb:31:in `call'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:36:in `call_app'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:24:in `block in call'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:70:in `block in tagged'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:26:in `tagged'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:70:in `tagged'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:24:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/request_id.rb:24:in `call'
rack (2.0.0.rc1) lib/rack/runtime.rb:22:in `call'
activesupport (5.0.0.rc1) lib/active_support/cache/strategy/local_cache_middleware.rb:28:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/static.rb:136:in `call'
rack (2.0.0.rc1) lib/rack/sendfile.rb:111:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
railties (5.0.0.rc1) lib/rails/engine.rb:522:in `call'
puma (3.4.0) lib/puma/configuration.rb:224:in `call'
puma (3.4.0) lib/puma/server.rb:569:in `handle_request'
puma (3.4.0) lib/puma/server.rb:406:in `process_client'
puma (3.4.0) lib/puma/server.rb:271:in `block in run'
puma (3.4.0) lib/puma/thread_pool.rb:114:in `call'
puma (3.4.0) lib/puma/thread_pool.rb:114:in `block in spawn_thread'
Started PATCH "/api/v1/answers/75" for ::1 at 2016-06-17 16:22:21 -0400
  
AbstractController::ActionNotFound (The action 'update' could not be found for Api::V1::AnswersController):
  
actionpack (5.0.0.rc1) lib/abstract_controller/base.rb:121:in `process'
actionpack (5.0.0.rc1) lib/action_controller/metal.rb:190:in `dispatch'
actionpack (5.0.0.rc1) lib/action_controller/metal.rb:262:in `dispatch'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:50:in `dispatch'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:32:in `serve'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:39:in `block in serve'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:26:in `each'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:26:in `serve'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:725:in `call'
actionview (5.0.0.rc1) lib/action_view/digestor.rb:12:in `call'
rack (2.0.0.rc1) lib/rack/etag.rb:25:in `call'
rack (2.0.0.rc1) lib/rack/conditional_get.rb:38:in `call'
rack (2.0.0.rc1) lib/rack/head.rb:12:in `call'
activerecord (5.0.0.rc1) lib/active_record/migration.rb:552:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/callbacks.rb:38:in `block in call'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:97:in `__run_callbacks__'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:750:in `_run_call_callbacks'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:90:in `run_callbacks'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/callbacks.rb:36:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/remote_ip.rb:79:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/debug_exceptions.rb:49:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/show_exceptions.rb:31:in `call'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:36:in `call_app'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:24:in `block in call'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:70:in `block in tagged'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:26:in `tagged'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:70:in `tagged'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:24:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/request_id.rb:24:in `call'
rack (2.0.0.rc1) lib/rack/runtime.rb:22:in `call'
activesupport (5.0.0.rc1) lib/active_support/cache/strategy/local_cache_middleware.rb:28:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/static.rb:136:in `call'
rack (2.0.0.rc1) lib/rack/sendfile.rb:111:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
railties (5.0.0.rc1) lib/rails/engine.rb:522:in `call'
puma (3.4.0) lib/puma/configuration.rb:224:in `call'
puma (3.4.0) lib/puma/server.rb:569:in `handle_request'
puma (3.4.0) lib/puma/server.rb:406:in `process_client'
puma (3.4.0) lib/puma/server.rb:271:in `block in run'
puma (3.4.0) lib/puma/thread_pool.rb:114:in `call'
puma (3.4.0) lib/puma/thread_pool.rb:114:in `block in spawn_thread'
Started PATCH "/api/v1/answers/75" for ::1 at 2016-06-17 16:22:21 -0400
  
AbstractController::ActionNotFound (The action 'update' could not be found for Api::V1::AnswersController):
  
actionpack (5.0.0.rc1) lib/abstract_controller/base.rb:121:in `process'
actionpack (5.0.0.rc1) lib/action_controller/metal.rb:190:in `dispatch'
actionpack (5.0.0.rc1) lib/action_controller/metal.rb:262:in `dispatch'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:50:in `dispatch'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:32:in `serve'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:39:in `block in serve'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:26:in `each'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:26:in `serve'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:725:in `call'
actionview (5.0.0.rc1) lib/action_view/digestor.rb:12:in `call'
rack (2.0.0.rc1) lib/rack/etag.rb:25:in `call'
rack (2.0.0.rc1) lib/rack/conditional_get.rb:38:in `call'
rack (2.0.0.rc1) lib/rack/head.rb:12:in `call'
activerecord (5.0.0.rc1) lib/active_record/migration.rb:552:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/callbacks.rb:38:in `block in call'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:97:in `__run_callbacks__'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:750:in `_run_call_callbacks'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:90:in `run_callbacks'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/callbacks.rb:36:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/remote_ip.rb:79:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/debug_exceptions.rb:49:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/show_exceptions.rb:31:in `call'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:36:in `call_app'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:24:in `block in call'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:70:in `block in tagged'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:26:in `tagged'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:70:in `tagged'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:24:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/request_id.rb:24:in `call'
rack (2.0.0.rc1) lib/rack/runtime.rb:22:in `call'
activesupport (5.0.0.rc1) lib/active_support/cache/strategy/local_cache_middleware.rb:28:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/static.rb:136:in `call'
rack (2.0.0.rc1) lib/rack/sendfile.rb:111:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
railties (5.0.0.rc1) lib/rails/engine.rb:522:in `call'
puma (3.4.0) lib/puma/configuration.rb:224:in `call'
puma (3.4.0) lib/puma/server.rb:569:in `handle_request'
puma (3.4.0) lib/puma/server.rb:406:in `process_client'
puma (3.4.0) lib/puma/server.rb:271:in `block in run'
puma (3.4.0) lib/puma/thread_pool.rb:114:in `call'
puma (3.4.0) lib/puma/thread_pool.rb:114:in `block in spawn_thread'
Started PATCH "/api/v1/answers/75" for ::1 at 2016-06-17 16:22:21 -0400
  
AbstractController::ActionNotFound (The action 'update' could not be found for Api::V1::AnswersController):
  
actionpack (5.0.0.rc1) lib/abstract_controller/base.rb:121:in `process'
actionpack (5.0.0.rc1) lib/action_controller/metal.rb:190:in `dispatch'
actionpack (5.0.0.rc1) lib/action_controller/metal.rb:262:in `dispatch'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:50:in `dispatch'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:32:in `serve'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:39:in `block in serve'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:26:in `each'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:26:in `serve'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:725:in `call'
actionview (5.0.0.rc1) lib/action_view/digestor.rb:12:in `call'
rack (2.0.0.rc1) lib/rack/etag.rb:25:in `call'
rack (2.0.0.rc1) lib/rack/conditional_get.rb:38:in `call'
rack (2.0.0.rc1) lib/rack/head.rb:12:in `call'
activerecord (5.0.0.rc1) lib/active_record/migration.rb:552:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/callbacks.rb:38:in `block in call'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:97:in `__run_callbacks__'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:750:in `_run_call_callbacks'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:90:in `run_callbacks'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/callbacks.rb:36:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/remote_ip.rb:79:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/debug_exceptions.rb:49:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/show_exceptions.rb:31:in `call'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:36:in `call_app'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:24:in `block in call'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:70:in `block in tagged'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:26:in `tagged'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:70:in `tagged'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:24:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/request_id.rb:24:in `call'
rack (2.0.0.rc1) lib/rack/runtime.rb:22:in `call'
activesupport (5.0.0.rc1) lib/active_support/cache/strategy/local_cache_middleware.rb:28:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/static.rb:136:in `call'
rack (2.0.0.rc1) lib/rack/sendfile.rb:111:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
railties (5.0.0.rc1) lib/rails/engine.rb:522:in `call'
puma (3.4.0) lib/puma/configuration.rb:224:in `call'
puma (3.4.0) lib/puma/server.rb:569:in `handle_request'
puma (3.4.0) lib/puma/server.rb:406:in `process_client'
puma (3.4.0) lib/puma/server.rb:271:in `block in run'
puma (3.4.0) lib/puma/thread_pool.rb:114:in `call'
puma (3.4.0) lib/puma/thread_pool.rb:114:in `block in spawn_thread'
Started PATCH "/api/v1/answers/75" for ::1 at 2016-06-17 16:22:21 -0400
  
AbstractController::ActionNotFound (The action 'update' could not be found for Api::V1::AnswersController):
  
actionpack (5.0.0.rc1) lib/abstract_controller/base.rb:121:in `process'
actionpack (5.0.0.rc1) lib/action_controller/metal.rb:190:in `dispatch'
actionpack (5.0.0.rc1) lib/action_controller/metal.rb:262:in `dispatch'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:50:in `dispatch'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:32:in `serve'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:39:in `block in serve'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:26:in `each'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:26:in `serve'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:725:in `call'
actionview (5.0.0.rc1) lib/action_view/digestor.rb:12:in `call'
rack (2.0.0.rc1) lib/rack/etag.rb:25:in `call'
rack (2.0.0.rc1) lib/rack/conditional_get.rb:38:in `call'
rack (2.0.0.rc1) lib/rack/head.rb:12:in `call'
activerecord (5.0.0.rc1) lib/active_record/migration.rb:552:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/callbacks.rb:38:in `block in call'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:97:in `__run_callbacks__'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:750:in `_run_call_callbacks'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:90:in `run_callbacks'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/callbacks.rb:36:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/remote_ip.rb:79:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/debug_exceptions.rb:49:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/show_exceptions.rb:31:in `call'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:36:in `call_app'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:24:in `block in call'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:70:in `block in tagged'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:26:in `tagged'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:70:in `tagged'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:24:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/request_id.rb:24:in `call'
rack (2.0.0.rc1) lib/rack/runtime.rb:22:in `call'
activesupport (5.0.0.rc1) lib/active_support/cache/strategy/local_cache_middleware.rb:28:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/static.rb:136:in `call'
rack (2.0.0.rc1) lib/rack/sendfile.rb:111:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
railties (5.0.0.rc1) lib/rails/engine.rb:522:in `call'
puma (3.4.0) lib/puma/configuration.rb:224:in `call'
puma (3.4.0) lib/puma/server.rb:569:in `handle_request'
puma (3.4.0) lib/puma/server.rb:406:in `process_client'
puma (3.4.0) lib/puma/server.rb:271:in `block in run'
puma (3.4.0) lib/puma/thread_pool.rb:114:in `call'
puma (3.4.0) lib/puma/thread_pool.rb:114:in `block in spawn_thread'
Started PATCH "/api/v1/answers/75" for ::1 at 2016-06-17 16:22:22 -0400
  
AbstractController::ActionNotFound (The action 'update' could not be found for Api::V1::AnswersController):
  
actionpack (5.0.0.rc1) lib/abstract_controller/base.rb:121:in `process'
actionpack (5.0.0.rc1) lib/action_controller/metal.rb:190:in `dispatch'
actionpack (5.0.0.rc1) lib/action_controller/metal.rb:262:in `dispatch'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:50:in `dispatch'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:32:in `serve'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:39:in `block in serve'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:26:in `each'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:26:in `serve'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:725:in `call'
actionview (5.0.0.rc1) lib/action_view/digestor.rb:12:in `call'
rack (2.0.0.rc1) lib/rack/etag.rb:25:in `call'
rack (2.0.0.rc1) lib/rack/conditional_get.rb:38:in `call'
rack (2.0.0.rc1) lib/rack/head.rb:12:in `call'
activerecord (5.0.0.rc1) lib/active_record/migration.rb:552:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/callbacks.rb:38:in `block in call'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:97:in `__run_callbacks__'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:750:in `_run_call_callbacks'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:90:in `run_callbacks'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/callbacks.rb:36:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/remote_ip.rb:79:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/debug_exceptions.rb:49:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/show_exceptions.rb:31:in `call'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:36:in `call_app'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:24:in `block in call'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:70:in `block in tagged'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:26:in `tagged'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:70:in `tagged'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:24:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/request_id.rb:24:in `call'
rack (2.0.0.rc1) lib/rack/runtime.rb:22:in `call'
activesupport (5.0.0.rc1) lib/active_support/cache/strategy/local_cache_middleware.rb:28:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/static.rb:136:in `call'
rack (2.0.0.rc1) lib/rack/sendfile.rb:111:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
railties (5.0.0.rc1) lib/rails/engine.rb:522:in `call'
puma (3.4.0) lib/puma/configuration.rb:224:in `call'
puma (3.4.0) lib/puma/server.rb:569:in `handle_request'
puma (3.4.0) lib/puma/server.rb:406:in `process_client'
puma (3.4.0) lib/puma/server.rb:271:in `block in run'
puma (3.4.0) lib/puma/thread_pool.rb:114:in `call'
puma (3.4.0) lib/puma/thread_pool.rb:114:in `block in spawn_thread'
Started PATCH "/api/v1/answers/75" for ::1 at 2016-06-17 16:22:22 -0400
  
AbstractController::ActionNotFound (The action 'update' could not be found for Api::V1::AnswersController):
  
actionpack (5.0.0.rc1) lib/abstract_controller/base.rb:121:in `process'
actionpack (5.0.0.rc1) lib/action_controller/metal.rb:190:in `dispatch'
actionpack (5.0.0.rc1) lib/action_controller/metal.rb:262:in `dispatch'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:50:in `dispatch'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:32:in `serve'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:39:in `block in serve'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:26:in `each'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:26:in `serve'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:725:in `call'
actionview (5.0.0.rc1) lib/action_view/digestor.rb:12:in `call'
rack (2.0.0.rc1) lib/rack/etag.rb:25:in `call'
rack (2.0.0.rc1) lib/rack/conditional_get.rb:38:in `call'
rack (2.0.0.rc1) lib/rack/head.rb:12:in `call'
activerecord (5.0.0.rc1) lib/active_record/migration.rb:552:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/callbacks.rb:38:in `block in call'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:97:in `__run_callbacks__'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:750:in `_run_call_callbacks'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:90:in `run_callbacks'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/callbacks.rb:36:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/remote_ip.rb:79:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/debug_exceptions.rb:49:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/show_exceptions.rb:31:in `call'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:36:in `call_app'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:24:in `block in call'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:70:in `block in tagged'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:26:in `tagged'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:70:in `tagged'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:24:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/request_id.rb:24:in `call'
rack (2.0.0.rc1) lib/rack/runtime.rb:22:in `call'
activesupport (5.0.0.rc1) lib/active_support/cache/strategy/local_cache_middleware.rb:28:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/static.rb:136:in `call'
rack (2.0.0.rc1) lib/rack/sendfile.rb:111:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
railties (5.0.0.rc1) lib/rails/engine.rb:522:in `call'
puma (3.4.0) lib/puma/configuration.rb:224:in `call'
puma (3.4.0) lib/puma/server.rb:569:in `handle_request'
puma (3.4.0) lib/puma/server.rb:406:in `process_client'
puma (3.4.0) lib/puma/server.rb:271:in `block in run'
puma (3.4.0) lib/puma/thread_pool.rb:114:in `call'
puma (3.4.0) lib/puma/thread_pool.rb:114:in `block in spawn_thread'
Started PATCH "/api/v1/answers/75" for ::1 at 2016-06-17 16:22:22 -0400
  
AbstractController::ActionNotFound (The action 'update' could not be found for Api::V1::AnswersController):
  
actionpack (5.0.0.rc1) lib/abstract_controller/base.rb:121:in `process'
actionpack (5.0.0.rc1) lib/action_controller/metal.rb:190:in `dispatch'
actionpack (5.0.0.rc1) lib/action_controller/metal.rb:262:in `dispatch'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:50:in `dispatch'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:32:in `serve'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:39:in `block in serve'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:26:in `each'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:26:in `serve'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:725:in `call'
actionview (5.0.0.rc1) lib/action_view/digestor.rb:12:in `call'
rack (2.0.0.rc1) lib/rack/etag.rb:25:in `call'
rack (2.0.0.rc1) lib/rack/conditional_get.rb:38:in `call'
rack (2.0.0.rc1) lib/rack/head.rb:12:in `call'
activerecord (5.0.0.rc1) lib/active_record/migration.rb:552:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/callbacks.rb:38:in `block in call'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:97:in `__run_callbacks__'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:750:in `_run_call_callbacks'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:90:in `run_callbacks'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/callbacks.rb:36:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/remote_ip.rb:79:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/debug_exceptions.rb:49:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/show_exceptions.rb:31:in `call'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:36:in `call_app'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:24:in `block in call'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:70:in `block in tagged'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:26:in `tagged'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:70:in `tagged'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:24:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/request_id.rb:24:in `call'
rack (2.0.0.rc1) lib/rack/runtime.rb:22:in `call'
activesupport (5.0.0.rc1) lib/active_support/cache/strategy/local_cache_middleware.rb:28:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/static.rb:136:in `call'
rack (2.0.0.rc1) lib/rack/sendfile.rb:111:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
railties (5.0.0.rc1) lib/rails/engine.rb:522:in `call'
puma (3.4.0) lib/puma/configuration.rb:224:in `call'
puma (3.4.0) lib/puma/server.rb:569:in `handle_request'
puma (3.4.0) lib/puma/server.rb:406:in `process_client'
puma (3.4.0) lib/puma/server.rb:271:in `block in run'
puma (3.4.0) lib/puma/thread_pool.rb:114:in `call'
puma (3.4.0) lib/puma/thread_pool.rb:114:in `block in spawn_thread'
Started PATCH "/api/v1/answers/75" for ::1 at 2016-06-17 16:22:24 -0400
  
AbstractController::ActionNotFound (The action 'update' could not be found for Api::V1::AnswersController):
  
actionpack (5.0.0.rc1) lib/abstract_controller/base.rb:121:in `process'
actionpack (5.0.0.rc1) lib/action_controller/metal.rb:190:in `dispatch'
actionpack (5.0.0.rc1) lib/action_controller/metal.rb:262:in `dispatch'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:50:in `dispatch'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:32:in `serve'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:39:in `block in serve'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:26:in `each'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:26:in `serve'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:725:in `call'
actionview (5.0.0.rc1) lib/action_view/digestor.rb:12:in `call'
rack (2.0.0.rc1) lib/rack/etag.rb:25:in `call'
rack (2.0.0.rc1) lib/rack/conditional_get.rb:38:in `call'
rack (2.0.0.rc1) lib/rack/head.rb:12:in `call'
activerecord (5.0.0.rc1) lib/active_record/migration.rb:552:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/callbacks.rb:38:in `block in call'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:97:in `__run_callbacks__'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:750:in `_run_call_callbacks'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:90:in `run_callbacks'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/callbacks.rb:36:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/remote_ip.rb:79:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/debug_exceptions.rb:49:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/show_exceptions.rb:31:in `call'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:36:in `call_app'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:24:in `block in call'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:70:in `block in tagged'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:26:in `tagged'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:70:in `tagged'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:24:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/request_id.rb:24:in `call'
rack (2.0.0.rc1) lib/rack/runtime.rb:22:in `call'
activesupport (5.0.0.rc1) lib/active_support/cache/strategy/local_cache_middleware.rb:28:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/static.rb:136:in `call'
rack (2.0.0.rc1) lib/rack/sendfile.rb:111:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
railties (5.0.0.rc1) lib/rails/engine.rb:522:in `call'
puma (3.4.0) lib/puma/configuration.rb:224:in `call'
puma (3.4.0) lib/puma/server.rb:569:in `handle_request'
puma (3.4.0) lib/puma/server.rb:406:in `process_client'
puma (3.4.0) lib/puma/server.rb:271:in `block in run'
puma (3.4.0) lib/puma/thread_pool.rb:114:in `call'
puma (3.4.0) lib/puma/thread_pool.rb:114:in `block in spawn_thread'
Started PATCH "/api/v1/answers/75" for ::1 at 2016-06-17 16:22:24 -0400
  
AbstractController::ActionNotFound (The action 'update' could not be found for Api::V1::AnswersController):
  
actionpack (5.0.0.rc1) lib/abstract_controller/base.rb:121:in `process'
actionpack (5.0.0.rc1) lib/action_controller/metal.rb:190:in `dispatch'
actionpack (5.0.0.rc1) lib/action_controller/metal.rb:262:in `dispatch'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:50:in `dispatch'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:32:in `serve'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:39:in `block in serve'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:26:in `each'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:26:in `serve'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:725:in `call'
actionview (5.0.0.rc1) lib/action_view/digestor.rb:12:in `call'
rack (2.0.0.rc1) lib/rack/etag.rb:25:in `call'
rack (2.0.0.rc1) lib/rack/conditional_get.rb:38:in `call'
rack (2.0.0.rc1) lib/rack/head.rb:12:in `call'
activerecord (5.0.0.rc1) lib/active_record/migration.rb:552:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/callbacks.rb:38:in `block in call'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:97:in `__run_callbacks__'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:750:in `_run_call_callbacks'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:90:in `run_callbacks'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/callbacks.rb:36:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/remote_ip.rb:79:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/debug_exceptions.rb:49:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/show_exceptions.rb:31:in `call'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:36:in `call_app'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:24:in `block in call'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:70:in `block in tagged'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:26:in `tagged'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:70:in `tagged'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:24:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/request_id.rb:24:in `call'
rack (2.0.0.rc1) lib/rack/runtime.rb:22:in `call'
activesupport (5.0.0.rc1) lib/active_support/cache/strategy/local_cache_middleware.rb:28:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/static.rb:136:in `call'
rack (2.0.0.rc1) lib/rack/sendfile.rb:111:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
railties (5.0.0.rc1) lib/rails/engine.rb:522:in `call'
puma (3.4.0) lib/puma/configuration.rb:224:in `call'
puma (3.4.0) lib/puma/server.rb:569:in `handle_request'
puma (3.4.0) lib/puma/server.rb:406:in `process_client'
puma (3.4.0) lib/puma/server.rb:271:in `block in run'
puma (3.4.0) lib/puma/thread_pool.rb:114:in `call'
puma (3.4.0) lib/puma/thread_pool.rb:114:in `block in spawn_thread'
Started PATCH "/api/v1/answers/75" for ::1 at 2016-06-17 16:22:24 -0400
  
AbstractController::ActionNotFound (The action 'update' could not be found for Api::V1::AnswersController):
  
actionpack (5.0.0.rc1) lib/abstract_controller/base.rb:121:in `process'
actionpack (5.0.0.rc1) lib/action_controller/metal.rb:190:in `dispatch'
actionpack (5.0.0.rc1) lib/action_controller/metal.rb:262:in `dispatch'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:50:in `dispatch'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:32:in `serve'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:39:in `block in serve'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:26:in `each'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:26:in `serve'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:725:in `call'
actionview (5.0.0.rc1) lib/action_view/digestor.rb:12:in `call'
rack (2.0.0.rc1) lib/rack/etag.rb:25:in `call'
rack (2.0.0.rc1) lib/rack/conditional_get.rb:38:in `call'
rack (2.0.0.rc1) lib/rack/head.rb:12:in `call'
activerecord (5.0.0.rc1) lib/active_record/migration.rb:552:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/callbacks.rb:38:in `block in call'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:97:in `__run_callbacks__'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:750:in `_run_call_callbacks'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:90:in `run_callbacks'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/callbacks.rb:36:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/remote_ip.rb:79:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/debug_exceptions.rb:49:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/show_exceptions.rb:31:in `call'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:36:in `call_app'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:24:in `block in call'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:70:in `block in tagged'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:26:in `tagged'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:70:in `tagged'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:24:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/request_id.rb:24:in `call'
rack (2.0.0.rc1) lib/rack/runtime.rb:22:in `call'
activesupport (5.0.0.rc1) lib/active_support/cache/strategy/local_cache_middleware.rb:28:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/static.rb:136:in `call'
rack (2.0.0.rc1) lib/rack/sendfile.rb:111:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
railties (5.0.0.rc1) lib/rails/engine.rb:522:in `call'
puma (3.4.0) lib/puma/configuration.rb:224:in `call'
puma (3.4.0) lib/puma/server.rb:569:in `handle_request'
puma (3.4.0) lib/puma/server.rb:406:in `process_client'
puma (3.4.0) lib/puma/server.rb:271:in `block in run'
puma (3.4.0) lib/puma/thread_pool.rb:114:in `call'
puma (3.4.0) lib/puma/thread_pool.rb:114:in `block in spawn_thread'
Started PATCH "/api/v1/answers/75" for ::1 at 2016-06-17 16:22:24 -0400
  
AbstractController::ActionNotFound (The action 'update' could not be found for Api::V1::AnswersController):
  
actionpack (5.0.0.rc1) lib/abstract_controller/base.rb:121:in `process'
actionpack (5.0.0.rc1) lib/action_controller/metal.rb:190:in `dispatch'
actionpack (5.0.0.rc1) lib/action_controller/metal.rb:262:in `dispatch'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:50:in `dispatch'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:32:in `serve'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:39:in `block in serve'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:26:in `each'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:26:in `serve'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:725:in `call'
actionview (5.0.0.rc1) lib/action_view/digestor.rb:12:in `call'
rack (2.0.0.rc1) lib/rack/etag.rb:25:in `call'
rack (2.0.0.rc1) lib/rack/conditional_get.rb:38:in `call'
rack (2.0.0.rc1) lib/rack/head.rb:12:in `call'
activerecord (5.0.0.rc1) lib/active_record/migration.rb:552:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/callbacks.rb:38:in `block in call'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:97:in `__run_callbacks__'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:750:in `_run_call_callbacks'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:90:in `run_callbacks'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/callbacks.rb:36:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/remote_ip.rb:79:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/debug_exceptions.rb:49:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/show_exceptions.rb:31:in `call'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:36:in `call_app'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:24:in `block in call'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:70:in `block in tagged'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:26:in `tagged'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:70:in `tagged'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:24:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/request_id.rb:24:in `call'
rack (2.0.0.rc1) lib/rack/runtime.rb:22:in `call'
activesupport (5.0.0.rc1) lib/active_support/cache/strategy/local_cache_middleware.rb:28:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/static.rb:136:in `call'
rack (2.0.0.rc1) lib/rack/sendfile.rb:111:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
railties (5.0.0.rc1) lib/rails/engine.rb:522:in `call'
puma (3.4.0) lib/puma/configuration.rb:224:in `call'
puma (3.4.0) lib/puma/server.rb:569:in `handle_request'
puma (3.4.0) lib/puma/server.rb:406:in `process_client'
puma (3.4.0) lib/puma/server.rb:271:in `block in run'
puma (3.4.0) lib/puma/thread_pool.rb:114:in `call'
puma (3.4.0) lib/puma/thread_pool.rb:114:in `block in spawn_thread'
Started PATCH "/api/v1/answers/75" for ::1 at 2016-06-17 16:22:25 -0400
  
AbstractController::ActionNotFound (The action 'update' could not be found for Api::V1::AnswersController):
  
actionpack (5.0.0.rc1) lib/abstract_controller/base.rb:121:in `process'
actionpack (5.0.0.rc1) lib/action_controller/metal.rb:190:in `dispatch'
actionpack (5.0.0.rc1) lib/action_controller/metal.rb:262:in `dispatch'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:50:in `dispatch'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:32:in `serve'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:39:in `block in serve'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:26:in `each'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:26:in `serve'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:725:in `call'
actionview (5.0.0.rc1) lib/action_view/digestor.rb:12:in `call'
rack (2.0.0.rc1) lib/rack/etag.rb:25:in `call'
rack (2.0.0.rc1) lib/rack/conditional_get.rb:38:in `call'
rack (2.0.0.rc1) lib/rack/head.rb:12:in `call'
activerecord (5.0.0.rc1) lib/active_record/migration.rb:552:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/callbacks.rb:38:in `block in call'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:97:in `__run_callbacks__'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:750:in `_run_call_callbacks'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:90:in `run_callbacks'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/callbacks.rb:36:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/remote_ip.rb:79:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/debug_exceptions.rb:49:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/show_exceptions.rb:31:in `call'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:36:in `call_app'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:24:in `block in call'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:70:in `block in tagged'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:26:in `tagged'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:70:in `tagged'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:24:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/request_id.rb:24:in `call'
rack (2.0.0.rc1) lib/rack/runtime.rb:22:in `call'
activesupport (5.0.0.rc1) lib/active_support/cache/strategy/local_cache_middleware.rb:28:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/static.rb:136:in `call'
rack (2.0.0.rc1) lib/rack/sendfile.rb:111:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
railties (5.0.0.rc1) lib/rails/engine.rb:522:in `call'
puma (3.4.0) lib/puma/configuration.rb:224:in `call'
puma (3.4.0) lib/puma/server.rb:569:in `handle_request'
puma (3.4.0) lib/puma/server.rb:406:in `process_client'
puma (3.4.0) lib/puma/server.rb:271:in `block in run'
puma (3.4.0) lib/puma/thread_pool.rb:114:in `call'
puma (3.4.0) lib/puma/thread_pool.rb:114:in `block in spawn_thread'
Started PATCH "/api/v1/answers/75" for ::1 at 2016-06-17 16:22:25 -0400
  
AbstractController::ActionNotFound (The action 'update' could not be found for Api::V1::AnswersController):
  
actionpack (5.0.0.rc1) lib/abstract_controller/base.rb:121:in `process'
actionpack (5.0.0.rc1) lib/action_controller/metal.rb:190:in `dispatch'
actionpack (5.0.0.rc1) lib/action_controller/metal.rb:262:in `dispatch'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:50:in `dispatch'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:32:in `serve'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:39:in `block in serve'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:26:in `each'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:26:in `serve'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:725:in `call'
actionview (5.0.0.rc1) lib/action_view/digestor.rb:12:in `call'
rack (2.0.0.rc1) lib/rack/etag.rb:25:in `call'
rack (2.0.0.rc1) lib/rack/conditional_get.rb:38:in `call'
rack (2.0.0.rc1) lib/rack/head.rb:12:in `call'
activerecord (5.0.0.rc1) lib/active_record/migration.rb:552:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/callbacks.rb:38:in `block in call'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:97:in `__run_callbacks__'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:750:in `_run_call_callbacks'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:90:in `run_callbacks'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/callbacks.rb:36:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/remote_ip.rb:79:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/debug_exceptions.rb:49:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/show_exceptions.rb:31:in `call'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:36:in `call_app'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:24:in `block in call'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:70:in `block in tagged'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:26:in `tagged'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:70:in `tagged'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:24:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/request_id.rb:24:in `call'
rack (2.0.0.rc1) lib/rack/runtime.rb:22:in `call'
activesupport (5.0.0.rc1) lib/active_support/cache/strategy/local_cache_middleware.rb:28:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/static.rb:136:in `call'
rack (2.0.0.rc1) lib/rack/sendfile.rb:111:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
railties (5.0.0.rc1) lib/rails/engine.rb:522:in `call'
puma (3.4.0) lib/puma/configuration.rb:224:in `call'
puma (3.4.0) lib/puma/server.rb:569:in `handle_request'
puma (3.4.0) lib/puma/server.rb:406:in `process_client'
puma (3.4.0) lib/puma/server.rb:271:in `block in run'
puma (3.4.0) lib/puma/thread_pool.rb:114:in `call'
puma (3.4.0) lib/puma/thread_pool.rb:114:in `block in spawn_thread'
Started PATCH "/api/v1/answers/75" for ::1 at 2016-06-17 16:22:25 -0400
  
AbstractController::ActionNotFound (The action 'update' could not be found for Api::V1::AnswersController):
  
actionpack (5.0.0.rc1) lib/abstract_controller/base.rb:121:in `process'
actionpack (5.0.0.rc1) lib/action_controller/metal.rb:190:in `dispatch'
actionpack (5.0.0.rc1) lib/action_controller/metal.rb:262:in `dispatch'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:50:in `dispatch'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:32:in `serve'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:39:in `block in serve'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:26:in `each'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:26:in `serve'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:725:in `call'
actionview (5.0.0.rc1) lib/action_view/digestor.rb:12:in `call'
rack (2.0.0.rc1) lib/rack/etag.rb:25:in `call'
rack (2.0.0.rc1) lib/rack/conditional_get.rb:38:in `call'
rack (2.0.0.rc1) lib/rack/head.rb:12:in `call'
activerecord (5.0.0.rc1) lib/active_record/migration.rb:552:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/callbacks.rb:38:in `block in call'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:97:in `__run_callbacks__'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:750:in `_run_call_callbacks'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:90:in `run_callbacks'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/callbacks.rb:36:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/remote_ip.rb:79:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/debug_exceptions.rb:49:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/show_exceptions.rb:31:in `call'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:36:in `call_app'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:24:in `block in call'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:70:in `block in tagged'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:26:in `tagged'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:70:in `tagged'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:24:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/request_id.rb:24:in `call'
rack (2.0.0.rc1) lib/rack/runtime.rb:22:in `call'
activesupport (5.0.0.rc1) lib/active_support/cache/strategy/local_cache_middleware.rb:28:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/static.rb:136:in `call'
rack (2.0.0.rc1) lib/rack/sendfile.rb:111:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
railties (5.0.0.rc1) lib/rails/engine.rb:522:in `call'
puma (3.4.0) lib/puma/configuration.rb:224:in `call'
puma (3.4.0) lib/puma/server.rb:569:in `handle_request'
puma (3.4.0) lib/puma/server.rb:406:in `process_client'
puma (3.4.0) lib/puma/server.rb:271:in `block in run'
puma (3.4.0) lib/puma/thread_pool.rb:114:in `call'
puma (3.4.0) lib/puma/thread_pool.rb:114:in `block in spawn_thread'
Started PATCH "/api/v1/answers/75" for ::1 at 2016-06-17 16:22:25 -0400
  
AbstractController::ActionNotFound (The action 'update' could not be found for Api::V1::AnswersController):
  
actionpack (5.0.0.rc1) lib/abstract_controller/base.rb:121:in `process'
actionpack (5.0.0.rc1) lib/action_controller/metal.rb:190:in `dispatch'
actionpack (5.0.0.rc1) lib/action_controller/metal.rb:262:in `dispatch'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:50:in `dispatch'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:32:in `serve'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:39:in `block in serve'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:26:in `each'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:26:in `serve'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:725:in `call'
actionview (5.0.0.rc1) lib/action_view/digestor.rb:12:in `call'
rack (2.0.0.rc1) lib/rack/etag.rb:25:in `call'
rack (2.0.0.rc1) lib/rack/conditional_get.rb:38:in `call'
rack (2.0.0.rc1) lib/rack/head.rb:12:in `call'
activerecord (5.0.0.rc1) lib/active_record/migration.rb:552:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/callbacks.rb:38:in `block in call'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:97:in `__run_callbacks__'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:750:in `_run_call_callbacks'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:90:in `run_callbacks'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/callbacks.rb:36:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/remote_ip.rb:79:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/debug_exceptions.rb:49:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/show_exceptions.rb:31:in `call'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:36:in `call_app'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:24:in `block in call'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:70:in `block in tagged'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:26:in `tagged'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:70:in `tagged'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:24:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/request_id.rb:24:in `call'
rack (2.0.0.rc1) lib/rack/runtime.rb:22:in `call'
activesupport (5.0.0.rc1) lib/active_support/cache/strategy/local_cache_middleware.rb:28:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/static.rb:136:in `call'
rack (2.0.0.rc1) lib/rack/sendfile.rb:111:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
railties (5.0.0.rc1) lib/rails/engine.rb:522:in `call'
puma (3.4.0) lib/puma/configuration.rb:224:in `call'
puma (3.4.0) lib/puma/server.rb:569:in `handle_request'
puma (3.4.0) lib/puma/server.rb:406:in `process_client'
puma (3.4.0) lib/puma/server.rb:271:in `block in run'
puma (3.4.0) lib/puma/thread_pool.rb:114:in `call'
puma (3.4.0) lib/puma/thread_pool.rb:114:in `block in spawn_thread'
Started PATCH "/api/v1/answers/22" for ::1 at 2016-06-17 16:22:46 -0400
  
AbstractController::ActionNotFound (The action 'update' could not be found for Api::V1::AnswersController):
  
actionpack (5.0.0.rc1) lib/abstract_controller/base.rb:121:in `process'
actionpack (5.0.0.rc1) lib/action_controller/metal.rb:190:in `dispatch'
actionpack (5.0.0.rc1) lib/action_controller/metal.rb:262:in `dispatch'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:50:in `dispatch'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:32:in `serve'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:39:in `block in serve'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:26:in `each'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:26:in `serve'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:725:in `call'
actionview (5.0.0.rc1) lib/action_view/digestor.rb:12:in `call'
rack (2.0.0.rc1) lib/rack/etag.rb:25:in `call'
rack (2.0.0.rc1) lib/rack/conditional_get.rb:38:in `call'
rack (2.0.0.rc1) lib/rack/head.rb:12:in `call'
activerecord (5.0.0.rc1) lib/active_record/migration.rb:552:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/callbacks.rb:38:in `block in call'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:97:in `__run_callbacks__'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:750:in `_run_call_callbacks'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:90:in `run_callbacks'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/callbacks.rb:36:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/remote_ip.rb:79:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/debug_exceptions.rb:49:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/show_exceptions.rb:31:in `call'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:36:in `call_app'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:24:in `block in call'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:70:in `block in tagged'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:26:in `tagged'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:70:in `tagged'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:24:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/request_id.rb:24:in `call'
rack (2.0.0.rc1) lib/rack/runtime.rb:22:in `call'
activesupport (5.0.0.rc1) lib/active_support/cache/strategy/local_cache_middleware.rb:28:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/static.rb:136:in `call'
rack (2.0.0.rc1) lib/rack/sendfile.rb:111:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
railties (5.0.0.rc1) lib/rails/engine.rb:522:in `call'
puma (3.4.0) lib/puma/configuration.rb:224:in `call'
puma (3.4.0) lib/puma/server.rb:569:in `handle_request'
puma (3.4.0) lib/puma/server.rb:406:in `process_client'
puma (3.4.0) lib/puma/server.rb:271:in `block in run'
puma (3.4.0) lib/puma/thread_pool.rb:114:in `call'
puma (3.4.0) lib/puma/thread_pool.rb:114:in `block in spawn_thread'
Started PATCH "/api/v1/answers/22" for ::1 at 2016-06-17 16:22:47 -0400
  
AbstractController::ActionNotFound (The action 'update' could not be found for Api::V1::AnswersController):
  
actionpack (5.0.0.rc1) lib/abstract_controller/base.rb:121:in `process'
actionpack (5.0.0.rc1) lib/action_controller/metal.rb:190:in `dispatch'
actionpack (5.0.0.rc1) lib/action_controller/metal.rb:262:in `dispatch'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:50:in `dispatch'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:32:in `serve'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:39:in `block in serve'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:26:in `each'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:26:in `serve'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:725:in `call'
actionview (5.0.0.rc1) lib/action_view/digestor.rb:12:in `call'
rack (2.0.0.rc1) lib/rack/etag.rb:25:in `call'
rack (2.0.0.rc1) lib/rack/conditional_get.rb:38:in `call'
rack (2.0.0.rc1) lib/rack/head.rb:12:in `call'
activerecord (5.0.0.rc1) lib/active_record/migration.rb:552:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/callbacks.rb:38:in `block in call'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:97:in `__run_callbacks__'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:750:in `_run_call_callbacks'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:90:in `run_callbacks'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/callbacks.rb:36:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/remote_ip.rb:79:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/debug_exceptions.rb:49:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/show_exceptions.rb:31:in `call'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:36:in `call_app'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:24:in `block in call'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:70:in `block in tagged'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:26:in `tagged'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:70:in `tagged'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:24:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/request_id.rb:24:in `call'
rack (2.0.0.rc1) lib/rack/runtime.rb:22:in `call'
activesupport (5.0.0.rc1) lib/active_support/cache/strategy/local_cache_middleware.rb:28:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/static.rb:136:in `call'
rack (2.0.0.rc1) lib/rack/sendfile.rb:111:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
railties (5.0.0.rc1) lib/rails/engine.rb:522:in `call'
puma (3.4.0) lib/puma/configuration.rb:224:in `call'
puma (3.4.0) lib/puma/server.rb:569:in `handle_request'
puma (3.4.0) lib/puma/server.rb:406:in `process_client'
puma (3.4.0) lib/puma/server.rb:271:in `block in run'
puma (3.4.0) lib/puma/thread_pool.rb:114:in `call'
puma (3.4.0) lib/puma/thread_pool.rb:114:in `block in spawn_thread'
Started PATCH "/api/v1/answers/22" for ::1 at 2016-06-17 16:22:47 -0400
  
AbstractController::ActionNotFound (The action 'update' could not be found for Api::V1::AnswersController):
  
actionpack (5.0.0.rc1) lib/abstract_controller/base.rb:121:in `process'
actionpack (5.0.0.rc1) lib/action_controller/metal.rb:190:in `dispatch'
actionpack (5.0.0.rc1) lib/action_controller/metal.rb:262:in `dispatch'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:50:in `dispatch'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:32:in `serve'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:39:in `block in serve'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:26:in `each'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:26:in `serve'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:725:in `call'
actionview (5.0.0.rc1) lib/action_view/digestor.rb:12:in `call'
rack (2.0.0.rc1) lib/rack/etag.rb:25:in `call'
rack (2.0.0.rc1) lib/rack/conditional_get.rb:38:in `call'
rack (2.0.0.rc1) lib/rack/head.rb:12:in `call'
activerecord (5.0.0.rc1) lib/active_record/migration.rb:552:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/callbacks.rb:38:in `block in call'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:97:in `__run_callbacks__'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:750:in `_run_call_callbacks'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:90:in `run_callbacks'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/callbacks.rb:36:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/remote_ip.rb:79:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/debug_exceptions.rb:49:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/show_exceptions.rb:31:in `call'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:36:in `call_app'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:24:in `block in call'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:70:in `block in tagged'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:26:in `tagged'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:70:in `tagged'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:24:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/request_id.rb:24:in `call'
rack (2.0.0.rc1) lib/rack/runtime.rb:22:in `call'
activesupport (5.0.0.rc1) lib/active_support/cache/strategy/local_cache_middleware.rb:28:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/static.rb:136:in `call'
rack (2.0.0.rc1) lib/rack/sendfile.rb:111:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
railties (5.0.0.rc1) lib/rails/engine.rb:522:in `call'
puma (3.4.0) lib/puma/configuration.rb:224:in `call'
puma (3.4.0) lib/puma/server.rb:569:in `handle_request'
puma (3.4.0) lib/puma/server.rb:406:in `process_client'
puma (3.4.0) lib/puma/server.rb:271:in `block in run'
puma (3.4.0) lib/puma/thread_pool.rb:114:in `call'
puma (3.4.0) lib/puma/thread_pool.rb:114:in `block in spawn_thread'
Started PATCH "/api/v1/answers/22" for ::1 at 2016-06-17 16:22:47 -0400
  
AbstractController::ActionNotFound (The action 'update' could not be found for Api::V1::AnswersController):
  
actionpack (5.0.0.rc1) lib/abstract_controller/base.rb:121:in `process'
actionpack (5.0.0.rc1) lib/action_controller/metal.rb:190:in `dispatch'
actionpack (5.0.0.rc1) lib/action_controller/metal.rb:262:in `dispatch'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:50:in `dispatch'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:32:in `serve'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:39:in `block in serve'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:26:in `each'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:26:in `serve'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:725:in `call'
actionview (5.0.0.rc1) lib/action_view/digestor.rb:12:in `call'
rack (2.0.0.rc1) lib/rack/etag.rb:25:in `call'
rack (2.0.0.rc1) lib/rack/conditional_get.rb:38:in `call'
rack (2.0.0.rc1) lib/rack/head.rb:12:in `call'
activerecord (5.0.0.rc1) lib/active_record/migration.rb:552:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/callbacks.rb:38:in `block in call'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:97:in `__run_callbacks__'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:750:in `_run_call_callbacks'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:90:in `run_callbacks'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/callbacks.rb:36:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/remote_ip.rb:79:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/debug_exceptions.rb:49:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/show_exceptions.rb:31:in `call'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:36:in `call_app'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:24:in `block in call'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:70:in `block in tagged'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:26:in `tagged'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:70:in `tagged'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:24:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/request_id.rb:24:in `call'
rack (2.0.0.rc1) lib/rack/runtime.rb:22:in `call'
activesupport (5.0.0.rc1) lib/active_support/cache/strategy/local_cache_middleware.rb:28:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/static.rb:136:in `call'
rack (2.0.0.rc1) lib/rack/sendfile.rb:111:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
railties (5.0.0.rc1) lib/rails/engine.rb:522:in `call'
puma (3.4.0) lib/puma/configuration.rb:224:in `call'
puma (3.4.0) lib/puma/server.rb:569:in `handle_request'
puma (3.4.0) lib/puma/server.rb:406:in `process_client'
puma (3.4.0) lib/puma/server.rb:271:in `block in run'
puma (3.4.0) lib/puma/thread_pool.rb:114:in `call'
puma (3.4.0) lib/puma/thread_pool.rb:114:in `block in spawn_thread'
Started PATCH "/api/v1/answers/22" for ::1 at 2016-06-17 16:22:47 -0400
  
AbstractController::ActionNotFound (The action 'update' could not be found for Api::V1::AnswersController):
  
actionpack (5.0.0.rc1) lib/abstract_controller/base.rb:121:in `process'
actionpack (5.0.0.rc1) lib/action_controller/metal.rb:190:in `dispatch'
actionpack (5.0.0.rc1) lib/action_controller/metal.rb:262:in `dispatch'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:50:in `dispatch'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:32:in `serve'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:39:in `block in serve'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:26:in `each'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:26:in `serve'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:725:in `call'
actionview (5.0.0.rc1) lib/action_view/digestor.rb:12:in `call'
rack (2.0.0.rc1) lib/rack/etag.rb:25:in `call'
rack (2.0.0.rc1) lib/rack/conditional_get.rb:38:in `call'
rack (2.0.0.rc1) lib/rack/head.rb:12:in `call'
activerecord (5.0.0.rc1) lib/active_record/migration.rb:552:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/callbacks.rb:38:in `block in call'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:97:in `__run_callbacks__'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:750:in `_run_call_callbacks'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:90:in `run_callbacks'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/callbacks.rb:36:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/remote_ip.rb:79:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/debug_exceptions.rb:49:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/show_exceptions.rb:31:in `call'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:36:in `call_app'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:24:in `block in call'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:70:in `block in tagged'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:26:in `tagged'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:70:in `tagged'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:24:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/request_id.rb:24:in `call'
rack (2.0.0.rc1) lib/rack/runtime.rb:22:in `call'
activesupport (5.0.0.rc1) lib/active_support/cache/strategy/local_cache_middleware.rb:28:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/static.rb:136:in `call'
rack (2.0.0.rc1) lib/rack/sendfile.rb:111:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
railties (5.0.0.rc1) lib/rails/engine.rb:522:in `call'
puma (3.4.0) lib/puma/configuration.rb:224:in `call'
puma (3.4.0) lib/puma/server.rb:569:in `handle_request'
puma (3.4.0) lib/puma/server.rb:406:in `process_client'
puma (3.4.0) lib/puma/server.rb:271:in `block in run'
puma (3.4.0) lib/puma/thread_pool.rb:114:in `call'
puma (3.4.0) lib/puma/thread_pool.rb:114:in `block in spawn_thread'
Started PATCH "/api/v1/answers/22" for ::1 at 2016-06-17 16:22:47 -0400
  
AbstractController::ActionNotFound (The action 'update' could not be found for Api::V1::AnswersController):
  
actionpack (5.0.0.rc1) lib/abstract_controller/base.rb:121:in `process'
actionpack (5.0.0.rc1) lib/action_controller/metal.rb:190:in `dispatch'
actionpack (5.0.0.rc1) lib/action_controller/metal.rb:262:in `dispatch'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:50:in `dispatch'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:32:in `serve'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:39:in `block in serve'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:26:in `each'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:26:in `serve'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:725:in `call'
actionview (5.0.0.rc1) lib/action_view/digestor.rb:12:in `call'
rack (2.0.0.rc1) lib/rack/etag.rb:25:in `call'
rack (2.0.0.rc1) lib/rack/conditional_get.rb:38:in `call'
rack (2.0.0.rc1) lib/rack/head.rb:12:in `call'
activerecord (5.0.0.rc1) lib/active_record/migration.rb:552:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/callbacks.rb:38:in `block in call'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:97:in `__run_callbacks__'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:750:in `_run_call_callbacks'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:90:in `run_callbacks'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/callbacks.rb:36:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/remote_ip.rb:79:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/debug_exceptions.rb:49:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/show_exceptions.rb:31:in `call'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:36:in `call_app'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:24:in `block in call'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:70:in `block in tagged'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:26:in `tagged'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:70:in `tagged'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:24:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/request_id.rb:24:in `call'
rack (2.0.0.rc1) lib/rack/runtime.rb:22:in `call'
activesupport (5.0.0.rc1) lib/active_support/cache/strategy/local_cache_middleware.rb:28:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/static.rb:136:in `call'
rack (2.0.0.rc1) lib/rack/sendfile.rb:111:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
railties (5.0.0.rc1) lib/rails/engine.rb:522:in `call'
puma (3.4.0) lib/puma/configuration.rb:224:in `call'
puma (3.4.0) lib/puma/server.rb:569:in `handle_request'
puma (3.4.0) lib/puma/server.rb:406:in `process_client'
puma (3.4.0) lib/puma/server.rb:271:in `block in run'
puma (3.4.0) lib/puma/thread_pool.rb:114:in `call'
puma (3.4.0) lib/puma/thread_pool.rb:114:in `block in spawn_thread'
Started PATCH "/api/v1/answers/22" for ::1 at 2016-06-17 16:22:47 -0400
  
AbstractController::ActionNotFound (The action 'update' could not be found for Api::V1::AnswersController):
  
actionpack (5.0.0.rc1) lib/abstract_controller/base.rb:121:in `process'
actionpack (5.0.0.rc1) lib/action_controller/metal.rb:190:in `dispatch'
actionpack (5.0.0.rc1) lib/action_controller/metal.rb:262:in `dispatch'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:50:in `dispatch'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:32:in `serve'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:39:in `block in serve'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:26:in `each'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:26:in `serve'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:725:in `call'
actionview (5.0.0.rc1) lib/action_view/digestor.rb:12:in `call'
rack (2.0.0.rc1) lib/rack/etag.rb:25:in `call'
rack (2.0.0.rc1) lib/rack/conditional_get.rb:38:in `call'
rack (2.0.0.rc1) lib/rack/head.rb:12:in `call'
activerecord (5.0.0.rc1) lib/active_record/migration.rb:552:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/callbacks.rb:38:in `block in call'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:97:in `__run_callbacks__'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:750:in `_run_call_callbacks'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:90:in `run_callbacks'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/callbacks.rb:36:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/remote_ip.rb:79:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/debug_exceptions.rb:49:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/show_exceptions.rb:31:in `call'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:36:in `call_app'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:24:in `block in call'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:70:in `block in tagged'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:26:in `tagged'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:70:in `tagged'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:24:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/request_id.rb:24:in `call'
rack (2.0.0.rc1) lib/rack/runtime.rb:22:in `call'
activesupport (5.0.0.rc1) lib/active_support/cache/strategy/local_cache_middleware.rb:28:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/static.rb:136:in `call'
rack (2.0.0.rc1) lib/rack/sendfile.rb:111:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
railties (5.0.0.rc1) lib/rails/engine.rb:522:in `call'
puma (3.4.0) lib/puma/configuration.rb:224:in `call'
puma (3.4.0) lib/puma/server.rb:569:in `handle_request'
puma (3.4.0) lib/puma/server.rb:406:in `process_client'
puma (3.4.0) lib/puma/server.rb:271:in `block in run'
puma (3.4.0) lib/puma/thread_pool.rb:114:in `call'
puma (3.4.0) lib/puma/thread_pool.rb:114:in `block in spawn_thread'
Started PATCH "/api/v1/answers/22" for ::1 at 2016-06-17 16:22:48 -0400
  
AbstractController::ActionNotFound (The action 'update' could not be found for Api::V1::AnswersController):
  
actionpack (5.0.0.rc1) lib/abstract_controller/base.rb:121:in `process'
actionpack (5.0.0.rc1) lib/action_controller/metal.rb:190:in `dispatch'
actionpack (5.0.0.rc1) lib/action_controller/metal.rb:262:in `dispatch'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:50:in `dispatch'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:32:in `serve'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:39:in `block in serve'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:26:in `each'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:26:in `serve'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:725:in `call'
actionview (5.0.0.rc1) lib/action_view/digestor.rb:12:in `call'
rack (2.0.0.rc1) lib/rack/etag.rb:25:in `call'
rack (2.0.0.rc1) lib/rack/conditional_get.rb:38:in `call'
rack (2.0.0.rc1) lib/rack/head.rb:12:in `call'
activerecord (5.0.0.rc1) lib/active_record/migration.rb:552:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/callbacks.rb:38:in `block in call'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:97:in `__run_callbacks__'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:750:in `_run_call_callbacks'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:90:in `run_callbacks'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/callbacks.rb:36:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/remote_ip.rb:79:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/debug_exceptions.rb:49:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/show_exceptions.rb:31:in `call'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:36:in `call_app'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:24:in `block in call'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:70:in `block in tagged'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:26:in `tagged'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:70:in `tagged'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:24:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/request_id.rb:24:in `call'
rack (2.0.0.rc1) lib/rack/runtime.rb:22:in `call'
activesupport (5.0.0.rc1) lib/active_support/cache/strategy/local_cache_middleware.rb:28:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/static.rb:136:in `call'
rack (2.0.0.rc1) lib/rack/sendfile.rb:111:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
railties (5.0.0.rc1) lib/rails/engine.rb:522:in `call'
puma (3.4.0) lib/puma/configuration.rb:224:in `call'
puma (3.4.0) lib/puma/server.rb:569:in `handle_request'
puma (3.4.0) lib/puma/server.rb:406:in `process_client'
puma (3.4.0) lib/puma/server.rb:271:in `block in run'
puma (3.4.0) lib/puma/thread_pool.rb:114:in `call'
puma (3.4.0) lib/puma/thread_pool.rb:114:in `block in spawn_thread'
Started PATCH "/api/v1/answers/22" for ::1 at 2016-06-17 16:22:48 -0400
  
AbstractController::ActionNotFound (The action 'update' could not be found for Api::V1::AnswersController):
  
actionpack (5.0.0.rc1) lib/abstract_controller/base.rb:121:in `process'
actionpack (5.0.0.rc1) lib/action_controller/metal.rb:190:in `dispatch'
actionpack (5.0.0.rc1) lib/action_controller/metal.rb:262:in `dispatch'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:50:in `dispatch'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:32:in `serve'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:39:in `block in serve'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:26:in `each'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:26:in `serve'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:725:in `call'
actionview (5.0.0.rc1) lib/action_view/digestor.rb:12:in `call'
rack (2.0.0.rc1) lib/rack/etag.rb:25:in `call'
rack (2.0.0.rc1) lib/rack/conditional_get.rb:38:in `call'
rack (2.0.0.rc1) lib/rack/head.rb:12:in `call'
activerecord (5.0.0.rc1) lib/active_record/migration.rb:552:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/callbacks.rb:38:in `block in call'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:97:in `__run_callbacks__'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:750:in `_run_call_callbacks'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:90:in `run_callbacks'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/callbacks.rb:36:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/remote_ip.rb:79:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/debug_exceptions.rb:49:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/show_exceptions.rb:31:in `call'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:36:in `call_app'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:24:in `block in call'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:70:in `block in tagged'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:26:in `tagged'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:70:in `tagged'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:24:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/request_id.rb:24:in `call'
rack (2.0.0.rc1) lib/rack/runtime.rb:22:in `call'
activesupport (5.0.0.rc1) lib/active_support/cache/strategy/local_cache_middleware.rb:28:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/static.rb:136:in `call'
rack (2.0.0.rc1) lib/rack/sendfile.rb:111:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
railties (5.0.0.rc1) lib/rails/engine.rb:522:in `call'
puma (3.4.0) lib/puma/configuration.rb:224:in `call'
puma (3.4.0) lib/puma/server.rb:569:in `handle_request'
puma (3.4.0) lib/puma/server.rb:406:in `process_client'
puma (3.4.0) lib/puma/server.rb:271:in `block in run'
puma (3.4.0) lib/puma/thread_pool.rb:114:in `call'
puma (3.4.0) lib/puma/thread_pool.rb:114:in `block in spawn_thread'
Started PATCH "/api/v1/answers/22" for ::1 at 2016-06-17 16:22:48 -0400
  
AbstractController::ActionNotFound (The action 'update' could not be found for Api::V1::AnswersController):
  
actionpack (5.0.0.rc1) lib/abstract_controller/base.rb:121:in `process'
actionpack (5.0.0.rc1) lib/action_controller/metal.rb:190:in `dispatch'
actionpack (5.0.0.rc1) lib/action_controller/metal.rb:262:in `dispatch'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:50:in `dispatch'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:32:in `serve'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:39:in `block in serve'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:26:in `each'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:26:in `serve'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:725:in `call'
actionview (5.0.0.rc1) lib/action_view/digestor.rb:12:in `call'
rack (2.0.0.rc1) lib/rack/etag.rb:25:in `call'
rack (2.0.0.rc1) lib/rack/conditional_get.rb:38:in `call'
rack (2.0.0.rc1) lib/rack/head.rb:12:in `call'
activerecord (5.0.0.rc1) lib/active_record/migration.rb:552:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/callbacks.rb:38:in `block in call'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:97:in `__run_callbacks__'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:750:in `_run_call_callbacks'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:90:in `run_callbacks'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/callbacks.rb:36:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/remote_ip.rb:79:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/debug_exceptions.rb:49:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/show_exceptions.rb:31:in `call'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:36:in `call_app'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:24:in `block in call'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:70:in `block in tagged'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:26:in `tagged'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:70:in `tagged'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:24:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/request_id.rb:24:in `call'
rack (2.0.0.rc1) lib/rack/runtime.rb:22:in `call'
activesupport (5.0.0.rc1) lib/active_support/cache/strategy/local_cache_middleware.rb:28:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/static.rb:136:in `call'
rack (2.0.0.rc1) lib/rack/sendfile.rb:111:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
railties (5.0.0.rc1) lib/rails/engine.rb:522:in `call'
puma (3.4.0) lib/puma/configuration.rb:224:in `call'
puma (3.4.0) lib/puma/server.rb:569:in `handle_request'
puma (3.4.0) lib/puma/server.rb:406:in `process_client'
puma (3.4.0) lib/puma/server.rb:271:in `block in run'
puma (3.4.0) lib/puma/thread_pool.rb:114:in `call'
puma (3.4.0) lib/puma/thread_pool.rb:114:in `block in spawn_thread'
Started PATCH "/api/v1/answers/22" for ::1 at 2016-06-17 16:22:48 -0400
  
AbstractController::ActionNotFound (The action 'update' could not be found for Api::V1::AnswersController):
  
actionpack (5.0.0.rc1) lib/abstract_controller/base.rb:121:in `process'
actionpack (5.0.0.rc1) lib/action_controller/metal.rb:190:in `dispatch'
actionpack (5.0.0.rc1) lib/action_controller/metal.rb:262:in `dispatch'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:50:in `dispatch'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:32:in `serve'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:39:in `block in serve'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:26:in `each'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:26:in `serve'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:725:in `call'
actionview (5.0.0.rc1) lib/action_view/digestor.rb:12:in `call'
rack (2.0.0.rc1) lib/rack/etag.rb:25:in `call'
rack (2.0.0.rc1) lib/rack/conditional_get.rb:38:in `call'
rack (2.0.0.rc1) lib/rack/head.rb:12:in `call'
activerecord (5.0.0.rc1) lib/active_record/migration.rb:552:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/callbacks.rb:38:in `block in call'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:97:in `__run_callbacks__'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:750:in `_run_call_callbacks'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:90:in `run_callbacks'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/callbacks.rb:36:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/remote_ip.rb:79:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/debug_exceptions.rb:49:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/show_exceptions.rb:31:in `call'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:36:in `call_app'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:24:in `block in call'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:70:in `block in tagged'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:26:in `tagged'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:70:in `tagged'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:24:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/request_id.rb:24:in `call'
rack (2.0.0.rc1) lib/rack/runtime.rb:22:in `call'
activesupport (5.0.0.rc1) lib/active_support/cache/strategy/local_cache_middleware.rb:28:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/static.rb:136:in `call'
rack (2.0.0.rc1) lib/rack/sendfile.rb:111:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
railties (5.0.0.rc1) lib/rails/engine.rb:522:in `call'
puma (3.4.0) lib/puma/configuration.rb:224:in `call'
puma (3.4.0) lib/puma/server.rb:569:in `handle_request'
puma (3.4.0) lib/puma/server.rb:406:in `process_client'
puma (3.4.0) lib/puma/server.rb:271:in `block in run'
puma (3.4.0) lib/puma/thread_pool.rb:114:in `call'
puma (3.4.0) lib/puma/thread_pool.rb:114:in `block in spawn_thread'
Started PATCH "/api/v1/answers/22" for ::1 at 2016-06-17 16:22:48 -0400
  
AbstractController::ActionNotFound (The action 'update' could not be found for Api::V1::AnswersController):
  
actionpack (5.0.0.rc1) lib/abstract_controller/base.rb:121:in `process'
actionpack (5.0.0.rc1) lib/action_controller/metal.rb:190:in `dispatch'
actionpack (5.0.0.rc1) lib/action_controller/metal.rb:262:in `dispatch'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:50:in `dispatch'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:32:in `serve'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:39:in `block in serve'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:26:in `each'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:26:in `serve'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:725:in `call'
actionview (5.0.0.rc1) lib/action_view/digestor.rb:12:in `call'
rack (2.0.0.rc1) lib/rack/etag.rb:25:in `call'
rack (2.0.0.rc1) lib/rack/conditional_get.rb:38:in `call'
rack (2.0.0.rc1) lib/rack/head.rb:12:in `call'
activerecord (5.0.0.rc1) lib/active_record/migration.rb:552:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/callbacks.rb:38:in `block in call'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:97:in `__run_callbacks__'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:750:in `_run_call_callbacks'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:90:in `run_callbacks'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/callbacks.rb:36:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/remote_ip.rb:79:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/debug_exceptions.rb:49:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/show_exceptions.rb:31:in `call'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:36:in `call_app'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:24:in `block in call'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:70:in `block in tagged'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:26:in `tagged'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:70:in `tagged'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:24:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/request_id.rb:24:in `call'
rack (2.0.0.rc1) lib/rack/runtime.rb:22:in `call'
activesupport (5.0.0.rc1) lib/active_support/cache/strategy/local_cache_middleware.rb:28:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/static.rb:136:in `call'
rack (2.0.0.rc1) lib/rack/sendfile.rb:111:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
railties (5.0.0.rc1) lib/rails/engine.rb:522:in `call'
puma (3.4.0) lib/puma/configuration.rb:224:in `call'
puma (3.4.0) lib/puma/server.rb:569:in `handle_request'
puma (3.4.0) lib/puma/server.rb:406:in `process_client'
puma (3.4.0) lib/puma/server.rb:271:in `block in run'
puma (3.4.0) lib/puma/thread_pool.rb:114:in `call'
puma (3.4.0) lib/puma/thread_pool.rb:114:in `block in spawn_thread'
Started PATCH "/api/v1/answers/22" for ::1 at 2016-06-17 16:22:50 -0400
  
AbstractController::ActionNotFound (The action 'update' could not be found for Api::V1::AnswersController):
  
actionpack (5.0.0.rc1) lib/abstract_controller/base.rb:121:in `process'
actionpack (5.0.0.rc1) lib/action_controller/metal.rb:190:in `dispatch'
actionpack (5.0.0.rc1) lib/action_controller/metal.rb:262:in `dispatch'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:50:in `dispatch'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:32:in `serve'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:39:in `block in serve'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:26:in `each'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:26:in `serve'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:725:in `call'
actionview (5.0.0.rc1) lib/action_view/digestor.rb:12:in `call'
rack (2.0.0.rc1) lib/rack/etag.rb:25:in `call'
rack (2.0.0.rc1) lib/rack/conditional_get.rb:38:in `call'
rack (2.0.0.rc1) lib/rack/head.rb:12:in `call'
activerecord (5.0.0.rc1) lib/active_record/migration.rb:552:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/callbacks.rb:38:in `block in call'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:97:in `__run_callbacks__'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:750:in `_run_call_callbacks'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:90:in `run_callbacks'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/callbacks.rb:36:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/remote_ip.rb:79:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/debug_exceptions.rb:49:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/show_exceptions.rb:31:in `call'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:36:in `call_app'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:24:in `block in call'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:70:in `block in tagged'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:26:in `tagged'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:70:in `tagged'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:24:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/request_id.rb:24:in `call'
rack (2.0.0.rc1) lib/rack/runtime.rb:22:in `call'
activesupport (5.0.0.rc1) lib/active_support/cache/strategy/local_cache_middleware.rb:28:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/static.rb:136:in `call'
rack (2.0.0.rc1) lib/rack/sendfile.rb:111:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
railties (5.0.0.rc1) lib/rails/engine.rb:522:in `call'
puma (3.4.0) lib/puma/configuration.rb:224:in `call'
puma (3.4.0) lib/puma/server.rb:569:in `handle_request'
puma (3.4.0) lib/puma/server.rb:406:in `process_client'
puma (3.4.0) lib/puma/server.rb:271:in `block in run'
puma (3.4.0) lib/puma/thread_pool.rb:114:in `call'
puma (3.4.0) lib/puma/thread_pool.rb:114:in `block in spawn_thread'
Started PATCH "/api/v1/answers/22" for ::1 at 2016-06-17 16:22:50 -0400
  
AbstractController::ActionNotFound (The action 'update' could not be found for Api::V1::AnswersController):
  
actionpack (5.0.0.rc1) lib/abstract_controller/base.rb:121:in `process'
actionpack (5.0.0.rc1) lib/action_controller/metal.rb:190:in `dispatch'
actionpack (5.0.0.rc1) lib/action_controller/metal.rb:262:in `dispatch'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:50:in `dispatch'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:32:in `serve'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:39:in `block in serve'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:26:in `each'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:26:in `serve'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:725:in `call'
actionview (5.0.0.rc1) lib/action_view/digestor.rb:12:in `call'
rack (2.0.0.rc1) lib/rack/etag.rb:25:in `call'
rack (2.0.0.rc1) lib/rack/conditional_get.rb:38:in `call'
rack (2.0.0.rc1) lib/rack/head.rb:12:in `call'
activerecord (5.0.0.rc1) lib/active_record/migration.rb:552:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/callbacks.rb:38:in `block in call'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:97:in `__run_callbacks__'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:750:in `_run_call_callbacks'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:90:in `run_callbacks'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/callbacks.rb:36:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/remote_ip.rb:79:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/debug_exceptions.rb:49:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/show_exceptions.rb:31:in `call'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:36:in `call_app'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:24:in `block in call'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:70:in `block in tagged'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:26:in `tagged'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:70:in `tagged'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:24:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/request_id.rb:24:in `call'
rack (2.0.0.rc1) lib/rack/runtime.rb:22:in `call'
activesupport (5.0.0.rc1) lib/active_support/cache/strategy/local_cache_middleware.rb:28:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/static.rb:136:in `call'
rack (2.0.0.rc1) lib/rack/sendfile.rb:111:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
railties (5.0.0.rc1) lib/rails/engine.rb:522:in `call'
puma (3.4.0) lib/puma/configuration.rb:224:in `call'
puma (3.4.0) lib/puma/server.rb:569:in `handle_request'
puma (3.4.0) lib/puma/server.rb:406:in `process_client'
puma (3.4.0) lib/puma/server.rb:271:in `block in run'
puma (3.4.0) lib/puma/thread_pool.rb:114:in `call'
puma (3.4.0) lib/puma/thread_pool.rb:114:in `block in spawn_thread'
  [1m[36mAnswer Load (1.2ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."content" = $1 LIMIT $2[0m  [["content", "sasas"], ["LIMIT", 1]]
Started GET "/api/v1/random" for ::1 at 2016-06-17 16:26:08 -0400
  [1m[36mActiveRecord::SchemaMigration Load (0.5ms)[0m  [1m[34mSELECT "schema_migrations".* FROM "schema_migrations"[0m
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.8ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 29]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (71.21ms)
Completed 200 OK in 128ms (Views: 116.9ms | ActiveRecord: 8.0ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-17 16:26:15 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"qe"}, "question"=>{"data"=>{"id"=>"29", "attributes"=>{"content"=>"How do you evaluate success?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 29], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.5ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "qe"], ["question_id", 29], ["created_at", 2016-06-17 20:26:15 UTC], ["updated_at", 2016-06-17 20:26:15 UTC]]
  [1m[35m (86.0ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 95ms (ActiveRecord: 86.9ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-17 16:28:20 -0400
Started POST "/api/v1/answers" for ::1 at 2016-06-17 16:28:21 -0400
Started GET "/api/v1/random" for ::1 at 2016-06-17 16:28:31 -0400
Started GET "/api/v1/random" for ::1 at 2016-06-17 16:29:24 -0400
  [1m[36mActiveRecord::SchemaMigration Load (0.6ms)[0m  [1m[34mSELECT "schema_migrations".* FROM "schema_migrations"[0m
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.8ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 25]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (69.78ms)
Completed 200 OK in 127ms (Views: 116.1ms | ActiveRecord: 7.7ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-17 16:29:27 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"eqtqwetqw"}, "question"=>{"data"=>{"id"=>"25", "attributes"=>{"content"=>"Describe your production deployment process?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 25], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.5ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "eqtqwetqw"], ["question_id", 25], ["created_at", 2016-06-17 20:29:27 UTC], ["updated_at", 2016-06-17 20:29:27 UTC]]
  [1m[35m (16.3ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 24ms (ActiveRecord: 17.1ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-17 16:29:29 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"id"=>"16", "attributes"=>{"content"=>"asdfwdFE"}, "question"=>{"data"=>{"id"=>"25", "attributes"=>{"content"=>"Describe your production deployment process?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 25], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "asdfwdFE"], ["question_id", 25], ["created_at", 2016-06-17 20:29:29 UTC], ["updated_at", 2016-06-17 20:29:29 UTC]]
  [1m[35m (2.3ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 8ms (ActiveRecord: 3.1ms)


Started PATCH "/api/v1/answers/16" for ::1 at 2016-06-17 16:29:33 -0400
Processing by Api::V1::AnswersController#update as JSON
  Parameters: {"data"=>{"id"=>"16", "attributes"=>{"content"=>"asdfwdFE"}, "question"=>{"data"=>{"id"=>"25", "attributes"=>{"content"=>"Describe your production deployment process?"}, "type"=>"questions"}}, "type"=>"answers"}, "id"=>"16", "answer"=>{}}
Completed 500 Internal Server Error in 107976ms (ActiveRecord: 0.0ms)


  
SystemExit (exit):
  
app/controllers/api/v1/answers_controller.rb:20:in `update'
Started GET "/api/v1/random" for ::1 at 2016-06-17 16:31:25 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (1.7ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.7ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 12]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (249.31ms)
Completed 200 OK in 362ms (Views: 286.4ms | ActiveRecord: 11.0ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 16:32:28 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.6ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 17]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (117.85ms)
Completed 200 OK in 164ms (Views: 124.0ms | ActiveRecord: 1.3ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 16:33:15 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.7ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 29]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (229.73ms)
Completed 200 OK in 280ms (Views: 240.5ms | ActiveRecord: 1.5ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-17 16:33:18 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"wwrehgwer", "vote-count"=>nil, "vote-score"=>nil}, "question"=>{"data"=>{"id"=>"29", "attributes"=>{"content"=>"How do you evaluate success?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: vote-count, vote-score
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.9ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 29], ["LIMIT", 1]]
  [1m[35m (0.8ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.7ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "wwrehgwer"], ["question_id", 29], ["created_at", 2016-06-17 20:33:18 UTC], ["updated_at", 2016-06-17 20:33:18 UTC]]
  [1m[35m (79.5ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 223ms (ActiveRecord: 82.0ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-17 16:33:19 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"id"=>"15", "attributes"=>{"content"=>"sadvasd", "vote-count"=>nil, "vote-score"=>0}, "question"=>{"data"=>{"id"=>"29", "attributes"=>{"content"=>"How do you evaluate success?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: vote-count, vote-score
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 29], ["LIMIT", 1]]
  [1m[35m (0.5ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (1.1ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "sadvasd"], ["question_id", 29], ["created_at", 2016-06-17 20:33:19 UTC], ["updated_at", 2016-06-17 20:33:19 UTC]]
  [1m[35m (3.0ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 134ms (ActiveRecord: 5.4ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 16:36:02 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.9ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.7ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 14]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (298.42ms)
Completed 200 OK in 432ms (Views: 332.4ms | ActiveRecord: 13.1ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-17 16:36:05 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"asdfadsg", "vote-count"=>nil, "vote-score"=>nil}, "question"=>{"data"=>{"id"=>"14", "attributes"=>{"content"=>"Why do you want to work with us?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: vote-count, vote-score
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (1.0ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 14], ["LIMIT", 1]]
  [1m[35m (0.6ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.8ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "asdfadsg"], ["question_id", 14], ["created_at", 2016-06-17 20:36:05 UTC], ["updated_at", 2016-06-17 20:36:05 UTC]]
  [1m[35m (2.8ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 140ms (ActiveRecord: 5.1ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-17 16:36:08 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"id"=>"12", "attributes"=>{"content"=>"qwetyq4wy4y", "vote-count"=>nil, "vote-score"=>0}, "question"=>{"data"=>{"id"=>"14", "attributes"=>{"content"=>"Why do you want to work with us?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: vote-count, vote-score
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 14], ["LIMIT", 1]]
  [1m[35m (0.6ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.8ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "qwetyq4wy4y"], ["question_id", 14], ["created_at", 2016-06-17 20:36:08 UTC], ["updated_at", 2016-06-17 20:36:08 UTC]]
  [1m[35m (2.8ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 128ms (ActiveRecord: 4.7ms)


Started PATCH "/api/v1/answers/12" for ::1 at 2016-06-17 16:36:17 -0400
Processing by Api::V1::AnswersController#update as JSON
  Parameters: {"data"=>{"id"=>"12", "attributes"=>{"content"=>"qwetyq4wy4y", "vote-count"=>nil, "vote-score"=>0}, "question"=>{"data"=>{"id"=>"14", "attributes"=>{"content"=>"Why do you want to work with us?"}, "type"=>"questions"}}, "type"=>"answers"}, "id"=>"12", "answer"=>{}}
Completed 500 Internal Server Error in 48124ms (ActiveRecord: 0.0ms)


  
SystemExit (exit):
  
app/controllers/api/v1/answers_controller.rb:20:in `update'
Started GET "/api/v1/random" for ::1 at 2016-06-17 16:38:12 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.7ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 28]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (113.86ms)
Completed 200 OK in 162ms (Views: 120.6ms | ActiveRecord: 1.4ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-17 16:38:14 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"asdfsadf", "vote-count"=>nil, "vote-score"=>nil}, "question"=>{"data"=>{"id"=>"28", "attributes"=>{"content"=>"Do you have any questions for me?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: vote-count, vote-score
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 28], ["LIMIT", 1]]
  [1m[35m (0.6ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.7ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "asdfsadf"], ["question_id", 28], ["created_at", 2016-06-17 20:38:14 UTC], ["updated_at", 2016-06-17 20:38:14 UTC]]
  [1m[35m (221.2ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 360ms (ActiveRecord: 223.2ms)


Started GET "/api/v1/answers/21" for ::1 at 2016-06-17 16:39:08 -0400
  
AbstractController::ActionNotFound (The action 'show' could not be found for Api::V1::AnswersController):
  
actionpack (5.0.0.rc1) lib/abstract_controller/base.rb:121:in `process'
actionpack (5.0.0.rc1) lib/action_controller/metal.rb:190:in `dispatch'
actionpack (5.0.0.rc1) lib/action_controller/metal.rb:262:in `dispatch'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:50:in `dispatch'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:32:in `serve'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:39:in `block in serve'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:26:in `each'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:26:in `serve'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:725:in `call'
actionview (5.0.0.rc1) lib/action_view/digestor.rb:12:in `call'
rack (2.0.0.rc1) lib/rack/etag.rb:25:in `call'
rack (2.0.0.rc1) lib/rack/conditional_get.rb:25:in `call'
rack (2.0.0.rc1) lib/rack/head.rb:12:in `call'
activerecord (5.0.0.rc1) lib/active_record/migration.rb:552:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/callbacks.rb:38:in `block in call'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:97:in `__run_callbacks__'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:750:in `_run_call_callbacks'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:90:in `run_callbacks'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/callbacks.rb:36:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/remote_ip.rb:79:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/debug_exceptions.rb:49:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/show_exceptions.rb:31:in `call'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:36:in `call_app'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:24:in `block in call'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:70:in `block in tagged'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:26:in `tagged'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:70:in `tagged'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:24:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/request_id.rb:24:in `call'
rack (2.0.0.rc1) lib/rack/runtime.rb:22:in `call'
activesupport (5.0.0.rc1) lib/active_support/cache/strategy/local_cache_middleware.rb:28:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/static.rb:136:in `call'
rack (2.0.0.rc1) lib/rack/sendfile.rb:111:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
railties (5.0.0.rc1) lib/rails/engine.rb:522:in `call'
puma (3.4.0) lib/puma/configuration.rb:224:in `call'
puma (3.4.0) lib/puma/server.rb:569:in `handle_request'
puma (3.4.0) lib/puma/server.rb:406:in `process_client'
puma (3.4.0) lib/puma/server.rb:271:in `block in run'
puma (3.4.0) lib/puma/thread_pool.rb:114:in `call'
puma (3.4.0) lib/puma/thread_pool.rb:114:in `block in spawn_thread'
Started GET "/api/v1/random" for ::1 at 2016-06-17 16:39:10 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.9ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.9ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 30]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (216.81ms)
Completed 200 OK in 280ms (Views: 229.8ms | ActiveRecord: 1.7ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-17 16:39:12 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"asdfsdfds", "vote-count"=>nil, "vote-score"=>nil}, "question"=>{"data"=>{"id"=>"30", "attributes"=>{"content"=>"How would you describe your work style?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: vote-count, vote-score
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 30], ["LIMIT", 1]]
  [1m[35m (0.7ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.7ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "asdfsdfds"], ["question_id", 30], ["created_at", 2016-06-17 20:39:12 UTC], ["updated_at", 2016-06-17 20:39:12 UTC]]
  [1m[35m (34.5ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 172ms (ActiveRecord: 36.8ms)


Started GET "/api/v1/answers/17" for ::1 at 2016-06-17 16:39:49 -0400
  
AbstractController::ActionNotFound (The action 'show' could not be found for Api::V1::AnswersController):
  
actionpack (5.0.0.rc1) lib/abstract_controller/base.rb:121:in `process'
actionpack (5.0.0.rc1) lib/action_controller/metal.rb:190:in `dispatch'
actionpack (5.0.0.rc1) lib/action_controller/metal.rb:262:in `dispatch'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:50:in `dispatch'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:32:in `serve'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:39:in `block in serve'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:26:in `each'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:26:in `serve'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:725:in `call'
actionview (5.0.0.rc1) lib/action_view/digestor.rb:12:in `call'
rack (2.0.0.rc1) lib/rack/etag.rb:25:in `call'
rack (2.0.0.rc1) lib/rack/conditional_get.rb:25:in `call'
rack (2.0.0.rc1) lib/rack/head.rb:12:in `call'
activerecord (5.0.0.rc1) lib/active_record/migration.rb:552:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/callbacks.rb:38:in `block in call'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:97:in `__run_callbacks__'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:750:in `_run_call_callbacks'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:90:in `run_callbacks'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/callbacks.rb:36:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/remote_ip.rb:79:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/debug_exceptions.rb:49:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/show_exceptions.rb:31:in `call'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:36:in `call_app'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:24:in `block in call'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:70:in `block in tagged'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:26:in `tagged'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:70:in `tagged'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:24:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/request_id.rb:24:in `call'
rack (2.0.0.rc1) lib/rack/runtime.rb:22:in `call'
activesupport (5.0.0.rc1) lib/active_support/cache/strategy/local_cache_middleware.rb:28:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/static.rb:136:in `call'
rack (2.0.0.rc1) lib/rack/sendfile.rb:111:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
railties (5.0.0.rc1) lib/rails/engine.rb:522:in `call'
puma (3.4.0) lib/puma/configuration.rb:224:in `call'
puma (3.4.0) lib/puma/server.rb:569:in `handle_request'
puma (3.4.0) lib/puma/server.rb:406:in `process_client'
puma (3.4.0) lib/puma/server.rb:271:in `block in run'
puma (3.4.0) lib/puma/thread_pool.rb:114:in `call'
puma (3.4.0) lib/puma/thread_pool.rb:114:in `block in spawn_thread'
Started GET "/api/v1/random" for ::1 at 2016-06-17 16:39:51 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.6ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 27]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (179.75ms)
Completed 200 OK in 236ms (Views: 187.9ms | ActiveRecord: 1.4ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-17 16:39:53 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"asdfadsf", "vote-count"=>nil, "vote-score"=>nil}, "question"=>{"data"=>{"id"=>"27", "attributes"=>{"content"=>"How would you declare and use a constructor in Ruby?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: vote-count, vote-score
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 27], ["LIMIT", 1]]
  [1m[35m (0.7ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.7ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "asdfadsf"], ["question_id", 27], ["created_at", 2016-06-17 20:39:53 UTC], ["updated_at", 2016-06-17 20:39:53 UTC]]
  [1m[35m (2.9ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 140ms (ActiveRecord: 4.9ms)


Started GET "/api/v1/answers" for ::1 at 2016-06-17 16:40:39 -0400
Processing by Api::V1::AnswersController#index as JSON
  [1m[36mAnswer Load (1.1ms)[0m  [1m[34mSELECT "answers".* FROM "answers"[0m
[active_model_serializers]   [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mQuestion Load (1.1ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 4], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 4], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 31], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.5ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 31], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 32], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 32], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 19], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mQuestion Load (4.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 21], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mQuestion Load (0.9ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 3], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mQuestion Load (0.9ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 14], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 11], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 31], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 29], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 25], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 30], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 11], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 24], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.6ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 19], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 28], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 9], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 6], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 7], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.9ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 25], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 18], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 19], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 30], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.6ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 30], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.3ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 18], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 17], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.7ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 18], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 3], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 17], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 3], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 32], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 25], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 22], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 31], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 29], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.9ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 27], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.7ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 18], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (1.0ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 3], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 25], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 6], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.9ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 13], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 30], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 16], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 4], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.5ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 4], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 32], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.6ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 13], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 24], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mQuestion Load (1.0ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 8], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 15], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 24], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 10], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.5ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 29], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 23], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 18], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.7ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 18], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 30], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 24], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 29], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 10], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 22], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.5ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 9], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 23], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.7ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 15], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 15], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 19], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.5ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 18], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 27], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 3], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 12], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 20], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 22], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 11], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 32], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 27], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 22], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 22], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 21], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 20], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 3], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.6ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 25], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.7ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 29], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 9], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 9], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.5ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 9], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 29], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 25], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 25], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.6ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 29], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.6ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 29], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 14], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 14], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.6ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 28], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.5ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 30], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.5ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 27], ["LIMIT", 1]]
[active_model_serializers] Rendered ActiveModel::Serializer::CollectionSerializer with ActiveModelSerializers::Adapter::JsonApi (5546.33ms)
Completed 200 OK in 5787ms (Views: 5720.2ms | ActiveRecord: 62.7ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-17 16:45:34 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"id"=>"44", "attributes"=>{"content"=>"asdfadsf", "vote-count"=>9, "vote-score"=>0}, "question"=>{"data"=>{"id"=>"27", "attributes"=>{"content"=>"How would you declare and use a constructor in Ruby?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: vote-count, vote-score
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (1.7ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 27], ["LIMIT", 1]]
  [1m[35m (0.8ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.8ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "asdfadsf"], ["question_id", 27], ["created_at", 2016-06-17 20:45:34 UTC], ["updated_at", 2016-06-17 20:45:34 UTC]]
  [1m[35m (11.4ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 157ms (ActiveRecord: 14.7ms)


Started GET "/api/v1/answers/44" for ::1 at 2016-06-17 16:45:34 -0400
  
AbstractController::ActionNotFound (The action 'show' could not be found for Api::V1::AnswersController):
  
actionpack (5.0.0.rc1) lib/abstract_controller/base.rb:121:in `process'
actionpack (5.0.0.rc1) lib/action_controller/metal.rb:190:in `dispatch'
actionpack (5.0.0.rc1) lib/action_controller/metal.rb:262:in `dispatch'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:50:in `dispatch'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:32:in `serve'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:39:in `block in serve'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:26:in `each'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:26:in `serve'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:725:in `call'
actionview (5.0.0.rc1) lib/action_view/digestor.rb:12:in `call'
rack (2.0.0.rc1) lib/rack/etag.rb:25:in `call'
rack (2.0.0.rc1) lib/rack/conditional_get.rb:25:in `call'
rack (2.0.0.rc1) lib/rack/head.rb:12:in `call'
activerecord (5.0.0.rc1) lib/active_record/migration.rb:552:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/callbacks.rb:38:in `block in call'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:97:in `__run_callbacks__'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:750:in `_run_call_callbacks'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:90:in `run_callbacks'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/callbacks.rb:36:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/remote_ip.rb:79:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/debug_exceptions.rb:49:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/show_exceptions.rb:31:in `call'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:36:in `call_app'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:24:in `block in call'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:70:in `block in tagged'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:26:in `tagged'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:70:in `tagged'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:24:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/request_id.rb:24:in `call'
rack (2.0.0.rc1) lib/rack/runtime.rb:22:in `call'
activesupport (5.0.0.rc1) lib/active_support/cache/strategy/local_cache_middleware.rb:28:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/static.rb:136:in `call'
rack (2.0.0.rc1) lib/rack/sendfile.rb:111:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
railties (5.0.0.rc1) lib/rails/engine.rb:522:in `call'
puma (3.4.0) lib/puma/configuration.rb:224:in `call'
puma (3.4.0) lib/puma/server.rb:569:in `handle_request'
puma (3.4.0) lib/puma/server.rb:406:in `process_client'
puma (3.4.0) lib/puma/server.rb:271:in `block in run'
puma (3.4.0) lib/puma/thread_pool.rb:114:in `call'
puma (3.4.0) lib/puma/thread_pool.rb:114:in `block in spawn_thread'
Started GET "/api/v1/random" for ::1 at 2016-06-17 16:47:10 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.7ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 29]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (342.1ms)
Completed 200 OK in 407ms (Views: 357.3ms | ActiveRecord: 1.4ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-17 16:47:12 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"adsfadsf", "vote-count"=>nil, "vote-score"=>nil}, "question"=>{"data"=>{"id"=>"29", "attributes"=>{"content"=>"How do you evaluate success?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: vote-count, vote-score
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (1.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 29], ["LIMIT", 1]]
  [1m[35m (0.9ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (1.3ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "adsfadsf"], ["question_id", 29], ["created_at", 2016-06-17 20:47:12 UTC], ["updated_at", 2016-06-17 20:47:12 UTC]]
  [1m[35m (1269.6ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 1423ms (ActiveRecord: 1273.0ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 16:47:27 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.8ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 22]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (250.05ms)
Completed 200 OK in 304ms (Views: 257.0ms | ActiveRecord: 1.7ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-17 16:47:29 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"asdfsdf", "vote-count"=>nil, "vote-score"=>nil}, "question"=>{"data"=>{"id"=>"22", "attributes"=>{"content"=>"Can you tell me about a challenge you've faced at work and how you got through it?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: vote-count, vote-score
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 22], ["LIMIT", 1]]
  [1m[35m (0.5ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.8ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "asdfsdf"], ["question_id", 22], ["created_at", 2016-06-17 20:47:30 UTC], ["updated_at", 2016-06-17 20:47:30 UTC]]
  [1m[35m (3.0ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 141ms (ActiveRecord: 5.7ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-17 16:47:31 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"id"=>"40", "attributes"=>{"content"=>"asdfasdf", "vote-count"=>nil, "vote-score"=>0}, "question"=>{"data"=>{"id"=>"22", "attributes"=>{"content"=>"Can you tell me about a challenge you've faced at work and how you got through it?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: vote-count, vote-score
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 22], ["LIMIT", 1]]
  [1m[35m (0.5ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (1.2ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "asdfasdf"], ["question_id", 22], ["created_at", 2016-06-17 20:47:31 UTC], ["updated_at", 2016-06-17 20:47:31 UTC]]
  [1m[35m (2.8ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 144ms (ActiveRecord: 5.2ms)


Started PATCH "/api/v1/answers/40" for ::1 at 2016-06-17 16:47:34 -0400
Processing by Api::V1::AnswersController#update as JSON
  Parameters: {"data"=>{"id"=>"40", "attributes"=>{"content"=>"asdfasdf", "vote-count"=>nil, "vote-score"=>0}, "question"=>{"data"=>{"id"=>"22", "attributes"=>{"content"=>"Can you tell me about a challenge you've faced at work and how you got through it?"}, "type"=>"questions"}}, "type"=>"answers"}, "id"=>"40", "answer"=>{}}
Completed 500 Internal Server Error in 20402ms (ActiveRecord: 0.0ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 16:47:54 -0400
  
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
SystemExit (exit):
  Parameters: {"question"=>{}}
  
app/controllers/api/v1/answers_controller.rb:20:in `update'
  [1m[36mQuestion Load (408.1ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (102.0ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 2]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (954.31ms)
Completed 200 OK in 1950ms (Views: 1394.0ms | ActiveRecord: 510.1ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 16:47:56 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (6.9ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 23]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (140.89ms)
Completed 200 OK in 203ms (Views: 149.6ms | ActiveRecord: 7.7ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-17 16:47:58 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"sadfads", "vote-count"=>nil, "vote-score"=>nil}, "question"=>{"data"=>{"id"=>"23", "attributes"=>{"content"=>"Explain a polymorphic association?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: vote-count, vote-score
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 23], ["LIMIT", 1]]
  [1m[35m (0.5ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (1.6ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "sadfads"], ["question_id", 23], ["created_at", 2016-06-17 20:47:58 UTC], ["updated_at", 2016-06-17 20:47:58 UTC]]
  [1m[35m (2.5ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 141ms (ActiveRecord: 5.4ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-17 16:48:00 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"id"=>"66", "attributes"=>{"content"=>"sadfdasf", "vote-count"=>nil, "vote-score"=>0}, "question"=>{"data"=>{"id"=>"23", "attributes"=>{"content"=>"Explain a polymorphic association?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: vote-count, vote-score
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 23], ["LIMIT", 1]]
  [1m[35m (0.6ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.8ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "sadfdasf"], ["question_id", 23], ["created_at", 2016-06-17 20:48:00 UTC], ["updated_at", 2016-06-17 20:48:00 UTC]]
  [1m[35m (1.5ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 150ms (ActiveRecord: 3.5ms)


Started PATCH "/api/v1/answers/66" for ::1 at 2016-06-17 16:48:04 -0400
Processing by Api::V1::AnswersController#update as JSON
  Parameters: {"data"=>{"id"=>"66", "attributes"=>{"content"=>"sadfdasf", "vote-count"=>nil, "vote-score"=>0}, "question"=>{"data"=>{"id"=>"23", "attributes"=>{"content"=>"Explain a polymorphic association?"}, "type"=>"questions"}}, "type"=>"answers"}, "id"=>"66", "answer"=>{}}
Completed 500 Internal Server Error in 99567ms (ActiveRecord: 0.0ms)


  
SystemExit (exit):
  
app/controllers/api/v1/answers_controller.rb:20:in `update'
  [1m[36mActiveRecord::SchemaMigration Load (0.4ms)[0m  [1m[34mSELECT "schema_migrations".* FROM "schema_migrations"[0m
  [1m[35m (0.5ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1[0m  [["key", :environment]]
  [1m[36mActiveRecord::SchemaMigration Load (0.2ms)[0m  [1m[34mSELECT "schema_migrations".* FROM "schema_migrations"[0m
  [1m[35m (0.2ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1[0m  [["key", :environment]]
  [1m[36mActiveRecord::SchemaMigration Load (0.1ms)[0m  [1m[34mSELECT "schema_migrations".* FROM "schema_migrations"[0m
  [1m[35m (0.2ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1[0m  [["key", :environment]]
  [1m[35m (204.0ms)[0m  [1m[35mDROP DATABASE IF EXISTS "QIQAPI_development"[0m
  [1m[35m (238.6ms)[0m  [1m[35mDROP DATABASE IF EXISTS "QIQAPI_test"[0m
  [1m[35m (2379.5ms)[0m  [1m[35mCREATE DATABASE "QIQAPI_development" ENCODING = 'unicode'[0m
  [1m[35m (454.6ms)[0m  [1m[35mCREATE DATABASE "QIQAPI_test" ENCODING = 'unicode'[0m
  [1m[35mSQL (0.4ms)[0m  [1m[35mCREATE EXTENSION IF NOT EXISTS "plpgsql"[0m
  [1m[35m (34.8ms)[0m  [1m[35mCREATE TABLE "answers" ("id" serial primary key, "vote_score" integer DEFAULT 0, "vote_count" integer DEFAULT 0, "content" character varying, "question_id" integer, "created_at" timestamp, "updated_at" timestamp)[0m
  [1m[35m (6.3ms)[0m  [1m[35mCREATE TABLE "questions" ("id" serial primary key, "content" character varying, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  [1m[35m (22.1ms)[0m  [1m[35mCREATE TABLE "schema_migrations" ("version" character varying PRIMARY KEY)[0m
  [1m[35m (0.4ms)[0m  [1m[34mSELECT version FROM "schema_migrations"[0m
  [1m[35m (0.9ms)[0m  [1m[32mINSERT INTO "schema_migrations" (version) VALUES ('20160617182704')[0m
  [1m[35m (1.4ms)[0m  [1m[32mINSERT INTO schema_migrations (version) VALUES ('20160615195122'), ('20160615195241'), ('20160615195717');

[0m
  [1m[35m (3.8ms)[0m  [1m[35mCREATE TABLE "ar_internal_metadata" ("key" character varying PRIMARY KEY, "value" character varying, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  [1m[36mActiveRecord::InternalMetadata Load (0.3ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" ORDER BY "ar_internal_metadata"."key" ASC LIMIT $1[0m  [["LIMIT", 1]]
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.6ms)[0m  [1m[32mINSERT INTO "ar_internal_metadata" ("key", "value", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "key"[0m  [["key", "environment"], ["value", "development"], ["created_at", 2016-06-17 20:50:08 UTC], ["updated_at", 2016-06-17 20:50:08 UTC]]
  [1m[35m (0.7ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mActiveRecord::InternalMetadata Load (0.2ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" ORDER BY "ar_internal_metadata"."key" ASC LIMIT $1[0m  [["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35m (0.1ms)[0m  [1m[35mCOMMIT[0m
  [1m[35mSQL (0.3ms)[0m  [1m[35mCREATE EXTENSION IF NOT EXISTS "plpgsql"[0m
  [1m[35m (7.7ms)[0m  [1m[35mCREATE TABLE "answers" ("id" serial primary key, "vote_score" integer DEFAULT 0, "vote_count" integer DEFAULT 0, "content" character varying, "question_id" integer, "created_at" timestamp, "updated_at" timestamp)[0m
  [1m[35m (28.2ms)[0m  [1m[35mCREATE TABLE "questions" ("id" serial primary key, "content" character varying, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  [1m[35m (5.3ms)[0m  [1m[35mCREATE TABLE "schema_migrations" ("version" character varying PRIMARY KEY)[0m
  [1m[35m (0.5ms)[0m  [1m[34mSELECT version FROM "schema_migrations"[0m
  [1m[35m (0.9ms)[0m  [1m[32mINSERT INTO "schema_migrations" (version) VALUES ('20160617182704')[0m
  [1m[35m (0.8ms)[0m  [1m[32mINSERT INTO schema_migrations (version) VALUES ('20160615195122'), ('20160615195241'), ('20160615195717');

[0m
  [1m[35m (4.0ms)[0m  [1m[35mCREATE TABLE "ar_internal_metadata" ("key" character varying PRIMARY KEY, "value" character varying, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  [1m[36mActiveRecord::InternalMetadata Load (0.4ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" ORDER BY "ar_internal_metadata"."key" ASC LIMIT $1[0m  [["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "ar_internal_metadata" ("key", "value", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "key"[0m  [["key", "environment"], ["value", "development"], ["created_at", 2016-06-17 20:50:08 UTC], ["updated_at", 2016-06-17 20:50:08 UTC]]
  [1m[35m (0.9ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mActiveRecord::InternalMetadata Load (0.2ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" ORDER BY "ar_internal_metadata"."key" ASC LIMIT $1[0m  [["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35m (0.1ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mActiveRecord::SchemaMigration Load (0.4ms)[0m  [1m[34mSELECT "schema_migrations".* FROM "schema_migrations"[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.6ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "What are you looking for in terms of career development?"], ["created_at", 2016-06-17 20:50:09 UTC], ["updated_at", 2016-06-17 20:50:09 UTC]]
  [1m[35m (0.9ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "How many ways can you center a div?"], ["created_at", 2016-06-17 20:50:09 UTC], ["updated_at", 2016-06-17 20:50:09 UTC]]
  [1m[35m (1.0ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "What are your strengths and weaknesses?"], ["created_at", 2016-06-17 20:50:09 UTC], ["updated_at", 2016-06-17 20:50:09 UTC]]
  [1m[35m (0.6ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "Explain the process of web development to a middle school kid."], ["created_at", 2016-06-17 20:50:09 UTC], ["updated_at", 2016-06-17 20:50:09 UTC]]
  [1m[35m (0.6ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "What did you like least about your last job?"], ["created_at", 2016-06-17 20:50:09 UTC], ["updated_at", 2016-06-17 20:50:09 UTC]]
  [1m[35m (0.7ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "How does the web work?"], ["created_at", 2016-06-17 20:50:09 UTC], ["updated_at", 2016-06-17 20:50:09 UTC]]
  [1m[35m (0.6ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "What is function hoisting in JavaScript?"], ["created_at", 2016-06-17 20:50:09 UTC], ["updated_at", 2016-06-17 20:50:09 UTC]]
  [1m[35m (0.6ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "How did you learn programming?"], ["created_at", 2016-06-17 20:50:09 UTC], ["updated_at", 2016-06-17 20:50:09 UTC]]
  [1m[35m (0.6ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "What is a closure?"], ["created_at", 2016-06-17 20:50:09 UTC], ["updated_at", 2016-06-17 20:50:09 UTC]]
  [1m[35m (0.7ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "How did you learn web development?"], ["created_at", 2016-06-17 20:50:09 UTC], ["updated_at", 2016-06-17 20:50:09 UTC]]
  [1m[35m (0.6ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "Describe a time when you were able to improve upon the design that was originally suggested?"], ["created_at", 2016-06-17 20:50:09 UTC], ["updated_at", 2016-06-17 20:50:09 UTC]]
  [1m[35m (0.8ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "So tell me about yourself."], ["created_at", 2016-06-17 20:50:09 UTC], ["updated_at", 2016-06-17 20:50:09 UTC]]
  [1m[35m (0.7ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "Where would you like to be in your career five years from now?"], ["created_at", 2016-06-17 20:50:09 UTC], ["updated_at", 2016-06-17 20:50:09 UTC]]
  [1m[35m (0.7ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "Why do you want to work with us?"], ["created_at", 2016-06-17 20:50:09 UTC], ["updated_at", 2016-06-17 20:50:09 UTC]]
  [1m[35m (0.8ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "Can you name two programming paradigms important for JavaScript app developers?"], ["created_at", 2016-06-17 20:50:09 UTC], ["updated_at", 2016-06-17 20:50:09 UTC]]
  [1m[35m (0.7ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.6ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "Tell me about your long-term goals."], ["created_at", 2016-06-17 20:50:09 UTC], ["updated_at", 2016-06-17 20:50:09 UTC]]
  [1m[35m (0.7ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "Tell me about the most recent project you worked on. What were your responsibilities?"], ["created_at", 2016-06-17 20:50:09 UTC], ["updated_at", 2016-06-17 20:50:09 UTC]]
  [1m[35m (3.5ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "What are your short-term goals."], ["created_at", 2016-06-17 20:50:09 UTC], ["updated_at", 2016-06-17 20:50:09 UTC]]
  [1m[35m (70.8ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.3ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.5ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "Do you have any questions for me?"], ["created_at", 2016-06-17 20:50:09 UTC], ["updated_at", 2016-06-17 20:50:09 UTC]]
  [1m[35m (0.9ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "Please walk me through one of the projects on your resume."], ["created_at", 2016-06-17 20:50:09 UTC], ["updated_at", 2016-06-17 20:50:09 UTC]]
  [1m[35m (0.7ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "What is the difference between classical inheritance and prototypal inheritance? "], ["created_at", 2016-06-17 20:50:09 UTC], ["updated_at", 2016-06-17 20:50:09 UTC]]
  [1m[35m (0.9ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "Can you tell me about a challenge you've faced at work and how you got through it?"], ["created_at", 2016-06-17 20:50:09 UTC], ["updated_at", 2016-06-17 20:50:09 UTC]]
  [1m[35m (0.9ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "Explain a polymorphic association?"], ["created_at", 2016-06-17 20:50:09 UTC], ["updated_at", 2016-06-17 20:50:09 UTC]]
  [1m[35m (0.9ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "Why do you want to be a web developer?"], ["created_at", 2016-06-17 20:50:09 UTC], ["updated_at", 2016-06-17 20:50:09 UTC]]
  [1m[35m (0.7ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "Describe your production deployment process?"], ["created_at", 2016-06-17 20:50:09 UTC], ["updated_at", 2016-06-17 20:50:09 UTC]]
  [1m[35m (0.7ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "Why do you want to work for us?"], ["created_at", 2016-06-17 20:50:09 UTC], ["updated_at", 2016-06-17 20:50:09 UTC]]
  [1m[35m (0.7ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "How would you declare and use a constructor in Ruby?"], ["created_at", 2016-06-17 20:50:09 UTC], ["updated_at", 2016-06-17 20:50:09 UTC]]
  [1m[35m (0.7ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "Do you have any questions for me?"], ["created_at", 2016-06-17 20:50:09 UTC], ["updated_at", 2016-06-17 20:50:09 UTC]]
  [1m[35m (0.7ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "How do you evaluate success?"], ["created_at", 2016-06-17 20:50:09 UTC], ["updated_at", 2016-06-17 20:50:09 UTC]]
  [1m[35m (0.6ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "How would you describe your work style?"], ["created_at", 2016-06-17 20:50:09 UTC], ["updated_at", 2016-06-17 20:50:09 UTC]]
  [1m[35m (0.9ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.5ms)[0m  [1m[32mINSERT INTO "answers" ("vote_score", "vote_count", "content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["vote_score", 15], ["vote_count", 20], ["content", "<p>Three, and more than you'd expect!</p>\n\n  <p>You could center a div horizontally, vertically, or both and there are\n  a ton of ways to do them each. It also depends on what you're trying to\n  center. The most common way I do it is using the margins. If you set\n    a div's margin to 0 auto, to will automatically get the width of the\n    client's screen and use that information to center the div.</p>\n\n  <p>If I had text within a div, I wold use the text-align: center css\n  attribute on the div.</p>"], ["question_id", 2], ["created_at", 2016-06-17 20:50:09 UTC], ["updated_at", 2016-06-17 20:50:09 UTC]]
  [1m[35m (16.1ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.3ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.5ms)[0m  [1m[32mINSERT INTO "answers" ("vote_score", "vote_count", "content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["vote_score", -5], ["vote_count", 7], ["content", "<p>Just use margin dude.</p>"], ["question_id", 2], ["created_at", 2016-06-17 20:50:09 UTC], ["updated_at", 2016-06-17 20:50:09 UTC]]
  [1m[35m (1.1ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.5ms)[0m  [1m[32mINSERT INTO "answers" ("vote_score", "vote_count", "content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["vote_score", 2], ["vote_count", 2], ["content", "<p>You know when you write notes and pass them to Suzie from\n  down the street? That's kind of what I do. Websites are like notes\n  you want your friends to read. For them to read your notes, you\n  need to also give them the note right? Well that is what the Internet\n  does for you. It sends the websites to the people who want to read\n  them.</p>\n\n  <p>The best part is, you know how you don't want Ms. Robinson to see\n  you pass that note? It's like that with the Internet too. There's\n  ways of keeping the visits to your website secret!</p>"], ["question_id", 4], ["created_at", 2016-06-17 20:50:09 UTC], ["updated_at", 2016-06-17 20:50:09 UTC]]
  [1m[35m (0.7ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "answers" ("vote_score", "vote_count", "content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["vote_score", -7], ["vote_count", 12], ["content", "<p>Web development is like, you know, creating front end\n  presentations of backend APIs using asynchronious requests.</p>"], ["question_id", 4], ["created_at", 2016-06-17 20:50:09 UTC], ["updated_at", 2016-06-17 20:50:09 UTC]]
  [1m[35m (1.0ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "How does the web work?"], ["created_at", 2016-06-17 20:50:09 UTC], ["updated_at", 2016-06-17 20:50:09 UTC]]
  [1m[35m (0.7ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "answers" ("vote_score", "vote_count", "content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["vote_score", -20], ["vote_count", 22], ["content", "<p>It's a series of tubes.</p>"], ["question_id", 31], ["created_at", 2016-06-17 20:50:09 UTC], ["updated_at", 2016-06-17 20:50:09 UTC]]
  [1m[35m (1.0ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "answers" ("vote_score", "vote_count", "content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["vote_score", 5], ["vote_count", 7], ["content", "The Internet has a technical side and a social side. There's the\n  infrastructure, like routers, cables, satelites, ISPs, servers,\n  and website code, and there are the users who participate in the\n  Internet by creating content for it's applications and browsing\n  the sites.</p>\n\n  <p>I imagine you guys are interested in the technical side though\n  right? (Yes)</p>\n\n  <p>In short, I'd say it's a communication network designed\n  to deliver messages between computers. One of the most interesting\n  things about it, I think, is that in the end, it really is a\n  bunch of cables! Some run under the oceans, others go through\n  mountains and under forests. Some signals travel through space! All\n  the code we write goes through those cables, I think that's pretty\n  amazing!</p>"], ["question_id", 31], ["created_at", 2016-06-17 20:50:09 UTC], ["updated_at", 2016-06-17 20:50:09 UTC]]
  [1m[35m (1.0ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.6ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "How did you learn programming?"], ["created_at", 2016-06-17 20:50:09 UTC], ["updated_at", 2016-06-17 20:50:09 UTC]]
  [1m[35m (0.6ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "answers" ("vote_score", "vote_count", "content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["vote_score", -3], ["vote_count", 4], ["content", "<p>I just started Googling it you know, and I liked doing it so\n  I ended up trying to do it professionally.</p>"], ["question_id", 32], ["created_at", 2016-06-17 20:50:09 UTC], ["updated_at", 2016-06-17 20:50:09 UTC]]
  [1m[35m (0.7ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "answers" ("vote_score", "vote_count", "content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["vote_score", -3], ["vote_count", 4], ["content", "<p>For me, it started back in 2011 when I was doing social science\n  at Stockholm University. The creation of communities had become a\n  passion of mine so I was exploring ways of finding data on\n  social networks. The Internet was the obvious place to look so I\n  found myself writing Python scripts to build simple web scrapers and\n  spiders.</p>\n\n  <p>It was exciting, I discovered coding makes me happy not just for\n  the results it creates but because I like the way it looks. Solving\n  problems is interesting.</p>"], ["question_id", 32], ["created_at", 2016-06-17 20:50:09 UTC], ["updated_at", 2016-06-17 20:50:09 UTC]]
  [1m[35m (2.1ms)[0m  [1m[35mCOMMIT[0m
Started GET "/api/v1/random" for ::1 at 2016-06-17 16:50:56 -0400
  [1m[36mActiveRecord::SchemaMigration Load (0.6ms)[0m  [1m[34mSELECT "schema_migrations".* FROM "schema_migrations"[0m
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.5ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.7ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 14]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (86.08ms)
Completed 200 OK in 206ms (Views: 196.5ms | ActiveRecord: 6.8ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-17 16:50:59 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"sadffsda", "vote-count"=>nil, "vote-score"=>nil}, "question"=>{"data"=>{"id"=>"14", "attributes"=>{"content"=>"Why do you want to work with us?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: vote-count, vote-score
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 14], ["LIMIT", 1]]
  [1m[36mAnswer Load (74.4ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."question_id" = $1 AND "answers"."content" = $2 LIMIT $3[0m  [["question_id", 14], ["content", "sadffsda"], ["LIMIT", 1]]
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.6ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "sadffsda"], ["question_id", 14], ["created_at", 2016-06-17 20:50:59 UTC], ["updated_at", 2016-06-17 20:50:59 UTC]]
  [1m[35m (51.4ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35m (0.2ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 154ms (ActiveRecord: 129.6ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 16:51:00 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.5ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 22]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (2.72ms)
Completed 200 OK in 6ms (Views: 3.1ms | ActiveRecord: 0.7ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-17 16:51:01 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"asddfassf", "vote-count"=>nil, "vote-score"=>nil}, "question"=>{"data"=>{"id"=>"22", "attributes"=>{"content"=>"Can you tell me about a challenge you've faced at work and how you got through it?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: vote-count, vote-score
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 22], ["LIMIT", 1]]
  [1m[36mAnswer Load (0.4ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."question_id" = $1 AND "answers"."content" = $2 LIMIT $3[0m  [["question_id", 22], ["content", "asddfassf"], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "asddfassf"], ["question_id", 22], ["created_at", 2016-06-17 20:51:01 UTC], ["updated_at", 2016-06-17 20:51:01 UTC]]
  [1m[35m (1.1ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35m (0.1ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 8ms (ActiveRecord: 2.3ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 16:51:02 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.3ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 20]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (3.22ms)
Completed 200 OK in 6ms (Views: 3.5ms | ActiveRecord: 0.7ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-17 16:51:03 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"asdfassfdasd", "vote-count"=>nil, "vote-score"=>nil}, "question"=>{"data"=>{"id"=>"20", "attributes"=>{"content"=>"Please walk me through one of the projects on your resume."}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: vote-count, vote-score
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 20], ["LIMIT", 1]]
  [1m[36mAnswer Load (0.4ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."question_id" = $1 AND "answers"."content" = $2 LIMIT $3[0m  [["question_id", 20], ["content", "asdfassfdasd"], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "asdfassfdasd"], ["question_id", 20], ["created_at", 2016-06-17 20:51:03 UTC], ["updated_at", 2016-06-17 20:51:03 UTC]]
  [1m[35m (2.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35m (0.1ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 10ms (ActiveRecord: 3.7ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 16:51:04 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.5ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 27]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (2.91ms)
Completed 200 OK in 5ms (Views: 3.2ms | ActiveRecord: 0.7ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-17 16:51:05 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"qewreqwr", "vote-count"=>nil, "vote-score"=>nil}, "question"=>{"data"=>{"id"=>"27", "attributes"=>{"content"=>"How would you declare and use a constructor in Ruby?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: vote-count, vote-score
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 27], ["LIMIT", 1]]
  [1m[36mAnswer Load (0.4ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."question_id" = $1 AND "answers"."content" = $2 LIMIT $3[0m  [["question_id", 27], ["content", "qewreqwr"], ["LIMIT", 1]]
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "qewreqwr"], ["question_id", 27], ["created_at", 2016-06-17 20:51:05 UTC], ["updated_at", 2016-06-17 20:51:05 UTC]]
  [1m[35m (2.2ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35m (0.1ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 10ms (ActiveRecord: 3.6ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 16:51:06 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 21]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (2.49ms)
Completed 200 OK in 5ms (Views: 2.7ms | ActiveRecord: 0.6ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-17 16:51:07 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"qewrqewr", "vote-count"=>nil, "vote-score"=>nil}, "question"=>{"data"=>{"id"=>"21", "attributes"=>{"content"=>"What is the difference between classical inheritance and prototypal inheritance? "}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: vote-count, vote-score
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 21], ["LIMIT", 1]]
  [1m[36mAnswer Load (0.4ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."question_id" = $1 AND "answers"."content" = $2 LIMIT $3[0m  [["question_id", 21], ["content", "qewrqewr"], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "qewrqewr"], ["question_id", 21], ["created_at", 2016-06-17 20:51:07 UTC], ["updated_at", 2016-06-17 20:51:07 UTC]]
  [1m[35m (2.1ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35m (0.1ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 9ms (ActiveRecord: 3.4ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 16:51:08 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.5ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.3ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 8]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (3.33ms)
Completed 200 OK in 6ms (Views: 3.6ms | ActiveRecord: 0.7ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-17 16:51:10 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"qewewrwe", "vote-count"=>nil, "vote-score"=>nil}, "question"=>{"data"=>{"id"=>"8", "attributes"=>{"content"=>"How did you learn programming?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: vote-count, vote-score
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 8], ["LIMIT", 1]]
  [1m[36mAnswer Load (0.4ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."question_id" = $1 AND "answers"."content" = $2 LIMIT $3[0m  [["question_id", 8], ["content", "qewewrwe"], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "qewewrwe"], ["question_id", 8], ["created_at", 2016-06-17 20:51:10 UTC], ["updated_at", 2016-06-17 20:51:10 UTC]]
  [1m[35m (2.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35m (0.1ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 10ms (ActiveRecord: 3.7ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 16:51:10 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 15]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (2.93ms)
Completed 200 OK in 5ms (Views: 3.2ms | ActiveRecord: 0.6ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-17 16:51:12 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"qewewrqrwe", "vote-count"=>nil, "vote-score"=>nil}, "question"=>{"data"=>{"id"=>"15", "attributes"=>{"content"=>"Can you name two programming paradigms important for JavaScript app developers?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: vote-count, vote-score
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 15], ["LIMIT", 1]]
  [1m[36mAnswer Load (0.4ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."question_id" = $1 AND "answers"."content" = $2 LIMIT $3[0m  [["question_id", 15], ["content", "qewewrqrwe"], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "qewewrqrwe"], ["question_id", 15], ["created_at", 2016-06-17 20:51:12 UTC], ["updated_at", 2016-06-17 20:51:12 UTC]]
  [1m[35m (3.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35m (0.1ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 11ms (ActiveRecord: 4.5ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 16:51:13 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 18]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (2.91ms)
Completed 200 OK in 5ms (Views: 3.3ms | ActiveRecord: 0.6ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-17 16:51:15 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"qwerqwe", "vote-count"=>nil, "vote-score"=>nil}, "question"=>{"data"=>{"id"=>"18", "attributes"=>{"content"=>"What are your short-term goals."}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: vote-count, vote-score
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 18], ["LIMIT", 1]]
  [1m[36mAnswer Load (0.4ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."question_id" = $1 AND "answers"."content" = $2 LIMIT $3[0m  [["question_id", 18], ["content", "qwerqwe"], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "qwerqwe"], ["question_id", 18], ["created_at", 2016-06-17 20:51:15 UTC], ["updated_at", 2016-06-17 20:51:15 UTC]]
  [1m[35m (2.2ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35m (0.1ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 10ms (ActiveRecord: 3.5ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 16:51:17 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 5]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (3.6ms)
Completed 200 OK in 6ms (Views: 3.9ms | ActiveRecord: 0.6ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-17 16:51:18 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"weqrqewrqew", "vote-count"=>nil, "vote-score"=>nil}, "question"=>{"data"=>{"id"=>"5", "attributes"=>{"content"=>"What did you like least about your last job?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: vote-count, vote-score
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 5], ["LIMIT", 1]]
  [1m[36mAnswer Load (0.3ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."question_id" = $1 AND "answers"."content" = $2 LIMIT $3[0m  [["question_id", 5], ["content", "weqrqewrqew"], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "weqrqewrqew"], ["question_id", 5], ["created_at", 2016-06-17 20:51:18 UTC], ["updated_at", 2016-06-17 20:51:18 UTC]]
  [1m[35m (2.1ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35m (0.1ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 9ms (ActiveRecord: 3.3ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 16:51:20 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 10]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (2.87ms)
Completed 200 OK in 5ms (Views: 3.2ms | ActiveRecord: 0.6ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-17 16:51:21 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"eqwrqew", "vote-count"=>nil, "vote-score"=>nil}, "question"=>{"data"=>{"id"=>"10", "attributes"=>{"content"=>"How did you learn web development?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: vote-count, vote-score
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 10], ["LIMIT", 1]]
  [1m[36mAnswer Load (0.4ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."question_id" = $1 AND "answers"."content" = $2 LIMIT $3[0m  [["question_id", 10], ["content", "eqwrqew"], ["LIMIT", 1]]
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "eqwrqew"], ["question_id", 10], ["created_at", 2016-06-17 20:51:21 UTC], ["updated_at", 2016-06-17 20:51:21 UTC]]
  [1m[35m (2.1ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35m (0.1ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 10ms (ActiveRecord: 3.5ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 16:51:22 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 22]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (109.29ms)
Completed 200 OK in 112ms (Views: 109.7ms | ActiveRecord: 0.6ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 16:51:38 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 22]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (4.39ms)
Completed 200 OK in 8ms (Views: 4.9ms | ActiveRecord: 0.8ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 16:51:41 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 24]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (2.31ms)
Completed 200 OK in 4ms (Views: 2.6ms | ActiveRecord: 0.5ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-17 16:51:43 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"qwefqwe", "vote-count"=>nil, "vote-score"=>nil}, "question"=>{"data"=>{"id"=>"24", "attributes"=>{"content"=>"Why do you want to be a web developer?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: vote-count, vote-score
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 24], ["LIMIT", 1]]
  [1m[36mAnswer Load (0.5ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."question_id" = $1 AND "answers"."content" = $2 LIMIT $3[0m  [["question_id", 24], ["content", "qwefqwe"], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "qwefqwe"], ["question_id", 24], ["created_at", 2016-06-17 20:51:43 UTC], ["updated_at", 2016-06-17 20:51:43 UTC]]
  [1m[35m (3.0ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35m (0.1ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 10ms (ActiveRecord: 4.3ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 16:51:45 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 21]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (9.25ms)
Completed 200 OK in 12ms (Views: 9.7ms | ActiveRecord: 0.6ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-17 16:51:47 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"asdfadsf", "vote-count"=>nil, "vote-score"=>nil}, "question"=>{"data"=>{"id"=>"21", "attributes"=>{"content"=>"What is the difference between classical inheritance and prototypal inheritance? "}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: vote-count, vote-score
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 21], ["LIMIT", 1]]
  [1m[36mAnswer Load (0.6ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."question_id" = $1 AND "answers"."content" = $2 LIMIT $3[0m  [["question_id", 21], ["content", "asdfadsf"], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "asdfadsf"], ["question_id", 21], ["created_at", 2016-06-17 20:51:47 UTC], ["updated_at", 2016-06-17 20:51:47 UTC]]
  [1m[35m (2.0ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35m (0.1ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 10ms (ActiveRecord: 3.5ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-17 16:51:48 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"id"=>"13", "attributes"=>{"content"=>"qewrqewr", "vote-count"=>nil, "vote-score"=>0}, "question"=>{"data"=>{"id"=>"21", "attributes"=>{"content"=>"What is the difference between classical inheritance and prototypal inheritance? "}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: vote-count, vote-score
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 21], ["LIMIT", 1]]
  [1m[36mAnswer Load (0.3ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."question_id" = $1 AND "answers"."content" = $2 LIMIT $3[0m  [["question_id", 21], ["content", "qewrqewr"], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35m (0.1ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 4ms (ActiveRecord: 0.8ms)


Started PATCH "/api/v1/answers/13" for ::1 at 2016-06-17 16:51:58 -0400
Processing by Api::V1::AnswersController#update as JSON
  Parameters: {"data"=>{"id"=>"13", "attributes"=>{"content"=>"qewrqewr", "vote-count"=>nil, "vote-score"=>0}, "question"=>{"data"=>{"id"=>"21", "attributes"=>{"content"=>"What is the difference between classical inheritance and prototypal inheritance? "}, "type"=>"questions"}}, "type"=>"answers"}, "id"=>"13", "answer"=>{}}
Completed 500 Internal Server Error in 126818ms (ActiveRecord: 0.0ms)


  
SystemExit (exit):
  
app/controllers/api/v1/answers_controller.rb:20:in `update'
Started GET "/api/v1/random" for ::1 at 2016-06-17 16:54:07 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.9ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.7ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 5]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (228.52ms)
Completed 200 OK in 334ms (Views: 265.0ms | ActiveRecord: 1.6ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-17 16:54:10 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"qwrqewr", "vote-count"=>nil, "vote-score"=>nil}, "question"=>{"data"=>{"id"=>"5", "attributes"=>{"content"=>"What did you like least about your last job?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: vote-count, vote-score
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 5], ["LIMIT", 1]]
  [1m[35m (0.6ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (1.1ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "qwrqewr"], ["question_id", 5], ["created_at", 2016-06-17 20:54:11 UTC], ["updated_at", 2016-06-17 20:54:11 UTC]]
  [1m[35m (440.7ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 570ms (ActiveRecord: 443.7ms)


Started GET "/api/v1/answers" for ::1 at 2016-06-17 16:54:52 -0400
Processing by Api::V1::AnswersController#index as JSON
  [1m[36mAnswer Load (0.7ms)[0m  [1m[34mSELECT "answers".* FROM "answers"[0m
[active_model_serializers]   [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.7ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 4], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 4], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 31], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.3ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 31], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 32], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 32], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 14], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 22], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 20], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 27], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mQuestion Load (0.5ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 21], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 8], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 15], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 18], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mQuestion Load (0.5ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 5], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 10], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mQuestion Load (1.0ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 24], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 21], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.5ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 5], ["LIMIT", 1]]
[active_model_serializers] Rendered ActiveModel::Serializer::CollectionSerializer with ActiveModelSerializers::Adapter::JsonApi (989.43ms)
Completed 200 OK in 1044ms (Views: 1028.0ms | ActiveRecord: 13.0ms)


Started GET "/api/v1/answers" for ::1 at 2016-06-17 16:56:24 -0400
Processing by Api::V1::AnswersController#index as JSON
  [1m[36mAnswer Load (0.8ms)[0m  [1m[34mSELECT "answers".* FROM "answers"[0m
[active_model_serializers]   [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mQuestion Load (1.0ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 4], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 4], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 31], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 31], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 32], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 32], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 14], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mQuestion Load (1.1ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 22], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 20], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 27], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 21], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 8], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mQuestion Load (1.0ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 15], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 18], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 5], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mQuestion Load (1.0ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 10], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 24], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 21], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.6ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 5], ["LIMIT", 1]]
[active_model_serializers] Rendered ActiveModel::Serializer::CollectionSerializer with ActiveModelSerializers::Adapter::JsonApi (1128.94ms)
Completed 200 OK in 1195ms (Views: 1173.0ms | ActiveRecord: 14.6ms)


Started GET "/api/v1/answers/2" for ::1 at 2016-06-17 16:58:33 -0400
  
AbstractController::ActionNotFound (The action 'show' could not be found for Api::V1::AnswersController):
  
actionpack (5.0.0.rc1) lib/abstract_controller/base.rb:121:in `process'
actionpack (5.0.0.rc1) lib/action_controller/metal.rb:190:in `dispatch'
actionpack (5.0.0.rc1) lib/action_controller/metal.rb:262:in `dispatch'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:50:in `dispatch'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:32:in `serve'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:39:in `block in serve'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:26:in `each'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:26:in `serve'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:725:in `call'
actionview (5.0.0.rc1) lib/action_view/digestor.rb:12:in `call'
rack (2.0.0.rc1) lib/rack/etag.rb:25:in `call'
rack (2.0.0.rc1) lib/rack/conditional_get.rb:25:in `call'
rack (2.0.0.rc1) lib/rack/head.rb:12:in `call'
activerecord (5.0.0.rc1) lib/active_record/migration.rb:552:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/callbacks.rb:38:in `block in call'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:97:in `__run_callbacks__'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:750:in `_run_call_callbacks'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:90:in `run_callbacks'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/callbacks.rb:36:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/remote_ip.rb:79:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/debug_exceptions.rb:49:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/show_exceptions.rb:31:in `call'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:36:in `call_app'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:24:in `block in call'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:70:in `block in tagged'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:26:in `tagged'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:70:in `tagged'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:24:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/request_id.rb:24:in `call'
rack (2.0.0.rc1) lib/rack/runtime.rb:22:in `call'
activesupport (5.0.0.rc1) lib/active_support/cache/strategy/local_cache_middleware.rb:28:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/static.rb:136:in `call'
rack (2.0.0.rc1) lib/rack/sendfile.rb:111:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
railties (5.0.0.rc1) lib/rails/engine.rb:522:in `call'
puma (3.4.0) lib/puma/configuration.rb:224:in `call'
puma (3.4.0) lib/puma/server.rb:569:in `handle_request'
puma (3.4.0) lib/puma/server.rb:406:in `process_client'
puma (3.4.0) lib/puma/server.rb:271:in `block in run'
puma (3.4.0) lib/puma/thread_pool.rb:114:in `call'
puma (3.4.0) lib/puma/thread_pool.rb:114:in `block in spawn_thread'
Started GET "/api/v1/random" for ::1 at 2016-06-17 16:58:35 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.7ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 16]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (72.07ms)
Completed 200 OK in 132ms (Views: 85.1ms | ActiveRecord: 1.5ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-17 16:58:37 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"asdfsdf", "vote-count"=>nil, "vote-score"=>nil}, "question"=>{"data"=>{"id"=>"16", "attributes"=>{"content"=>"Tell me about your long-term goals."}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: vote-count, vote-score
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (1.0ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 16], ["LIMIT", 1]]
  [1m[35m (0.6ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.8ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "asdfsdf"], ["question_id", 16], ["created_at", 2016-06-17 20:58:37 UTC], ["updated_at", 2016-06-17 20:58:37 UTC]]
  [1m[35m (84.0ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 215ms (ActiveRecord: 86.4ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 16:58:38 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.7ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 9]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (77.51ms)
Completed 200 OK in 134ms (Views: 87.8ms | ActiveRecord: 1.5ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-17 16:58:40 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"asdfadsfs", "vote-count"=>nil, "vote-score"=>nil}, "question"=>{"data"=>{"id"=>"9", "attributes"=>{"content"=>"What is a closure?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: vote-count, vote-score
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 9], ["LIMIT", 1]]
  [1m[35m (0.9ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (1.3ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "asdfadsfs"], ["question_id", 9], ["created_at", 2016-06-17 20:58:40 UTC], ["updated_at", 2016-06-17 20:58:40 UTC]]
  [1m[35m (3.3ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 142ms (ActiveRecord: 6.1ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 16:58:41 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.7ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 29]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (68.66ms)
Completed 200 OK in 126ms (Views: 79.1ms | ActiveRecord: 1.5ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-17 16:58:43 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"asdgadsgg", "vote-count"=>nil, "vote-score"=>nil}, "question"=>{"data"=>{"id"=>"29", "attributes"=>{"content"=>"How do you evaluate success?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: vote-count, vote-score
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 29], ["LIMIT", 1]]
  [1m[35m (0.5ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.7ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "asdgadsgg"], ["question_id", 29], ["created_at", 2016-06-17 20:58:43 UTC], ["updated_at", 2016-06-17 20:58:43 UTC]]
  [1m[35m (2.0ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 130ms (ActiveRecord: 3.9ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 16:58:44 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.7ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 25]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (76.43ms)
Completed 200 OK in 129ms (Views: 85.6ms | ActiveRecord: 1.4ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-17 16:58:45 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"asdgadsg", "vote-count"=>nil, "vote-score"=>nil}, "question"=>{"data"=>{"id"=>"25", "attributes"=>{"content"=>"Describe your production deployment process?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: vote-count, vote-score
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.9ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 25], ["LIMIT", 1]]
  [1m[35m (0.8ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.7ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "asdgadsg"], ["question_id", 25], ["created_at", 2016-06-17 20:58:45 UTC], ["updated_at", 2016-06-17 20:58:45 UTC]]
  [1m[35m (3.1ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 142ms (ActiveRecord: 5.6ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 16:58:46 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.9ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.7ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 2]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (146.87ms)
Completed 200 OK in 196ms (Views: 154.1ms | ActiveRecord: 1.6ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-17 16:58:48 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"asdgadsaxg", "vote-count"=>nil, "vote-score"=>nil}, "question"=>{"data"=>{"id"=>"2", "attributes"=>{"content"=>"How many ways can you center a div?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: vote-count, vote-score
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
  [1m[35m (0.5ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.8ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "asdgadsaxg"], ["question_id", 2], ["created_at", 2016-06-17 20:58:48 UTC], ["updated_at", 2016-06-17 20:58:48 UTC]]
  [1m[35m (2.7ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 135ms (ActiveRecord: 4.5ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-17 17:00:34 -0400
Started POST "/api/v1/answers" for ::1 at 2016-06-17 17:00:34 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"id"=>"1", "attributes"=>{"content"=>"<p>Three, and more than you'd expect!</p>\n\n  <p>You could center a div horizontally, vertically, or both and there are\n  a ton of ways to do them each. It also depends on what you're trying to\n  center. The most common way I do it is using the margins. If you set\n    a div's margin to 0 auto, to will automatically get the width of the\n    client's screen and use that information to center the div.</p>\n\n  <p>If I had text within a div, I wold use the text-align: center css\n  attribute on the div.</p>", "vote-count"=>20, "vote-score"=>15}, "question"=>{"data"=>{"id"=>"2", "attributes"=>{"content"=>"How many ways can you center a div?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: vote-count, vote-score
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (27.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"id"=>"1", "attributes"=>{"content"=>"<p>Three, and more than you'd expect!</p>\n\n  <p>You could center a div horizontally, vertically, or both and there are\n  a ton of ways to do them each. It also depends on what you're trying to\n  center. The most common way I do it is using the margins. If you set\n    a div's margin to 0 auto, to will automatically get the width of the\n    client's screen and use that information to center the div.</p>\n\n  <p>If I had text within a div, I wold use the text-align: center css\n  attribute on the div.</p>", "vote-count"=>20, "vote-score"=>15}, "question"=>{"data"=>{"id"=>"2", "attributes"=>{"content"=>"How many ways can you center a div?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: vote-count, vote-score
  [1m[35m (23.1ms)[0m  [1m[35mBEGIN[0m
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (30.1ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
  [1m[35mSQL (11.8ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "<p>Three, and more than you'd expect!</p>\n\n  <p>You could center a div horizontally, vertically, or both and there are\n  a ton of ways to do them each. It also depends on what you're trying to\n  center. The most common way I do it is using the margins. If you set\n    a div's margin to 0 auto, to will automatically get the width of the\n    client's screen and use that information to center the div.</p>\n\n  <p>If I had text within a div, I wold use the text-align: center css\n  attribute on the div.</p>"], ["question_id", 2], ["created_at", 2016-06-17 21:00:35 UTC], ["updated_at", 2016-06-17 21:00:35 UTC]]
  [1m[35m (13.4ms)[0m  [1m[35mBEGIN[0m
  [1m[35m (100.9ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 347ms (ActiveRecord: 163.2ms)


  [1m[35mSQL (11.0ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "<p>Three, and more than you'd expect!</p>\n\n  <p>You could center a div horizontally, vertically, or both and there are\n  a ton of ways to do them each. It also depends on what you're trying to\n  center. The most common way I do it is using the margins. If you set\n    a div's margin to 0 auto, to will automatically get the width of the\n    client's screen and use that information to center the div.</p>\n\n  <p>If I had text within a div, I wold use the text-align: center css\n  attribute on the div.</p>"], ["question_id", 2], ["created_at", 2016-06-17 21:00:35 UTC], ["updated_at", 2016-06-17 21:00:35 UTC]]
Started GET "/api/v1/answers/1" for ::1 at 2016-06-17 17:00:35 -0400
  
AbstractController::ActionNotFound (The action 'show' could not be found for Api::V1::AnswersController):
  
actionpack (5.0.0.rc1) lib/abstract_controller/base.rb:121:in `process'
actionpack (5.0.0.rc1) lib/action_controller/metal.rb:190:in `dispatch'
  [1m[35m (44.5ms)[0m  [1m[35mCOMMIT[0m
actionpack (5.0.0.rc1) lib/action_controller/metal.rb:262:in `dispatch'
Completed 204 No Content in 329ms (ActiveRecord: 99.1ms)


actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:50:in `dispatch'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:32:in `serve'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:39:in `block in serve'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:26:in `each'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:26:in `serve'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:725:in `call'
actionview (5.0.0.rc1) lib/action_view/digestor.rb:12:in `call'
rack (2.0.0.rc1) lib/rack/etag.rb:25:in `call'
rack (2.0.0.rc1) lib/rack/conditional_get.rb:25:in `call'
rack (2.0.0.rc1) lib/rack/head.rb:12:in `call'
activerecord (5.0.0.rc1) lib/active_record/migration.rb:552:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/callbacks.rb:38:in `block in call'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:97:in `__run_callbacks__'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:750:in `_run_call_callbacks'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:90:in `run_callbacks'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/callbacks.rb:36:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/remote_ip.rb:79:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/debug_exceptions.rb:49:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/show_exceptions.rb:31:in `call'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:36:in `call_app'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:24:in `block in call'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:70:in `block in tagged'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:26:in `tagged'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:70:in `tagged'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:24:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/request_id.rb:24:in `call'
rack (2.0.0.rc1) lib/rack/runtime.rb:22:in `call'
activesupport (5.0.0.rc1) lib/active_support/cache/strategy/local_cache_middleware.rb:28:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/static.rb:136:in `call'
rack (2.0.0.rc1) lib/rack/sendfile.rb:111:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
railties (5.0.0.rc1) lib/rails/engine.rb:522:in `call'
puma (3.4.0) lib/puma/configuration.rb:224:in `call'
puma (3.4.0) lib/puma/server.rb:569:in `handle_request'
puma (3.4.0) lib/puma/server.rb:406:in `process_client'
puma (3.4.0) lib/puma/server.rb:271:in `block in run'
puma (3.4.0) lib/puma/thread_pool.rb:114:in `call'
puma (3.4.0) lib/puma/thread_pool.rb:114:in `block in spawn_thread'
Started GET "/api/v1/random" for ::1 at 2016-06-17 17:01:45 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (1.2ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.8ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 24]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (106.54ms)
Completed 200 OK in 192ms (Views: 143.0ms | ActiveRecord: 2.0ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-17 17:01:47 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"adsfadsf", "vote-count"=>nil, "vote-score"=>nil}, "question"=>{"data"=>{"id"=>"24", "attributes"=>{"content"=>"Why do you want to be a web developer?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: vote-count, vote-score
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.9ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 24], ["LIMIT", 1]]
  [1m[35m (0.6ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.8ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "adsfadsf"], ["question_id", 24], ["created_at", 2016-06-17 21:01:47 UTC], ["updated_at", 2016-06-17 21:01:47 UTC]]
  [1m[35m (67.9ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 211ms (ActiveRecord: 70.2ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-17 17:01:48 -0400
Processing by Api::V1::AnswersController#create as JSON
Started GET "/api/v1/answers/19" for ::1 at 2016-06-17 17:01:49 -0400
  Parameters: {"data"=>{"id"=>"19", "attributes"=>{"content"=>"qwefqwe", "vote-count"=>nil, "vote-score"=>0}, "question"=>{"data"=>{"id"=>"24", "attributes"=>{"content"=>"Why do you want to be a web developer?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
  
Unpermitted parameters: vote-count, vote-score
AbstractController::ActionNotFound (The action 'show' could not be found for Api::V1::AnswersController):
Unpermitted parameters: attributes, type
  
actionpack (5.0.0.rc1) lib/abstract_controller/base.rb:121:in `process'
actionpack (5.0.0.rc1) lib/action_controller/metal.rb:190:in `dispatch'
actionpack (5.0.0.rc1) lib/action_controller/metal.rb:262:in `dispatch'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:50:in `dispatch'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:32:in `serve'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:39:in `block in serve'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:26:in `each'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:26:in `serve'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:725:in `call'
actionview (5.0.0.rc1) lib/action_view/digestor.rb:12:in `call'
rack (2.0.0.rc1) lib/rack/etag.rb:25:in `call'
rack (2.0.0.rc1) lib/rack/conditional_get.rb:25:in `call'
rack (2.0.0.rc1) lib/rack/head.rb:12:in `call'
activerecord (5.0.0.rc1) lib/active_record/migration.rb:552:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/callbacks.rb:38:in `block in call'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:97:in `__run_callbacks__'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:750:in `_run_call_callbacks'
  [1m[36mQuestion Load (22.8ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 24], ["LIMIT", 1]]
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:90:in `run_callbacks'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/callbacks.rb:36:in `call'
  [1m[35m (3.0ms)[0m  [1m[35mBEGIN[0m
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/remote_ip.rb:79:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/debug_exceptions.rb:49:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/show_exceptions.rb:31:in `call'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:36:in `call_app'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:24:in `block in call'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:70:in `block in tagged'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:26:in `tagged'
  [1m[35mSQL (11.4ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "qwefqwe"], ["question_id", 24], ["created_at", 2016-06-17 21:01:49 UTC], ["updated_at", 2016-06-17 21:01:49 UTC]]
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:70:in `tagged'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:24:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/request_id.rb:24:in `call'
rack (2.0.0.rc1) lib/rack/runtime.rb:22:in `call'
activesupport (5.0.0.rc1) lib/active_support/cache/strategy/local_cache_middleware.rb:28:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/static.rb:136:in `call'
rack (2.0.0.rc1) lib/rack/sendfile.rb:111:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
railties (5.0.0.rc1) lib/rails/engine.rb:522:in `call'
puma (3.4.0) lib/puma/configuration.rb:224:in `call'
puma (3.4.0) lib/puma/server.rb:569:in `handle_request'
  [1m[35m (17.0ms)[0m  [1m[35mCOMMIT[0m
puma (3.4.0) lib/puma/server.rb:406:in `process_client'
Completed 204 No Content in 200ms (ActiveRecord: 54.2ms)


puma (3.4.0) lib/puma/server.rb:271:in `block in run'
puma (3.4.0) lib/puma/thread_pool.rb:114:in `call'
puma (3.4.0) lib/puma/thread_pool.rb:114:in `block in spawn_thread'
Started GET "/api/v1/answers/19" for ::1 at 2016-06-17 17:01:56 -0400
Started PATCH "/api/v1/answers/19" for ::1 at 2016-06-17 17:01:56 -0400
  
Processing by Api::V1::AnswersController#update as JSON
AbstractController::ActionNotFound (The action 'show' could not be found for Api::V1::AnswersController):
  Parameters: {"data"=>{"id"=>"19", "attributes"=>{"content"=>"qwefqwe", "vote-count"=>nil, "vote-score"=>0}, "question"=>{"data"=>{"id"=>"24", "attributes"=>{"content"=>"Why do you want to be a web developer?"}, "type"=>"questions"}}, "type"=>"answers"}, "id"=>"19", "answer"=>{}}
  
actionpack (5.0.0.rc1) lib/abstract_controller/base.rb:121:in `process'
actionpack (5.0.0.rc1) lib/action_controller/metal.rb:190:in `dispatch'
actionpack (5.0.0.rc1) lib/action_controller/metal.rb:262:in `dispatch'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:50:in `dispatch'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:32:in `serve'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:39:in `block in serve'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:26:in `each'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:26:in `serve'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:725:in `call'
actionview (5.0.0.rc1) lib/action_view/digestor.rb:12:in `call'
rack (2.0.0.rc1) lib/rack/etag.rb:25:in `call'
rack (2.0.0.rc1) lib/rack/conditional_get.rb:25:in `call'
rack (2.0.0.rc1) lib/rack/head.rb:12:in `call'
activerecord (5.0.0.rc1) lib/active_record/migration.rb:552:in `call'
Completed 500 Internal Server Error in 3388ms (ActiveRecord: 0.0ms)


actionpack (5.0.0.rc1) lib/action_dispatch/middleware/callbacks.rb:38:in `block in call'
  
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:97:in `__run_callbacks__'
SystemExit (exit):
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:750:in `_run_call_callbacks'
  
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:90:in `run_callbacks'
app/controllers/api/v1/answers_controller.rb:20:in `update'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/callbacks.rb:36:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/remote_ip.rb:79:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/debug_exceptions.rb:49:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/show_exceptions.rb:31:in `call'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:36:in `call_app'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:24:in `block in call'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:70:in `block in tagged'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:26:in `tagged'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:70:in `tagged'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:24:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/request_id.rb:24:in `call'
rack (2.0.0.rc1) lib/rack/runtime.rb:22:in `call'
activesupport (5.0.0.rc1) lib/active_support/cache/strategy/local_cache_middleware.rb:28:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/static.rb:136:in `call'
rack (2.0.0.rc1) lib/rack/sendfile.rb:111:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
railties (5.0.0.rc1) lib/rails/engine.rb:522:in `call'
puma (3.4.0) lib/puma/configuration.rb:224:in `call'
puma (3.4.0) lib/puma/server.rb:569:in `handle_request'
puma (3.4.0) lib/puma/server.rb:406:in `process_client'
puma (3.4.0) lib/puma/server.rb:271:in `block in run'
puma (3.4.0) lib/puma/thread_pool.rb:114:in `call'
puma (3.4.0) lib/puma/thread_pool.rb:114:in `block in spawn_thread'
Started GET "/api/v1/random" for ::1 at 2016-06-17 17:02:22 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.7ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 14]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (470.38ms)
Completed 200 OK in 601ms (Views: 503.4ms | ActiveRecord: 12.5ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-17 17:02:26 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"adsfads", "vote-count"=>nil, "vote-score"=>nil}, "question"=>{"data"=>{"id"=>"14", "attributes"=>{"content"=>"Why do you want to work with us?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: vote-count, vote-score
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.9ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 14], ["LIMIT", 1]]
  [1m[35m (0.5ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.9ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "adsfads"], ["question_id", 14], ["created_at", 2016-06-17 21:02:26 UTC], ["updated_at", 2016-06-17 21:02:26 UTC]]
  [1m[35m (2.8ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 158ms (ActiveRecord: 5.1ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-17 17:02:27 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"id"=>"9", "attributes"=>{"content"=>"sadffsda", "vote-count"=>nil, "vote-score"=>0}, "question"=>{"data"=>{"id"=>"14", "attributes"=>{"content"=>"Why do you want to work with us?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: vote-count, vote-score
Unpermitted parameters: attributes, type
Started GET "/api/v1/answers/9" for ::1 at 2016-06-17 17:02:27 -0400
  
AbstractController::ActionNotFound (The action 'show' could not be found for Api::V1::AnswersController):
  
actionpack (5.0.0.rc1) lib/abstract_controller/base.rb:121:in `process'
actionpack (5.0.0.rc1) lib/action_controller/metal.rb:190:in `dispatch'
actionpack (5.0.0.rc1) lib/action_controller/metal.rb:262:in `dispatch'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:50:in `dispatch'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:32:in `serve'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:39:in `block in serve'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:26:in `each'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:26:in `serve'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:725:in `call'
actionview (5.0.0.rc1) lib/action_view/digestor.rb:12:in `call'
  [1m[36mQuestion Load (1.5ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 14], ["LIMIT", 1]]
rack (2.0.0.rc1) lib/rack/etag.rb:25:in `call'
  [1m[35m (0.6ms)[0m  [1m[35mBEGIN[0m
rack (2.0.0.rc1) lib/rack/conditional_get.rb:25:in `call'
rack (2.0.0.rc1) lib/rack/head.rb:12:in `call'
activerecord (5.0.0.rc1) lib/active_record/migration.rb:552:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/callbacks.rb:38:in `block in call'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:97:in `__run_callbacks__'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:750:in `_run_call_callbacks'
  [1m[35mSQL (10.9ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "sadffsda"], ["question_id", 14], ["created_at", 2016-06-17 21:02:28 UTC], ["updated_at", 2016-06-17 21:02:28 UTC]]
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:90:in `run_callbacks'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/callbacks.rb:36:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/executor.rb:12:in `call'
  [1m[35m (7.5ms)[0m  [1m[35mCOMMIT[0m
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/remote_ip.rb:79:in `call'
Completed 204 No Content in 224ms (ActiveRecord: 74.4ms)


actionpack (5.0.0.rc1) lib/action_dispatch/middleware/debug_exceptions.rb:49:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/show_exceptions.rb:31:in `call'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:36:in `call_app'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:24:in `block in call'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:70:in `block in tagged'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:26:in `tagged'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:70:in `tagged'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:24:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/request_id.rb:24:in `call'
rack (2.0.0.rc1) lib/rack/runtime.rb:22:in `call'
activesupport (5.0.0.rc1) lib/active_support/cache/strategy/local_cache_middleware.rb:28:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/static.rb:136:in `call'
rack (2.0.0.rc1) lib/rack/sendfile.rb:111:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
railties (5.0.0.rc1) lib/rails/engine.rb:522:in `call'
puma (3.4.0) lib/puma/configuration.rb:224:in `call'
puma (3.4.0) lib/puma/server.rb:569:in `handle_request'
puma (3.4.0) lib/puma/server.rb:406:in `process_client'
puma (3.4.0) lib/puma/server.rb:271:in `block in run'
puma (3.4.0) lib/puma/thread_pool.rb:114:in `call'
puma (3.4.0) lib/puma/thread_pool.rb:114:in `block in spawn_thread'
Started GET "/api/v1/random" for ::1 at 2016-06-17 17:02:41 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.7ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 8]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (112.01ms)
Completed 200 OK in 165ms (Views: 119.4ms | ActiveRecord: 1.5ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-17 17:02:43 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"asddfs", "vote-count"=>nil, "vote-score"=>nil}, "question"=>{"data"=>{"id"=>"8", "attributes"=>{"content"=>"How did you learn programming?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: vote-count, vote-score
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 8], ["LIMIT", 1]]
  [1m[35m (1.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.8ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "asddfs"], ["question_id", 8], ["created_at", 2016-06-17 21:02:43 UTC], ["updated_at", 2016-06-17 21:02:43 UTC]]
  [1m[35m (2.8ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 141ms (ActiveRecord: 5.4ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-17 17:02:45 -0400
Started GET "/api/v1/answers/14" for ::1 at 2016-06-17 17:02:45 -0400
Processing by Api::V1::AnswersController#create as JSON
  
  Parameters: {"data"=>{"id"=>"14", "attributes"=>{"content"=>"qewewrwe", "vote-count"=>nil, "vote-score"=>0}, "question"=>{"data"=>{"id"=>"8", "attributes"=>{"content"=>"How did you learn programming?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
AbstractController::ActionNotFound (The action 'show' could not be found for Api::V1::AnswersController):
Unpermitted parameters: vote-count, vote-score
  
Unpermitted parameters: attributes, type
actionpack (5.0.0.rc1) lib/abstract_controller/base.rb:121:in `process'
actionpack (5.0.0.rc1) lib/action_controller/metal.rb:190:in `dispatch'
actionpack (5.0.0.rc1) lib/action_controller/metal.rb:262:in `dispatch'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:50:in `dispatch'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:32:in `serve'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:39:in `block in serve'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:26:in `each'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:26:in `serve'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:725:in `call'
actionview (5.0.0.rc1) lib/action_view/digestor.rb:12:in `call'
rack (2.0.0.rc1) lib/rack/etag.rb:25:in `call'
rack (2.0.0.rc1) lib/rack/conditional_get.rb:25:in `call'
rack (2.0.0.rc1) lib/rack/head.rb:12:in `call'
activerecord (5.0.0.rc1) lib/active_record/migration.rb:552:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/callbacks.rb:38:in `block in call'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:97:in `__run_callbacks__'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:750:in `_run_call_callbacks'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:90:in `run_callbacks'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/callbacks.rb:36:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/remote_ip.rb:79:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/debug_exceptions.rb:49:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/show_exceptions.rb:31:in `call'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:36:in `call_app'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:24:in `block in call'
  [1m[36mQuestion Load (30.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 8], ["LIMIT", 1]]
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:70:in `block in tagged'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:26:in `tagged'
  [1m[35m (2.9ms)[0m  [1m[35mBEGIN[0m
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:70:in `tagged'
  [1m[35mSQL (1.4ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "qewewrwe"], ["question_id", 8], ["created_at", 2016-06-17 21:02:45 UTC], ["updated_at", 2016-06-17 21:02:45 UTC]]
railties (5.0.0.rc1) lib/rails/rack/logger.rb:24:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/request_id.rb:24:in `call'
rack (2.0.0.rc1) lib/rack/runtime.rb:22:in `call'
activesupport (5.0.0.rc1) lib/active_support/cache/strategy/local_cache_middleware.rb:28:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/static.rb:136:in `call'
rack (2.0.0.rc1) lib/rack/sendfile.rb:111:in `call'
  [1m[35m (7.2ms)[0m  [1m[35mCOMMIT[0m
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
Completed 204 No Content in 190ms (ActiveRecord: 41.7ms)


rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
railties (5.0.0.rc1) lib/rails/engine.rb:522:in `call'
puma (3.4.0) lib/puma/configuration.rb:224:in `call'
puma (3.4.0) lib/puma/server.rb:569:in `handle_request'
puma (3.4.0) lib/puma/server.rb:406:in `process_client'
puma (3.4.0) lib/puma/server.rb:271:in `block in run'
puma (3.4.0) lib/puma/thread_pool.rb:114:in `call'
puma (3.4.0) lib/puma/thread_pool.rb:114:in `block in spawn_thread'
Started GET "/api/v1/random" for ::1 at 2016-06-17 17:03:05 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (4.6ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 3]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (78.16ms)
Completed 200 OK in 141ms (Views: 81.5ms | ActiveRecord: 5.4ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-17 17:03:07 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"asdfadsf", "vote-count"=>nil, "vote-score"=>nil}, "question"=>{"data"=>{"id"=>"3", "attributes"=>{"content"=>"What are your strengths and weaknesses?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: vote-count, vote-score
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (1.1ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 3], ["LIMIT", 1]]
  [1m[35m (0.8ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (1.1ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "asdfadsf"], ["question_id", 3], ["created_at", 2016-06-17 21:03:07 UTC], ["updated_at", 2016-06-17 21:03:07 UTC]]
  [1m[35m (110.1ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 257ms (ActiveRecord: 113.0ms)


Started GET "/api/v1/random" for ::1 at 2016-06-17 17:03:08 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.6ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 31]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (155.36ms)
Completed 200 OK in 207ms (Views: 162.9ms | ActiveRecord: 1.4ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-17 17:03:10 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"asdfadfs", "vote-count"=>nil, "vote-score"=>nil}, "question"=>{"data"=>{"id"=>"31", "attributes"=>{"content"=>"How does the web work?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: vote-count, vote-score
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (1.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 31], ["LIMIT", 1]]
  [1m[35m (1.3ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.9ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "asdfadfs"], ["question_id", 31], ["created_at", 2016-06-17 21:03:10 UTC], ["updated_at", 2016-06-17 21:03:10 UTC]]
  [1m[35m (2.8ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 149ms (ActiveRecord: 6.3ms)


Started GET "/api/v1/answers/5" for ::1 at 2016-06-17 17:03:11 -0400
  
AbstractController::ActionNotFound (The action 'show' could not be found for Api::V1::AnswersController):
  
actionpack (5.0.0.rc1) lib/abstract_controller/base.rb:121:in `process'
actionpack (5.0.0.rc1) lib/action_controller/metal.rb:190:in `dispatch'
actionpack (5.0.0.rc1) lib/action_controller/metal.rb:262:in `dispatch'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:50:in `dispatch'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:32:in `serve'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:39:in `block in serve'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:26:in `each'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:26:in `serve'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:725:in `call'
actionview (5.0.0.rc1) lib/action_view/digestor.rb:12:in `call'
rack (2.0.0.rc1) lib/rack/etag.rb:25:in `call'
rack (2.0.0.rc1) lib/rack/conditional_get.rb:25:in `call'
rack (2.0.0.rc1) lib/rack/head.rb:12:in `call'
activerecord (5.0.0.rc1) lib/active_record/migration.rb:552:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/callbacks.rb:38:in `block in call'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:97:in `__run_callbacks__'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:750:in `_run_call_callbacks'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:90:in `run_callbacks'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/callbacks.rb:36:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/remote_ip.rb:79:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/debug_exceptions.rb:49:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/show_exceptions.rb:31:in `call'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:36:in `call_app'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:24:in `block in call'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:70:in `block in tagged'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:26:in `tagged'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:70:in `tagged'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:24:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/request_id.rb:24:in `call'
rack (2.0.0.rc1) lib/rack/runtime.rb:22:in `call'
activesupport (5.0.0.rc1) lib/active_support/cache/strategy/local_cache_middleware.rb:28:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/static.rb:136:in `call'
rack (2.0.0.rc1) lib/rack/sendfile.rb:111:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
railties (5.0.0.rc1) lib/rails/engine.rb:522:in `call'
puma (3.4.0) lib/puma/configuration.rb:224:in `call'
puma (3.4.0) lib/puma/server.rb:569:in `handle_request'
puma (3.4.0) lib/puma/server.rb:406:in `process_client'
puma (3.4.0) lib/puma/server.rb:271:in `block in run'
puma (3.4.0) lib/puma/thread_pool.rb:114:in `call'
puma (3.4.0) lib/puma/thread_pool.rb:114:in `block in spawn_thread'
Started GET "/api/v1/random" for ::1 at 2016-06-17 17:03:59 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.9ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.7ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 22]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (103.38ms)
Completed 200 OK in 163ms (Views: 118.7ms | ActiveRecord: 1.5ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-17 17:04:02 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"asdfads", "vote-count"=>nil, "vote-score"=>nil}, "question"=>{"data"=>{"id"=>"22", "attributes"=>{"content"=>"Can you tell me about a challenge you've faced at work and how you got through it?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: vote-count, vote-score
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (1.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 22], ["LIMIT", 1]]
  [1m[35m (5.5ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.8ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "asdfads"], ["question_id", 22], ["created_at", 2016-06-17 21:04:02 UTC], ["updated_at", 2016-06-17 21:04:02 UTC]]
  [1m[35m (69.2ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 219ms (ActiveRecord: 76.7ms)


Started GET "/api/v1/answers/10" for ::1 at 2016-06-17 17:04:04 -0400
  
AbstractController::ActionNotFound (The action 'show' could not be found for Api::V1::AnswersController):
  
actionpack (5.0.0.rc1) lib/abstract_controller/base.rb:121:in `process'
actionpack (5.0.0.rc1) lib/action_controller/metal.rb:190:in `dispatch'
actionpack (5.0.0.rc1) lib/action_controller/metal.rb:262:in `dispatch'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:50:in `dispatch'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:32:in `serve'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:39:in `block in serve'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:26:in `each'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:26:in `serve'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:725:in `call'
actionview (5.0.0.rc1) lib/action_view/digestor.rb:12:in `call'
rack (2.0.0.rc1) lib/rack/etag.rb:25:in `call'
rack (2.0.0.rc1) lib/rack/conditional_get.rb:25:in `call'
rack (2.0.0.rc1) lib/rack/head.rb:12:in `call'
activerecord (5.0.0.rc1) lib/active_record/migration.rb:552:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/callbacks.rb:38:in `block in call'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:97:in `__run_callbacks__'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:750:in `_run_call_callbacks'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:90:in `run_callbacks'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/callbacks.rb:36:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/remote_ip.rb:79:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/debug_exceptions.rb:49:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/show_exceptions.rb:31:in `call'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:36:in `call_app'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:24:in `block in call'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:70:in `block in tagged'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:26:in `tagged'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:70:in `tagged'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:24:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/request_id.rb:24:in `call'
rack (2.0.0.rc1) lib/rack/runtime.rb:22:in `call'
activesupport (5.0.0.rc1) lib/active_support/cache/strategy/local_cache_middleware.rb:28:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/static.rb:136:in `call'
rack (2.0.0.rc1) lib/rack/sendfile.rb:111:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
railties (5.0.0.rc1) lib/rails/engine.rb:522:in `call'
puma (3.4.0) lib/puma/configuration.rb:224:in `call'
puma (3.4.0) lib/puma/server.rb:569:in `handle_request'
puma (3.4.0) lib/puma/server.rb:406:in `process_client'
puma (3.4.0) lib/puma/server.rb:271:in `block in run'
puma (3.4.0) lib/puma/thread_pool.rb:114:in `call'
puma (3.4.0) lib/puma/thread_pool.rb:114:in `block in spawn_thread'
Started GET "/api/v1/random" for ::1 at 2016-06-17 17:04:30 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (1.1ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 10]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (109.59ms)
Completed 200 OK in 172ms (Views: 127.7ms | ActiveRecord: 1.8ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-17 17:04:31 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"sdfsd", "vote-count"=>nil, "vote-score"=>nil}, "question"=>{"data"=>{"id"=>"10", "attributes"=>{"content"=>"How did you learn web development?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: vote-count, vote-score
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (1.1ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 10], ["LIMIT", 1]]
  [1m[35m (1.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (1.1ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "sdfsd"], ["question_id", 10], ["created_at", 2016-06-17 21:04:32 UTC], ["updated_at", 2016-06-17 21:04:32 UTC]]
  [1m[35m (3.1ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 154ms (ActiveRecord: 6.3ms)


Started GET "/api/v1/answers/18" for ::1 at 2016-06-17 17:04:33 -0400
  
AbstractController::ActionNotFound (The action 'show' could not be found for Api::V1::AnswersController):
  
actionpack (5.0.0.rc1) lib/abstract_controller/base.rb:121:in `process'
actionpack (5.0.0.rc1) lib/action_controller/metal.rb:190:in `dispatch'
actionpack (5.0.0.rc1) lib/action_controller/metal.rb:262:in `dispatch'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:50:in `dispatch'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:32:in `serve'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:39:in `block in serve'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:26:in `each'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:26:in `serve'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:725:in `call'
actionview (5.0.0.rc1) lib/action_view/digestor.rb:12:in `call'
rack (2.0.0.rc1) lib/rack/etag.rb:25:in `call'
rack (2.0.0.rc1) lib/rack/conditional_get.rb:25:in `call'
rack (2.0.0.rc1) lib/rack/head.rb:12:in `call'
activerecord (5.0.0.rc1) lib/active_record/migration.rb:552:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/callbacks.rb:38:in `block in call'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:97:in `__run_callbacks__'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:750:in `_run_call_callbacks'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:90:in `run_callbacks'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/callbacks.rb:36:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/remote_ip.rb:79:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/debug_exceptions.rb:49:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/show_exceptions.rb:31:in `call'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:36:in `call_app'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:24:in `block in call'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:70:in `block in tagged'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:26:in `tagged'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:70:in `tagged'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:24:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/request_id.rb:24:in `call'
rack (2.0.0.rc1) lib/rack/runtime.rb:22:in `call'
activesupport (5.0.0.rc1) lib/active_support/cache/strategy/local_cache_middleware.rb:28:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/static.rb:136:in `call'
rack (2.0.0.rc1) lib/rack/sendfile.rb:111:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
railties (5.0.0.rc1) lib/rails/engine.rb:522:in `call'
puma (3.4.0) lib/puma/configuration.rb:224:in `call'
puma (3.4.0) lib/puma/server.rb:569:in `handle_request'
puma (3.4.0) lib/puma/server.rb:406:in `process_client'
puma (3.4.0) lib/puma/server.rb:271:in `block in run'
puma (3.4.0) lib/puma/thread_pool.rb:114:in `call'
puma (3.4.0) lib/puma/thread_pool.rb:114:in `block in spawn_thread'
Started GET "/api/v1/random" for ::1 at 2016-06-17 17:04:56 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.6ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 22]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (145.36ms)
Completed 200 OK in 202ms (Views: 152.4ms | ActiveRecord: 1.5ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-17 17:04:57 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"asdfads", "vote-count"=>nil, "vote-score"=>nil}, "question"=>{"data"=>{"id"=>"22", "attributes"=>{"content"=>"Can you tell me about a challenge you've faced at work and how you got through it?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: vote-count, vote-score
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 22], ["LIMIT", 1]]
  [1m[35m (0.7ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (1.7ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "asdfads"], ["question_id", 22], ["created_at", 2016-06-17 21:04:57 UTC], ["updated_at", 2016-06-17 21:04:57 UTC]]
  [1m[35m (3.1ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 156ms (ActiveRecord: 6.2ms)


Started GET "/api/v1/answers/10" for ::1 at 2016-06-17 17:04:59 -0400
  
AbstractController::ActionNotFound (The action 'show' could not be found for Api::V1::AnswersController):
  
actionpack (5.0.0.rc1) lib/abstract_controller/base.rb:121:in `process'
actionpack (5.0.0.rc1) lib/action_controller/metal.rb:190:in `dispatch'
actionpack (5.0.0.rc1) lib/action_controller/metal.rb:262:in `dispatch'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:50:in `dispatch'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:32:in `serve'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:39:in `block in serve'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:26:in `each'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:26:in `serve'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:725:in `call'
actionview (5.0.0.rc1) lib/action_view/digestor.rb:12:in `call'
rack (2.0.0.rc1) lib/rack/etag.rb:25:in `call'
rack (2.0.0.rc1) lib/rack/conditional_get.rb:25:in `call'
rack (2.0.0.rc1) lib/rack/head.rb:12:in `call'
activerecord (5.0.0.rc1) lib/active_record/migration.rb:552:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/callbacks.rb:38:in `block in call'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:97:in `__run_callbacks__'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:750:in `_run_call_callbacks'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:90:in `run_callbacks'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/callbacks.rb:36:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/remote_ip.rb:79:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/debug_exceptions.rb:49:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/show_exceptions.rb:31:in `call'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:36:in `call_app'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:24:in `block in call'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:70:in `block in tagged'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:26:in `tagged'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:70:in `tagged'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:24:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/request_id.rb:24:in `call'
rack (2.0.0.rc1) lib/rack/runtime.rb:22:in `call'
activesupport (5.0.0.rc1) lib/active_support/cache/strategy/local_cache_middleware.rb:28:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/static.rb:136:in `call'
rack (2.0.0.rc1) lib/rack/sendfile.rb:111:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
railties (5.0.0.rc1) lib/rails/engine.rb:522:in `call'
puma (3.4.0) lib/puma/configuration.rb:224:in `call'
puma (3.4.0) lib/puma/server.rb:569:in `handle_request'
puma (3.4.0) lib/puma/server.rb:406:in `process_client'
puma (3.4.0) lib/puma/server.rb:271:in `block in run'
puma (3.4.0) lib/puma/thread_pool.rb:114:in `call'
puma (3.4.0) lib/puma/thread_pool.rb:114:in `block in spawn_thread'
Started GET "/api/v1/random" for ::1 at 2016-06-17 17:07:03 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (1.0ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.8ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 15]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (112.16ms)
Completed 200 OK in 169ms (Views: 120.1ms | ActiveRecord: 1.8ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-17 17:07:05 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"asdfads", "vote-count"=>nil, "vote-score"=>nil}, "question"=>{"data"=>{"id"=>"15", "attributes"=>{"content"=>"Can you name two programming paradigms important for JavaScript app developers?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: vote-count, vote-score
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 15], ["LIMIT", 1]]
  [1m[35m (0.6ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (80.8ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "asdfads"], ["question_id", 15], ["created_at", 2016-06-17 21:07:05 UTC], ["updated_at", 2016-06-17 21:07:05 UTC]]
  [1m[35m (30.9ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 256ms (ActiveRecord: 113.1ms)


Started GET "/api/v1/answers/15" for ::1 at 2016-06-17 17:07:06 -0400
  
AbstractController::ActionNotFound (The action 'show' could not be found for Api::V1::AnswersController):
  
actionpack (5.0.0.rc1) lib/abstract_controller/base.rb:121:in `process'
actionpack (5.0.0.rc1) lib/action_controller/metal.rb:190:in `dispatch'
actionpack (5.0.0.rc1) lib/action_controller/metal.rb:262:in `dispatch'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:50:in `dispatch'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:32:in `serve'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:39:in `block in serve'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:26:in `each'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:26:in `serve'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:725:in `call'
actionview (5.0.0.rc1) lib/action_view/digestor.rb:12:in `call'
rack (2.0.0.rc1) lib/rack/etag.rb:25:in `call'
rack (2.0.0.rc1) lib/rack/conditional_get.rb:25:in `call'
rack (2.0.0.rc1) lib/rack/head.rb:12:in `call'
activerecord (5.0.0.rc1) lib/active_record/migration.rb:552:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/callbacks.rb:38:in `block in call'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:97:in `__run_callbacks__'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:750:in `_run_call_callbacks'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:90:in `run_callbacks'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/callbacks.rb:36:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/remote_ip.rb:79:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/debug_exceptions.rb:49:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/show_exceptions.rb:31:in `call'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:36:in `call_app'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:24:in `block in call'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:70:in `block in tagged'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:26:in `tagged'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:70:in `tagged'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:24:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/request_id.rb:24:in `call'
rack (2.0.0.rc1) lib/rack/runtime.rb:22:in `call'
activesupport (5.0.0.rc1) lib/active_support/cache/strategy/local_cache_middleware.rb:28:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/static.rb:136:in `call'
rack (2.0.0.rc1) lib/rack/sendfile.rb:111:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
railties (5.0.0.rc1) lib/rails/engine.rb:522:in `call'
puma (3.4.0) lib/puma/configuration.rb:224:in `call'
puma (3.4.0) lib/puma/server.rb:569:in `handle_request'
puma (3.4.0) lib/puma/server.rb:406:in `process_client'
puma (3.4.0) lib/puma/server.rb:271:in `block in run'
puma (3.4.0) lib/puma/thread_pool.rb:114:in `call'
puma (3.4.0) lib/puma/thread_pool.rb:114:in `block in spawn_thread'
Started GET "/api/v1/random" for ::1 at 2016-06-17 17:08:18 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (1.4ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.7ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 32]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (150.9ms)
Completed 200 OK in 223ms (Views: 163.5ms | ActiveRecord: 2.1ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-17 17:08:23 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"asdfdas", "vote-count"=>nil, "vote-score"=>nil}, "question"=>{"data"=>{"id"=>"32", "attributes"=>{"content"=>"How did you learn programming?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: vote-count, vote-score
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 32], ["LIMIT", 1]]
  [1m[35m (0.7ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (1.1ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "asdfdas"], ["question_id", 32], ["created_at", 2016-06-17 21:08:23 UTC], ["updated_at", 2016-06-17 21:08:23 UTC]]
  [1m[35m (28.5ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 253ms (ActiveRecord: 31.1ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-17 17:08:24 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"id"=>"7", "attributes"=>{"content"=>"<p>I just started Googling it you know, and I liked doing it so\n  I ended up trying to do it professionally.</p>", "vote-count"=>9, "vote-score"=>-3}, "question"=>{"data"=>{"id"=>"32", "attributes"=>{"content"=>"How did you learn programming?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: vote-count, vote-score
Unpermitted parameters: attributes, type
Started GET "/api/v1/answers/7" for ::1 at 2016-06-17 17:08:24 -0400
  [1m[36mQuestion Load (21.3ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 32], ["LIMIT", 1]]
  [1m[35m (1.0ms)[0m  [1m[35mBEGIN[0m
  
AbstractController::ActionNotFound (The action 'show' could not be found for Api::V1::AnswersController):
  
actionpack (5.0.0.rc1) lib/abstract_controller/base.rb:121:in `process'
actionpack (5.0.0.rc1) lib/action_controller/metal.rb:190:in `dispatch'
actionpack (5.0.0.rc1) lib/action_controller/metal.rb:262:in `dispatch'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:50:in `dispatch'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:32:in `serve'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:39:in `block in serve'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:26:in `each'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:26:in `serve'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:725:in `call'
actionview (5.0.0.rc1) lib/action_view/digestor.rb:12:in `call'
rack (2.0.0.rc1) lib/rack/etag.rb:25:in `call'
rack (2.0.0.rc1) lib/rack/conditional_get.rb:25:in `call'
rack (2.0.0.rc1) lib/rack/head.rb:12:in `call'
activerecord (5.0.0.rc1) lib/active_record/migration.rb:552:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/callbacks.rb:38:in `block in call'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:97:in `__run_callbacks__'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:750:in `_run_call_callbacks'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:90:in `run_callbacks'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/callbacks.rb:36:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/executor.rb:12:in `call'
  [1m[35mSQL (64.6ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "<p>I just started Googling it you know, and I liked doing it so\n  I ended up trying to do it professionally.</p>"], ["question_id", 32], ["created_at", 2016-06-17 21:08:24 UTC], ["updated_at", 2016-06-17 21:08:24 UTC]]
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/remote_ip.rb:79:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/debug_exceptions.rb:49:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/show_exceptions.rb:31:in `call'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:36:in `call_app'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:24:in `block in call'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:70:in `block in tagged'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:26:in `tagged'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:70:in `tagged'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:24:in `call'
  [1m[35m (16.4ms)[0m  [1m[35mCOMMIT[0m
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/request_id.rb:24:in `call'
Completed 204 No Content in 243ms (ActiveRecord: 103.4ms)


rack (2.0.0.rc1) lib/rack/runtime.rb:22:in `call'
activesupport (5.0.0.rc1) lib/active_support/cache/strategy/local_cache_middleware.rb:28:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/static.rb:136:in `call'
rack (2.0.0.rc1) lib/rack/sendfile.rb:111:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
railties (5.0.0.rc1) lib/rails/engine.rb:522:in `call'
puma (3.4.0) lib/puma/configuration.rb:224:in `call'
puma (3.4.0) lib/puma/server.rb:569:in `handle_request'
puma (3.4.0) lib/puma/server.rb:406:in `process_client'
puma (3.4.0) lib/puma/server.rb:271:in `block in run'
puma (3.4.0) lib/puma/thread_pool.rb:114:in `call'
puma (3.4.0) lib/puma/thread_pool.rb:114:in `block in spawn_thread'
Started GET "/api/v1/random" for ::1 at 2016-06-19 12:44:16 -0400
  [1m[36mActiveRecord::SchemaMigration Load (57.1ms)[0m  [1m[34mSELECT "schema_migrations".* FROM "schema_migrations"[0m
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (26.6ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (95.7ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 2]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (331.84ms)
Completed 200 OK in 686ms (Views: 267.0ms | ActiveRecord: 397.7ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-19 12:44:31 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"adsfaf", "vote-count"=>nil, "vote-score"=>nil}, "question"=>{"data"=>{"id"=>"2", "attributes"=>{"content"=>"How many ways can you center a div?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: vote-count, vote-score
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (19.0ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
  [1m[35m (29.5ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (89.1ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "adsfaf"], ["question_id", 2], ["created_at", 2016-06-19 16:44:31 UTC], ["updated_at", 2016-06-19 16:44:31 UTC]]
  [1m[35m (44.9ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 208ms (ActiveRecord: 182.5ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-19 12:44:35 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"id"=>"1", "attributes"=>{"content"=>"<p>Three, and more than you'd expect!</p>\n\n  <p>You could center a div horizontally, vertically, or both and there are\n  a ton of ways to do them each. It also depends on what you're trying to\n  center. The most common way I do it is using the margins. If you set\n    a div's margin to 0 auto, to will automatically get the width of the\n    client's screen and use that information to center the div.</p>\n\n  <p>If I had text within a div, I wold use the text-align: center css\n  attribute on the div.</p>", "vote-count"=>9, "vote-score"=>15}, "question"=>{"data"=>{"id"=>"2", "attributes"=>{"content"=>"How many ways can you center a div?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: vote-count, vote-score
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
  [1m[35m (0.9ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "<p>Three, and more than you'd expect!</p>\n\n  <p>You could center a div horizontally, vertically, or both and there are\n  a ton of ways to do them each. It also depends on what you're trying to\n  center. The most common way I do it is using the margins. If you set\n    a div's margin to 0 auto, to will automatically get the width of the\n    client's screen and use that information to center the div.</p>\n\n  <p>If I had text within a div, I wold use the text-align: center css\n  attribute on the div.</p>"], ["question_id", 2], ["created_at", 2016-06-19 16:44:35 UTC], ["updated_at", 2016-06-19 16:44:35 UTC]]
  [1m[35m (1.1ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 8ms (ActiveRecord: 2.6ms)


Started GET "/api/v1/answers/1" for ::1 at 2016-06-19 12:44:35 -0400
  
AbstractController::ActionNotFound (The action 'show' could not be found for Api::V1::AnswersController):
  
actionpack (5.0.0.rc1) lib/abstract_controller/base.rb:121:in `process'
actionpack (5.0.0.rc1) lib/action_controller/metal.rb:190:in `dispatch'
actionpack (5.0.0.rc1) lib/action_controller/metal.rb:262:in `dispatch'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:50:in `dispatch'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:32:in `serve'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:39:in `block in serve'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:26:in `each'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:26:in `serve'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:725:in `call'
actionview (5.0.0.rc1) lib/action_view/digestor.rb:12:in `call'
rack (2.0.0.rc1) lib/rack/etag.rb:25:in `call'
rack (2.0.0.rc1) lib/rack/conditional_get.rb:25:in `call'
rack (2.0.0.rc1) lib/rack/head.rb:12:in `call'
activerecord (5.0.0.rc1) lib/active_record/migration.rb:552:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/callbacks.rb:38:in `block in call'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:97:in `__run_callbacks__'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:750:in `_run_call_callbacks'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:90:in `run_callbacks'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/callbacks.rb:36:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/remote_ip.rb:79:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/debug_exceptions.rb:49:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/show_exceptions.rb:31:in `call'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:36:in `call_app'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:24:in `block in call'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:70:in `block in tagged'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:26:in `tagged'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:70:in `tagged'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:24:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/request_id.rb:24:in `call'
rack (2.0.0.rc1) lib/rack/runtime.rb:22:in `call'
activesupport (5.0.0.rc1) lib/active_support/cache/strategy/local_cache_middleware.rb:28:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/static.rb:136:in `call'
rack (2.0.0.rc1) lib/rack/sendfile.rb:111:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
railties (5.0.0.rc1) lib/rails/engine.rb:522:in `call'
puma (3.4.0) lib/puma/configuration.rb:224:in `call'
puma (3.4.0) lib/puma/server.rb:569:in `handle_request'
puma (3.4.0) lib/puma/server.rb:406:in `process_client'
puma (3.4.0) lib/puma/server.rb:271:in `block in run'
puma (3.4.0) lib/puma/thread_pool.rb:114:in `call'
puma (3.4.0) lib/puma/thread_pool.rb:114:in `block in spawn_thread'
Started GET "/api/v1/random" for ::1 at 2016-06-19 12:46:53 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.4ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 14]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (32.04ms)
Completed 200 OK in 37ms (Views: 32.4ms | ActiveRecord: 1.2ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-19 12:46:54 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"sadgsg", "vote-count"=>nil, "vote-score"=>nil}, "question"=>{"data"=>{"id"=>"14", "attributes"=>{"content"=>"Why do you want to work with us?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: vote-count, vote-score
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (1.6ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 14], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.9ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "sadgsg"], ["question_id", 14], ["created_at", 2016-06-19 16:46:54 UTC], ["updated_at", 2016-06-19 16:46:54 UTC]]
  [1m[35m (118.2ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 126ms (ActiveRecord: 120.8ms)


Started GET "/api/v1/answers/9" for ::1 at 2016-06-19 12:46:56 -0400
  
AbstractController::ActionNotFound (The action 'show' could not be found for Api::V1::AnswersController):
  
actionpack (5.0.0.rc1) lib/abstract_controller/base.rb:121:in `process'
actionpack (5.0.0.rc1) lib/action_controller/metal.rb:190:in `dispatch'
actionpack (5.0.0.rc1) lib/action_controller/metal.rb:262:in `dispatch'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:50:in `dispatch'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:32:in `serve'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:39:in `block in serve'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:26:in `each'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:26:in `serve'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:725:in `call'
actionview (5.0.0.rc1) lib/action_view/digestor.rb:12:in `call'
rack (2.0.0.rc1) lib/rack/etag.rb:25:in `call'
rack (2.0.0.rc1) lib/rack/conditional_get.rb:25:in `call'
rack (2.0.0.rc1) lib/rack/head.rb:12:in `call'
activerecord (5.0.0.rc1) lib/active_record/migration.rb:552:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/callbacks.rb:38:in `block in call'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:97:in `__run_callbacks__'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:750:in `_run_call_callbacks'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:90:in `run_callbacks'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/callbacks.rb:36:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/remote_ip.rb:79:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/debug_exceptions.rb:49:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/show_exceptions.rb:31:in `call'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:36:in `call_app'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:24:in `block in call'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:70:in `block in tagged'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:26:in `tagged'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:70:in `tagged'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:24:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/request_id.rb:24:in `call'
rack (2.0.0.rc1) lib/rack/runtime.rb:22:in `call'
activesupport (5.0.0.rc1) lib/active_support/cache/strategy/local_cache_middleware.rb:28:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/static.rb:136:in `call'
rack (2.0.0.rc1) lib/rack/sendfile.rb:111:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
railties (5.0.0.rc1) lib/rails/engine.rb:522:in `call'
puma (3.4.0) lib/puma/configuration.rb:224:in `call'
puma (3.4.0) lib/puma/server.rb:569:in `handle_request'
puma (3.4.0) lib/puma/server.rb:406:in `process_client'
puma (3.4.0) lib/puma/server.rb:271:in `block in run'
puma (3.4.0) lib/puma/thread_pool.rb:114:in `call'
puma (3.4.0) lib/puma/thread_pool.rb:114:in `block in spawn_thread'
Started GET "/api/v1/random" for ::1 at 2016-06-19 12:50:04 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (1.2ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.3ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 13]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (3.7ms)
Completed 200 OK in 8ms (Views: 4.5ms | ActiveRecord: 1.7ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-19 12:50:06 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"asdfasd", "vote-count"=>nil, "vote-score"=>nil}, "question"=>{"data"=>{"id"=>"13", "attributes"=>{"content"=>"Where would you like to be in your career five years from now?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: vote-count, vote-score
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 13], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.5ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "asdfasd"], ["question_id", 13], ["created_at", 2016-06-19 16:50:06 UTC], ["updated_at", 2016-06-19 16:50:06 UTC]]
  [1m[35m (187.1ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 193ms (ActiveRecord: 188.1ms)


Started GET "/api/v1/random" for ::1 at 2016-06-19 12:50:07 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 32]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (5.11ms)
Completed 200 OK in 7ms (Views: 5.4ms | ActiveRecord: 0.6ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-19 12:50:09 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"asfasdgsd", "vote-count"=>nil, "vote-score"=>nil}, "question"=>{"data"=>{"id"=>"32", "attributes"=>{"content"=>"How did you learn programming?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: vote-count, vote-score
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 32], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "asfasdgsd"], ["question_id", 32], ["created_at", 2016-06-19 16:50:09 UTC], ["updated_at", 2016-06-19 16:50:09 UTC]]
  [1m[35m (10.7ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 16ms (ActiveRecord: 11.4ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-19 12:50:10 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"id"=>"7", "attributes"=>{"content"=>"<p>I just started Googling it you know, and I liked doing it so\n  I ended up trying to do it professionally.</p>", "vote-count"=>5, "vote-score"=>-3}, "question"=>{"data"=>{"id"=>"32", "attributes"=>{"content"=>"How did you learn programming?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Started GET "/api/v1/answers/7" for ::1 at 2016-06-19 12:50:10 -0400
Unpermitted parameters: vote-count, vote-score
  
Unpermitted parameters: attributes, type
AbstractController::ActionNotFound (The action 'show' could not be found for Api::V1::AnswersController):
  
actionpack (5.0.0.rc1) lib/abstract_controller/base.rb:121:in `process'
actionpack (5.0.0.rc1) lib/action_controller/metal.rb:190:in `dispatch'
actionpack (5.0.0.rc1) lib/action_controller/metal.rb:262:in `dispatch'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:50:in `dispatch'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:32:in `serve'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:39:in `block in serve'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:26:in `each'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:26:in `serve'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:725:in `call'
actionview (5.0.0.rc1) lib/action_view/digestor.rb:12:in `call'
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 32], ["LIMIT", 1]]
rack (2.0.0.rc1) lib/rack/etag.rb:25:in `call'
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
rack (2.0.0.rc1) lib/rack/conditional_get.rb:25:in `call'
rack (2.0.0.rc1) lib/rack/head.rb:12:in `call'
activerecord (5.0.0.rc1) lib/active_record/migration.rb:552:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/callbacks.rb:38:in `block in call'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:97:in `__run_callbacks__'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:750:in `_run_call_callbacks'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:90:in `run_callbacks'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/callbacks.rb:36:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/executor.rb:12:in `call'
  [1m[35mSQL (0.6ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "<p>I just started Googling it you know, and I liked doing it so\n  I ended up trying to do it professionally.</p>"], ["question_id", 32], ["created_at", 2016-06-19 16:50:10 UTC], ["updated_at", 2016-06-19 16:50:10 UTC]]
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/remote_ip.rb:79:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/debug_exceptions.rb:49:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/show_exceptions.rb:31:in `call'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:36:in `call_app'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:24:in `block in call'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:70:in `block in tagged'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:26:in `tagged'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:70:in `tagged'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:24:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/request_id.rb:24:in `call'
rack (2.0.0.rc1) lib/rack/runtime.rb:22:in `call'
activesupport (5.0.0.rc1) lib/active_support/cache/strategy/local_cache_middleware.rb:28:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/static.rb:136:in `call'
rack (2.0.0.rc1) lib/rack/sendfile.rb:111:in `call'
  [1m[35m (1.1ms)[0m  [1m[35mCOMMIT[0m
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
Completed 204 No Content in 14ms (ActiveRecord: 2.3ms)


rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
railties (5.0.0.rc1) lib/rails/engine.rb:522:in `call'
puma (3.4.0) lib/puma/configuration.rb:224:in `call'
puma (3.4.0) lib/puma/server.rb:569:in `handle_request'
puma (3.4.0) lib/puma/server.rb:406:in `process_client'
puma (3.4.0) lib/puma/server.rb:271:in `block in run'
puma (3.4.0) lib/puma/thread_pool.rb:114:in `call'
puma (3.4.0) lib/puma/thread_pool.rb:114:in `block in spawn_thread'
Started GET "/api/v1/random" for ::1 at 2016-06-19 12:51:02 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.4ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 8]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (30.53ms)
Completed 200 OK in 34ms (Views: 30.8ms | ActiveRecord: 1.0ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-19 12:51:04 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"sadgads", "vote-count"=>nil, "vote-score"=>nil}, "question"=>{"data"=>{"id"=>"8", "attributes"=>{"content"=>"How did you learn programming?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: vote-count, vote-score
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 8], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "sadgads"], ["question_id", 8], ["created_at", 2016-06-19 16:51:04 UTC], ["updated_at", 2016-06-19 16:51:04 UTC]]
  [1m[35m (90.2ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 97ms (ActiveRecord: 91.1ms)


Started GET "/api/v1/answers/14" for ::1 at 2016-06-19 12:51:05 -0400
  
AbstractController::ActionNotFound (The action 'show' could not be found for Api::V1::AnswersController):
  
actionpack (5.0.0.rc1) lib/abstract_controller/base.rb:121:in `process'
actionpack (5.0.0.rc1) lib/action_controller/metal.rb:190:in `dispatch'
actionpack (5.0.0.rc1) lib/action_controller/metal.rb:262:in `dispatch'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:50:in `dispatch'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:32:in `serve'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:39:in `block in serve'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:26:in `each'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:26:in `serve'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:725:in `call'
actionview (5.0.0.rc1) lib/action_view/digestor.rb:12:in `call'
rack (2.0.0.rc1) lib/rack/etag.rb:25:in `call'
rack (2.0.0.rc1) lib/rack/conditional_get.rb:25:in `call'
rack (2.0.0.rc1) lib/rack/head.rb:12:in `call'
activerecord (5.0.0.rc1) lib/active_record/migration.rb:552:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/callbacks.rb:38:in `block in call'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:97:in `__run_callbacks__'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:750:in `_run_call_callbacks'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:90:in `run_callbacks'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/callbacks.rb:36:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/remote_ip.rb:79:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/debug_exceptions.rb:49:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/show_exceptions.rb:31:in `call'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:36:in `call_app'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:24:in `block in call'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:70:in `block in tagged'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:26:in `tagged'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:70:in `tagged'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:24:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/request_id.rb:24:in `call'
rack (2.0.0.rc1) lib/rack/runtime.rb:22:in `call'
activesupport (5.0.0.rc1) lib/active_support/cache/strategy/local_cache_middleware.rb:28:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/static.rb:136:in `call'
rack (2.0.0.rc1) lib/rack/sendfile.rb:111:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
railties (5.0.0.rc1) lib/rails/engine.rb:522:in `call'
puma (3.4.0) lib/puma/configuration.rb:224:in `call'
puma (3.4.0) lib/puma/server.rb:569:in `handle_request'
puma (3.4.0) lib/puma/server.rb:406:in `process_client'
puma (3.4.0) lib/puma/server.rb:271:in `block in run'
puma (3.4.0) lib/puma/thread_pool.rb:114:in `call'
puma (3.4.0) lib/puma/thread_pool.rb:114:in `block in spawn_thread'
Started GET "/api/v1/answers/14" for ::1 at 2016-06-19 12:51:06 -0400
  
AbstractController::ActionNotFound (The action 'show' could not be found for Api::V1::AnswersController):
  
actionpack (5.0.0.rc1) lib/abstract_controller/base.rb:121:in `process'
actionpack (5.0.0.rc1) lib/action_controller/metal.rb:190:in `dispatch'
actionpack (5.0.0.rc1) lib/action_controller/metal.rb:262:in `dispatch'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:50:in `dispatch'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:32:in `serve'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:39:in `block in serve'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:26:in `each'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:26:in `serve'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:725:in `call'
actionview (5.0.0.rc1) lib/action_view/digestor.rb:12:in `call'
rack (2.0.0.rc1) lib/rack/etag.rb:25:in `call'
rack (2.0.0.rc1) lib/rack/conditional_get.rb:25:in `call'
rack (2.0.0.rc1) lib/rack/head.rb:12:in `call'
activerecord (5.0.0.rc1) lib/active_record/migration.rb:552:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/callbacks.rb:38:in `block in call'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:97:in `__run_callbacks__'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:750:in `_run_call_callbacks'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:90:in `run_callbacks'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/callbacks.rb:36:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/remote_ip.rb:79:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/debug_exceptions.rb:49:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/show_exceptions.rb:31:in `call'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:36:in `call_app'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:24:in `block in call'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:70:in `block in tagged'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:26:in `tagged'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:70:in `tagged'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:24:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/request_id.rb:24:in `call'
rack (2.0.0.rc1) lib/rack/runtime.rb:22:in `call'
activesupport (5.0.0.rc1) lib/active_support/cache/strategy/local_cache_middleware.rb:28:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/static.rb:136:in `call'
rack (2.0.0.rc1) lib/rack/sendfile.rb:111:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
railties (5.0.0.rc1) lib/rails/engine.rb:522:in `call'
puma (3.4.0) lib/puma/configuration.rb:224:in `call'
puma (3.4.0) lib/puma/server.rb:569:in `handle_request'
puma (3.4.0) lib/puma/server.rb:406:in `process_client'
puma (3.4.0) lib/puma/server.rb:271:in `block in run'
puma (3.4.0) lib/puma/thread_pool.rb:114:in `call'
puma (3.4.0) lib/puma/thread_pool.rb:114:in `block in spawn_thread'
Started GET "/api/v1/answers/14" for ::1 at 2016-06-19 12:51:06 -0400
  
AbstractController::ActionNotFound (The action 'show' could not be found for Api::V1::AnswersController):
  
actionpack (5.0.0.rc1) lib/abstract_controller/base.rb:121:in `process'
actionpack (5.0.0.rc1) lib/action_controller/metal.rb:190:in `dispatch'
actionpack (5.0.0.rc1) lib/action_controller/metal.rb:262:in `dispatch'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:50:in `dispatch'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:32:in `serve'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:39:in `block in serve'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:26:in `each'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:26:in `serve'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:725:in `call'
actionview (5.0.0.rc1) lib/action_view/digestor.rb:12:in `call'
rack (2.0.0.rc1) lib/rack/etag.rb:25:in `call'
rack (2.0.0.rc1) lib/rack/conditional_get.rb:25:in `call'
rack (2.0.0.rc1) lib/rack/head.rb:12:in `call'
activerecord (5.0.0.rc1) lib/active_record/migration.rb:552:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/callbacks.rb:38:in `block in call'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:97:in `__run_callbacks__'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:750:in `_run_call_callbacks'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:90:in `run_callbacks'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/callbacks.rb:36:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/remote_ip.rb:79:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/debug_exceptions.rb:49:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/show_exceptions.rb:31:in `call'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:36:in `call_app'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:24:in `block in call'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:70:in `block in tagged'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:26:in `tagged'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:70:in `tagged'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:24:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/request_id.rb:24:in `call'
rack (2.0.0.rc1) lib/rack/runtime.rb:22:in `call'
activesupport (5.0.0.rc1) lib/active_support/cache/strategy/local_cache_middleware.rb:28:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/static.rb:136:in `call'
rack (2.0.0.rc1) lib/rack/sendfile.rb:111:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
railties (5.0.0.rc1) lib/rails/engine.rb:522:in `call'
puma (3.4.0) lib/puma/configuration.rb:224:in `call'
puma (3.4.0) lib/puma/server.rb:569:in `handle_request'
puma (3.4.0) lib/puma/server.rb:406:in `process_client'
puma (3.4.0) lib/puma/server.rb:271:in `block in run'
puma (3.4.0) lib/puma/thread_pool.rb:114:in `call'
puma (3.4.0) lib/puma/thread_pool.rb:114:in `block in spawn_thread'
Started GET "/api/v1/answers/14" for ::1 at 2016-06-19 12:51:06 -0400
  
AbstractController::ActionNotFound (The action 'show' could not be found for Api::V1::AnswersController):
  
actionpack (5.0.0.rc1) lib/abstract_controller/base.rb:121:in `process'
actionpack (5.0.0.rc1) lib/action_controller/metal.rb:190:in `dispatch'
actionpack (5.0.0.rc1) lib/action_controller/metal.rb:262:in `dispatch'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:50:in `dispatch'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:32:in `serve'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:39:in `block in serve'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:26:in `each'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:26:in `serve'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:725:in `call'
actionview (5.0.0.rc1) lib/action_view/digestor.rb:12:in `call'
rack (2.0.0.rc1) lib/rack/etag.rb:25:in `call'
rack (2.0.0.rc1) lib/rack/conditional_get.rb:25:in `call'
rack (2.0.0.rc1) lib/rack/head.rb:12:in `call'
activerecord (5.0.0.rc1) lib/active_record/migration.rb:552:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/callbacks.rb:38:in `block in call'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:97:in `__run_callbacks__'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:750:in `_run_call_callbacks'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:90:in `run_callbacks'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/callbacks.rb:36:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/remote_ip.rb:79:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/debug_exceptions.rb:49:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/show_exceptions.rb:31:in `call'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:36:in `call_app'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:24:in `block in call'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:70:in `block in tagged'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:26:in `tagged'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:70:in `tagged'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:24:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/request_id.rb:24:in `call'
rack (2.0.0.rc1) lib/rack/runtime.rb:22:in `call'
activesupport (5.0.0.rc1) lib/active_support/cache/strategy/local_cache_middleware.rb:28:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/static.rb:136:in `call'
rack (2.0.0.rc1) lib/rack/sendfile.rb:111:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
railties (5.0.0.rc1) lib/rails/engine.rb:522:in `call'
puma (3.4.0) lib/puma/configuration.rb:224:in `call'
puma (3.4.0) lib/puma/server.rb:569:in `handle_request'
puma (3.4.0) lib/puma/server.rb:406:in `process_client'
puma (3.4.0) lib/puma/server.rb:271:in `block in run'
puma (3.4.0) lib/puma/thread_pool.rb:114:in `call'
puma (3.4.0) lib/puma/thread_pool.rb:114:in `block in spawn_thread'
Started GET "/api/v1/answers/14" for ::1 at 2016-06-19 12:51:06 -0400
  
AbstractController::ActionNotFound (The action 'show' could not be found for Api::V1::AnswersController):
  
actionpack (5.0.0.rc1) lib/abstract_controller/base.rb:121:in `process'
actionpack (5.0.0.rc1) lib/action_controller/metal.rb:190:in `dispatch'
actionpack (5.0.0.rc1) lib/action_controller/metal.rb:262:in `dispatch'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:50:in `dispatch'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:32:in `serve'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:39:in `block in serve'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:26:in `each'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:26:in `serve'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:725:in `call'
actionview (5.0.0.rc1) lib/action_view/digestor.rb:12:in `call'
rack (2.0.0.rc1) lib/rack/etag.rb:25:in `call'
rack (2.0.0.rc1) lib/rack/conditional_get.rb:25:in `call'
rack (2.0.0.rc1) lib/rack/head.rb:12:in `call'
activerecord (5.0.0.rc1) lib/active_record/migration.rb:552:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/callbacks.rb:38:in `block in call'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:97:in `__run_callbacks__'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:750:in `_run_call_callbacks'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:90:in `run_callbacks'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/callbacks.rb:36:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/remote_ip.rb:79:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/debug_exceptions.rb:49:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/show_exceptions.rb:31:in `call'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:36:in `call_app'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:24:in `block in call'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:70:in `block in tagged'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:26:in `tagged'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:70:in `tagged'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:24:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/request_id.rb:24:in `call'
rack (2.0.0.rc1) lib/rack/runtime.rb:22:in `call'
activesupport (5.0.0.rc1) lib/active_support/cache/strategy/local_cache_middleware.rb:28:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/static.rb:136:in `call'
rack (2.0.0.rc1) lib/rack/sendfile.rb:111:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
railties (5.0.0.rc1) lib/rails/engine.rb:522:in `call'
puma (3.4.0) lib/puma/configuration.rb:224:in `call'
puma (3.4.0) lib/puma/server.rb:569:in `handle_request'
puma (3.4.0) lib/puma/server.rb:406:in `process_client'
puma (3.4.0) lib/puma/server.rb:271:in `block in run'
puma (3.4.0) lib/puma/thread_pool.rb:114:in `call'
puma (3.4.0) lib/puma/thread_pool.rb:114:in `block in spawn_thread'
Started GET "/api/v1/answers/14" for ::1 at 2016-06-19 12:51:07 -0400
  
AbstractController::ActionNotFound (The action 'show' could not be found for Api::V1::AnswersController):
  
actionpack (5.0.0.rc1) lib/abstract_controller/base.rb:121:in `process'
actionpack (5.0.0.rc1) lib/action_controller/metal.rb:190:in `dispatch'
actionpack (5.0.0.rc1) lib/action_controller/metal.rb:262:in `dispatch'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:50:in `dispatch'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:32:in `serve'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:39:in `block in serve'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:26:in `each'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:26:in `serve'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:725:in `call'
actionview (5.0.0.rc1) lib/action_view/digestor.rb:12:in `call'
rack (2.0.0.rc1) lib/rack/etag.rb:25:in `call'
rack (2.0.0.rc1) lib/rack/conditional_get.rb:25:in `call'
rack (2.0.0.rc1) lib/rack/head.rb:12:in `call'
activerecord (5.0.0.rc1) lib/active_record/migration.rb:552:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/callbacks.rb:38:in `block in call'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:97:in `__run_callbacks__'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:750:in `_run_call_callbacks'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:90:in `run_callbacks'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/callbacks.rb:36:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/remote_ip.rb:79:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/debug_exceptions.rb:49:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/show_exceptions.rb:31:in `call'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:36:in `call_app'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:24:in `block in call'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:70:in `block in tagged'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:26:in `tagged'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:70:in `tagged'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:24:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/request_id.rb:24:in `call'
rack (2.0.0.rc1) lib/rack/runtime.rb:22:in `call'
activesupport (5.0.0.rc1) lib/active_support/cache/strategy/local_cache_middleware.rb:28:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/static.rb:136:in `call'
rack (2.0.0.rc1) lib/rack/sendfile.rb:111:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
railties (5.0.0.rc1) lib/rails/engine.rb:522:in `call'
puma (3.4.0) lib/puma/configuration.rb:224:in `call'
puma (3.4.0) lib/puma/server.rb:569:in `handle_request'
puma (3.4.0) lib/puma/server.rb:406:in `process_client'
puma (3.4.0) lib/puma/server.rb:271:in `block in run'
puma (3.4.0) lib/puma/thread_pool.rb:114:in `call'
puma (3.4.0) lib/puma/thread_pool.rb:114:in `block in spawn_thread'
Started GET "/api/v1/answers/14" for ::1 at 2016-06-19 12:51:07 -0400
  
AbstractController::ActionNotFound (The action 'show' could not be found for Api::V1::AnswersController):
  
actionpack (5.0.0.rc1) lib/abstract_controller/base.rb:121:in `process'
actionpack (5.0.0.rc1) lib/action_controller/metal.rb:190:in `dispatch'
actionpack (5.0.0.rc1) lib/action_controller/metal.rb:262:in `dispatch'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:50:in `dispatch'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:32:in `serve'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:39:in `block in serve'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:26:in `each'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:26:in `serve'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:725:in `call'
actionview (5.0.0.rc1) lib/action_view/digestor.rb:12:in `call'
rack (2.0.0.rc1) lib/rack/etag.rb:25:in `call'
rack (2.0.0.rc1) lib/rack/conditional_get.rb:25:in `call'
rack (2.0.0.rc1) lib/rack/head.rb:12:in `call'
activerecord (5.0.0.rc1) lib/active_record/migration.rb:552:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/callbacks.rb:38:in `block in call'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:97:in `__run_callbacks__'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:750:in `_run_call_callbacks'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:90:in `run_callbacks'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/callbacks.rb:36:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/remote_ip.rb:79:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/debug_exceptions.rb:49:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/show_exceptions.rb:31:in `call'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:36:in `call_app'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:24:in `block in call'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:70:in `block in tagged'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:26:in `tagged'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:70:in `tagged'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:24:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/request_id.rb:24:in `call'
rack (2.0.0.rc1) lib/rack/runtime.rb:22:in `call'
activesupport (5.0.0.rc1) lib/active_support/cache/strategy/local_cache_middleware.rb:28:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/static.rb:136:in `call'
rack (2.0.0.rc1) lib/rack/sendfile.rb:111:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
railties (5.0.0.rc1) lib/rails/engine.rb:522:in `call'
puma (3.4.0) lib/puma/configuration.rb:224:in `call'
puma (3.4.0) lib/puma/server.rb:569:in `handle_request'
puma (3.4.0) lib/puma/server.rb:406:in `process_client'
puma (3.4.0) lib/puma/server.rb:271:in `block in run'
puma (3.4.0) lib/puma/thread_pool.rb:114:in `call'
puma (3.4.0) lib/puma/thread_pool.rb:114:in `block in spawn_thread'
Started GET "/api/v1/answers/14" for ::1 at 2016-06-19 12:51:07 -0400
  
AbstractController::ActionNotFound (The action 'show' could not be found for Api::V1::AnswersController):
  
actionpack (5.0.0.rc1) lib/abstract_controller/base.rb:121:in `process'
actionpack (5.0.0.rc1) lib/action_controller/metal.rb:190:in `dispatch'
actionpack (5.0.0.rc1) lib/action_controller/metal.rb:262:in `dispatch'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:50:in `dispatch'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:32:in `serve'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:39:in `block in serve'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:26:in `each'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:26:in `serve'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:725:in `call'
actionview (5.0.0.rc1) lib/action_view/digestor.rb:12:in `call'
rack (2.0.0.rc1) lib/rack/etag.rb:25:in `call'
rack (2.0.0.rc1) lib/rack/conditional_get.rb:25:in `call'
rack (2.0.0.rc1) lib/rack/head.rb:12:in `call'
activerecord (5.0.0.rc1) lib/active_record/migration.rb:552:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/callbacks.rb:38:in `block in call'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:97:in `__run_callbacks__'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:750:in `_run_call_callbacks'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:90:in `run_callbacks'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/callbacks.rb:36:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/remote_ip.rb:79:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/debug_exceptions.rb:49:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/show_exceptions.rb:31:in `call'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:36:in `call_app'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:24:in `block in call'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:70:in `block in tagged'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:26:in `tagged'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:70:in `tagged'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:24:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/request_id.rb:24:in `call'
rack (2.0.0.rc1) lib/rack/runtime.rb:22:in `call'
activesupport (5.0.0.rc1) lib/active_support/cache/strategy/local_cache_middleware.rb:28:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/static.rb:136:in `call'
rack (2.0.0.rc1) lib/rack/sendfile.rb:111:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
railties (5.0.0.rc1) lib/rails/engine.rb:522:in `call'
puma (3.4.0) lib/puma/configuration.rb:224:in `call'
puma (3.4.0) lib/puma/server.rb:569:in `handle_request'
puma (3.4.0) lib/puma/server.rb:406:in `process_client'
puma (3.4.0) lib/puma/server.rb:271:in `block in run'
puma (3.4.0) lib/puma/thread_pool.rb:114:in `call'
puma (3.4.0) lib/puma/thread_pool.rb:114:in `block in spawn_thread'
Started GET "/api/v1/random" for ::1 at 2016-06-19 12:51:19 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 8]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (4.77ms)
Completed 200 OK in 7ms (Views: 5.1ms | ActiveRecord: 0.7ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-19 12:51:20 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"asfsadf", "vote-count"=>nil, "vote-score"=>nil}, "question"=>{"data"=>{"id"=>"8", "attributes"=>{"content"=>"How did you learn programming?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: vote-count, vote-score
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 8], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "asfsadf"], ["question_id", 8], ["created_at", 2016-06-19 16:51:20 UTC], ["updated_at", 2016-06-19 16:51:20 UTC]]
  [1m[35m (2.1ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 7ms (ActiveRecord: 2.9ms)


Started GET "/api/v1/answers/14" for ::1 at 2016-06-19 12:51:24 -0400
  
AbstractController::ActionNotFound (The action 'show' could not be found for Api::V1::AnswersController):
  
actionpack (5.0.0.rc1) lib/abstract_controller/base.rb:121:in `process'
actionpack (5.0.0.rc1) lib/action_controller/metal.rb:190:in `dispatch'
actionpack (5.0.0.rc1) lib/action_controller/metal.rb:262:in `dispatch'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:50:in `dispatch'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:32:in `serve'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:39:in `block in serve'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:26:in `each'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:26:in `serve'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:725:in `call'
actionview (5.0.0.rc1) lib/action_view/digestor.rb:12:in `call'
rack (2.0.0.rc1) lib/rack/etag.rb:25:in `call'
rack (2.0.0.rc1) lib/rack/conditional_get.rb:25:in `call'
rack (2.0.0.rc1) lib/rack/head.rb:12:in `call'
activerecord (5.0.0.rc1) lib/active_record/migration.rb:552:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/callbacks.rb:38:in `block in call'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:97:in `__run_callbacks__'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:750:in `_run_call_callbacks'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:90:in `run_callbacks'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/callbacks.rb:36:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/remote_ip.rb:79:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/debug_exceptions.rb:49:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/show_exceptions.rb:31:in `call'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:36:in `call_app'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:24:in `block in call'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:70:in `block in tagged'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:26:in `tagged'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:70:in `tagged'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:24:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/request_id.rb:24:in `call'
rack (2.0.0.rc1) lib/rack/runtime.rb:22:in `call'
activesupport (5.0.0.rc1) lib/active_support/cache/strategy/local_cache_middleware.rb:28:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/static.rb:136:in `call'
rack (2.0.0.rc1) lib/rack/sendfile.rb:111:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
railties (5.0.0.rc1) lib/rails/engine.rb:522:in `call'
puma (3.4.0) lib/puma/configuration.rb:224:in `call'
puma (3.4.0) lib/puma/server.rb:569:in `handle_request'
puma (3.4.0) lib/puma/server.rb:406:in `process_client'
puma (3.4.0) lib/puma/server.rb:271:in `block in run'
puma (3.4.0) lib/puma/thread_pool.rb:114:in `call'
puma (3.4.0) lib/puma/thread_pool.rb:114:in `block in spawn_thread'
Started GET "/api/v1/random" for ::1 at 2016-06-19 12:52:52 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.4ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 11]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (17.22ms)
Completed 200 OK in 44ms (Views: 33.9ms | ActiveRecord: 7.8ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-19 12:52:54 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"sadfasdf", "vote-count"=>nil, "vote-score"=>nil}, "question"=>{"data"=>{"id"=>"11", "attributes"=>{"content"=>"Describe a time when you were able to improve upon the design that was originally suggested?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: vote-count, vote-score
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.5ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 11], ["LIMIT", 1]]
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "sadfasdf"], ["question_id", 11], ["created_at", 2016-06-19 16:52:54 UTC], ["updated_at", 2016-06-19 16:52:54 UTC]]
  [1m[35m (90.2ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 110ms (ActiveRecord: 97.6ms)


Started GET "/api/v1/random" for ::1 at 2016-06-19 12:52:56 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.5ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 32]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (43.83ms)
Completed 200 OK in 47ms (Views: 44.2ms | ActiveRecord: 0.8ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-19 12:52:57 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"sadfasdfgsd", "vote-count"=>nil, "vote-score"=>nil}, "question"=>{"data"=>{"id"=>"32", "attributes"=>{"content"=>"How did you learn programming?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: vote-count, vote-score
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 32], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "sadfasdfgsd"], ["question_id", 32], ["created_at", 2016-06-19 16:52:57 UTC], ["updated_at", 2016-06-19 16:52:57 UTC]]
  [1m[35m (2.2ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 8ms (ActiveRecord: 3.0ms)


Started GET "/api/v1/answers/7" for ::1 at 2016-06-19 12:52:58 -0400
Processing by Api::V1::AnswersController#show as JSON
  Parameters: {"id"=>"7"}
Completed 500 Internal Server Error in 46317ms (ActiveRecord: 0.0ms)


  
SystemExit (exit):
  
app/controllers/api/v1/answers_controller.rb:20:in `show'
Started GET "/api/v1/random" for ::1 at 2016-06-19 12:53:56 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.6ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 22]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (255.24ms)
Completed 200 OK in 360ms (Views: 286.9ms | ActiveRecord: 2.9ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-19 12:53:59 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"asfasdfds", "vote-count"=>nil, "vote-score"=>nil}, "question"=>{"data"=>{"id"=>"22", "attributes"=>{"content"=>"Can you tell me about a challenge you've faced at work and how you got through it?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: vote-count, vote-score
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 22], ["LIMIT", 1]]
  [1m[35m (0.5ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.7ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "asfasdfds"], ["question_id", 22], ["created_at", 2016-06-19 16:53:59 UTC], ["updated_at", 2016-06-19 16:53:59 UTC]]
  [1m[35m (3.1ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 126ms (ActiveRecord: 4.9ms)


Started GET "/api/v1/answers/10" for ::1 at 2016-06-19 12:54:00 -0400
Processing by Api::V1::AnswersController#show as JSON
  Parameters: {"id"=>"10"}
  [1m[36mAnswer Load (0.6ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."id" = $1 LIMIT $2[0m  [["id", 10], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 22], ["LIMIT", 1]]
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (66.49ms)
Completed 200 OK in 98ms (Views: 72.7ms | ActiveRecord: 1.2ms)


Started GET "/api/v1/random" for ::1 at 2016-06-19 12:54:27 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (1.1ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 2]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (283.41ms)
Completed 200 OK in 343ms (Views: 293.9ms | ActiveRecord: 1.9ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-19 12:54:29 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"sadfasdfa", "vote-count"=>nil, "vote-score"=>nil}, "question"=>{"data"=>{"id"=>"2", "attributes"=>{"content"=>"How many ways can you center a div?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: vote-count, vote-score
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
  [1m[35m (0.6ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (75.6ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "sadfasdfa"], ["question_id", 2], ["created_at", 2016-06-19 16:54:29 UTC], ["updated_at", 2016-06-19 16:54:29 UTC]]
  [1m[35m (1.2ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 210ms (ActiveRecord: 78.1ms)


Started GET "/api/v1/answers/1" for ::1 at 2016-06-19 12:54:31 -0400
Processing by Api::V1::AnswersController#show as JSON
  Parameters: {"id"=>"1"}
Started POST "/api/v1/answers" for ::1 at 2016-06-19 12:54:31 -0400
  [1m[36mAnswer Load (3.6ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"id"=>"1", "attributes"=>{"content"=>"<p>Three, and more than you'd expect!</p>\n\n  <p>You could center a div horizontally, vertically, or both and there are\n  a ton of ways to do them each. It also depends on what you're trying to\n  center. The most common way I do it is using the margins. If you set\n    a div's margin to 0 auto, to will automatically get the width of the\n    client's screen and use that information to center the div.</p>\n\n  <p>If I had text within a div, I wold use the text-align: center css\n  attribute on the div.</p>", "vote-count"=>21, "vote-score"=>15}, "question"=>{"data"=>{"id"=>"2", "attributes"=>{"content"=>"How many ways can you center a div?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: vote-count, vote-score
Unpermitted parameters: attributes, type
[active_model_serializers]   [1m[36mQuestion Load (16.6ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (85.2ms)
  [1m[36mQuestion Load (21.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
Completed 200 OK in 158ms (Views: 81.0ms | ActiveRecord: 20.2ms)


  [1m[35m (10.4ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (5.3ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "<p>Three, and more than you'd expect!</p>\n\n  <p>You could center a div horizontally, vertically, or both and there are\n  a ton of ways to do them each. It also depends on what you're trying to\n  center. The most common way I do it is using the margins. If you set\n    a div's margin to 0 auto, to will automatically get the width of the\n    client's screen and use that information to center the div.</p>\n\n  <p>If I had text within a div, I wold use the text-align: center css\n  attribute on the div.</p>"], ["question_id", 2], ["created_at", 2016-06-19 16:54:31 UTC], ["updated_at", 2016-06-19 16:54:31 UTC]]
  [1m[35m (3.6ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 223ms (ActiveRecord: 40.5ms)


Started GET "/api/v1/answers/1" for ::1 at 2016-06-19 12:54:32 -0400
Processing by Api::V1::AnswersController#show as JSON
  Parameters: {"id"=>"1"}
Started PATCH "/api/v1/answers/1" for ::1 at 2016-06-19 12:54:32 -0400
  
AbstractController::ActionNotFound (The action 'update' could not be found for Api::V1::AnswersController):
  
actionpack (5.0.0.rc1) lib/abstract_controller/base.rb:121:in `process'
actionpack (5.0.0.rc1) lib/action_controller/metal.rb:190:in `dispatch'
actionpack (5.0.0.rc1) lib/action_controller/metal.rb:262:in `dispatch'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:50:in `dispatch'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:32:in `serve'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:39:in `block in serve'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:26:in `each'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:26:in `serve'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:725:in `call'
actionview (5.0.0.rc1) lib/action_view/digestor.rb:12:in `call'
rack (2.0.0.rc1) lib/rack/etag.rb:25:in `call'
  [1m[36mAnswer Load (58.3ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
rack (2.0.0.rc1) lib/rack/conditional_get.rb:38:in `call'
rack (2.0.0.rc1) lib/rack/head.rb:12:in `call'
activerecord (5.0.0.rc1) lib/active_record/migration.rb:552:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/callbacks.rb:38:in `block in call'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:97:in `__run_callbacks__'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:750:in `_run_call_callbacks'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:90:in `run_callbacks'
[active_model_serializers]   [1m[36mQuestion Load (7.0ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/callbacks.rb:36:in `call'
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (64.03ms)
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/executor.rb:12:in `call'
Completed 200 OK in 150ms (Views: 65.4ms | ActiveRecord: 65.3ms)


actionpack (5.0.0.rc1) lib/action_dispatch/middleware/remote_ip.rb:79:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/debug_exceptions.rb:49:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/show_exceptions.rb:31:in `call'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:36:in `call_app'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:24:in `block in call'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:70:in `block in tagged'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:26:in `tagged'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:70:in `tagged'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:24:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/request_id.rb:24:in `call'
rack (2.0.0.rc1) lib/rack/runtime.rb:22:in `call'
activesupport (5.0.0.rc1) lib/active_support/cache/strategy/local_cache_middleware.rb:28:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/static.rb:136:in `call'
rack (2.0.0.rc1) lib/rack/sendfile.rb:111:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
railties (5.0.0.rc1) lib/rails/engine.rb:522:in `call'
puma (3.4.0) lib/puma/configuration.rb:224:in `call'
puma (3.4.0) lib/puma/server.rb:569:in `handle_request'
puma (3.4.0) lib/puma/server.rb:406:in `process_client'
puma (3.4.0) lib/puma/server.rb:271:in `block in run'
puma (3.4.0) lib/puma/thread_pool.rb:114:in `call'
puma (3.4.0) lib/puma/thread_pool.rb:114:in `block in spawn_thread'
Started GET "/api/v1/random" for ::1 at 2016-06-19 12:55:04 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.8ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 10]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (344.29ms)
Completed 200 OK in 465ms (Views: 384.2ms | ActiveRecord: 1.6ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-19 12:55:07 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"asdfasdfadsfads", "vote-count"=>nil, "vote-score"=>nil}, "question"=>{"data"=>{"id"=>"10", "attributes"=>{"content"=>"How did you learn web development?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: vote-count, vote-score
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 10], ["LIMIT", 1]]
  [1m[35m (0.5ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (1.4ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "asdfasdfadsfads"], ["question_id", 10], ["created_at", 2016-06-19 16:55:08 UTC], ["updated_at", 2016-06-19 16:55:08 UTC]]
  [1m[35m (2.6ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 153ms (ActiveRecord: 5.2ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-19 12:55:09 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"id"=>"18", "attributes"=>{"content"=>"eqwrqew", "vote-count"=>1, "vote-score"=>0}, "question"=>{"data"=>{"id"=>"10", "attributes"=>{"content"=>"How did you learn web development?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: vote-count, vote-score
Started GET "/api/v1/answers/18" for ::1 at 2016-06-19 12:55:09 -0400
Unpermitted parameters: attributes, type
Processing by Api::V1::AnswersController#show as JSON
  Parameters: {"id"=>"18"}
  [1m[36mQuestion Load (25.8ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 10], ["LIMIT", 1]]
  [1m[36mAnswer Load (3.3ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."id" = $1 LIMIT $2[0m  [["id", 18], ["LIMIT", 1]]
  [1m[35m (57.0ms)[0m  [1m[35mBEGIN[0m
[active_model_serializers]   [1m[36mQuestion Load (51.6ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 10], ["LIMIT", 1]]
  [1m[35mSQL (4.3ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "eqwrqew"], ["question_id", 10], ["created_at", 2016-06-19 16:55:09 UTC], ["updated_at", 2016-06-19 16:55:09 UTC]]
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (132.26ms)
Completed 200 OK in 231ms (Views: 90.1ms | ActiveRecord: 54.9ms)


  [1m[35m (18.8ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 303ms (ActiveRecord: 105.9ms)


Started GET "/api/v1/random" for ::1 at 2016-06-19 12:56:08 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.9ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.8ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 16]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (362.0ms)
Completed 200 OK in 515ms (Views: 428.5ms | ActiveRecord: 1.7ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-19 12:56:11 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"sadgadsgadsg", "vote-count"=>nil, "vote-score"=>nil}, "question"=>{"data"=>{"id"=>"16", "attributes"=>{"content"=>"Tell me about your long-term goals."}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Started POST "/api/v1/answers" for ::1 at 2016-06-19 12:56:38 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"id"=>"22", "attributes"=>{"content"=>"asdfsdf", "vote-count"=>1, "vote-score"=>0}, "question"=>{"data"=>{"id"=>"16", "attributes"=>{"content"=>"Tell me about your long-term goals."}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Completed 500 Internal Server Error in 27194ms (ActiveRecord: 0.0ms)


  
SystemExit (exit):
Completed 500 Internal Server Error in 2125ms (ActiveRecord: 0.0ms)


  
  
app/controllers/api/v1/answers_controller.rb:12:in `create'
SystemExit (exit):
  
app/controllers/api/v1/answers_controller.rb:12:in `create'
Started GET "/api/v1/answers/22" for ::1 at 2016-06-19 12:56:43 -0400
Processing by Api::V1::AnswersController#show as JSON
  Parameters: {"id"=>"22"}
Completed   in 520ms (ActiveRecord: 351.8ms)


Started GET "/api/v1/random" for ::1 at 2016-06-19 13:02:53 -0400
  [1m[36mActiveRecord::SchemaMigration Load (1.0ms)[0m  [1m[34mSELECT "schema_migrations".* FROM "schema_migrations"[0m
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (1.0ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 6]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (78.84ms)
Completed 200 OK in 193ms (Views: 166.4ms | ActiveRecord: 6.7ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-19 13:02:56 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"sadgsadg", "vote-count"=>nil, "vote-score"=>nil}, "question"=>{"data"=>{"id"=>"6", "attributes"=>{"content"=>"How does the web work?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Completed 500 Internal Server Error in 11150ms (ActiveRecord: 0.0ms)


  
SystemExit (exit):
  
app/controllers/api/v1/answers_controller.rb:12:in `create'
Started GET "/api/v1/random" for ::1 at 2016-06-19 13:03:09 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (1.3ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.6ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 1]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (51.73ms)
Completed 200 OK in 96ms (Views: 59.9ms | ActiveRecord: 2.5ms)


Started GET "/api/v1/random" for ::1 at 2016-06-19 13:03:09 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.6ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 29]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (220.07ms)
Completed 200 OK in 257ms (Views: 226.6ms | ActiveRecord: 2.9ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-19 13:03:23 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"sadfsadf", "vote-count"=>nil, "vote-score"=>nil}, "question"=>{"data"=>{"id"=>"29", "attributes"=>{"content"=>"How do you evaluate success?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: vote-count, vote-score
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (4.1ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 29], ["LIMIT", 1]]
  [1m[35m (0.5ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (1.0ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "sadfsadf"], ["question_id", 29], ["created_at", 2016-06-19 17:03:25 UTC], ["updated_at", 2016-06-19 17:03:25 UTC]]
  [1m[35m (93.2ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 417ms (ActiveRecord: 98.8ms)


Started GET "/api/v1/answers/24" for ::1 at 2016-06-19 13:03:25 -0400
Processing by Api::V1::AnswersController#show as JSON
  Parameters: {"id"=>"24"}
  [1m[36mAnswer Load (0.6ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."id" = $1 LIMIT $2[0m  [["id", 24], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mQuestion Load (0.9ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 29], ["LIMIT", 1]]
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (109.94ms)
Completed 200 OK in 154ms (Views: 129.7ms | ActiveRecord: 1.5ms)


Started GET "/api/v1/answers/24" for ::1 at 2016-06-19 13:03:54 -0400
Processing by Api::V1::AnswersController#show as JSON
  Parameters: {"id"=>"24"}
  [1m[36mAnswer Load (0.7ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."id" = $1 LIMIT $2[0m  [["id", 24], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 29], ["LIMIT", 1]]
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (48.77ms)
Completed 200 OK in 73ms (Views: 54.8ms | ActiveRecord: 1.3ms)


Started GET "/api/v1/random" for ::1 at 2016-06-19 13:05:31 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (1.1ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.9ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 24]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (205.4ms)
Completed 200 OK in 260ms (Views: 212.8ms | ActiveRecord: 2.0ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-19 13:05:33 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"asdgads", "vote-count"=>nil, "vote-score"=>nil}, "question"=>{"data"=>{"id"=>"24", "attributes"=>{"content"=>"Why do you want to be a web developer?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: vote-count, vote-score
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 24], ["LIMIT", 1]]
  [1m[35m (0.5ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.9ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "asdgads"], ["question_id", 24], ["created_at", 2016-06-19 17:05:33 UTC], ["updated_at", 2016-06-19 17:05:33 UTC]]
  [1m[35m (128.1ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 264ms (ActiveRecord: 130.2ms)


Started GET "/api/v1/answers/19" for ::1 at 2016-06-19 13:05:35 -0400
Processing by Api::V1::AnswersController#show as JSON
  Parameters: {"id"=>"19"}
  [1m[36mAnswer Load (0.8ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."id" = $1 LIMIT $2[0m  [["id", 19], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 24], ["LIMIT", 1]]
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (48.28ms)
Completed 200 OK in 78ms (Views: 58.6ms | ActiveRecord: 1.5ms)


Started GET "/api/v1/random" for ::1 at 2016-06-19 13:06:02 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (1.0ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 9]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (119.53ms)
Completed 200 OK in 184ms (Views: 129.0ms | ActiveRecord: 1.8ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-19 13:06:04 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"asfasdf", "vote-count"=>nil, "vote-score"=>nil}, "question"=>{"data"=>{"id"=>"9", "attributes"=>{"content"=>"What is a closure?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: vote-count, vote-score
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 9], ["LIMIT", 1]]
  [1m[35m (0.7ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (1.4ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "asfasdf"], ["question_id", 9], ["created_at", 2016-06-19 17:06:04 UTC], ["updated_at", 2016-06-19 17:06:04 UTC]]
  [1m[35m (41.3ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 180ms (ActiveRecord: 44.0ms)


Started GET "/api/v1/answers/23" for ::1 at 2016-06-19 13:06:05 -0400
Processing by Api::V1::AnswersController#show as JSON
  Parameters: {"id"=>"23"}
  [1m[36mAnswer Load (4.1ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."id" = $1 LIMIT $2[0m  [["id", 23], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 9], ["LIMIT", 1]]
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (56.94ms)
Completed 200 OK in 83ms (Views: 63.4ms | ActiveRecord: 4.8ms)


Started GET "/api/v1/random" for ::1 at 2016-06-19 13:07:15 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.9ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.8ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 7]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (86.59ms)
Completed 200 OK in 139ms (Views: 93.3ms | ActiveRecord: 1.7ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-19 13:07:16 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"asdfads", "vote-count"=>nil, "vote-score"=>nil}, "question"=>{"data"=>{"id"=>"7", "attributes"=>{"content"=>"What is function hoisting in JavaScript?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: vote-count, vote-score
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 7], ["LIMIT", 1]]
  [1m[35m (0.5ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.8ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "asdfads"], ["question_id", 7], ["created_at", 2016-06-19 17:07:16 UTC], ["updated_at", 2016-06-19 17:07:16 UTC]]
  [1m[35m (128.8ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 272ms (ActiveRecord: 130.8ms)


Started GET "/api/v1/random" for ::1 at 2016-06-19 13:07:18 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.6ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 19]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (75.46ms)
Completed 200 OK in 127ms (Views: 82.2ms | ActiveRecord: 1.4ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-19 13:07:19 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"asdfadsf", "vote-count"=>nil, "vote-score"=>nil}, "question"=>{"data"=>{"id"=>"19", "attributes"=>{"content"=>"Do you have any questions for me?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: vote-count, vote-score
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 19], ["LIMIT", 1]]
  [1m[35m (0.7ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.8ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "asdfadsf"], ["question_id", 19], ["created_at", 2016-06-19 17:07:20 UTC], ["updated_at", 2016-06-19 17:07:20 UTC]]
  [1m[35m (2.9ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 148ms (ActiveRecord: 5.1ms)


Started GET "/api/v1/random" for ::1 at 2016-06-19 13:07:21 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (1.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.8ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 10]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (220.04ms)
Completed 200 OK in 290ms (Views: 227.4ms | ActiveRecord: 2.6ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-19 13:07:23 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"asdfdasfadsf", "vote-count"=>nil, "vote-score"=>nil}, "question"=>{"data"=>{"id"=>"10", "attributes"=>{"content"=>"How did you learn web development?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: vote-count, vote-score
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 10], ["LIMIT", 1]]
  [1m[35m (0.6ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.8ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "asdfdasfadsf"], ["question_id", 10], ["created_at", 2016-06-19 17:07:23 UTC], ["updated_at", 2016-06-19 17:07:23 UTC]]
  [1m[35m (1.6ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 142ms (ActiveRecord: 3.7ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-19 13:07:24 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"id"=>"18", "attributes"=>{"content"=>"eqwrqew", "vote-count"=>9, "vote-score"=>0}, "question"=>{"data"=>{"id"=>"10", "attributes"=>{"content"=>"How did you learn web development?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: vote-count, vote-score
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (5.3ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 10], ["LIMIT", 1]]
Started GET "/api/v1/answers/18" for ::1 at 2016-06-19 13:07:24 -0400
Processing by Api::V1::AnswersController#show as JSON
  [1m[35m (21.1ms)[0m  [1m[35mBEGIN[0m
  Parameters: {"id"=>"18"}
  [1m[35mSQL (1.6ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "eqwrqew"], ["question_id", 10], ["created_at", 2016-06-19 17:07:24 UTC], ["updated_at", 2016-06-19 17:07:24 UTC]]
  [1m[36mAnswer Load (12.5ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."id" = $1 LIMIT $2[0m  [["id", 18], ["LIMIT", 1]]
  [1m[35m (53.4ms)[0m  [1m[35mCOMMIT[0m
[active_model_serializers]   [1m[36mQuestion Load (2.1ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 10], ["LIMIT", 1]]
Completed 204 No Content in 229ms (ActiveRecord: 81.4ms)


[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (65.85ms)
Completed 200 OK in 118ms (Views: 84.2ms | ActiveRecord: 14.7ms)


Started GET "/api/v1/answers/18" for ::1 at 2016-06-19 13:08:10 -0400
Started PATCH "/api/v1/answers/18" for ::1 at 2016-06-19 13:08:10 -0400
Processing by Api::V1::AnswersController#show as JSON
Processing by Api::V1::AnswersController#update as JSON
  Parameters: {"id"=>"18"}
  Parameters: {"data"=>{"id"=>"18", "attributes"=>{"content"=>"eqwrqew", "vote-count"=>9, "vote-score"=>0}, "question"=>{"data"=>{"id"=>"10", "attributes"=>{"content"=>"How did you learn web development?"}, "type"=>"questions"}}, "type"=>"answers"}, "id"=>"18", "answer"=>{}}
  [1m[36mAnswer Load (3680.2ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."id" = $1 LIMIT $2[0m  [["id", 18], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mQuestion Load (55831.5ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 10], ["LIMIT", 1]]
Completed 500 Internal Server Error in 59565ms (ActiveRecord: 0.0ms)


[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (55964.27ms)
  
Completed 200 OK in 59704ms (Views: 171.5ms | ActiveRecord: 59511.7ms)


SystemExit (exit):
  
app/controllers/api/v1/answers_controller.rb:24:in `update'
Started GET "/api/v1/random" for ::1 at 2016-06-19 13:09:44 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.7ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 12]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (151.67ms)
Completed 200 OK in 278ms (Views: 183.8ms | ActiveRecord: 1.5ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-19 13:09:47 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"sdgdsg", "vote-count"=>nil, "vote-score"=>nil}, "question"=>{"data"=>{"id"=>"12", "attributes"=>{"content"=>"So tell me about yourself."}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: vote-count, vote-score
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (1.0ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 12], ["LIMIT", 1]]
  [1m[35m (4.4ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.8ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "sdgdsg"], ["question_id", 12], ["created_at", 2016-06-19 17:09:47 UTC], ["updated_at", 2016-06-19 17:09:47 UTC]]
  [1m[35m (58.3ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 289ms (ActiveRecord: 70.5ms)


Started GET "/api/v1/random" for ::1 at 2016-06-19 13:09:48 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.7ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 31]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (205.49ms)
Completed 200 OK in 259ms (Views: 213.0ms | ActiveRecord: 1.5ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-19 13:09:51 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"sdfsdgg", "vote-count"=>nil, "vote-score"=>nil}, "question"=>{"data"=>{"id"=>"31", "attributes"=>{"content"=>"How does the web work?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: vote-count, vote-score
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 31], ["LIMIT", 1]]
  [1m[35m (1.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (1.0ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "sdfsdgg"], ["question_id", 31], ["created_at", 2016-06-19 17:09:51 UTC], ["updated_at", 2016-06-19 17:09:51 UTC]]
  [1m[35m (2.2ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 151ms (ActiveRecord: 5.1ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-19 13:09:52 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"id"=>"5", "attributes"=>{"content"=>"<p>It's a series of tubes.</p>", "vote-count"=>23, "vote-score"=>-20}, "question"=>{"data"=>{"id"=>"31", "attributes"=>{"content"=>"How does the web work?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: vote-count, vote-score
Unpermitted parameters: attributes, type
Started GET "/api/v1/answers/5" for ::1 at 2016-06-19 13:09:52 -0400
Processing by Api::V1::AnswersController#show as JSON
  Parameters: {"id"=>"5"}
  [1m[36mQuestion Load (26.6ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 31], ["LIMIT", 1]]
  [1m[36mAnswer Load (43.8ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."id" = $1 LIMIT $2[0m  [["id", 5], ["LIMIT", 1]]
  [1m[35m (2.4ms)[0m  [1m[35mBEGIN[0m
[active_model_serializers]   [1m[36mQuestion Load (7.9ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 31], ["LIMIT", 1]]
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (125.06ms)
Completed 200 OK in 207ms (Views: 124.6ms | ActiveRecord: 51.7ms)


  [1m[35mSQL (33.7ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "<p>It's a series of tubes.</p>"], ["question_id", 31], ["created_at", 2016-06-19 17:09:52 UTC], ["updated_at", 2016-06-19 17:09:52 UTC]]
  [1m[35m (5.7ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 311ms (ActiveRecord: 68.5ms)


Started GET "/api/v1/answers/5" for ::1 at 2016-06-19 13:09:57 -0400
Started PATCH "/api/v1/answers/5" for ::1 at 2016-06-19 13:09:57 -0400
Processing by Api::V1::AnswersController#show as JSON
Processing by Api::V1::AnswersController#update as JSON
  Parameters: {"id"=>"5"}
  Parameters: {"data"=>{"id"=>"5", "attributes"=>{"content"=>"<p>It's a series of tubes.</p>", "vote-count"=>24, "vote-score"=>-20}, "question"=>{"data"=>{"id"=>"31", "attributes"=>{"content"=>"How does the web work?"}, "type"=>"questions"}}, "type"=>"answers"}, "id"=>"5", "answer"=>{}}
  [1m[36mAnswer Load (10.5ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."id" = $1 LIMIT $2[0m  [["id", 5], ["LIMIT", 1]]
  [1m[36mAnswer Load (48.6ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."id" = $1 LIMIT $2[0m  [["id", 5], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mQuestion Load (11.9ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 31], ["LIMIT", 1]]
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (64.19ms)
  [1m[35m (22.1ms)[0m  [1m[35mBEGIN[0m
Completed 200 OK in 111ms (Views: 63.9ms | ActiveRecord: 22.5ms)


  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 31], ["LIMIT", 1]]
  [1m[35mSQL (36.7ms)[0m  [1m[33mUPDATE "answers" SET "vote_count" = $1, "updated_at" = $2 WHERE "answers"."id" = $3[0m  [["vote_count", nil], ["updated_at", 2016-06-19 17:09:57 UTC], ["id", 5]]
  [1m[35m (2.8ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 242ms (ActiveRecord: 110.8ms)


  [1m[36mAnswer Load (27.9ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."vote_count" = $1 LIMIT $2[0m  [["vote_count", 24], ["LIMIT", 1]]
  [1m[36mAnswer Load (0.7ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."vote_count" = $1 LIMIT $2[0m  [["vote_count", 24], ["LIMIT", 1]]
  [1m[36mAnswer Load (0.5ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."vote_count" = $1 LIMIT $2[0m  [["vote_count", 24], ["LIMIT", 1]]
  [1m[36mAnswer Load (0.5ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."vote_count" = $1 LIMIT $2[0m  [["vote_count", 24], ["LIMIT", 1]]
  [1m[36mAnswer Load (0.5ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."vote_count" = $1 LIMIT $2[0m  [["vote_count", 24], ["LIMIT", 1]]
  [1m[36mAnswer Load (0.5ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."vote_count" = $1 LIMIT $2[0m  [["vote_count", 24], ["LIMIT", 1]]
  [1m[36mAnswer Load (36.4ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."content" = $1 LIMIT $2[0m  [["content", "<p>It's a series of tubes.</p>"], ["LIMIT", 1]]
  [1m[36mActiveRecord::SchemaMigration Load (0.5ms)[0m  [1m[34mSELECT "schema_migrations".* FROM "schema_migrations"[0m
  [1m[35m (71.7ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1[0m  [["key", :environment]]
  [1m[36mActiveRecord::SchemaMigration Load (0.2ms)[0m  [1m[34mSELECT "schema_migrations".* FROM "schema_migrations"[0m
  [1m[35m (0.2ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1[0m  [["key", :environment]]
  [1m[36mActiveRecord::SchemaMigration Load (0.2ms)[0m  [1m[34mSELECT "schema_migrations".* FROM "schema_migrations"[0m
  [1m[35m (0.2ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1[0m  [["key", :environment]]
  [1m[35m (341.4ms)[0m  [1m[35mDROP DATABASE IF EXISTS "QIQAPI_development"[0m
  [1m[35m (234.9ms)[0m  [1m[35mDROP DATABASE IF EXISTS "QIQAPI_test"[0m
  [1m[35m (2074.1ms)[0m  [1m[35mCREATE DATABASE "QIQAPI_development" ENCODING = 'unicode'[0m
  [1m[35m (625.1ms)[0m  [1m[35mCREATE DATABASE "QIQAPI_test" ENCODING = 'unicode'[0m
  [1m[35mSQL (21.7ms)[0m  [1m[35mCREATE EXTENSION IF NOT EXISTS "plpgsql"[0m
  [1m[35m (85.5ms)[0m  [1m[35mCREATE TABLE "answers" ("id" serial primary key, "vote_score" integer DEFAULT 0, "vote_count" integer DEFAULT 0, "content" character varying, "question_id" integer, "created_at" timestamp, "updated_at" timestamp)[0m
  [1m[35m (4.5ms)[0m  [1m[35mCREATE TABLE "questions" ("id" serial primary key, "content" character varying, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  [1m[35m (4.1ms)[0m  [1m[35mCREATE TABLE "schema_migrations" ("version" character varying PRIMARY KEY)[0m
  [1m[35m (0.3ms)[0m  [1m[34mSELECT version FROM "schema_migrations"[0m
  [1m[35m (0.8ms)[0m  [1m[32mINSERT INTO "schema_migrations" (version) VALUES ('20160617182704')[0m
  [1m[35m (0.7ms)[0m  [1m[32mINSERT INTO schema_migrations (version) VALUES ('20160615195122'), ('20160615195241'), ('20160615195717');

[0m
  [1m[35m (3.7ms)[0m  [1m[35mCREATE TABLE "ar_internal_metadata" ("key" character varying PRIMARY KEY, "value" character varying, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  [1m[36mActiveRecord::InternalMetadata Load (0.5ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" ORDER BY "ar_internal_metadata"."key" ASC LIMIT $1[0m  [["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (50.3ms)[0m  [1m[32mINSERT INTO "ar_internal_metadata" ("key", "value", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "key"[0m  [["key", "environment"], ["value", "development"], ["created_at", 2016-06-19 17:12:26 UTC], ["updated_at", 2016-06-19 17:12:26 UTC]]
  [1m[35m (1.0ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mActiveRecord::InternalMetadata Load (0.3ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" ORDER BY "ar_internal_metadata"."key" ASC LIMIT $1[0m  [["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35m (0.1ms)[0m  [1m[35mCOMMIT[0m
  [1m[35mSQL (0.3ms)[0m  [1m[35mCREATE EXTENSION IF NOT EXISTS "plpgsql"[0m
  [1m[35m (9.4ms)[0m  [1m[35mCREATE TABLE "answers" ("id" serial primary key, "vote_score" integer DEFAULT 0, "vote_count" integer DEFAULT 0, "content" character varying, "question_id" integer, "created_at" timestamp, "updated_at" timestamp)[0m
  [1m[35m (5.1ms)[0m  [1m[35mCREATE TABLE "questions" ("id" serial primary key, "content" character varying, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  [1m[35m (41.6ms)[0m  [1m[35mCREATE TABLE "schema_migrations" ("version" character varying PRIMARY KEY)[0m
  [1m[35m (0.6ms)[0m  [1m[34mSELECT version FROM "schema_migrations"[0m
  [1m[35m (1.1ms)[0m  [1m[32mINSERT INTO "schema_migrations" (version) VALUES ('20160617182704')[0m
  [1m[35m (0.8ms)[0m  [1m[32mINSERT INTO schema_migrations (version) VALUES ('20160615195122'), ('20160615195241'), ('20160615195717');

[0m
  [1m[35m (4.8ms)[0m  [1m[35mCREATE TABLE "ar_internal_metadata" ("key" character varying PRIMARY KEY, "value" character varying, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  [1m[36mActiveRecord::InternalMetadata Load (0.4ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" ORDER BY "ar_internal_metadata"."key" ASC LIMIT $1[0m  [["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "ar_internal_metadata" ("key", "value", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "key"[0m  [["key", "environment"], ["value", "development"], ["created_at", 2016-06-19 17:12:26 UTC], ["updated_at", 2016-06-19 17:12:26 UTC]]
  [1m[35m (0.6ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mActiveRecord::InternalMetadata Load (0.2ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" ORDER BY "ar_internal_metadata"."key" ASC LIMIT $1[0m  [["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35m (0.1ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mActiveRecord::SchemaMigration Load (0.3ms)[0m  [1m[34mSELECT "schema_migrations".* FROM "schema_migrations"[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.5ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "What are you looking for in terms of career development?"], ["created_at", 2016-06-19 17:12:26 UTC], ["updated_at", 2016-06-19 17:12:26 UTC]]
  [1m[35m (5.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "How many ways can you center a div?"], ["created_at", 2016-06-19 17:12:26 UTC], ["updated_at", 2016-06-19 17:12:26 UTC]]
  [1m[35m (0.7ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "What are your strengths and weaknesses?"], ["created_at", 2016-06-19 17:12:26 UTC], ["updated_at", 2016-06-19 17:12:26 UTC]]
  [1m[35m (0.6ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "Explain the process of web development to a middle school kid."], ["created_at", 2016-06-19 17:12:26 UTC], ["updated_at", 2016-06-19 17:12:26 UTC]]
  [1m[35m (1.1ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "What did you like least about your last job?"], ["created_at", 2016-06-19 17:12:26 UTC], ["updated_at", 2016-06-19 17:12:26 UTC]]
  [1m[35m (146.7ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.5ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "How does the web work?"], ["created_at", 2016-06-19 17:12:26 UTC], ["updated_at", 2016-06-19 17:12:26 UTC]]
  [1m[35m (1.0ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "What is function hoisting in JavaScript?"], ["created_at", 2016-06-19 17:12:26 UTC], ["updated_at", 2016-06-19 17:12:26 UTC]]
  [1m[35m (0.7ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "How did you learn programming?"], ["created_at", 2016-06-19 17:12:26 UTC], ["updated_at", 2016-06-19 17:12:26 UTC]]
  [1m[35m (0.7ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "What is a closure?"], ["created_at", 2016-06-19 17:12:26 UTC], ["updated_at", 2016-06-19 17:12:26 UTC]]
  [1m[35m (0.7ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "How did you learn web development?"], ["created_at", 2016-06-19 17:12:26 UTC], ["updated_at", 2016-06-19 17:12:26 UTC]]
  [1m[35m (0.9ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "Describe a time when you were able to improve upon the design that was originally suggested?"], ["created_at", 2016-06-19 17:12:26 UTC], ["updated_at", 2016-06-19 17:12:26 UTC]]
  [1m[35m (0.7ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "So tell me about yourself."], ["created_at", 2016-06-19 17:12:26 UTC], ["updated_at", 2016-06-19 17:12:26 UTC]]
  [1m[35m (0.7ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "Where would you like to be in your career five years from now?"], ["created_at", 2016-06-19 17:12:26 UTC], ["updated_at", 2016-06-19 17:12:26 UTC]]
  [1m[35m (0.7ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "Why do you want to work with us?"], ["created_at", 2016-06-19 17:12:26 UTC], ["updated_at", 2016-06-19 17:12:26 UTC]]
  [1m[35m (0.7ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "Can you name two programming paradigms important for JavaScript app developers?"], ["created_at", 2016-06-19 17:12:26 UTC], ["updated_at", 2016-06-19 17:12:26 UTC]]
  [1m[35m (0.7ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "Tell me about your long-term goals."], ["created_at", 2016-06-19 17:12:26 UTC], ["updated_at", 2016-06-19 17:12:26 UTC]]
  [1m[35m (0.7ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "Tell me about the most recent project you worked on. What were your responsibilities?"], ["created_at", 2016-06-19 17:12:26 UTC], ["updated_at", 2016-06-19 17:12:26 UTC]]
  [1m[35m (0.6ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "What are your short-term goals."], ["created_at", 2016-06-19 17:12:26 UTC], ["updated_at", 2016-06-19 17:12:26 UTC]]
  [1m[35m (0.7ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "Do you have any questions for me?"], ["created_at", 2016-06-19 17:12:26 UTC], ["updated_at", 2016-06-19 17:12:26 UTC]]
  [1m[35m (0.6ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "Please walk me through one of the projects on your resume."], ["created_at", 2016-06-19 17:12:26 UTC], ["updated_at", 2016-06-19 17:12:26 UTC]]
  [1m[35m (0.6ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "What is the difference between classical inheritance and prototypal inheritance? "], ["created_at", 2016-06-19 17:12:26 UTC], ["updated_at", 2016-06-19 17:12:26 UTC]]
  [1m[35m (0.7ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "Can you tell me about a challenge you've faced at work and how you got through it?"], ["created_at", 2016-06-19 17:12:26 UTC], ["updated_at", 2016-06-19 17:12:26 UTC]]
  [1m[35m (0.6ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "Explain a polymorphic association?"], ["created_at", 2016-06-19 17:12:26 UTC], ["updated_at", 2016-06-19 17:12:26 UTC]]
  [1m[35m (0.6ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "Why do you want to be a web developer?"], ["created_at", 2016-06-19 17:12:26 UTC], ["updated_at", 2016-06-19 17:12:26 UTC]]
  [1m[35m (0.7ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "Describe your production deployment process?"], ["created_at", 2016-06-19 17:12:26 UTC], ["updated_at", 2016-06-19 17:12:26 UTC]]
  [1m[35m (0.7ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "Why do you want to work for us?"], ["created_at", 2016-06-19 17:12:26 UTC], ["updated_at", 2016-06-19 17:12:26 UTC]]
  [1m[35m (0.8ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "How would you declare and use a constructor in Ruby?"], ["created_at", 2016-06-19 17:12:26 UTC], ["updated_at", 2016-06-19 17:12:26 UTC]]
  [1m[35m (0.8ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "Do you have any questions for me?"], ["created_at", 2016-06-19 17:12:26 UTC], ["updated_at", 2016-06-19 17:12:26 UTC]]
  [1m[35m (13.9ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "How do you evaluate success?"], ["created_at", 2016-06-19 17:12:26 UTC], ["updated_at", 2016-06-19 17:12:26 UTC]]
  [1m[35m (0.9ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "How would you describe your work style?"], ["created_at", 2016-06-19 17:12:26 UTC], ["updated_at", 2016-06-19 17:12:26 UTC]]
  [1m[35m (0.8ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.6ms)[0m  [1m[32mINSERT INTO "answers" ("vote_score", "vote_count", "content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["vote_score", 15], ["vote_count", 20], ["content", "<p>Three, and more than you'd expect!</p>\n\n  <p>You could center a div horizontally, vertically, or both and there are\n  a ton of ways to do them each. It also depends on what you're trying to\n  center. The most common way I do it is using the margins. If you set\n    a div's margin to 0 auto, to will automatically get the width of the\n    client's screen and use that information to center the div.</p>\n\n  <p>If I had text within a div, I wold use the text-align: center css\n  attribute on the div.</p>"], ["question_id", 2], ["created_at", 2016-06-19 17:12:27 UTC], ["updated_at", 2016-06-19 17:12:27 UTC]]
  [1m[35m (52.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "answers" ("vote_score", "vote_count", "content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["vote_score", -5], ["vote_count", 7], ["content", "<p>Just use margin dude.</p>"], ["question_id", 2], ["created_at", 2016-06-19 17:12:27 UTC], ["updated_at", 2016-06-19 17:12:27 UTC]]
  [1m[35m (2.6ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "answers" ("vote_score", "vote_count", "content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["vote_score", 2], ["vote_count", 2], ["content", "<p>You know when you write notes and pass them to Suzie from\n  down the street? That's kind of what I do. Websites are like notes\n  you want your friends to read. For them to read your notes, you\n  need to also give them the note right? Well that is what the Internet\n  does for you. It sends the websites to the people who want to read\n  them.</p>\n\n  <p>The best part is, you know how you don't want Ms. Robinson to see\n  you pass that note? It's like that with the Internet too. There's\n  ways of keeping the visits to your website secret!</p>"], ["question_id", 4], ["created_at", 2016-06-19 17:12:27 UTC], ["updated_at", 2016-06-19 17:12:27 UTC]]
  [1m[35m (32.1ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "answers" ("vote_score", "vote_count", "content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["vote_score", -7], ["vote_count", 12], ["content", "<p>Web development is like, you know, creating front end\n  presentations of backend APIs using asynchronious requests.</p>"], ["question_id", 4], ["created_at", 2016-06-19 17:12:27 UTC], ["updated_at", 2016-06-19 17:12:27 UTC]]
  [1m[35m (1.2ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "How does the web work?"], ["created_at", 2016-06-19 17:12:27 UTC], ["updated_at", 2016-06-19 17:12:27 UTC]]
  [1m[35m (1.5ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "answers" ("vote_score", "vote_count", "content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["vote_score", -20], ["vote_count", 22], ["content", "<p>It's a series of tubes.</p>"], ["question_id", 31], ["created_at", 2016-06-19 17:12:27 UTC], ["updated_at", 2016-06-19 17:12:27 UTC]]
  [1m[35m (1.6ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "answers" ("vote_score", "vote_count", "content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["vote_score", 5], ["vote_count", 7], ["content", "The Internet has a technical side and a social side. There's the\n  infrastructure, like routers, cables, satelites, ISPs, servers,\n  and website code, and there are the users who participate in the\n  Internet by creating content for it's applications and browsing\n  the sites.</p>\n\n  <p>I imagine you guys are interested in the technical side though\n  right? (Yes)</p>\n\n  <p>In short, I'd say it's a communication network designed\n  to deliver messages between computers. One of the most interesting\n  things about it, I think, is that in the end, it really is a\n  bunch of cables! Some run under the oceans, others go through\n  mountains and under forests. Some signals travel through space! All\n  the code we write goes through those cables, I think that's pretty\n  amazing!</p>"], ["question_id", 31], ["created_at", 2016-06-19 17:12:27 UTC], ["updated_at", 2016-06-19 17:12:27 UTC]]
  [1m[35m (2.1ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "How did you learn programming?"], ["created_at", 2016-06-19 17:12:27 UTC], ["updated_at", 2016-06-19 17:12:27 UTC]]
  [1m[35m (1.5ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "answers" ("vote_score", "vote_count", "content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["vote_score", -3], ["vote_count", 4], ["content", "<p>I just started Googling it you know, and I liked doing it so\n  I ended up trying to do it professionally.</p>"], ["question_id", 32], ["created_at", 2016-06-19 17:12:27 UTC], ["updated_at", 2016-06-19 17:12:27 UTC]]
  [1m[35m (1.8ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "answers" ("vote_score", "vote_count", "content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["vote_score", -3], ["vote_count", 4], ["content", "<p>For me, it started back in 2011 when I was doing social science\n  at Stockholm University. The creation of communities had become a\n  passion of mine so I was exploring ways of finding data on\n  social networks. The Internet was the obvious place to look so I\n  found myself writing Python scripts to build simple web scrapers and\n  spiders.</p>\n\n  <p>It was exciting, I discovered coding makes me happy not just for\n  the results it creates but because I like the way it looks. Solving\n  problems is interesting.</p>"], ["question_id", 32], ["created_at", 2016-06-19 17:12:27 UTC], ["updated_at", 2016-06-19 17:12:27 UTC]]
  [1m[35m (3.2ms)[0m  [1m[35mCOMMIT[0m
Started GET "/api/v1/random" for ::1 at 2016-06-19 13:13:18 -0400
  [1m[36mActiveRecord::SchemaMigration Load (0.4ms)[0m  [1m[34mSELECT "schema_migrations".* FROM "schema_migrations"[0m
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.4ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 8]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (80.09ms)
Completed 200 OK in 179ms (Views: 169.1ms | ActiveRecord: 7.2ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-19 13:13:21 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"asdfsadf", "vote-count"=>nil, "vote-score"=>nil}, "question"=>{"data"=>{"id"=>"8", "attributes"=>{"content"=>"How did you learn programming?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: vote-count, vote-score
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 8], ["LIMIT", 1]]
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.5ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "asdfsadf"], ["question_id", 8], ["created_at", 2016-06-19 17:13:21 UTC], ["updated_at", 2016-06-19 17:13:21 UTC]]
  [1m[35m (15.7ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 35ms (ActiveRecord: 18.5ms)


Started GET "/api/v1/random" for ::1 at 2016-06-19 13:13:28 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 26]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (2.45ms)
Completed 200 OK in 5ms (Views: 2.7ms | ActiveRecord: 0.5ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-19 13:13:30 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"asasfasf", "vote-count"=>nil, "vote-score"=>nil}, "question"=>{"data"=>{"id"=>"26", "attributes"=>{"content"=>"Why do you want to work for us?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: vote-count, vote-score
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 26], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "asasfasf"], ["question_id", 26], ["created_at", 2016-06-19 17:13:30 UTC], ["updated_at", 2016-06-19 17:13:30 UTC]]
  [1m[35m (15.9ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 23ms (ActiveRecord: 16.6ms)


Started GET "/api/v1/random" for ::1 at 2016-06-19 13:13:31 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 30]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (3.06ms)
Completed 200 OK in 6ms (Views: 3.4ms | ActiveRecord: 0.7ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-19 13:13:33 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"SADFDSAFDAS", "vote-count"=>nil, "vote-score"=>nil}, "question"=>{"data"=>{"id"=>"30", "attributes"=>{"content"=>"How would you describe your work style?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: vote-count, vote-score
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 30], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "SADFDSAFDAS"], ["question_id", 30], ["created_at", 2016-06-19 17:13:33 UTC], ["updated_at", 2016-06-19 17:13:33 UTC]]
  [1m[35m (2.4ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 8ms (ActiveRecord: 3.1ms)


Started GET "/api/v1/random" for ::1 at 2016-06-19 13:13:35 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 25]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (2.84ms)
Completed 200 OK in 5ms (Views: 3.1ms | ActiveRecord: 0.7ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-19 13:13:36 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"asdfadsfdas", "vote-count"=>nil, "vote-score"=>nil}, "question"=>{"data"=>{"id"=>"25", "attributes"=>{"content"=>"Describe your production deployment process?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: vote-count, vote-score
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 25], ["LIMIT", 1]]
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "asdfadsfdas"], ["question_id", 25], ["created_at", 2016-06-19 17:13:36 UTC], ["updated_at", 2016-06-19 17:13:36 UTC]]
  [1m[35m (2.9ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 10ms (ActiveRecord: 3.7ms)


Started GET "/api/v1/random" for ::1 at 2016-06-19 13:13:37 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.3ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 17]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (2.73ms)
Completed 200 OK in 5ms (Views: 3.0ms | ActiveRecord: 0.6ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-19 13:13:38 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"sadfadsf", "vote-count"=>nil, "vote-score"=>nil}, "question"=>{"data"=>{"id"=>"17", "attributes"=>{"content"=>"Tell me about the most recent project you worked on. What were your responsibilities?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: vote-count, vote-score
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 17], ["LIMIT", 1]]
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "sadfadsf"], ["question_id", 17], ["created_at", 2016-06-19 17:13:38 UTC], ["updated_at", 2016-06-19 17:13:38 UTC]]
  [1m[35m (148.0ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 154ms (ActiveRecord: 148.9ms)


Started GET "/api/v1/random" for ::1 at 2016-06-19 13:13:39 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 30]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (26.25ms)
Completed 200 OK in 28ms (Views: 26.6ms | ActiveRecord: 0.5ms)


Started GET "/api/v1/random" for ::1 at 2016-06-19 13:13:44 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 13]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (3.35ms)
Completed 200 OK in 7ms (Views: 3.8ms | ActiveRecord: 0.8ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-19 13:13:46 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"asDSAd", "vote-count"=>nil, "vote-score"=>nil}, "question"=>{"data"=>{"id"=>"13", "attributes"=>{"content"=>"Where would you like to be in your career five years from now?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: vote-count, vote-score
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 13], ["LIMIT", 1]]
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "asDSAd"], ["question_id", 13], ["created_at", 2016-06-19 17:13:46 UTC], ["updated_at", 2016-06-19 17:13:46 UTC]]
  [1m[35m (2.1ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 8ms (ActiveRecord: 2.9ms)


Started GET "/api/v1/random" for ::1 at 2016-06-19 13:13:47 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.5ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 1]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (2.82ms)
Completed 200 OK in 5ms (Views: 3.1ms | ActiveRecord: 0.7ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-19 13:13:49 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"dasgasddsg", "vote-count"=>nil, "vote-score"=>nil}, "question"=>{"data"=>{"id"=>"1", "attributes"=>{"content"=>"What are you looking for in terms of career development?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: vote-count, vote-score
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "dasgasddsg"], ["question_id", 1], ["created_at", 2016-06-19 17:13:49 UTC], ["updated_at", 2016-06-19 17:13:49 UTC]]
  [1m[35m (0.7ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 6ms (ActiveRecord: 1.4ms)


Started GET "/api/v1/random" for ::1 at 2016-06-19 13:13:50 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.1ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 12]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (2.21ms)
Completed 200 OK in 4ms (Views: 2.5ms | ActiveRecord: 0.5ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-19 13:13:52 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"dsfadsf", "vote-count"=>nil, "vote-score"=>nil}, "question"=>{"data"=>{"id"=>"12", "attributes"=>{"content"=>"So tell me about yourself."}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: vote-count, vote-score
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 12], ["LIMIT", 1]]
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "dsfadsf"], ["question_id", 12], ["created_at", 2016-06-19 17:13:52 UTC], ["updated_at", 2016-06-19 17:13:52 UTC]]
  [1m[35m (16.3ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 24ms (ActiveRecord: 17.0ms)


Started GET "/api/v1/random" for ::1 at 2016-06-19 13:13:53 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 12]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (3.6ms)
Completed 200 OK in 7ms (Views: 4.0ms | ActiveRecord: 1.0ms)


Started GET "/api/v1/random" for ::1 at 2016-06-19 13:13:54 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 20]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (2.34ms)
Completed 200 OK in 4ms (Views: 2.6ms | ActiveRecord: 0.6ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-19 13:13:56 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"dsafadsf", "vote-count"=>nil, "vote-score"=>nil}, "question"=>{"data"=>{"id"=>"20", "attributes"=>{"content"=>"Please walk me through one of the projects on your resume."}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: vote-count, vote-score
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 20], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "dsafadsf"], ["question_id", 20], ["created_at", 2016-06-19 17:13:56 UTC], ["updated_at", 2016-06-19 17:13:56 UTC]]
  [1m[35m (2.3ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 8ms (ActiveRecord: 3.0ms)


Started GET "/api/v1/random" for ::1 at 2016-06-19 13:13:57 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 27]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (2.73ms)
Completed 200 OK in 5ms (Views: 3.1ms | ActiveRecord: 0.6ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-19 13:13:59 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"Dsgasgdsga", "vote-count"=>nil, "vote-score"=>nil}, "question"=>{"data"=>{"id"=>"27", "attributes"=>{"content"=>"How would you declare and use a constructor in Ruby?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: vote-count, vote-score
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 27], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "Dsgasgdsga"], ["question_id", 27], ["created_at", 2016-06-19 17:13:59 UTC], ["updated_at", 2016-06-19 17:13:59 UTC]]
  [1m[35m (0.9ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 6ms (ActiveRecord: 1.6ms)


Started GET "/api/v1/random" for ::1 at 2016-06-19 13:14:00 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 9]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (3.07ms)
Completed 200 OK in 6ms (Views: 3.4ms | ActiveRecord: 0.6ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-19 13:14:01 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"sdgsdggasd", "vote-count"=>nil, "vote-score"=>nil}, "question"=>{"data"=>{"id"=>"9", "attributes"=>{"content"=>"What is a closure?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: vote-count, vote-score
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 9], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "sdgsdggasd"], ["question_id", 9], ["created_at", 2016-06-19 17:14:01 UTC], ["updated_at", 2016-06-19 17:14:01 UTC]]
  [1m[35m (2.4ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 9ms (ActiveRecord: 3.1ms)


Started GET "/api/v1/random" for ::1 at 2016-06-19 13:14:02 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 22]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (2.27ms)
Completed 200 OK in 4ms (Views: 2.5ms | ActiveRecord: 0.5ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-19 13:14:04 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"ADfadsfgsad", "vote-count"=>nil, "vote-score"=>nil}, "question"=>{"data"=>{"id"=>"22", "attributes"=>{"content"=>"Can you tell me about a challenge you've faced at work and how you got through it?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: vote-count, vote-score
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 22], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "ADfadsfgsad"], ["question_id", 22], ["created_at", 2016-06-19 17:14:04 UTC], ["updated_at", 2016-06-19 17:14:04 UTC]]
  [1m[35m (2.2ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 9ms (ActiveRecord: 2.9ms)


Started GET "/api/v1/random" for ::1 at 2016-06-19 13:14:06 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.5ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 11]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (3.11ms)
Completed 200 OK in 6ms (Views: 3.5ms | ActiveRecord: 0.7ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-19 13:14:08 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"adsgdsfghdfsh", "vote-count"=>nil, "vote-score"=>nil}, "question"=>{"data"=>{"id"=>"11", "attributes"=>{"content"=>"Describe a time when you were able to improve upon the design that was originally suggested?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: vote-count, vote-score
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 11], ["LIMIT", 1]]
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "adsgdsfghdfsh"], ["question_id", 11], ["created_at", 2016-06-19 17:14:08 UTC], ["updated_at", 2016-06-19 17:14:08 UTC]]
  [1m[35m (2.3ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 14ms (ActiveRecord: 3.0ms)


Started GET "/api/v1/random" for ::1 at 2016-06-19 13:14:09 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 22]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (4.51ms)
Completed 200 OK in 7ms (Views: 4.9ms | ActiveRecord: 0.6ms)


Started GET "/api/v1/random" for ::1 at 2016-06-19 13:14:11 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 7]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (3.21ms)
Completed 200 OK in 6ms (Views: 3.7ms | ActiveRecord: 0.8ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-19 13:14:12 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"SDdsgsad", "vote-count"=>nil, "vote-score"=>nil}, "question"=>{"data"=>{"id"=>"7", "attributes"=>{"content"=>"What is function hoisting in JavaScript?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: vote-count, vote-score
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 7], ["LIMIT", 1]]
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "SDdsgsad"], ["question_id", 7], ["created_at", 2016-06-19 17:14:12 UTC], ["updated_at", 2016-06-19 17:14:12 UTC]]
  [1m[35m (16.3ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 22ms (ActiveRecord: 17.0ms)


Started GET "/api/v1/random" for ::1 at 2016-06-19 13:14:13 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 3]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (3.21ms)
Completed 200 OK in 6ms (Views: 3.8ms | ActiveRecord: 0.6ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-19 13:14:16 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"DFDSG", "vote-count"=>nil, "vote-score"=>nil}, "question"=>{"data"=>{"id"=>"3", "attributes"=>{"content"=>"What are your strengths and weaknesses?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: vote-count, vote-score
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 3], ["LIMIT", 1]]
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "DFDSG"], ["question_id", 3], ["created_at", 2016-06-19 17:14:16 UTC], ["updated_at", 2016-06-19 17:14:16 UTC]]
  [1m[35m (1.0ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 7ms (ActiveRecord: 1.8ms)


Started GET "/api/v1/random" for ::1 at 2016-06-19 13:14:18 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 28]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (3.29ms)
Completed 200 OK in 6ms (Views: 3.7ms | ActiveRecord: 0.6ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-19 13:14:20 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"CZXGDG", "vote-count"=>nil, "vote-score"=>nil}, "question"=>{"data"=>{"id"=>"28", "attributes"=>{"content"=>"Do you have any questions for me?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: vote-count, vote-score
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 28], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "CZXGDG"], ["question_id", 28], ["created_at", 2016-06-19 17:14:20 UTC], ["updated_at", 2016-06-19 17:14:20 UTC]]
  [1m[35m (2.1ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 8ms (ActiveRecord: 2.8ms)


Started GET "/api/v1/random" for ::1 at 2016-06-19 13:14:22 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.3ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 16]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (3.08ms)
Completed 200 OK in 6ms (Views: 3.5ms | ActiveRecord: 0.7ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-19 13:14:24 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"dzfhsdf", "vote-count"=>nil, "vote-score"=>nil}, "question"=>{"data"=>{"id"=>"16", "attributes"=>{"content"=>"Tell me about your long-term goals."}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: vote-count, vote-score
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 16], ["LIMIT", 1]]
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "dzfhsdf"], ["question_id", 16], ["created_at", 2016-06-19 17:14:24 UTC], ["updated_at", 2016-06-19 17:14:24 UTC]]
  [1m[35m (22.7ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 34ms (ActiveRecord: 23.5ms)


Started GET "/api/v1/random" for ::1 at 2016-06-19 13:14:25 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 32]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (4.02ms)
Completed 200 OK in 6ms (Views: 4.3ms | ActiveRecord: 0.6ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-19 13:14:27 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"sdfgdsfhdfh", "vote-count"=>nil, "vote-score"=>nil}, "question"=>{"data"=>{"id"=>"32", "attributes"=>{"content"=>"How did you learn programming?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: vote-count, vote-score
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 32], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "sdfgdsfhdfh"], ["question_id", 32], ["created_at", 2016-06-19 17:14:27 UTC], ["updated_at", 2016-06-19 17:14:27 UTC]]
  [1m[35m (0.8ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 6ms (ActiveRecord: 1.5ms)


  [1m[36mAnswer Load (0.8ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."content" = $1 LIMIT $2[0m  [["content", "<p>I just started Googling it you know, and I liked doing it so I ended up trying to do it professionally.</p>"], ["LIMIT", 1]]
  [1m[36mAnswer Load (0.6ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."content" = $1 LIMIT $2[0m  [["content", "<p>I just started Googling it you know, and I liked doing it so I ended up trying to do it professionally.</p>"], ["LIMIT", 1]]
  [1m[36mAnswer Load (0.5ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."content" = $1 LIMIT $2[0m  [["content", "<p>I just started Googling it you know, and I liked doing it so I ended up trying to do it professionally.</p>"], ["LIMIT", 1]]
  [1m[36mAnswer Load (0.7ms)[0m  [1m[34mSELECT "answers".* FROM "answers"[0m
  [1m[36mAnswer Load (0.4ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."id" = $1 LIMIT $2[0m  [["id", 7], ["LIMIT", 1]]
Started GET "/api/v1/answers/7" for ::1 at 2016-06-19 13:16:12 -0400
Processing by Api::V1::AnswersController#show as JSON
  Parameters: {"id"=>"7"}
  [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."id" = $1 LIMIT $2[0m  [["id", 7], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mQuestion Load (0.1ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 32], ["LIMIT", 1]]
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (2.22ms)
Completed 200 OK in 4ms (Views: 2.5ms | ActiveRecord: 0.4ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-19 13:16:12 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"id"=>"7", "attributes"=>{"content"=>"<p>I just started Googling it you know, and I liked doing it so\n  I ended up trying to do it professionally.</p>", "vote-count"=>5, "vote-score"=>-3}, "question"=>{"data"=>{"id"=>"32", "attributes"=>{"content"=>"How did you learn programming?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: vote-count, vote-score
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 32], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.6ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "<p>I just started Googling it you know, and I liked doing it so\n  I ended up trying to do it professionally.</p>"], ["question_id", 32], ["created_at", 2016-06-19 17:16:12 UTC], ["updated_at", 2016-06-19 17:16:12 UTC]]
  [1m[35m (74.0ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 80ms (ActiveRecord: 75.4ms)


  [1m[36mAnswer Load (0.7ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."id" = $1 LIMIT $2[0m  [["id", 7], ["LIMIT", 1]]
Started GET "/api/v1/answers/7" for ::1 at 2016-06-19 13:17:21 -0400
Started PATCH "/api/v1/answers/7" for ::1 at 2016-06-19 13:17:21 -0400
Processing by Api::V1::AnswersController#show as JSON
  Parameters: {"id"=>"7"}
Processing by Api::V1::AnswersController#update as JSON
  Parameters: {"data"=>{"id"=>"7", "attributes"=>{"content"=>"<p>I just started Googling it you know, and I liked doing it so\n  I ended up trying to do it professionally.</p>", "vote-count"=>6, "vote-score"=>-3}, "question"=>{"data"=>{"id"=>"32", "attributes"=>{"content"=>"How did you learn programming?"}, "type"=>"questions"}}, "type"=>"answers"}, "id"=>"7", "answer"=>{}}
  [1m[36mAnswer Load (0.6ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."id" = $1 LIMIT $2[0m  [["id", 7], ["LIMIT", 1]]
Unpermitted parameters: vote-count, vote-score
Completed 500 Internal Server Error in 161515ms (ActiveRecord: 4.7ms)


  
SystemExit (exit):
  
app/controllers/api/v1/answers_controller.rb:24:in `update'
[active_model_serializers]   [1m[36mQuestion Load (0.5ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 32], ["LIMIT", 1]]
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (157.7ms)
Completed 200 OK in 162659ms (Views: 162644.3ms | ActiveRecord: 9.6ms)


Started GET "/api/v1/random" for ::1 at 2016-06-19 13:20:18 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (1.3ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (4.0ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 24]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (74.56ms)
Completed 200 OK in 119ms (Views: 76.4ms | ActiveRecord: 5.8ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-19 13:20:21 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"agsdg", "vote-count"=>nil, "vote-score"=>nil}, "question"=>{"data"=>{"id"=>"24", "attributes"=>{"content"=>"Why do you want to be a web developer?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: vote-count, vote-score
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.5ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 24], ["LIMIT", 1]]
  [1m[35m (0.6ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.6ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "agsdg"], ["question_id", 24], ["created_at", 2016-06-19 17:20:21 UTC], ["updated_at", 2016-06-19 17:20:21 UTC]]
  [1m[35m (72.1ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 200ms (ActiveRecord: 73.9ms)


Started GET "/api/v1/random" for ::1 at 2016-06-19 13:20:22 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (1.0ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.6ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 18]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (60.79ms)
Completed 200 OK in 111ms (Views: 67.1ms | ActiveRecord: 1.6ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-19 13:20:24 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"adsgsadg", "vote-count"=>nil, "vote-score"=>nil}, "question"=>{"data"=>{"id"=>"18", "attributes"=>{"content"=>"What are your short-term goals."}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: vote-count, vote-score
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 18], ["LIMIT", 1]]
  [1m[35m (0.5ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.8ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "adsgsadg"], ["question_id", 18], ["created_at", 2016-06-19 17:20:24 UTC], ["updated_at", 2016-06-19 17:20:24 UTC]]
  [1m[35m (2.7ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 117ms (ActiveRecord: 4.5ms)


Started GET "/api/v1/random" for ::1 at 2016-06-19 13:20:26 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.6ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 31]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (125.21ms)
Completed 200 OK in 178ms (Views: 135.0ms | ActiveRecord: 1.4ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-19 13:20:28 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"asdgsdfg", "vote-count"=>nil, "vote-score"=>nil}, "question"=>{"data"=>{"id"=>"31", "attributes"=>{"content"=>"How does the web work?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: vote-count, vote-score
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 31], ["LIMIT", 1]]
  [1m[35m (0.5ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (1.5ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "asdgsdfg"], ["question_id", 31], ["created_at", 2016-06-19 17:20:28 UTC], ["updated_at", 2016-06-19 17:20:28 UTC]]
  [1m[35m (2.6ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 124ms (ActiveRecord: 5.2ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-19 13:20:30 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"id"=>"5", "attributes"=>{"content"=>"<p>It's a series of tubes.</p>", "vote-count"=>1, "vote-score"=>nil}, "question"=>{"data"=>{"id"=>"31", "attributes"=>{"content"=>"How does the web work?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Started GET "/api/v1/answers/5" for ::1 at 2016-06-19 13:20:30 -0400
Unpermitted parameters: vote-count, vote-score
Processing by Api::V1::AnswersController#show as JSON
Unpermitted parameters: attributes, type
  Parameters: {"id"=>"5"}
  [1m[36mAnswer Load (1.8ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."id" = $1 LIMIT $2[0m  [["id", 5], ["LIMIT", 1]]
  [1m[36mQuestion Load (42.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 31], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mQuestion Load (39.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 31], ["LIMIT", 1]]
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (82.84ms)
  [1m[35m (20.8ms)[0m  [1m[35mBEGIN[0m
Completed 200 OK in 111ms (Views: 55.2ms | ActiveRecord: 41.0ms)


  [1m[35mSQL (0.8ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "<p>It's a series of tubes.</p>"], ["question_id", 31], ["created_at", 2016-06-19 17:20:30 UTC], ["updated_at", 2016-06-19 17:20:30 UTC]]
  [1m[35m (2.7ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 225ms (ActiveRecord: 66.7ms)


Started GET "/api/v1/answers/5" for ::1 at 2016-06-19 13:20:46 -0400
Processing by Api::V1::AnswersController#show as JSON
  Parameters: {"id"=>"5"}
Started PATCH "/api/v1/answers/5" for ::1 at 2016-06-19 13:20:46 -0400
  [1m[36mAnswer Load (3.4ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."id" = $1 LIMIT $2[0m  [["id", 5], ["LIMIT", 1]]
Processing by Api::V1::AnswersController#update as JSON
  Parameters: {"data"=>{"id"=>"5", "attributes"=>{"content"=>"<p>It's a series of tubes.</p>", "vote-count"=>2, "vote-score"=>-20}, "question"=>{"data"=>{"id"=>"31", "attributes"=>{"content"=>"How does the web work?"}, "type"=>"questions"}}, "type"=>"answers"}, "id"=>"5", "answer"=>{}}
Unpermitted parameters: vote-count, vote-score
[active_model_serializers]   [1m[36mQuestion Load (143158.5ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 31], ["LIMIT", 1]]
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (143320.94ms)
Completed 500 Internal Server Error in 143294ms (ActiveRecord: 0.0ms)


Completed 200 OK in 143374ms (Views: 174.9ms | ActiveRecord: 143161.9ms)


  
SystemExit (exit):
  
app/controllers/api/v1/answers_controller.rb:24:in `update'
Started GET "/api/v1/random" for ::1 at 2016-06-19 13:23:49 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.9ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.8ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 28]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (304.52ms)
Completed 200 OK in 438ms (Views: 337.7ms | ActiveRecord: 12.9ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-19 13:23:52 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"dsfgdsfg", "vote-count"=>nil, "vote-score"=>nil}, "question"=>{"data"=>{"id"=>"28", "attributes"=>{"content"=>"Do you have any questions for me?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: vote-count, vote-score
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (1.1ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 28], ["LIMIT", 1]]
  [1m[35m (0.5ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.9ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "dsfgdsfg"], ["question_id", 28], ["created_at", 2016-06-19 17:23:52 UTC], ["updated_at", 2016-06-19 17:23:52 UTC]]
  [1m[35m (245.6ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 409ms (ActiveRecord: 248.1ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-19 13:23:54 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"id"=>"24", "attributes"=>{"content"=>"CZXGDG", "vote-count"=>1, "vote-score"=>nil}, "question"=>{"data"=>{"id"=>"28", "attributes"=>{"content"=>"Do you have any questions for me?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: vote-count, vote-score
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (4.6ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 28], ["LIMIT", 1]]
Started GET "/api/v1/answers/24" for ::1 at 2016-06-19 13:23:54 -0400
Processing by Api::V1::AnswersController#show as JSON
  Parameters: {"id"=>"24"}
  [1m[35m (1.7ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (2.5ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "CZXGDG"], ["question_id", 28], ["created_at", 2016-06-19 17:23:54 UTC], ["updated_at", 2016-06-19 17:23:54 UTC]]
  [1m[36mAnswer Load (16.2ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."id" = $1 LIMIT $2[0m  [["id", 24], ["LIMIT", 1]]
  [1m[35m (2.7ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 277ms (ActiveRecord: 11.5ms)


[active_model_serializers]   [1m[36mQuestion Load (18.0ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 28], ["LIMIT", 1]]
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (90.76ms)
Completed 200 OK in 197ms (Views: 84.6ms | ActiveRecord: 34.2ms)


Started GET "/api/v1/answers/24" for ::1 at 2016-06-19 13:24:11 -0400
Started PATCH "/api/v1/answers/24" for ::1 at 2016-06-19 13:24:11 -0400
Processing by Api::V1::AnswersController#show as JSON
Processing by Api::V1::AnswersController#update as JSON
  Parameters: {"id"=>"24"}
  Parameters: {"data"=>{"id"=>"24", "attributes"=>{"content"=>"CZXGDG", "vote-count"=>1, "vote-score"=>0}, "question"=>{"data"=>{"id"=>"28", "attributes"=>{"content"=>"Do you have any questions for me?"}, "type"=>"questions"}}, "type"=>"answers"}, "id"=>"24", "answer"=>{}}
  [1m[36mAnswer Load (6866.1ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."id" = $1 LIMIT $2[0m  [["id", 24], ["LIMIT", 1]]
Completed 500 Internal Server Error in 6874ms (ActiveRecord: 0.0ms)


  
SystemExit (exit):
  
app/controllers/api/v1/answers_controller.rb:24:in `update'
[active_model_serializers]   [1m[36mQuestion Load (57.5ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 28], ["LIMIT", 1]]
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (127.2ms)
Completed 200 OK in 7102ms (Views: 81.2ms | ActiveRecord: 6923.6ms)


Started PATCH "/api/v1/answers/24" for ::1 at 2016-06-19 13:24:23 -0400
Processing by Api::V1::AnswersController#update as JSON
Started GET "/api/v1/answers/24" for ::1 at 2016-06-19 13:24:23 -0400
  Parameters: {"data"=>{"id"=>"24", "attributes"=>{"content"=>"CZXGDG", "vote-count"=>2, "vote-score"=>0}, "question"=>{"data"=>{"id"=>"28", "attributes"=>{"content"=>"Do you have any questions for me?"}, "type"=>"questions"}}, "type"=>"answers"}, "id"=>"24", "answer"=>{}}
Processing by Api::V1::AnswersController#show as JSON
  Parameters: {"id"=>"24"}
Completed 500 Internal Server Error in 3661ms (ActiveRecord: 0.0ms)


  
SystemExit (exit):
  
app/controllers/api/v1/answers_controller.rb:24:in `update'
  [1m[36mAnswer Load (93.1ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."id" = $1 LIMIT $2[0m  [["id", 24], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mQuestion Load (62.3ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 28], ["LIMIT", 1]]
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (421.99ms)
Completed 200 OK in 836ms (Views: 665.5ms | ActiveRecord: 155.4ms)


Started GET "/api/v1/random" for ::1 at 2016-06-19 13:24:31 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.9ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 20]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (122.64ms)
Completed 200 OK in 181ms (Views: 130.4ms | ActiveRecord: 1.7ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-19 13:24:33 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"dsgg", "vote-count"=>nil, "vote-score"=>nil}, "question"=>{"data"=>{"id"=>"20", "attributes"=>{"content"=>"Please walk me through one of the projects on your resume."}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: vote-count, vote-score
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 20], ["LIMIT", 1]]
  [1m[35m (0.6ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.9ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "dsgg"], ["question_id", 20], ["created_at", 2016-06-19 17:24:34 UTC], ["updated_at", 2016-06-19 17:24:34 UTC]]
  [1m[35m (26.8ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 167ms (ActiveRecord: 28.9ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-19 13:24:36 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"id"=>"17", "attributes"=>{"content"=>"dsafadsf", "vote-count"=>1, "vote-score"=>nil}, "question"=>{"data"=>{"id"=>"20", "attributes"=>{"content"=>"Please walk me through one of the projects on your resume."}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: vote-count, vote-score
Unpermitted parameters: attributes, type
Started GET "/api/v1/answers/17" for ::1 at 2016-06-19 13:24:36 -0400
Processing by Api::V1::AnswersController#show as JSON
  [1m[36mQuestion Load (21.8ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 20], ["LIMIT", 1]]
  Parameters: {"id"=>"17"}
  [1m[35m (12.4ms)[0m  [1m[35mBEGIN[0m
  [1m[36mAnswer Load (48.9ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."id" = $1 LIMIT $2[0m  [["id", 17], ["LIMIT", 1]]
  [1m[35mSQL (3.6ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "dsafadsf"], ["question_id", 20], ["created_at", 2016-06-19 17:24:36 UTC], ["updated_at", 2016-06-19 17:24:36 UTC]]
[active_model_serializers]   [1m[36mQuestion Load (20.7ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 20], ["LIMIT", 1]]
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (79.93ms)
Completed 200 OK in 157ms (Views: 66.3ms | ActiveRecord: 69.6ms)


  [1m[35m (29.8ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 285ms (ActiveRecord: 67.6ms)


Started GET "/api/v1/random" for ::1 at 2016-06-19 13:25:42 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.7ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 31]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (224.0ms)
Completed 200 OK in 282ms (Views: 232.1ms | ActiveRecord: 1.5ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-19 13:25:44 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"asdfadsf", "vote-count"=>nil, "vote-score"=>nil}, "question"=>{"data"=>{"id"=>"31", "attributes"=>{"content"=>"How does the web work?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: vote-count, vote-score
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 31], ["LIMIT", 1]]
  [1m[35m (0.9ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (1.1ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "asdfadsf"], ["question_id", 31], ["created_at", 2016-06-19 17:25:45 UTC], ["updated_at", 2016-06-19 17:25:45 UTC]]
  [1m[35m (110.2ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 253ms (ActiveRecord: 112.8ms)


Started GET "/api/v1/answers/5" for ::1 at 2016-06-19 13:25:50 -0400
Processing by Api::V1::AnswersController#show as JSON
  Parameters: {"id"=>"5"}
  [1m[36mAnswer Load (0.8ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."id" = $1 LIMIT $2[0m  [["id", 5], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 31], ["LIMIT", 1]]
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (54.04ms)
Completed 200 OK in 82ms (Views: 60.5ms | ActiveRecord: 1.3ms)


Started GET "/api/v1/answers/5" for ::1 at 2016-06-19 13:25:59 -0400
Processing by Api::V1::AnswersController#show as JSON
  Parameters: {"id"=>"5"}
  [1m[36mAnswer Load (0.7ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."id" = $1 LIMIT $2[0m  [["id", 5], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mQuestion Load (0.9ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 31], ["LIMIT", 1]]
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (55.8ms)
Completed 200 OK in 82ms (Views: 62.8ms | ActiveRecord: 1.6ms)


Started GET "/api/v1/answers/5" for ::1 at 2016-06-19 13:26:01 -0400
Processing by Api::V1::AnswersController#show as JSON
  Parameters: {"id"=>"5"}
  [1m[36mAnswer Load (1.1ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."id" = $1 LIMIT $2[0m  [["id", 5], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mQuestion Load (6.3ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 31], ["LIMIT", 1]]
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (57.38ms)
Completed 200 OK in 87ms (Views: 58.1ms | ActiveRecord: 7.4ms)


Started GET "/api/v1/random" for ::1 at 2016-06-19 13:26:32 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.7ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 5]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (77.28ms)
Completed 200 OK in 140ms (Views: 84.9ms | ActiveRecord: 1.5ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-19 13:26:34 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"asdfsadf", "vote-count"=>nil, "vote-score"=>nil}, "question"=>{"data"=>{"id"=>"5", "attributes"=>{"content"=>"What did you like least about your last job?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: vote-count, vote-score
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 5], ["LIMIT", 1]]
  [1m[35m (0.8ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.9ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "asdfsadf"], ["question_id", 5], ["created_at", 2016-06-19 17:26:35 UTC], ["updated_at", 2016-06-19 17:26:35 UTC]]
  [1m[35m (281.0ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 583ms (ActiveRecord: 283.2ms)


Started GET "/api/v1/random" for ::1 at 2016-06-19 13:26:36 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.7ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 19]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (84.01ms)
Completed 200 OK in 142ms (Views: 91.5ms | ActiveRecord: 1.5ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-19 13:26:38 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"adsfdasg", "vote-count"=>nil, "vote-score"=>nil}, "question"=>{"data"=>{"id"=>"19", "attributes"=>{"content"=>"Do you have any questions for me?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: vote-count, vote-score
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 19], ["LIMIT", 1]]
  [1m[35m (0.6ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.9ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "adsfdasg"], ["question_id", 19], ["created_at", 2016-06-19 17:26:38 UTC], ["updated_at", 2016-06-19 17:26:38 UTC]]
  [1m[35m (3.0ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 144ms (ActiveRecord: 5.1ms)


Started GET "/api/v1/random" for ::1 at 2016-06-19 13:26:39 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (1.2ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.6ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 4]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (155.0ms)
Completed 200 OK in 217ms (Views: 162.5ms | ActiveRecord: 1.8ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-19 13:26:41 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"dastads", "vote-count"=>nil, "vote-score"=>nil}, "question"=>{"data"=>{"id"=>"4", "attributes"=>{"content"=>"Explain the process of web development to a middle school kid."}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: vote-count, vote-score
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 4], ["LIMIT", 1]]
  [1m[35m (0.5ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.8ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "dastads"], ["question_id", 4], ["created_at", 2016-06-19 17:26:41 UTC], ["updated_at", 2016-06-19 17:26:41 UTC]]
  [1m[35m (1.4ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 140ms (ActiveRecord: 3.4ms)


Started GET "/api/v1/answers/3" for ::1 at 2016-06-19 13:26:46 -0400
Processing by Api::V1::AnswersController#show as JSON
  Parameters: {"id"=>"3"}
  [1m[36mAnswer Load (0.8ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."id" = $1 LIMIT $2[0m  [["id", 3], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 4], ["LIMIT", 1]]
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (53.08ms)
Completed 200 OK in 84ms (Views: 68.7ms | ActiveRecord: 1.5ms)


Started GET "/api/v1/random" for ::1 at 2016-06-19 13:27:09 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.6ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 23]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (93.08ms)
Completed 200 OK in 152ms (Views: 100.4ms | ActiveRecord: 1.4ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-19 13:27:11 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"sadfsadf", "vote-count"=>nil, "vote-score"=>nil}, "question"=>{"data"=>{"id"=>"23", "attributes"=>{"content"=>"Explain a polymorphic association?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: vote-count, vote-score
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 23], ["LIMIT", 1]]
  [1m[35m (0.5ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.7ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "sadfsadf"], ["question_id", 23], ["created_at", 2016-06-19 17:27:11 UTC], ["updated_at", 2016-06-19 17:27:11 UTC]]
  [1m[35m (2.9ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 150ms (ActiveRecord: 4.8ms)


Started GET "/api/v1/random" for ::1 at 2016-06-19 13:27:12 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (1.2ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.6ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 1]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (118.53ms)
Completed 200 OK in 175ms (Views: 126.6ms | ActiveRecord: 1.8ms)


Started GET "/api/v1/random" for ::1 at 2016-06-19 13:27:13 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.8ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 14]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (81.51ms)
Completed 200 OK in 136ms (Views: 87.9ms | ActiveRecord: 1.6ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-19 13:27:14 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"sadfdsf", "vote-count"=>nil, "vote-score"=>nil}, "question"=>{"data"=>{"id"=>"14", "attributes"=>{"content"=>"Why do you want to work with us?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: vote-count, vote-score
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 14], ["LIMIT", 1]]
  [1m[35m (0.7ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.8ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "sadfdsf"], ["question_id", 14], ["created_at", 2016-06-19 17:27:15 UTC], ["updated_at", 2016-06-19 17:27:15 UTC]]
  [1m[35m (2.6ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 149ms (ActiveRecord: 4.8ms)


Started GET "/api/v1/random" for ::1 at 2016-06-19 13:27:16 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.6ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 11]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (115.73ms)
Completed 200 OK in 169ms (Views: 122.9ms | ActiveRecord: 1.4ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-19 13:27:18 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"dfshh", "vote-count"=>nil, "vote-score"=>nil}, "question"=>{"data"=>{"id"=>"11", "attributes"=>{"content"=>"Describe a time when you were able to improve upon the design that was originally suggested?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: vote-count, vote-score
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (1.1ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 11], ["LIMIT", 1]]
  [1m[35m (0.5ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.7ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "dfshh"], ["question_id", 11], ["created_at", 2016-06-19 17:27:18 UTC], ["updated_at", 2016-06-19 17:27:18 UTC]]
  [1m[35m (1.6ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 144ms (ActiveRecord: 3.9ms)


Started GET "/api/v1/answers/21" for ::1 at 2016-06-19 13:27:23 -0400
Processing by Api::V1::AnswersController#show as JSON
  Parameters: {"id"=>"21"}
  [1m[36mAnswer Load (0.8ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."id" = $1 LIMIT $2[0m  [["id", 21], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mQuestion Load (4.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 11], ["LIMIT", 1]]
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (52.05ms)
Completed 200 OK in 78ms (Views: 54.8ms | ActiveRecord: 5.2ms)


Started GET "/api/v1/answers/21" for ::1 at 2016-06-19 13:27:33 -0400
Processing by Api::V1::AnswersController#show as JSON
  Parameters: {"id"=>"21"}
  [1m[36mAnswer Load (0.6ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."id" = $1 LIMIT $2[0m  [["id", 21], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 11], ["LIMIT", 1]]
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (56.97ms)
Completed 200 OK in 87ms (Views: 71.4ms | ActiveRecord: 1.3ms)


Started GET "/api/v1/answers/21" for ::1 at 2016-06-19 13:27:35 -0400
Processing by Api::V1::AnswersController#show as JSON
  Parameters: {"id"=>"21"}
  [1m[36mAnswer Load (0.8ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."id" = $1 LIMIT $2[0m  [["id", 21], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 11], ["LIMIT", 1]]
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (53.5ms)
Completed 200 OK in 84ms (Views: 60.8ms | ActiveRecord: 1.5ms)


Started GET "/api/v1/random" for ::1 at 2016-06-19 13:29:01 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.9ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (1.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 19]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (115.94ms)
Completed 200 OK in 174ms (Views: 123.0ms | ActiveRecord: 2.1ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-19 13:29:03 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"asdfadsf", "vote-count"=>nil, "vote-score"=>nil}, "question"=>{"data"=>{"id"=>"19", "attributes"=>{"content"=>"Do you have any questions for me?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: vote-count, vote-score
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 19], ["LIMIT", 1]]
  [1m[35m (0.6ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.9ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "asdfadsf"], ["question_id", 19], ["created_at", 2016-06-19 17:29:03 UTC], ["updated_at", 2016-06-19 17:29:03 UTC]]
  [1m[35m (139.1ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 289ms (ActiveRecord: 141.3ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-19 13:29:14 -0400
Started GET "/api/v1/answers/38" for ::1 at 2016-06-19 13:29:15 -0400
Processing by Api::V1::AnswersController#create as JSON
Processing by Api::V1::AnswersController#show as JSON
  Parameters: {"data"=>{"id"=>"38", "attributes"=>{"content"=>"adsfdasg", "vote-count"=>99, "vote-score"=>nil}, "question"=>{"data"=>{"id"=>"19", "attributes"=>{"content"=>"Do you have any questions for me?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
  Parameters: {"id"=>"38"}
Unpermitted parameters: vote-count, vote-score
Unpermitted parameters: attributes, type
  [1m[36mAnswer Load (11.2ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."id" = $1 LIMIT $2[0m  [["id", 38], ["LIMIT", 1]]
  [1m[36mQuestion Load (1.5ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 19], ["LIMIT", 1]]
  [1m[35m (0.8ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (41.6ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "adsfdasg"], ["question_id", 19], ["created_at", 2016-06-19 17:29:15 UTC], ["updated_at", 2016-06-19 17:29:15 UTC]]
[active_model_serializers]   [1m[36mQuestion Load (18.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 19], ["LIMIT", 1]]
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (82.52ms)
  [1m[35m (27.6ms)[0m  [1m[35mCOMMIT[0m
Completed 200 OK in 220ms (Views: 163.0ms | ActiveRecord: 29.3ms)


Completed 204 No Content in 244ms (ActiveRecord: 71.5ms)


Started GET "/api/v1/random" for ::1 at 2016-06-19 13:30:07 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.9ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.6ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 3]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (120.1ms)
Completed 200 OK in 178ms (Views: 128.1ms | ActiveRecord: 1.5ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-19 13:30:10 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"asdggs", "vote-count"=>nil, "vote-score"=>nil}, "question"=>{"data"=>{"id"=>"3", "attributes"=>{"content"=>"What are your strengths and weaknesses?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: vote-count, vote-score
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 3], ["LIMIT", 1]]
  [1m[35m (0.6ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.8ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "asdggs"], ["question_id", 3], ["created_at", 2016-06-19 17:30:10 UTC], ["updated_at", 2016-06-19 17:30:10 UTC]]
  [1m[35m (71.2ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 215ms (ActiveRecord: 73.4ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-19 13:33:35 -0400
Started GET "/api/v1/answers/23" for ::1 at 2016-06-19 13:33:35 -0400
Processing by Api::V1::AnswersController#create as JSON
Processing by Api::V1::AnswersController#show as JSON
  Parameters: {"data"=>{"id"=>"23", "attributes"=>{"content"=>"DFDSG", "vote-count"=>99, "vote-score"=>nil}, "question"=>{"data"=>{"id"=>"3", "attributes"=>{"content"=>"What are your strengths and weaknesses?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
  Parameters: {"id"=>"23"}
Unpermitted parameters: vote-count, vote-score
Unpermitted parameters: attributes, type
  [1m[36mAnswer Load (13.1ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."id" = $1 LIMIT $2[0m  [["id", 23], ["LIMIT", 1]]
  [1m[36mQuestion Load (1.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 3], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mQuestion Load (14.8ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 3], ["LIMIT", 1]]
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (109.6ms)
  [1m[35m (25.0ms)[0m  [1m[35mBEGIN[0m
Completed 200 OK in 161ms (Views: 110.5ms | ActiveRecord: 27.8ms)


  [1m[35mSQL (8.0ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "DFDSG"], ["question_id", 3], ["created_at", 2016-06-19 17:33:35 UTC], ["updated_at", 2016-06-19 17:33:35 UTC]]
  [1m[35m (180.2ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 446ms (ActiveRecord: 214.7ms)


Started GET "/api/v1/random" for ::1 at 2016-06-19 13:33:37 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (1.2ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.7ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 6]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (78.18ms)
Completed 200 OK in 137ms (Views: 85.5ms | ActiveRecord: 1.9ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-19 13:33:38 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"asdfsadf", "vote-count"=>nil, "vote-score"=>nil}, "question"=>{"data"=>{"id"=>"6", "attributes"=>{"content"=>"How does the web work?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: vote-count, vote-score
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 6], ["LIMIT", 1]]
  [1m[35m (0.6ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.7ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "asdfsadf"], ["question_id", 6], ["created_at", 2016-06-19 17:33:38 UTC], ["updated_at", 2016-06-19 17:33:38 UTC]]
  [1m[35m (1.5ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 218ms (ActiveRecord: 3.4ms)


Started GET "/api/v1/random" for ::1 at 2016-06-19 13:33:40 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.7ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 17]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (126.24ms)
Completed 200 OK in 186ms (Views: 136.9ms | ActiveRecord: 1.5ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-19 13:33:42 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"dsafads", "vote-count"=>nil, "vote-score"=>nil}, "question"=>{"data"=>{"id"=>"17", "attributes"=>{"content"=>"Tell me about the most recent project you worked on. What were your responsibilities?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: vote-count, vote-score
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 17], ["LIMIT", 1]]
  [1m[35m (0.6ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.7ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "dsafads"], ["question_id", 17], ["created_at", 2016-06-19 17:33:42 UTC], ["updated_at", 2016-06-19 17:33:42 UTC]]
  [1m[35m (1.8ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 156ms (ActiveRecord: 3.8ms)


Started GET "/api/v1/answers/13" for ::1 at 2016-06-19 13:36:45 -0400
Started GET "/api/v1/questions/2" for ::1 at 2016-06-19 13:36:45 -0400
Processing by Api::V1::AnswersController#show as JSON
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"13"}
  Parameters: {"id"=>"2"}
  [1m[36mAnswer Load (7.6ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."id" = $1 LIMIT $2[0m  [["id", 13], ["LIMIT", 1]]
  [1m[36mQuestion Load (23.7ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (24.9ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 2]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (175.02ms)
Completed 200 OK in 225ms (Views: 159.2ms | ActiveRecord: 48.6ms)


[active_model_serializers]   [1m[36mQuestion Load (3.3ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 17], ["LIMIT", 1]]
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (233.8ms)
Completed 200 OK in 273ms (Views: 238.1ms | ActiveRecord: 10.9ms)


Started GET "/api/v1/random" for ::1 at 2016-06-19 13:36:48 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.6ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 7]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (111.64ms)
Completed 200 OK in 176ms (Views: 123.1ms | ActiveRecord: 1.5ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-19 13:36:50 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"sadfsadf", "vote-count"=>nil, "vote-score"=>nil}, "question"=>{"data"=>{"id"=>"7", "attributes"=>{"content"=>"What is function hoisting in JavaScript?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: vote-count, vote-score
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 7], ["LIMIT", 1]]
  [1m[35m (0.5ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (1.1ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "sadfsadf"], ["question_id", 7], ["created_at", 2016-06-19 17:36:50 UTC], ["updated_at", 2016-06-19 17:36:50 UTC]]
  [1m[35m (66.8ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 212ms (ActiveRecord: 69.1ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-19 13:39:03 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"id"=>"22", "attributes"=>{"content"=>"SDdsgsad", "vote-count"=>99, "vote-score"=>nil}, "question"=>{"data"=>{"id"=>"7", "attributes"=>{"content"=>"What is function hoisting in JavaScript?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Started GET "/api/v1/answers/22" for ::1 at 2016-06-19 13:39:03 -0400
Unpermitted parameters: vote-count, vote-score
Processing by Api::V1::AnswersController#show as JSON
Unpermitted parameters: attributes, type
  Parameters: {"id"=>"22"}
  [1m[36mQuestion Load (11.6ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 7], ["LIMIT", 1]]
  [1m[36mAnswer Load (2.2ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."id" = $1 LIMIT $2[0m  [["id", 22], ["LIMIT", 1]]
  [1m[35m (0.9ms)[0m  [1m[35mBEGIN[0m
[active_model_serializers]   [1m[36mQuestion Load (65.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 7], ["LIMIT", 1]]
  [1m[35mSQL (3.2ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "SDdsgsad"], ["question_id", 7], ["created_at", 2016-06-19 17:39:03 UTC], ["updated_at", 2016-06-19 17:39:03 UTC]]
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (133.41ms)
Completed 200 OK in 242ms (Views: 93.6ms | ActiveRecord: 67.4ms)


  [1m[35m (57.9ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 437ms (ActiveRecord: 73.5ms)


Started GET "/api/v1/random" for ::1 at 2016-06-19 13:39:05 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.9ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.6ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 28]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (179.0ms)
Completed 200 OK in 240ms (Views: 190.2ms | ActiveRecord: 1.5ms)


Started GET "/api/v1/random" for ::1 at 2016-06-19 13:39:11 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (1.0ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (1.0ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 20]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (178.8ms)
Completed 200 OK in 235ms (Views: 190.0ms | ActiveRecord: 1.9ms)


Started GET "/api/v1/random" for ::1 at 2016-06-19 13:39:43 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (2.2ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.7ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 9]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (122.31ms)
Completed 200 OK in 187ms (Views: 134.5ms | ActiveRecord: 3.0ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-19 13:39:45 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"sdafdsa", "vote-count"=>nil, "vote-score"=>nil}, "question"=>{"data"=>{"id"=>"9", "attributes"=>{"content"=>"What is a closure?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: vote-count, vote-score
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.9ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 9], ["LIMIT", 1]]
  [1m[35m (0.9ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.9ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "sdafdsa"], ["question_id", 9], ["created_at", 2016-06-19 17:39:45 UTC], ["updated_at", 2016-06-19 17:39:45 UTC]]
  [1m[35m (100.2ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 249ms (ActiveRecord: 102.8ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-19 13:40:44 -0400
Started GET "/api/v1/answers/19" for ::1 at 2016-06-19 13:40:44 -0400
Processing by Api::V1::AnswersController#show as JSON
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"id"=>"19"}
  Parameters: {"data"=>{"id"=>"19", "attributes"=>{"content"=>"sdgsdggasd", "vote-count"=>99, "vote-score"=>nil}, "question"=>{"data"=>{"id"=>"9", "attributes"=>{"content"=>"What is a closure?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
  [1m[36mAnswer Load (1.9ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."id" = $1 LIMIT $2[0m  [["id", 19], ["LIMIT", 1]]
Unpermitted parameters: vote-count, vote-score
[active_model_serializers]   [1m[36mQuestion Load (1.5ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 9], ["LIMIT", 1]]
Unpermitted parameters: attributes, type
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (80.3ms)
  [1m[36mQuestion Load (1.6ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 9], ["LIMIT", 1]]
Completed 200 OK in 153ms (Views: 104.0ms | ActiveRecord: 3.4ms)


  [1m[35m (19.8ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (1.1ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "sdgsdggasd"], ["question_id", 9], ["created_at", 2016-06-19 17:40:45 UTC], ["updated_at", 2016-06-19 17:40:45 UTC]]
  [1m[35m (95.8ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 380ms (ActiveRecord: 118.3ms)


Started GET "/api/v1/random" for ::1 at 2016-06-19 13:41:05 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.9ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.7ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 13]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (121.57ms)
Completed 200 OK in 187ms (Views: 129.5ms | ActiveRecord: 1.6ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-19 13:41:08 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"sadfdsa", "vote-count"=>nil, "vote-score"=>nil}, "question"=>{"data"=>{"id"=>"13", "attributes"=>{"content"=>"Where would you like to be in your career five years from now?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: vote-count, vote-score
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (1.1ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 13], ["LIMIT", 1]]
  [1m[35m (0.9ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (5.0ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "sadfdsa"], ["question_id", 13], ["created_at", 2016-06-19 17:41:08 UTC], ["updated_at", 2016-06-19 17:41:08 UTC]]
  [1m[35m (2.8ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 166ms (ActiveRecord: 9.9ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-19 13:43:45 -0400
Started GET "/api/v1/answers/14" for ::1 at 2016-06-19 13:43:45 -0400
Processing by Api::V1::AnswersController#create as JSON
Processing by Api::V1::AnswersController#show as JSON
  Parameters: {"data"=>{"id"=>"14", "attributes"=>{"content"=>"asDSAd", "vote-count"=>99, "vote-score"=>nil}, "question"=>{"data"=>{"id"=>"13", "attributes"=>{"content"=>"Where would you like to be in your career five years from now?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
  Parameters: {"id"=>"14"}
Unpermitted parameters: vote-count, vote-score
Unpermitted parameters: attributes, type
  [1m[36mAnswer Load (13.2ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."id" = $1 LIMIT $2[0m  [["id", 14], ["LIMIT", 1]]
  [1m[36mQuestion Load (2.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 13], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mQuestion Load (76.6ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 13], ["LIMIT", 1]]
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (184.56ms)
Completed 200 OK in 270ms (Views: 127.0ms | ActiveRecord: 89.8ms)


  [1m[35m (43.4ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (1.6ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "asDSAd"], ["question_id", 13], ["created_at", 2016-06-19 17:43:45 UTC], ["updated_at", 2016-06-19 17:43:45 UTC]]
  [1m[35m (70.9ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 475ms (ActiveRecord: 118.1ms)


Started GET "/api/v1/random" for ::1 at 2016-06-19 13:43:47 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (1.0ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.8ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 22]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (113.82ms)
Completed 200 OK in 175ms (Views: 122.3ms | ActiveRecord: 1.8ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-19 13:43:48 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"asddasds", "vote-count"=>nil, "vote-score"=>nil}, "question"=>{"data"=>{"id"=>"22", "attributes"=>{"content"=>"Can you tell me about a challenge you've faced at work and how you got through it?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: vote-count, vote-score
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 22], ["LIMIT", 1]]
  [1m[35m (0.5ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.8ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "asddasds"], ["question_id", 22], ["created_at", 2016-06-19 17:43:49 UTC], ["updated_at", 2016-06-19 17:43:49 UTC]]
  [1m[35m (2.8ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 146ms (ActiveRecord: 4.8ms)


Started GET "/api/v1/answers/22" for ::1 at 2016-06-19 13:46:32 -0400
Processing by Api::V1::AnswersController#show as JSON
  Parameters: {"id"=>"22"}
  [1m[36mAnswer Load (1.0ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."id" = $1 LIMIT $2[0m  [["id", 22], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mQuestion Load (0.9ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 7], ["LIMIT", 1]]
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (95.18ms)
Completed 200 OK in 138ms (Views: 110.0ms | ActiveRecord: 1.9ms)


Started GET "/api/v1/random" for ::1 at 2016-06-19 13:46:38 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (1.1ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (3.1ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 19]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (192.18ms)
Completed 200 OK in 260ms (Views: 197.2ms | ActiveRecord: 4.3ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-19 13:46:40 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"adsfasd", "vote-count"=>nil, "vote-score"=>nil}, "relationships"=>{"question"=>{"data"=>{"type"=>"questions", "id"=>"19"}}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: vote-count, vote-score
Completed 400 Bad Request in 16ms (ActiveRecord: 0.0ms)


  
ActionController::ParameterMissing (param is missing or the value is empty: question):
  
app/controllers/api/v1/answers_controller.rb:36:in `question_id_params'
app/controllers/api/v1/answers_controller.rb:12:in `create'
Started GET "/api/v1/answers/38" for ::1 at 2016-06-19 13:47:53 -0400
Started POST "/api/v1/answers" for ::1 at 2016-06-19 13:47:53 -0400
Processing by Api::V1::AnswersController#show as JSON
  Parameters: {"id"=>"38"}
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"id"=>"38", "attributes"=>{"content"=>"adsfdasg", "vote-count"=>99, "vote-score"=>nil}, "relationships"=>{"question"=>{"data"=>{"type"=>"questions", "id"=>"19"}}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: vote-count, vote-score
Completed 400 Bad Request in 19ms (ActiveRecord: 0.0ms)


  [1m[36mAnswer Load (54.9ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."id" = $1 LIMIT $2[0m  [["id", 38], ["LIMIT", 1]]
  
ActionController::ParameterMissing (param is missing or the value is empty: question):
  
app/controllers/api/v1/answers_controller.rb:36:in `question_id_params'
app/controllers/api/v1/answers_controller.rb:12:in `create'
[active_model_serializers]   [1m[36mQuestion Load (183.5ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 19], ["LIMIT", 1]]
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (338.87ms)
Completed 200 OK in 441ms (Views: 162.6ms | ActiveRecord: 238.5ms)


Started GET "/api/v1/random" for ::1 at 2016-06-19 13:49:49 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (1.1ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (1.0ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 23]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (119.1ms)
Completed 200 OK in 188ms (Views: 131.2ms | ActiveRecord: 2.2ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-19 13:49:51 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"asdfadsf", "vote-count"=>nil, "vote-score"=>nil}, "question"=>{"data"=>{"id"=>"23", "attributes"=>{"content"=>"Explain a polymorphic association?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: vote-count, vote-score
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.9ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 23], ["LIMIT", 1]]
  [1m[35m (0.6ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (1.2ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "asdfadsf"], ["question_id", 23], ["created_at", 2016-06-19 17:49:51 UTC], ["updated_at", 2016-06-19 17:49:51 UTC]]
  [1m[35m (94.2ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 253ms (ActiveRecord: 96.9ms)


Started GET "/api/v1/random" for ::1 at 2016-06-19 13:56:48 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (1.1ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (1.4ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 17]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (152.14ms)
Completed 200 OK in 215ms (Views: 164.5ms | ActiveRecord: 2.5ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-19 13:56:50 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"asdfadsfasd", "vote-count"=>nil, "vote-score"=>nil}, "question"=>{"data"=>{"id"=>"17", "attributes"=>{"content"=>"Tell me about the most recent project you worked on. What were your responsibilities?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: vote-count, vote-score
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (1.0ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 17], ["LIMIT", 1]]
  [1m[35m (0.7ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (1.5ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "asdfadsfasd"], ["question_id", 17], ["created_at", 2016-06-19 17:56:50 UTC], ["updated_at", 2016-06-19 17:56:50 UTC]]
  [1m[35m (410.9ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 581ms (ActiveRecord: 414.2ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-19 13:56:51 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"id"=>"13", "attributes"=>{"content"=>"sadfadsf", "vote-count"=>99, "vote-score"=>nil}, "question"=>{"data"=>{"id"=>"17", "attributes"=>{"content"=>"Tell me about the most recent project you worked on. What were your responsibilities?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: vote-count, vote-score
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (5.1ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 17], ["LIMIT", 1]]
Started GET "/api/v1/answers/13" for ::1 at 2016-06-19 13:56:52 -0400
Processing by Api::V1::AnswersController#show as JSON
  Parameters: {"id"=>"13"}
  [1m[35m (35.1ms)[0m  [1m[35mBEGIN[0m
  [1m[36mAnswer Load (38.0ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."id" = $1 LIMIT $2[0m  [["id", 13], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mQuestion Load (9.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 17], ["LIMIT", 1]]
  [1m[35mSQL (4.8ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "sadfadsf"], ["question_id", 17], ["created_at", 2016-06-19 17:56:52 UTC], ["updated_at", 2016-06-19 17:56:52 UTC]]
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (77.47ms)
Completed 200 OK in 155ms (Views: 86.7ms | ActiveRecord: 47.2ms)


  [1m[35m (2.8ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 364ms (ActiveRecord: 47.8ms)


Started GET "/api/v1/random" for ::1 at 2016-06-19 14:00:02 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (1.0ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (5.1ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 5]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (170.7ms)
Completed 200 OK in 229ms (Views: 178.4ms | ActiveRecord: 6.0ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-19 14:00:03 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"asdfadsf", "vote-count"=>nil, "vote-score"=>nil}, "question"=>{"data"=>{"id"=>"5", "attributes"=>{"content"=>"What did you like least about your last job?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: vote-count, vote-score
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 5], ["LIMIT", 1]]
  [1m[35m (0.8ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.9ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "asdfadsf"], ["question_id", 5], ["created_at", 2016-06-19 18:00:03 UTC], ["updated_at", 2016-06-19 18:00:03 UTC]]
  [1m[35m (2.7ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 140ms (ActiveRecord: 5.0ms)


Started GET "/api/v1/random" for ::1 at 2016-06-19 14:00:04 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.6ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 21]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (79.53ms)
Completed 200 OK in 130ms (Views: 90.1ms | ActiveRecord: 1.3ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-19 14:00:07 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"asdfadsf", "vote-count"=>nil, "vote-score"=>nil}, "question"=>{"data"=>{"id"=>"21", "attributes"=>{"content"=>"What is the difference between classical inheritance and prototypal inheritance? "}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: vote-count, vote-score
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 21], ["LIMIT", 1]]
  [1m[35m (0.5ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.9ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "asdfadsf"], ["question_id", 21], ["created_at", 2016-06-19 18:00:07 UTC], ["updated_at", 2016-06-19 18:00:07 UTC]]
  [1m[35m (2.9ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 142ms (ActiveRecord: 5.0ms)


Started GET "/api/v1/random" for ::1 at 2016-06-19 14:00:08 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.6ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 29]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (71.19ms)
Completed 200 OK in 126ms (Views: 77.9ms | ActiveRecord: 1.4ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-19 14:00:10 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"saadsfafsd", "vote-count"=>nil, "vote-score"=>nil}, "question"=>{"data"=>{"id"=>"29", "attributes"=>{"content"=>"How do you evaluate success?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: vote-count, vote-score
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 29], ["LIMIT", 1]]
  [1m[35m (0.5ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.7ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "saadsfafsd"], ["question_id", 29], ["created_at", 2016-06-19 18:00:10 UTC], ["updated_at", 2016-06-19 18:00:10 UTC]]
  [1m[35m (1.7ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 137ms (ActiveRecord: 3.5ms)


Started GET "/api/v1/random" for ::1 at 2016-06-19 14:00:11 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (1.1ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 20]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (160.26ms)
Completed 200 OK in 217ms (Views: 169.1ms | ActiveRecord: 1.9ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-19 14:00:13 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"dsafadsf", "vote-count"=>nil, "vote-score"=>nil}, "question"=>{"data"=>{"id"=>"20", "attributes"=>{"content"=>"Please walk me through one of the projects on your resume."}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: vote-count, vote-score
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 20], ["LIMIT", 1]]
  [1m[35m (0.6ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (1.1ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "dsafadsf"], ["question_id", 20], ["created_at", 2016-06-19 18:00:13 UTC], ["updated_at", 2016-06-19 18:00:13 UTC]]
  [1m[35m (3.3ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 140ms (ActiveRecord: 5.6ms)


Started GET "/api/v1/random" for ::1 at 2016-06-19 14:00:14 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (1.2ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.7ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 9]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (156.93ms)
Completed 200 OK in 215ms (Views: 167.3ms | ActiveRecord: 1.8ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-19 14:00:16 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"dsfadsasdf", "vote-count"=>nil, "vote-score"=>nil}, "question"=>{"data"=>{"id"=>"9", "attributes"=>{"content"=>"What is a closure?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: vote-count, vote-score
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 9], ["LIMIT", 1]]
  [1m[35m (0.6ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.8ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "dsfadsasdf"], ["question_id", 9], ["created_at", 2016-06-19 18:00:16 UTC], ["updated_at", 2016-06-19 18:00:16 UTC]]
  [1m[35m (1.2ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 133ms (ActiveRecord: 3.3ms)


Started GET "/api/v1/random" for ::1 at 2016-06-19 14:00:17 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (1.0ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.6ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 6]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (104.74ms)
Completed 200 OK in 161ms (Views: 115.7ms | ActiveRecord: 1.6ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-19 14:00:19 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"sadfsadffs", "vote-count"=>nil, "vote-score"=>nil}, "question"=>{"data"=>{"id"=>"6", "attributes"=>{"content"=>"How does the web work?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: vote-count, vote-score
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 6], ["LIMIT", 1]]
  [1m[35m (0.5ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.7ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "sadfsadffs"], ["question_id", 6], ["created_at", 2016-06-19 18:00:19 UTC], ["updated_at", 2016-06-19 18:00:19 UTC]]
  [1m[35m (2.9ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 144ms (ActiveRecord: 4.7ms)


Started GET "/api/v1/random" for ::1 at 2016-06-19 14:00:20 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (1.3ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.6ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 12]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (116.22ms)
Completed 200 OK in 172ms (Views: 122.8ms | ActiveRecord: 1.9ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-19 14:00:22 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"dsafafsdsaf", "vote-count"=>nil, "vote-score"=>nil}, "question"=>{"data"=>{"id"=>"12", "attributes"=>{"content"=>"So tell me about yourself."}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: vote-count, vote-score
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 12], ["LIMIT", 1]]
  [1m[35m (0.6ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (1.4ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "dsafafsdsaf"], ["question_id", 12], ["created_at", 2016-06-19 18:00:22 UTC], ["updated_at", 2016-06-19 18:00:22 UTC]]
  [1m[35m (2.8ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 141ms (ActiveRecord: 5.4ms)


Started GET "/api/v1/random" for ::1 at 2016-06-19 14:00:23 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.9ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.6ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 10]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (71.33ms)
Completed 200 OK in 122ms (Views: 78.0ms | ActiveRecord: 1.4ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-19 14:00:26 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"asdfasdfsa", "vote-count"=>nil, "vote-score"=>nil}, "question"=>{"data"=>{"id"=>"10", "attributes"=>{"content"=>"How did you learn web development?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: vote-count, vote-score
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 10], ["LIMIT", 1]]
  [1m[35m (0.7ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.9ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "asdfasdfsa"], ["question_id", 10], ["created_at", 2016-06-19 18:00:26 UTC], ["updated_at", 2016-06-19 18:00:26 UTC]]
  [1m[35m (2.9ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 154ms (ActiveRecord: 5.0ms)


Started GET "/api/v1/random" for ::1 at 2016-06-19 14:00:27 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.9ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 6]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (138.27ms)
Completed 200 OK in 191ms (Views: 145.0ms | ActiveRecord: 1.7ms)


Started GET "/api/v1/random" for ::1 at 2016-06-19 14:00:28 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (1.2ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.9ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 14]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (96.37ms)
Completed 200 OK in 162ms (Views: 110.2ms | ActiveRecord: 2.1ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-19 14:00:30 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"sadfdasf", "vote-count"=>nil, "vote-score"=>nil}, "question"=>{"data"=>{"id"=>"14", "attributes"=>{"content"=>"Why do you want to work with us?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: vote-count, vote-score
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 14], ["LIMIT", 1]]
  [1m[35m (0.8ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.8ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "sadfdasf"], ["question_id", 14], ["created_at", 2016-06-19 18:00:30 UTC], ["updated_at", 2016-06-19 18:00:30 UTC]]
  [1m[35m (2.8ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 136ms (ActiveRecord: 5.0ms)


Started GET "/api/v1/random" for ::1 at 2016-06-19 14:00:31 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.7ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 9]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (191.03ms)
Completed 200 OK in 248ms (Views: 201.8ms | ActiveRecord: 1.5ms)


Started GET "/api/v1/random" for ::1 at 2016-06-19 14:00:32 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.6ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 28]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (170.73ms)
Completed 200 OK in 220ms (Views: 177.7ms | ActiveRecord: 1.3ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-19 14:00:34 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"sadfasdfdas", "vote-count"=>nil, "vote-score"=>nil}, "question"=>{"data"=>{"id"=>"28", "attributes"=>{"content"=>"Do you have any questions for me?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: vote-count, vote-score
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 28], ["LIMIT", 1]]
  [1m[35m (0.6ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.8ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "sadfasdfdas"], ["question_id", 28], ["created_at", 2016-06-19 18:00:34 UTC], ["updated_at", 2016-06-19 18:00:34 UTC]]
  [1m[35m (4.8ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 143ms (ActiveRecord: 6.8ms)


Started GET "/api/v1/random" for ::1 at 2016-06-19 14:00:35 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (1.3ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 25]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (110.02ms)
Completed 200 OK in 160ms (Views: 117.5ms | ActiveRecord: 2.1ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-19 14:00:38 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"asdfadsf", "vote-count"=>nil, "vote-score"=>nil}, "question"=>{"data"=>{"id"=>"25", "attributes"=>{"content"=>"Describe your production deployment process?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: vote-count, vote-score
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 25], ["LIMIT", 1]]
  [1m[35m (0.6ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.7ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "asdfadsf"], ["question_id", 25], ["created_at", 2016-06-19 18:00:38 UTC], ["updated_at", 2016-06-19 18:00:38 UTC]]
  [1m[35m (3.2ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 135ms (ActiveRecord: 5.3ms)


Started GET "/api/v1/random" for ::1 at 2016-06-19 14:00:39 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (1.4ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 12]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (148.47ms)
Completed 200 OK in 210ms (Views: 159.1ms | ActiveRecord: 2.1ms)


Started GET "/api/v1/random" for ::1 at 2016-06-19 14:00:40 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.7ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 7]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (169.73ms)
Completed 200 OK in 228ms (Views: 177.3ms | ActiveRecord: 1.5ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-19 14:00:42 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"asdfadsfs", "vote-count"=>nil, "vote-score"=>nil}, "question"=>{"data"=>{"id"=>"7", "attributes"=>{"content"=>"What is function hoisting in JavaScript?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: vote-count, vote-score
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (4.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 7], ["LIMIT", 1]]
  [1m[35m (0.5ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.7ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "asdfadsfs"], ["question_id", 7], ["created_at", 2016-06-19 18:00:42 UTC], ["updated_at", 2016-06-19 18:00:42 UTC]]
  [1m[35m (1.7ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 147ms (ActiveRecord: 7.1ms)


Started GET "/api/v1/random" for ::1 at 2016-06-19 14:00:43 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.6ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 28]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (194.13ms)
Completed 200 OK in 248ms (Views: 200.5ms | ActiveRecord: 1.4ms)


Started GET "/api/v1/random" for ::1 at 2016-06-19 14:00:44 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.6ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 21]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (99.72ms)
Completed 200 OK in 154ms (Views: 106.3ms | ActiveRecord: 1.3ms)


Started GET "/api/v1/random" for ::1 at 2016-06-19 14:00:45 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.6ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 31]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (218.54ms)
Completed 200 OK in 272ms (Views: 227.9ms | ActiveRecord: 1.4ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-19 14:00:47 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"dsassdf", "vote-count"=>nil, "vote-score"=>nil}, "question"=>{"data"=>{"id"=>"31", "attributes"=>{"content"=>"How does the web work?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: vote-count, vote-score
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (1.1ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 31], ["LIMIT", 1]]
  [1m[35m (0.5ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.7ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "dsassdf"], ["question_id", 31], ["created_at", 2016-06-19 18:00:47 UTC], ["updated_at", 2016-06-19 18:00:47 UTC]]
  [1m[35m (2.8ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 138ms (ActiveRecord: 5.1ms)


Started GET "/api/v1/random" for ::1 at 2016-06-19 14:00:48 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.9ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 22]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (147.33ms)
Completed 200 OK in 198ms (Views: 154.6ms | ActiveRecord: 1.7ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-19 14:00:50 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"fadsfdasdasf", "vote-count"=>nil, "vote-score"=>nil}, "question"=>{"data"=>{"id"=>"22", "attributes"=>{"content"=>"Can you tell me about a challenge you've faced at work and how you got through it?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: vote-count, vote-score
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 22], ["LIMIT", 1]]
  [1m[35m (0.6ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.7ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "fadsfdasdasf"], ["question_id", 22], ["created_at", 2016-06-19 18:00:51 UTC], ["updated_at", 2016-06-19 18:00:51 UTC]]
  [1m[35m (2.9ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 139ms (ActiveRecord: 4.9ms)


Started GET "/api/v1/random" for ::1 at 2016-06-19 14:00:52 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (1.0ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 10]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (110.04ms)
Completed 200 OK in 162ms (Views: 118.5ms | ActiveRecord: 1.8ms)


Started GET "/api/v1/random" for ::1 at 2016-06-19 14:00:52 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.6ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 17]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (184.81ms)
Completed 200 OK in 248ms (Views: 195.5ms | ActiveRecord: 1.4ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-19 14:00:55 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"ddsadsf", "vote-count"=>nil, "vote-score"=>nil}, "question"=>{"data"=>{"id"=>"17", "attributes"=>{"content"=>"Tell me about the most recent project you worked on. What were your responsibilities?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: vote-count, vote-score
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 17], ["LIMIT", 1]]
  [1m[35m (0.5ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.7ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "ddsadsf"], ["question_id", 17], ["created_at", 2016-06-19 18:00:55 UTC], ["updated_at", 2016-06-19 18:00:55 UTC]]
  [1m[35m (2.8ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 142ms (ActiveRecord: 4.6ms)


Started GET "/api/v1/random" for ::1 at 2016-06-19 14:00:57 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (1.3ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.7ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 23]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (142.54ms)
Completed 200 OK in 199ms (Views: 153.4ms | ActiveRecord: 1.9ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-19 14:00:59 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"asdfdasfas", "vote-count"=>nil, "vote-score"=>nil}, "question"=>{"data"=>{"id"=>"23", "attributes"=>{"content"=>"Explain a polymorphic association?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: vote-count, vote-score
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 23], ["LIMIT", 1]]
  [1m[35m (0.5ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.8ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "asdfdasfas"], ["question_id", 23], ["created_at", 2016-06-19 18:00:59 UTC], ["updated_at", 2016-06-19 18:00:59 UTC]]
  [1m[35m (3.1ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 152ms (ActiveRecord: 5.0ms)


Started GET "/api/v1/random" for ::1 at 2016-06-19 14:01:00 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.6ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 4]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (155.45ms)
Completed 200 OK in 209ms (Views: 165.7ms | ActiveRecord: 1.3ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-19 14:01:03 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"asdfdasfdas", "vote-count"=>nil, "vote-score"=>nil}, "question"=>{"data"=>{"id"=>"4", "attributes"=>{"content"=>"Explain the process of web development to a middle school kid."}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: vote-count, vote-score
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 4], ["LIMIT", 1]]
  [1m[35m (0.5ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (66.6ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "asdfdasfdas"], ["question_id", 4], ["created_at", 2016-06-19 18:01:03 UTC], ["updated_at", 2016-06-19 18:01:03 UTC]]
  [1m[35m (1.4ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 203ms (ActiveRecord: 69.3ms)


Started GET "/api/v1/random" for ::1 at 2016-06-19 14:01:04 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (1.3ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.7ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 8]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (107.09ms)
Completed 200 OK in 169ms (Views: 120.5ms | ActiveRecord: 2.0ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-19 14:01:06 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"dsafasdfa", "vote-count"=>nil, "vote-score"=>nil}, "question"=>{"data"=>{"id"=>"8", "attributes"=>{"content"=>"How did you learn programming?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: vote-count, vote-score
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 8], ["LIMIT", 1]]
  [1m[35m (0.6ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.8ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "dsafasdfa"], ["question_id", 8], ["created_at", 2016-06-19 18:01:07 UTC], ["updated_at", 2016-06-19 18:01:07 UTC]]
  [1m[35m (2.0ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 138ms (ActiveRecord: 4.0ms)


Started GET "/api/v1/random" for ::1 at 2016-06-19 14:01:08 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.6ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 13]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (159.56ms)
Completed 200 OK in 208ms (Views: 166.1ms | ActiveRecord: 1.3ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-19 14:01:10 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"adsfasdfads", "vote-count"=>nil, "vote-score"=>nil}, "question"=>{"data"=>{"id"=>"13", "attributes"=>{"content"=>"Where would you like to be in your career five years from now?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: vote-count, vote-score
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 13], ["LIMIT", 1]]
  [1m[35m (1.3ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.7ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "adsfasdfads"], ["question_id", 13], ["created_at", 2016-06-19 18:01:10 UTC], ["updated_at", 2016-06-19 18:01:10 UTC]]
  [1m[35m (3.1ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 148ms (ActiveRecord: 5.7ms)


Started GET "/api/v1/random" for ::1 at 2016-06-19 14:01:11 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.9ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.6ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 22]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (157.71ms)
Completed 200 OK in 216ms (Views: 164.6ms | ActiveRecord: 1.5ms)


Started GET "/api/v1/random" for ::1 at 2016-06-19 14:01:14 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.6ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 23]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (160.6ms)
Completed 200 OK in 211ms (Views: 167.8ms | ActiveRecord: 1.4ms)


Started GET "/api/v1/random" for ::1 at 2016-06-19 14:01:15 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.6ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 14]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (129.82ms)
Completed 200 OK in 183ms (Views: 141.1ms | ActiveRecord: 1.4ms)


Started GET "/api/v1/random" for ::1 at 2016-06-19 14:01:15 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.9ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.7ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 27]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (102.41ms)
Completed 200 OK in 162ms (Views: 113.1ms | ActiveRecord: 1.5ms)


Started GET "/api/v1/random" for ::1 at 2016-06-19 14:01:16 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.6ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 23]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (165.11ms)
Completed 200 OK in 219ms (Views: 175.9ms | ActiveRecord: 1.4ms)


Started GET "/api/v1/random" for ::1 at 2016-06-19 14:01:16 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.6ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 22]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (175.85ms)
Completed 200 OK in 235ms (Views: 187.0ms | ActiveRecord: 1.3ms)


Started GET "/api/v1/random" for ::1 at 2016-06-19 14:01:16 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (1.1ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 32]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (219.78ms)
Completed 200 OK in 279ms (Views: 230.0ms | ActiveRecord: 1.9ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-19 14:01:18 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"asdfasdfdas", "vote-count"=>nil, "vote-score"=>nil}, "question"=>{"data"=>{"id"=>"32", "attributes"=>{"content"=>"How did you learn programming?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: vote-count, vote-score
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 32], ["LIMIT", 1]]
  [1m[35m (0.6ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.8ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "asdfasdfdas"], ["question_id", 32], ["created_at", 2016-06-19 18:01:18 UTC], ["updated_at", 2016-06-19 18:01:18 UTC]]
  [1m[35m (2.6ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 135ms (ActiveRecord: 4.6ms)


Started GET "/api/v1/random" for ::1 at 2016-06-19 14:01:19 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.6ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 7]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (199.4ms)
Completed 200 OK in 250ms (Views: 206.1ms | ActiveRecord: 1.4ms)


Started GET "/api/v1/random" for ::1 at 2016-06-19 14:01:21 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.6ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 16]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (111.36ms)
Completed 200 OK in 162ms (Views: 118.1ms | ActiveRecord: 1.3ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-19 14:01:23 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"adfadsf", "vote-count"=>nil, "vote-score"=>nil}, "question"=>{"data"=>{"id"=>"16", "attributes"=>{"content"=>"Tell me about your long-term goals."}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: vote-count, vote-score
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 16], ["LIMIT", 1]]
  [1m[35m (0.5ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (1.4ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "adfadsf"], ["question_id", 16], ["created_at", 2016-06-19 18:01:23 UTC], ["updated_at", 2016-06-19 18:01:23 UTC]]
  [1m[35m (2.8ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 142ms (ActiveRecord: 5.4ms)


Started GET "/api/v1/random" for ::1 at 2016-06-19 14:06:01 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.6ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 7]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (199.6ms)
Completed 200 OK in 251ms (Views: 206.5ms | ActiveRecord: 1.4ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-19 14:06:03 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"asdfasdf", "vote-count"=>nil, "vote-score"=>nil}, "question"=>{"data"=>{"id"=>"7", "attributes"=>{"content"=>"What is function hoisting in JavaScript?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: vote-count, vote-score
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (1.1ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 7], ["LIMIT", 1]]
  [1m[35m (0.5ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.7ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "asdfasdf"], ["question_id", 7], ["created_at", 2016-06-19 18:06:03 UTC], ["updated_at", 2016-06-19 18:06:03 UTC]]
  [1m[35m (3.0ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 143ms (ActiveRecord: 5.3ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-19 14:06:05 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"id"=>"22", "attributes"=>{"content"=>"SDdsgsad", "vote-count"=>99, "vote-score"=>nil}, "question"=>{"data"=>{"id"=>"7", "attributes"=>{"content"=>"What is function hoisting in JavaScript?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: vote-count, vote-score
Unpermitted parameters: attributes, type
Started GET "/api/v1/answers/22" for ::1 at 2016-06-19 14:06:05 -0400
Processing by Api::V1::AnswersController#show as JSON
  [1m[36mQuestion Load (22.1ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 7], ["LIMIT", 1]]
  Parameters: {"id"=>"22"}
  [1m[35m (10.5ms)[0m  [1m[35mBEGIN[0m
  [1m[36mAnswer Load (44.5ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."id" = $1 LIMIT $2[0m  [["id", 22], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mQuestion Load (1.6ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 7], ["LIMIT", 1]]
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (54.99ms)
Completed 200 OK in 124ms (Views: 60.3ms | ActiveRecord: 46.1ms)


  [1m[35mSQL (37.8ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "SDdsgsad"], ["question_id", 7], ["created_at", 2016-06-19 18:06:05 UTC], ["updated_at", 2016-06-19 18:06:05 UTC]]
  [1m[35m (19.9ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 293ms (ActiveRecord: 90.3ms)


Started GET "/api/v1/random" for ::1 at 2016-06-19 14:07:46 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.9ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 26]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (109.63ms)
Completed 200 OK in 165ms (Views: 116.1ms | ActiveRecord: 1.7ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-19 14:07:48 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"asdfdas", "vote-count"=>nil, "vote-score"=>nil}, "question"=>{"data"=>{"id"=>"26", "attributes"=>{"content"=>"Why do you want to work for us?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: vote-count, vote-score
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 26], ["LIMIT", 1]]
  [1m[35m (0.6ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (1.3ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "asdfdas"], ["question_id", 26], ["created_at", 2016-06-19 18:07:48 UTC], ["updated_at", 2016-06-19 18:07:48 UTC]]
  [1m[35m (3.0ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 151ms (ActiveRecord: 5.5ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-19 14:07:50 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"id"=>"10", "attributes"=>{"content"=>"asasfasf", "vote-count"=>99, "vote-score"=>nil}, "question"=>{"data"=>{"id"=>"26", "attributes"=>{"content"=>"Why do you want to work for us?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: vote-count, vote-score
Unpermitted parameters: attributes, type
Started GET "/api/v1/answers/10" for ::1 at 2016-06-19 14:07:50 -0400
Processing by Api::V1::AnswersController#show as JSON
  [1m[36mQuestion Load (19.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 26], ["LIMIT", 1]]
  Parameters: {"id"=>"10"}
  [1m[36mAnswer Load (40.1ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."id" = $1 LIMIT $2[0m  [["id", 10], ["LIMIT", 1]]
  [1m[35m (2.7ms)[0m  [1m[35mBEGIN[0m
[active_model_serializers]   [1m[36mQuestion Load (44.0ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 26], ["LIMIT", 1]]
  [1m[35mSQL (7.7ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "asasfasf"], ["question_id", 26], ["created_at", 2016-06-19 18:07:50 UTC], ["updated_at", 2016-06-19 18:07:50 UTC]]
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (106.07ms)
  [1m[35m (1.3ms)[0m  [1m[35mCOMMIT[0m
Completed 200 OK in 193ms (Views: 85.4ms | ActiveRecord: 84.1ms)


Completed 204 No Content in 255ms (ActiveRecord: 31.2ms)


Started GET "/api/v1/random" for ::1 at 2016-06-19 14:08:48 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.8ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 15]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (82.07ms)
Completed 200 OK in 144ms (Views: 91.3ms | ActiveRecord: 1.6ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-19 14:08:49 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"asdfdsaasf", "vote-count"=>nil, "vote-score"=>nil}, "question"=>{"data"=>{"id"=>"15", "attributes"=>{"content"=>"Can you name two programming paradigms important for JavaScript app developers?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: vote-count, vote-score
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 15], ["LIMIT", 1]]
  [1m[35m (0.6ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.7ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "asdfdsaasf"], ["question_id", 15], ["created_at", 2016-06-19 18:08:49 UTC], ["updated_at", 2016-06-19 18:08:49 UTC]]
  [1m[35m (2.9ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 155ms (ActiveRecord: 4.8ms)


Started GET "/api/v1/random" for ::1 at 2016-06-19 14:08:50 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.6ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 28]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (221.54ms)
Completed 200 OK in 276ms (Views: 230.9ms | ActiveRecord: 1.4ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-19 14:08:52 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"asdfdsaafsd", "vote-count"=>nil, "vote-score"=>nil}, "question"=>{"data"=>{"id"=>"28", "attributes"=>{"content"=>"Do you have any questions for me?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: vote-count, vote-score
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 28], ["LIMIT", 1]]
  [1m[35m (0.8ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.7ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "asdfdsaafsd"], ["question_id", 28], ["created_at", 2016-06-19 18:08:52 UTC], ["updated_at", 2016-06-19 18:08:52 UTC]]
  [1m[35m (3.1ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 149ms (ActiveRecord: 5.2ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-19 14:08:53 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"id"=>"24", "attributes"=>{"content"=>"CZXGDG", "vote-count"=>99, "vote-score"=>nil}, "question"=>{"data"=>{"id"=>"28", "attributes"=>{"content"=>"Do you have any questions for me?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Started GET "/api/v1/answers/24" for ::1 at 2016-06-19 14:08:53 -0400
Unpermitted parameters: vote-count, vote-score
Processing by Api::V1::AnswersController#show as JSON
Unpermitted parameters: attributes, type
  Parameters: {"id"=>"24"}
  [1m[36mQuestion Load (7.1ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 28], ["LIMIT", 1]]
  [1m[36mAnswer Load (7.0ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."id" = $1 LIMIT $2[0m  [["id", 24], ["LIMIT", 1]]
  [1m[35m (0.9ms)[0m  [1m[35mBEGIN[0m
[active_model_serializers]   [1m[36mQuestion Load (50.7ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 28], ["LIMIT", 1]]
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (107.1ms)
Completed 200 OK in 181ms (Views: 67.6ms | ActiveRecord: 57.7ms)


  [1m[35mSQL (33.6ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "CZXGDG"], ["question_id", 28], ["created_at", 2016-06-19 18:08:53 UTC], ["updated_at", 2016-06-19 18:08:53 UTC]]
  [1m[35m (1.5ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 276ms (ActiveRecord: 43.2ms)


Started GET "/api/v1/random" for ::1 at 2016-06-19 14:09:43 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.7ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 32]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (242.9ms)
Completed 200 OK in 299ms (Views: 253.6ms | ActiveRecord: 1.4ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-19 14:09:45 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"sadfdsaf", "vote-count"=>nil, "vote-score"=>nil}, "question"=>{"data"=>{"id"=>"32", "attributes"=>{"content"=>"How did you learn programming?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: vote-count, vote-score
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 32], ["LIMIT", 1]]
  [1m[35m (4.4ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.7ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "sadfdsaf"], ["question_id", 32], ["created_at", 2016-06-19 18:09:45 UTC], ["updated_at", 2016-06-19 18:09:45 UTC]]
  [1m[35m (1.7ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 143ms (ActiveRecord: 7.4ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-19 14:09:48 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"id"=>"7", "attributes"=>{"content"=>"<p>I just started Googling it you know, and I liked doing it so\n  I ended up trying to do it professionally.</p>", "vote-count"=>99, "vote-score"=>nil}, "question"=>{"data"=>{"id"=>"32", "attributes"=>{"content"=>"How did you learn programming?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: vote-count, vote-score
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (4.9ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 32], ["LIMIT", 1]]
Started GET "/api/v1/answers/7" for ::1 at 2016-06-19 14:09:48 -0400
Processing by Api::V1::AnswersController#show as JSON
  [1m[35m (26.8ms)[0m  [1m[35mBEGIN[0m
  Parameters: {"id"=>"7"}
  [1m[35mSQL (13.3ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "<p>I just started Googling it you know, and I liked doing it so\n  I ended up trying to do it professionally.</p>"], ["question_id", 32], ["created_at", 2016-06-19 18:09:48 UTC], ["updated_at", 2016-06-19 18:09:48 UTC]]
  [1m[36mAnswer Load (16.6ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."id" = $1 LIMIT $2[0m  [["id", 7], ["LIMIT", 1]]
  [1m[35m (49.5ms)[0m  [1m[35mCOMMIT[0m
[active_model_serializers]   [1m[36mQuestion Load (2.1ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 32], ["LIMIT", 1]]
Completed 204 No Content in 245ms (ActiveRecord: 94.5ms)


[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (62.54ms)
Completed 200 OK in 124ms (Views: 81.9ms | ActiveRecord: 18.7ms)


Started GET "/api/v1/random" for ::1 at 2016-06-19 14:10:11 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.8ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 8]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (142.05ms)
Completed 200 OK in 207ms (Views: 157.3ms | ActiveRecord: 1.5ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-19 14:10:14 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"gfgjo", "vote-count"=>nil, "vote-score"=>nil}, "question"=>{"data"=>{"id"=>"8", "attributes"=>{"content"=>"How did you learn programming?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: vote-count, vote-score
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (1.0ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 8], ["LIMIT", 1]]
  [1m[35m (0.6ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.8ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "gfgjo"], ["question_id", 8], ["created_at", 2016-06-19 18:10:14 UTC], ["updated_at", 2016-06-19 18:10:14 UTC]]
  [1m[35m (2.9ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 155ms (ActiveRecord: 5.2ms)


Started GET "/api/v1/answers/9" for ::1 at 2016-06-19 14:10:14 -0400
Processing by Api::V1::AnswersController#show as JSON
  Parameters: {"id"=>"9"}
  [1m[36mAnswer Load (0.6ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."id" = $1 LIMIT $2[0m  [["id", 9], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mQuestion Load (0.9ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 8], ["LIMIT", 1]]
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (60.11ms)
Completed 200 OK in 86ms (Views: 66.8ms | ActiveRecord: 1.5ms)


Started GET "/api/v1/random" for ::1 at 2016-06-19 14:10:39 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.8ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 22]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (180.79ms)
Completed 200 OK in 241ms (Views: 192.7ms | ActiveRecord: 1.6ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-19 14:10:42 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"hjocfjgf", "vote-count"=>nil, "vote-score"=>nil}, "question"=>{"data"=>{"id"=>"22", "attributes"=>{"content"=>"Can you tell me about a challenge you've faced at work and how you got through it?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: vote-count, vote-score
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 22], ["LIMIT", 1]]
  [1m[35m (0.5ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.8ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "hjocfjgf"], ["question_id", 22], ["created_at", 2016-06-19 18:10:42 UTC], ["updated_at", 2016-06-19 18:10:42 UTC]]
  [1m[35m (2.9ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 144ms (ActiveRecord: 5.0ms)


Started GET "/api/v1/answers" for ::1 at 2016-06-19 14:11:14 -0400
Processing by Api::V1::AnswersController#index as JSON
  [1m[36mAnswer Load (1.1ms)[0m  [1m[34mSELECT "answers".* FROM "answers"[0m
[active_model_serializers]   [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 4], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 4], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 31], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 31], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 32], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 32], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 8], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 26], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 30], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mQuestion Load (1.3ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 25], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 17], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 13], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 12], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 20], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 27], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mQuestion Load (5.0ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 9], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 22], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 11], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 7], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 3], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 28], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 16], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 32], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 32], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mQuestion Load (5.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 24], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mQuestion Load (1.0ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 18], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.5ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 31], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 31], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 28], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 28], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 20], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.5ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 20], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 31], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 5], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 19], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 4], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 23], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 14], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 11], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 19], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 19], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (4.6ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 3], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 3], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mQuestion Load (0.9ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 6], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 17], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 7], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 7], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 9], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.5ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 9], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.7ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 13], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 13], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (4.8ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 22], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 23], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.5ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 17], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 17], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 5], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mQuestion Load (0.9ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 21], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 29], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (4.7ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 20], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 9], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.5ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 6], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 12], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 10], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 14], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 28], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.5ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 25], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 7], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.5ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 31], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 22], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.5ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 17], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.6ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 23], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 4], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 8], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 13], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 32], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 7], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 26], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 15], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.5ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 28], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.5ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 32], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 22], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.5ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 16], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 7], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.5ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 26], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 28], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 32], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.5ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 8], ["LIMIT", 1]]
[active_model_serializers] Rendered ActiveModel::Serializer::CollectionSerializer with ActiveModelSerializers::Adapter::JsonApi (4987.45ms)
Completed 200 OK in 5206ms (Views: 5131.1ms | ActiveRecord: 71.2ms)


Started GET "/api/v1/questions" for ::1 at 2016-06-19 14:11:25 -0400
Processing by Api::V1::QuestionsController#index as JSON
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
  [1m[36mAnswer Load (1.5ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" IN (1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32)[0m
[active_model_serializers] Rendered ActiveModel::Serializer::CollectionSerializer with ActiveModelSerializers::Adapter::JsonApi (4938.71ms)
Completed 200 OK in 5509ms (Views: 5501.4ms | ActiveRecord: 2.3ms)


Started GET "/api/v1/questions" for ::1 at 2016-06-19 14:12:49 -0400
Processing by Api::V1::QuestionsController#index as JSON
  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
  [1m[36mAnswer Load (2.0ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" IN (1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32)[0m
[active_model_serializers] Rendered ActiveModel::Serializer::CollectionSerializer with ActiveModelSerializers::Adapter::JsonApi (5295.41ms)
Completed 200 OK in 5851ms (Views: 5842.9ms | ActiveRecord: 2.8ms)


Started GET "/api/v1/random" for ::1 at 2016-06-19 14:17:03 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.9ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.8ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 30]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (139.68ms)
Completed 200 OK in 209ms (Views: 153.6ms | ActiveRecord: 1.7ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-19 14:17:05 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"sadfdsa", "vote-count"=>nil, "vote-score"=>nil}, "question"=>{"data"=>{"id"=>"30", "attributes"=>{"content"=>"How would you describe your work style?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: vote-count, vote-score
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 30], ["LIMIT", 1]]
  [1m[35m (0.7ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.8ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "sadfdsa"], ["question_id", 30], ["created_at", 2016-06-19 18:17:06 UTC], ["updated_at", 2016-06-19 18:17:06 UTC]]
  [1m[35m (3.3ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 174ms (ActiveRecord: 5.6ms)


Started GET "/api/v1/answers" for ::1 at 2016-06-19 14:22:11 -0400
Processing by Api::V1::AnswersController#index as JSON
  [1m[36mAnswer Load (1.0ms)[0m  [1m[34mSELECT "answers".* FROM "answers"[0m
[active_model_serializers]   [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 4], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 4], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mQuestion Load (1.1ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 31], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 31], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 32], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 32], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 8], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 26], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mQuestion Load (1.0ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 30], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mQuestion Load (6.8ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 25], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 17], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 13], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 12], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 20], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 27], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mQuestion Load (4.3ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 9], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 22], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 11], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 7], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 3], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 28], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 16], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.6ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 32], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 32], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 24], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mQuestion Load (1.1ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 18], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 31], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 31], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.5ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 28], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.5ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 28], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.5ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 20], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.5ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 20], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.8ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 31], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mQuestion Load (1.1ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 5], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 19], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 4], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mQuestion Load (4.3ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 23], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 14], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 11], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 19], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 19], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.3ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 3], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 3], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 6], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 17], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 7], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 7], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 9], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 9], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.5ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 13], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 13], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 22], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 23], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.6ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 17], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 17], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 5], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 21], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 29], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 20], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 9], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 6], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 12], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mQuestion Load (4.5ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 10], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 14], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.5ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 28], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 25], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.7ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 7], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.5ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 31], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 22], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.5ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 17], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 23], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 4], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 8], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 13], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 32], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.5ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 7], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 26], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 15], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.5ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 28], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 32], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 22], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 16], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.5ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 7], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 26], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 28], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 32], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 8], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 30], ["LIMIT", 1]]
[active_model_serializers] Rendered ActiveModel::Serializer::CollectionSerializer with ActiveModelSerializers::Adapter::JsonApi (4815.94ms)
Completed 200 OK in 5073ms (Views: 5002.7ms | ActiveRecord: 65.5ms)


Started GET "/api/v1/answers/0" for ::1 at 2016-06-19 14:27:07 -0400
Processing by Api::V1::AnswersController#show as JSON
  Parameters: {"id"=>"0"}
  [1m[36mAnswer Load (0.7ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."id" = $1 LIMIT $2[0m  [["id", 0], ["LIMIT", 1]]
Completed 404 Not Found in 18ms (ActiveRecord: 0.7ms)


  
ActiveRecord::RecordNotFound (Couldn't find Answer with 'id'=0):
Started POST "/api/v1/answers" for ::1 at 2016-06-19 14:27:07 -0400
  
Processing by Api::V1::AnswersController#create as JSON
app/controllers/api/v1/answers_controller.rb:19:in `show'
  Parameters: {"data"=>{"id"=>"11", "attributes"=>{"content"=>"SADFDSAFDAS", "vote-count"=>nil, "vote-score"=>nil}, "question"=>{"data"=>{"id"=>"30", "attributes"=>{"content"=>"How would you describe your work style?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: vote-count, vote-score
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (184.9ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 30], ["LIMIT", 1]]
  [1m[35m (62.0ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (172.2ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "SADFDSAFDAS"], ["question_id", 30], ["created_at", 2016-06-19 18:27:08 UTC], ["updated_at", 2016-06-19 18:27:08 UTC]]
  [1m[35m (188.4ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 1145ms (ActiveRecord: 607.5ms)


Started GET "/api/v1/answers" for ::1 at 2016-06-19 14:27:16 -0400
Processing by Api::V1::AnswersController#index as JSON
  [1m[36mAnswer Load (0.9ms)[0m  [1m[34mSELECT "answers".* FROM "answers"[0m
[active_model_serializers]   [1m[36mQuestion Load (1.3ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.5ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mQuestion Load (0.9ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 4], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 4], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mQuestion Load (0.9ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 31], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 31], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 32], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.6ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 32], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 8], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 26], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 30], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 25], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 17], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 13], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mQuestion Load (5.5ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 12], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 20], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 27], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 9], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 22], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 11], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 7], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 3], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 28], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 16], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 32], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 32], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mQuestion Load (0.9ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 24], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 18], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 31], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 31], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 28], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 28], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.5ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 20], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 20], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.6ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 31], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 5], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 19], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 4], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 23], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 14], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 11], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 19], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 19], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.5ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 3], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 3], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 6], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 17], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 7], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.9ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 7], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (5.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 9], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.6ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 9], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.5ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 13], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.6ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 13], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 22], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 23], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 17], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 17], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 5], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 21], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 29], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.5ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 20], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.5ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 9], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 6], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 12], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 10], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.7ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 14], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.5ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 28], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.5ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 25], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.5ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 7], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.7ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 31], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.5ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 22], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 17], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 23], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 4], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.8ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 8], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 13], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.7ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 32], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.5ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 7], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 26], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mQuestion Load (10.9ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 15], ["LIMIT", 1]]
Started GET "/api/v1/answers" for ::1 at 2016-06-19 14:27:20 -0400
[active_model_serializers]   [1m[36mCACHE (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 28], ["LIMIT", 1]]
Processing by Api::V1::AnswersController#index as JSON
[active_model_serializers]   [1m[36mCACHE (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 32], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.5ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 22], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 30], ["LIMIT", 1]]
  [1m[36mAnswer Load (84.3ms)[0m  [1m[34mSELECT "answers".* FROM "answers"[0m
[active_model_serializers]   [1m[36mCACHE (0.7ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 16], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 7], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mQuestion Load (41.1ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.5ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 26], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (4.8ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 28], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.5ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 32], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mQuestion Load (42.5ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 4], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 8], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 4], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 30], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mQuestion Load (53.0ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 31], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.5ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 31], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mQuestion Load (257.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 32], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 32], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mQuestion Load (124.0ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 8], ["LIMIT", 1]]
[active_model_serializers] Rendered ActiveModel::Serializer::CollectionSerializer with ActiveModelSerializers::Adapter::JsonApi (5505.07ms)
[active_model_serializers]   [1m[36mQuestion Load (54.9ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 26], ["LIMIT", 1]]
Completed 200 OK in 5741ms (Views: 5653.5ms | ActiveRecord: 76.1ms)


[active_model_serializers]   [1m[36mQuestion Load (1.7ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 30], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mQuestion Load (6.8ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 25], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 17], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 13], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 12], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 20], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 27], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 9], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 22], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 11], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 7], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mQuestion Load (1.0ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 3], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 28], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 16], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.7ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 32], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.5ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 32], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 24], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 18], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 31], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 31], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 28], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 28], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.5ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 20], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (6.1ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 20], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 31], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 5], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 19], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 4], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 23], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 14], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 11], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 19], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 19], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 3], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 3], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mQuestion Load (0.9ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 6], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.5ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 17], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.5ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 7], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.5ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 7], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.7ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 9], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 9], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 13], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 13], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.5ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 22], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 23], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (5.5ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 17], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 17], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 5], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 21], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 29], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.5ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 20], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.5ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 9], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 6], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 12], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 10], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 14], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 28], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 25], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.5ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 7], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 31], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 22], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 17], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 23], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.5ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 4], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.5ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 8], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.5ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 13], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 32], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 7], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.5ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 26], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 15], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.5ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 28], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 32], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 22], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 30], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 16], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 7], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 26], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.5ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 28], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.6ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 32], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 8], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 30], ["LIMIT", 1]]
[active_model_serializers] Rendered ActiveModel::Serializer::CollectionSerializer with ActiveModelSerializers::Adapter::JsonApi (6025.19ms)
Completed 200 OK in 6361ms (Views: 5638.7ms | ActiveRecord: 718.6ms)


Started GET "/api/v1/random" for ::1 at 2016-06-19 14:27:30 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (1.1ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.6ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 16]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (148.18ms)
Completed 200 OK in 210ms (Views: 159.2ms | ActiveRecord: 1.7ms)


Started GET "/api/v1/random" for ::1 at 2016-06-19 14:28:41 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.7ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 10]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (111.46ms)
Completed 200 OK in 168ms (Views: 123.1ms | ActiveRecord: 1.5ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-19 14:28:42 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"asdfadsfas", "vote-count"=>nil, "vote-score"=>nil}, "question"=>{"data"=>{"id"=>"10", "attributes"=>{"content"=>"How did you learn web development?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: vote-count, vote-score
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 10], ["LIMIT", 1]]
  [1m[35m (0.5ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.8ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "asdfadsfas"], ["question_id", 10], ["created_at", 2016-06-19 18:28:42 UTC], ["updated_at", 2016-06-19 18:28:42 UTC]]
  [1m[35m (159.7ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 294ms (ActiveRecord: 161.6ms)


Started GET "/api/v1/questions" for ::1 at 2016-06-19 14:29:04 -0400
Processing by Api::V1::QuestionsController#index as JSON
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
  [1m[36mAnswer Load (1.1ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" IN (1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32)[0m
[active_model_serializers] Rendered ActiveModel::Serializer::CollectionSerializer with ActiveModelSerializers::Adapter::JsonApi (4774.99ms)
Completed 200 OK in 5299ms (Views: 5292.1ms | ActiveRecord: 1.9ms)


Started GET "/api/v1/questions" for ::1 at 2016-06-19 14:29:10 -0400
Processing by Api::V1::QuestionsController#index as JSON
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
  [1m[36mAnswer Load (2.1ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" IN (1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32)[0m
[active_model_serializers] Rendered ActiveModel::Serializer::CollectionSerializer with ActiveModelSerializers::Adapter::JsonApi (5001.37ms)
Completed 200 OK in 5578ms (Views: 5565.5ms | ActiveRecord: 2.9ms)


Started GET "/api/v1/random" for ::1 at 2016-06-19 14:30:18 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (1.0ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.6ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 18]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (122.82ms)
Completed 200 OK in 186ms (Views: 134.9ms | ActiveRecord: 1.6ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-19 14:30:19 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"asdfadsfdas", "vote-count"=>nil, "vote-score"=>nil}, "question"=>{"data"=>{"id"=>"18", "attributes"=>{"content"=>"What are your short-term goals."}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: vote-count, vote-score
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (1.0ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 18], ["LIMIT", 1]]
  [1m[35m (0.6ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.7ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "asdfadsfdas"], ["question_id", 18], ["created_at", 2016-06-19 18:30:19 UTC], ["updated_at", 2016-06-19 18:30:19 UTC]]
  [1m[35m (2.8ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 157ms (ActiveRecord: 5.1ms)


Started GET "/api/v1/answers/1" for ::1 at 2016-06-19 14:33:01 -0400
Processing by Api::V1::AnswersController#show as JSON
  Parameters: {"id"=>"1"}
  [1m[36mAnswer Load (0.7ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (64.31ms)
Completed 200 OK in 92ms (Views: 71.7ms | ActiveRecord: 1.4ms)


Started GET "/api/v1/random" for ::1 at 2016-06-19 14:33:05 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (1.1ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.7ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 19]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (188.2ms)
Completed 200 OK in 247ms (Views: 195.6ms | ActiveRecord: 1.8ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-19 14:33:08 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"aadfasf", "vote-count"=>nil, "vote-score"=>nil}, "question"=>{"data"=>{"id"=>"19", "attributes"=>{"content"=>"Do you have any questions for me?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: vote-count, vote-score
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 19], ["LIMIT", 1]]
  [1m[35m (0.5ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.8ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "aadfasf"], ["question_id", 19], ["created_at", 2016-06-19 18:33:08 UTC], ["updated_at", 2016-06-19 18:33:08 UTC]]
  [1m[35m (46.9ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 201ms (ActiveRecord: 48.8ms)


Started GET "/api/v1/random" for ::1 at 2016-06-19 14:33:18 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (4.7ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 22]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (234.22ms)
Completed 200 OK in 301ms (Views: 243.7ms | ActiveRecord: 5.5ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-19 14:33:20 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"asdasfsd", "vote-count"=>nil, "vote-score"=>nil}, "question"=>{"data"=>{"id"=>"22", "attributes"=>{"content"=>"Can you tell me about a challenge you've faced at work and how you got through it?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: vote-count, vote-score
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 22], ["LIMIT", 1]]
  [1m[35m (0.7ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.8ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "asdasfsd"], ["question_id", 22], ["created_at", 2016-06-19 18:33:20 UTC], ["updated_at", 2016-06-19 18:33:20 UTC]]
  [1m[35m (3.0ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 164ms (ActiveRecord: 5.2ms)


Started GET "/api/v1/answers/1" for ::1 at 2016-06-19 14:36:42 -0400
Started GET "/api/v1/questions/1" for ::1 at 2016-06-19 14:36:42 -0400
Processing by Api::V1::AnswersController#show as JSON
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"1"}
  Parameters: {"id"=>"1"}
  [1m[36mAnswer Load (13.1ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  [1m[36mQuestion Load (8.1ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mQuestion Load (1.1ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (144.33ms)
[active_model_serializers]   [1m[36mAnswer Load (23.7ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 1]]
Completed 200 OK in 208ms (Views: 165.7ms | ActiveRecord: 14.2ms)


[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (166.72ms)
Completed 200 OK in 289ms (Views: 176.1ms | ActiveRecord: 31.7ms)


Started GET "/api/v1/random" for ::1 at 2016-06-19 14:36:43 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.8ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 10]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (167.72ms)
Completed 200 OK in 234ms (Views: 178.7ms | ActiveRecord: 1.6ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-19 14:36:46 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"sadfadsfads", "vote-count"=>nil, "vote-score"=>nil}, "question"=>{"data"=>{"id"=>"10", "attributes"=>{"content"=>"How did you learn web development?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: vote-count, vote-score
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 10], ["LIMIT", 1]]
  [1m[35m (0.8ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.8ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "sadfadsfads"], ["question_id", 10], ["created_at", 2016-06-19 18:36:46 UTC], ["updated_at", 2016-06-19 18:36:46 UTC]]
  [1m[35m (2.8ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 174ms (ActiveRecord: 5.0ms)


Started GET "/api/v1/answers/66" for ::1 at 2016-06-19 14:38:23 -0400
Processing by Api::V1::AnswersController#show as JSON
  Parameters: {"id"=>"66"}
  [1m[36mAnswer Load (2.0ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."id" = $1 LIMIT $2[0m  [["id", 66], ["LIMIT", 1]]
Started GET "/api/v1/random" for ::1 at 2016-06-19 14:38:53 -0400
[active_model_serializers]   [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 10], ["LIMIT", 1]]
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (25.6ms)
Completed 500 Internal Server Error in 41104ms (Views: 30.2ms | ActiveRecord: 2.4ms)


  
SystemExit (exit):
  
app/controllers/api/v1/answers_controller.rb:20:in `show'
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.6ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 2]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (378.97ms)
Completed 200 OK in 497ms (Views: 396.1ms | ActiveRecord: 1.5ms)


Started GET "/api/v1/random" for ::1 at 2016-06-19 14:39:10 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.8ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 7]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (312.63ms)
Completed 200 OK in 386ms (Views: 325.0ms | ActiveRecord: 1.6ms)


Started GET "/api/v1/random" for ::1 at 2016-06-19 14:39:10 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.6ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 29]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (131.56ms)
Completed 200 OK in 203ms (Views: 145.1ms | ActiveRecord: 1.4ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-19 14:39:13 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"asdfa", "vote-count"=>nil, "vote-score"=>nil}, "question"=>{"data"=>{"id"=>"29", "attributes"=>{"content"=>"How do you evaluate success?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: vote-count, vote-score
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 29], ["LIMIT", 1]]
  [1m[35m (0.6ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (1.6ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "asdfa"], ["question_id", 29], ["created_at", 2016-06-19 18:39:14 UTC], ["updated_at", 2016-06-19 18:39:14 UTC]]
  [1m[35m (94.9ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 281ms (ActiveRecord: 97.8ms)


Started GET "/api/v1/answers/61" for ::1 at 2016-06-19 14:40:32 -0400
Processing by Api::V1::AnswersController#show as JSON
  Parameters: {"id"=>"61"}
  [1m[36mAnswer Load (0.6ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."id" = $1 LIMIT $2[0m  [["id", 61], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 29], ["LIMIT", 1]]
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (218.07ms)
Completed 200 OK in 399ms (Views: 227.2ms | ActiveRecord: 12.7ms)


Started GET "/api/v1/random" for ::1 at 2016-06-19 14:40:34 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.9ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.7ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 13]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (235.67ms)
Completed 200 OK in 299ms (Views: 247.9ms | ActiveRecord: 1.5ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-19 14:40:36 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"asdfdas", "vote-count"=>nil, "vote-score"=>nil}, "question"=>{"data"=>{"id"=>"13", "attributes"=>{"content"=>"Where would you like to be in your career five years from now?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: vote-count, vote-score
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 13], ["LIMIT", 1]]
  [1m[35m (0.7ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.8ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "asdfdas"], ["question_id", 13], ["created_at", 2016-06-19 18:40:37 UTC], ["updated_at", 2016-06-19 18:40:37 UTC]]
  [1m[35m (182.8ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 328ms (ActiveRecord: 184.9ms)


Started GET "/api/v1/random" for ::1 at 2016-06-19 14:41:45 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.6ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 9]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (239.01ms)
Completed 200 OK in 298ms (Views: 254.1ms | ActiveRecord: 1.4ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-19 14:41:47 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"asdfadsf", "vote-count"=>nil, "vote-score"=>nil}, "question"=>{"data"=>{"id"=>"9", "attributes"=>{"content"=>"What is a closure?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: vote-count, vote-score
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.9ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 9], ["LIMIT", 1]]
  [1m[35m (0.6ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (1.3ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "asdfadsf"], ["question_id", 9], ["created_at", 2016-06-19 18:41:47 UTC], ["updated_at", 2016-06-19 18:41:47 UTC]]
  [1m[35m (94.3ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 226ms (ActiveRecord: 97.1ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-19 14:46:27 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"id"=>"19", "attributes"=>{"content"=>"sdgsdggasd", "vote-count"=>99, "vote-score"=>nil}, "question"=>{"data"=>{"id"=>"9", "attributes"=>{"content"=>"What is a closure?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: vote-count, vote-score
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.9ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 9], ["LIMIT", 1]]
  [1m[35m (0.8ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (1.1ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "sdgsdggasd"], ["question_id", 9], ["created_at", 2016-06-19 18:46:27 UTC], ["updated_at", 2016-06-19 18:46:27 UTC]]
  [1m[35m (59.6ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 234ms (ActiveRecord: 62.4ms)


Started GET "/api/v1/random" for ::1 at 2016-06-19 14:46:29 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.6ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 14]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (130.38ms)
Completed 200 OK in 186ms (Views: 141.9ms | ActiveRecord: 1.5ms)


Started POST "/api/v1/questions" for ::1 at 2016-06-19 14:46:29 -0400
  
AbstractController::ActionNotFound (The action 'create' could not be found for Api::V1::QuestionsController):
  
actionpack (5.0.0.rc1) lib/abstract_controller/base.rb:121:in `process'
actionpack (5.0.0.rc1) lib/action_controller/metal.rb:190:in `dispatch'
actionpack (5.0.0.rc1) lib/action_controller/metal.rb:262:in `dispatch'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:50:in `dispatch'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:32:in `serve'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:39:in `block in serve'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:26:in `each'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:26:in `serve'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:725:in `call'
actionview (5.0.0.rc1) lib/action_view/digestor.rb:12:in `call'
rack (2.0.0.rc1) lib/rack/etag.rb:25:in `call'
rack (2.0.0.rc1) lib/rack/conditional_get.rb:38:in `call'
rack (2.0.0.rc1) lib/rack/head.rb:12:in `call'
activerecord (5.0.0.rc1) lib/active_record/migration.rb:552:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/callbacks.rb:38:in `block in call'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:97:in `__run_callbacks__'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:750:in `_run_call_callbacks'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:90:in `run_callbacks'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/callbacks.rb:36:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/remote_ip.rb:79:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/debug_exceptions.rb:49:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/show_exceptions.rb:31:in `call'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:36:in `call_app'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:24:in `block in call'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:70:in `block in tagged'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:26:in `tagged'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:70:in `tagged'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:24:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/request_id.rb:24:in `call'
rack (2.0.0.rc1) lib/rack/runtime.rb:22:in `call'
activesupport (5.0.0.rc1) lib/active_support/cache/strategy/local_cache_middleware.rb:28:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/static.rb:136:in `call'
rack (2.0.0.rc1) lib/rack/sendfile.rb:111:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
railties (5.0.0.rc1) lib/rails/engine.rb:522:in `call'
puma (3.4.0) lib/puma/configuration.rb:224:in `call'
puma (3.4.0) lib/puma/server.rb:569:in `handle_request'
puma (3.4.0) lib/puma/server.rb:406:in `process_client'
puma (3.4.0) lib/puma/server.rb:271:in `block in run'
puma (3.4.0) lib/puma/thread_pool.rb:114:in `call'
puma (3.4.0) lib/puma/thread_pool.rb:114:in `block in spawn_thread'
Started POST "/api/v1/answers" for ::1 at 2016-06-19 14:46:31 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"asddasdfas", "vote-count"=>nil, "vote-score"=>nil}, "question"=>{"data"=>{"id"=>"14", "attributes"=>{"content"=>"Why do you want to work with us?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: vote-count, vote-score
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 14], ["LIMIT", 1]]
  [1m[35m (0.8ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (1.3ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "asddasdfas"], ["question_id", 14], ["created_at", 2016-06-19 18:46:32 UTC], ["updated_at", 2016-06-19 18:46:32 UTC]]
  [1m[35m (2.8ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 141ms (ActiveRecord: 5.5ms)


Started GET "/api/v1/questions" for ::1 at 2016-06-19 14:47:11 -0400
Processing by Api::V1::QuestionsController#index as JSON
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
  [1m[36mAnswer Load (1.1ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" IN (1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32)[0m
[active_model_serializers] Rendered ActiveModel::Serializer::CollectionSerializer with ActiveModelSerializers::Adapter::JsonApi (4857.38ms)
Completed 200 OK in 5344ms (Views: 5336.4ms | ActiveRecord: 1.8ms)


Started GET "/api/v1/questions/0" for ::1 at 2016-06-19 14:47:54 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"0"}
  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 0], ["LIMIT", 1]]
[active_model_serializers] Rendered ActiveModel::Serializer::Null with Class (1.41ms)
Completed 200 OK in 372ms (Views: 359.0ms | ActiveRecord: 0.7ms)


Started GET "/api/v1/random" for ::1 at 2016-06-19 14:47:59 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (1.1ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 22]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (232.27ms)
Completed 200 OK in 295ms (Views: 239.8ms | ActiveRecord: 1.9ms)


Started POST "/api/v1/questions" for ::1 at 2016-06-19 14:47:59 -0400
  
AbstractController::ActionNotFound (The action 'create' could not be found for Api::V1::QuestionsController):
  
actionpack (5.0.0.rc1) lib/abstract_controller/base.rb:121:in `process'
actionpack (5.0.0.rc1) lib/action_controller/metal.rb:190:in `dispatch'
actionpack (5.0.0.rc1) lib/action_controller/metal.rb:262:in `dispatch'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:50:in `dispatch'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:32:in `serve'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:39:in `block in serve'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:26:in `each'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:26:in `serve'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:725:in `call'
actionview (5.0.0.rc1) lib/action_view/digestor.rb:12:in `call'
rack (2.0.0.rc1) lib/rack/etag.rb:25:in `call'
rack (2.0.0.rc1) lib/rack/conditional_get.rb:38:in `call'
rack (2.0.0.rc1) lib/rack/head.rb:12:in `call'
activerecord (5.0.0.rc1) lib/active_record/migration.rb:552:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/callbacks.rb:38:in `block in call'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:97:in `__run_callbacks__'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:750:in `_run_call_callbacks'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:90:in `run_callbacks'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/callbacks.rb:36:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/remote_ip.rb:79:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/debug_exceptions.rb:49:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/show_exceptions.rb:31:in `call'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:36:in `call_app'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:24:in `block in call'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:70:in `block in tagged'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:26:in `tagged'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:70:in `tagged'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:24:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/request_id.rb:24:in `call'
rack (2.0.0.rc1) lib/rack/runtime.rb:22:in `call'
activesupport (5.0.0.rc1) lib/active_support/cache/strategy/local_cache_middleware.rb:28:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/static.rb:136:in `call'
rack (2.0.0.rc1) lib/rack/sendfile.rb:111:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
railties (5.0.0.rc1) lib/rails/engine.rb:522:in `call'
puma (3.4.0) lib/puma/configuration.rb:224:in `call'
puma (3.4.0) lib/puma/server.rb:569:in `handle_request'
puma (3.4.0) lib/puma/server.rb:406:in `process_client'
puma (3.4.0) lib/puma/server.rb:271:in `block in run'
puma (3.4.0) lib/puma/thread_pool.rb:114:in `call'
puma (3.4.0) lib/puma/thread_pool.rb:114:in `block in spawn_thread'
Started GET "/api/v1/random" for ::1 at 2016-06-19 14:50:17 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (1.1ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.6ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 15]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (318.78ms)
Completed 200 OK in 442ms (Views: 356.7ms | ActiveRecord: 1.7ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-19 14:50:22 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"asdfadsf", "vote-count"=>nil, "vote-score"=>nil}, "question"=>{"data"=>{"id"=>"15", "attributes"=>{"content"=>"Can you name two programming paradigms important for JavaScript app developers?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: vote-count, vote-score
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 15], ["LIMIT", 1]]
  [1m[35m (0.6ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.8ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "asdfadsf"], ["question_id", 15], ["created_at", 2016-06-19 18:50:22 UTC], ["updated_at", 2016-06-19 18:50:22 UTC]]
  [1m[35m (95.9ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 253ms (ActiveRecord: 97.9ms)


Started GET "/api/v1/random" for ::1 at 2016-06-19 14:52:45 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.7ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 21]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (123.57ms)
Completed 200 OK in 177ms (Views: 130.8ms | ActiveRecord: 1.5ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-19 14:52:47 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"asdfadsf", "vote-count"=>nil, "vote-score"=>nil}, "question"=>{"data"=>{"id"=>"21", "attributes"=>{"content"=>"What is the difference between classical inheritance and prototypal inheritance? "}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: vote-count, vote-score
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (4.6ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 21], ["LIMIT", 1]]
  [1m[35m (0.5ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.7ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "asdfadsf"], ["question_id", 21], ["created_at", 2016-06-19 18:52:47 UTC], ["updated_at", 2016-06-19 18:52:47 UTC]]
  [1m[35m (1.7ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 142ms (ActiveRecord: 7.5ms)


Started GET "/api/v1/random" for ::1 at 2016-06-19 14:53:40 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.6ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 18]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (143.21ms)
Completed 200 OK in 210ms (Views: 150.2ms | ActiveRecord: 1.4ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-19 14:53:42 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"asdFDSAf", "vote-count"=>nil, "vote-score"=>nil}, "question"=>{"data"=>{"id"=>"18", "attributes"=>{"content"=>"What are your short-term goals."}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: vote-count, vote-score
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 18], ["LIMIT", 1]]
  [1m[35m (0.5ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (4.9ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "asdFDSAf"], ["question_id", 18], ["created_at", 2016-06-19 18:53:42 UTC], ["updated_at", 2016-06-19 18:53:42 UTC]]
  [1m[35m (94.4ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 238ms (ActiveRecord: 100.4ms)


Started GET "/api/v1/random" for ::1 at 2016-06-19 14:53:59 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (1.0ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.7ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 31]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (266.95ms)
Completed 200 OK in 328ms (Views: 277.4ms | ActiveRecord: 1.6ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-19 14:54:21 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"sdasgdassadg", "vote-count"=>nil, "vote-score"=>nil}, "question"=>{"data"=>{"id"=>"31", "attributes"=>{"content"=>"How does the web work?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: vote-count, vote-score
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 31], ["LIMIT", 1]]
  [1m[35m (0.5ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.8ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "sdasgdassadg"], ["question_id", 31], ["created_at", 2016-06-19 18:54:21 UTC], ["updated_at", 2016-06-19 18:54:21 UTC]]
  [1m[35m (1.4ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 140ms (ActiveRecord: 3.4ms)


Started GET "/api/v1/random" for ::1 at 2016-06-19 14:54:57 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (1.0ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.6ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 18]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (175.09ms)
Completed 200 OK in 237ms (Views: 182.2ms | ActiveRecord: 1.6ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-19 14:54:59 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"asdfdasds", "vote-count"=>nil, "vote-score"=>nil}, "question"=>{"data"=>{"id"=>"18", "attributes"=>{"content"=>"What are your short-term goals."}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: vote-count, vote-score
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 18], ["LIMIT", 1]]
  [1m[35m (0.5ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.9ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "asdfdasds"], ["question_id", 18], ["created_at", 2016-06-19 18:55:00 UTC], ["updated_at", 2016-06-19 18:55:00 UTC]]
  [1m[35m (112.9ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 256ms (ActiveRecord: 114.9ms)


Started GET "/api/v1/random" for ::1 at 2016-06-19 14:55:27 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.9ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.7ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 23]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (180.89ms)
Completed 200 OK in 239ms (Views: 188.0ms | ActiveRecord: 1.6ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-19 14:55:28 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"asdfasdf", "vote-count"=>nil, "vote-score"=>nil}, "question"=>{"data"=>{"id"=>"23", "attributes"=>{"content"=>"Explain a polymorphic association?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: vote-count, vote-score
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (1.0ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 23], ["LIMIT", 1]]
  [1m[35m (0.5ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (1.0ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "asdfasdf"], ["question_id", 23], ["created_at", 2016-06-19 18:55:29 UTC], ["updated_at", 2016-06-19 18:55:29 UTC]]
  [1m[35m (2.8ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 150ms (ActiveRecord: 5.2ms)


Started GET "/api/v1/answers/1" for ::1 at 2016-06-19 14:56:47 -0400
Processing by Api::V1::AnswersController#show as JSON
  Parameters: {"id"=>"1"}
Completed 500 Internal Server Error in 4180ms (ActiveRecord: 0.0ms)


  
SystemExit (exit):
  
app/controllers/api/v1/answers_controller.rb:20:in `show'
Started GET "/api/v1/random" for ::1 at 2016-06-19 14:57:27 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.8ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 7]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (507.64ms)
Completed 200 OK in 640ms (Views: 549.4ms | ActiveRecord: 1.5ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-19 14:57:32 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"dasfadsf", "vote-count"=>nil, "vote-score"=>nil}, "question"=>{"data"=>{"id"=>"7", "attributes"=>{"content"=>"What is function hoisting in JavaScript?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: vote-count, vote-score
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 7], ["LIMIT", 1]]
  [1m[35m (0.6ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (1.1ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "dasfadsf"], ["question_id", 7], ["created_at", 2016-06-19 18:57:32 UTC], ["updated_at", 2016-06-19 18:57:32 UTC]]
  [1m[35m (1.7ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 171ms (ActiveRecord: 4.2ms)


Started GET "/api/v1/random" for ::1 at 2016-06-19 14:58:07 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (1.1ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 22]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (479.95ms)
Completed 200 OK in 784ms (Views: 686.5ms | ActiveRecord: 13.4ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-19 14:58:11 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"asdfadsf", "vote-count"=>nil, "vote-score"=>nil}, "question"=>{"data"=>{"id"=>"22", "attributes"=>{"content"=>"Can you tell me about a challenge you've faced at work and how you got through it?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: vote-count, vote-score
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (7.0ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 22], ["LIMIT", 1]]
  [1m[35m (0.6ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (1.2ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "asdfadsf"], ["question_id", 22], ["created_at", 2016-06-19 18:58:11 UTC], ["updated_at", 2016-06-19 18:58:11 UTC]]
  [1m[35m (19.1ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 185ms (ActiveRecord: 27.9ms)


Started GET "/api/v1/random" for ::1 at 2016-06-19 15:02:56 -0400
  [1m[36mActiveRecord::SchemaMigration Load (0.6ms)[0m  [1m[34mSELECT "schema_migrations".* FROM "schema_migrations"[0m
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.5ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (1.0ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 13]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (1810.08ms)
Completed 200 OK in 2274ms (Views: 2261.5ms | ActiveRecord: 9.1ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-19 15:03:14 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"asFSFDASF", "vote-count"=>nil, "vote-score"=>nil}, "question"=>{"data"=>{"id"=>"13", "attributes"=>{"content"=>"Where would you like to be in your career five years from now?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: vote-count, vote-score
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 13], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.6ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "asFSFDASF"], ["question_id", 13], ["created_at", 2016-06-19 19:03:14 UTC], ["updated_at", 2016-06-19 19:03:14 UTC]]
  [1m[35m (2.2ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 11ms (ActiveRecord: 3.1ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-19 15:03:22 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"id"=>"14", "attributes"=>{"content"=>"asDSAd", "vote-count"=>9, "vote-score"=>0}, "question"=>{"data"=>{"id"=>"13", "attributes"=>{"content"=>"Where would you like to be in your career five years from now?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: vote-count, vote-score
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 13], ["LIMIT", 1]]
  [1m[35m (0.3ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "asDSAd"], ["question_id", 13], ["created_at", 2016-06-19 19:03:22 UTC], ["updated_at", 2016-06-19 19:03:22 UTC]]
  [1m[35m (1.1ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 10ms (ActiveRecord: 2.0ms)


Started GET "/api/v1/answers/14" for ::1 at 2016-06-19 15:03:22 -0400
  
AbstractController::ActionNotFound (The action 'show' could not be found for Api::V1::AnswersController):
  
actionpack (5.0.0.rc1) lib/abstract_controller/base.rb:121:in `process'
actionpack (5.0.0.rc1) lib/action_controller/metal.rb:190:in `dispatch'
actionpack (5.0.0.rc1) lib/action_controller/metal.rb:262:in `dispatch'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:50:in `dispatch'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:32:in `serve'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:39:in `block in serve'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:26:in `each'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:26:in `serve'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:725:in `call'
actionview (5.0.0.rc1) lib/action_view/digestor.rb:12:in `call'
rack (2.0.0.rc1) lib/rack/etag.rb:25:in `call'
rack (2.0.0.rc1) lib/rack/conditional_get.rb:25:in `call'
rack (2.0.0.rc1) lib/rack/head.rb:12:in `call'
activerecord (5.0.0.rc1) lib/active_record/migration.rb:552:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/callbacks.rb:38:in `block in call'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:97:in `__run_callbacks__'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:750:in `_run_call_callbacks'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:90:in `run_callbacks'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/callbacks.rb:36:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/remote_ip.rb:79:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/debug_exceptions.rb:49:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/show_exceptions.rb:31:in `call'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:36:in `call_app'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:24:in `block in call'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:70:in `block in tagged'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:26:in `tagged'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:70:in `tagged'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:24:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/request_id.rb:24:in `call'
rack (2.0.0.rc1) lib/rack/runtime.rb:22:in `call'
activesupport (5.0.0.rc1) lib/active_support/cache/strategy/local_cache_middleware.rb:28:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/static.rb:136:in `call'
rack (2.0.0.rc1) lib/rack/sendfile.rb:111:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
railties (5.0.0.rc1) lib/rails/engine.rb:522:in `call'
puma (3.4.0) lib/puma/configuration.rb:224:in `call'
puma (3.4.0) lib/puma/server.rb:569:in `handle_request'
puma (3.4.0) lib/puma/server.rb:406:in `process_client'
puma (3.4.0) lib/puma/server.rb:271:in `block in run'
puma (3.4.0) lib/puma/thread_pool.rb:114:in `call'
puma (3.4.0) lib/puma/thread_pool.rb:114:in `block in spawn_thread'
Started GET "/api/v1/random" for ::1 at 2016-06-19 15:03:59 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.3ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 9]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (6.97ms)
Completed 200 OK in 9ms (Views: 7.3ms | ActiveRecord: 0.7ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-19 15:04:01 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"asdfdsaf", "vote-count"=>nil, "vote-score"=>nil}, "question"=>{"data"=>{"id"=>"9", "attributes"=>{"content"=>"What is a closure?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: vote-count, vote-score
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 9], ["LIMIT", 1]]
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.7ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "asdfdsaf"], ["question_id", 9], ["created_at", 2016-06-19 19:04:01 UTC], ["updated_at", 2016-06-19 19:04:01 UTC]]
  [1m[35m (2.2ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 10ms (ActiveRecord: 3.8ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-19 15:06:12 -0400
Started GET "/api/v1/answers/19" for ::1 at 2016-06-19 15:06:12 -0400
Processing by Api::V1::AnswersController#create as JSON
  
  Parameters: {"data"=>{"id"=>"19", "attributes"=>{"content"=>"sdgsdggasd", "vote-count"=>9, "vote-score"=>0}, "question"=>{"data"=>{"id"=>"9", "attributes"=>{"content"=>"What is a closure?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
AbstractController::ActionNotFound (The action 'show' could not be found for Api::V1::AnswersController):
Unpermitted parameters: vote-count, vote-score
  
Unpermitted parameters: attributes, type
actionpack (5.0.0.rc1) lib/abstract_controller/base.rb:121:in `process'
actionpack (5.0.0.rc1) lib/action_controller/metal.rb:190:in `dispatch'
actionpack (5.0.0.rc1) lib/action_controller/metal.rb:262:in `dispatch'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:50:in `dispatch'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:32:in `serve'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:39:in `block in serve'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:26:in `each'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:26:in `serve'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:725:in `call'
actionview (5.0.0.rc1) lib/action_view/digestor.rb:12:in `call'
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 9], ["LIMIT", 1]]
rack (2.0.0.rc1) lib/rack/etag.rb:25:in `call'
rack (2.0.0.rc1) lib/rack/conditional_get.rb:25:in `call'
rack (2.0.0.rc1) lib/rack/head.rb:12:in `call'
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
activerecord (5.0.0.rc1) lib/active_record/migration.rb:552:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/callbacks.rb:38:in `block in call'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:97:in `__run_callbacks__'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:750:in `_run_call_callbacks'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:90:in `run_callbacks'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/callbacks.rb:36:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/remote_ip.rb:79:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/debug_exceptions.rb:49:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/show_exceptions.rb:31:in `call'
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "sdgsdggasd"], ["question_id", 9], ["created_at", 2016-06-19 19:06:12 UTC], ["updated_at", 2016-06-19 19:06:12 UTC]]
railties (5.0.0.rc1) lib/rails/rack/logger.rb:36:in `call_app'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:24:in `block in call'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:70:in `block in tagged'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:26:in `tagged'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:70:in `tagged'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:24:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/request_id.rb:24:in `call'
rack (2.0.0.rc1) lib/rack/runtime.rb:22:in `call'
activesupport (5.0.0.rc1) lib/active_support/cache/strategy/local_cache_middleware.rb:28:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/static.rb:136:in `call'
rack (2.0.0.rc1) lib/rack/sendfile.rb:111:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
railties (5.0.0.rc1) lib/rails/engine.rb:522:in `call'
puma (3.4.0) lib/puma/configuration.rb:224:in `call'
puma (3.4.0) lib/puma/server.rb:569:in `handle_request'
puma (3.4.0) lib/puma/server.rb:406:in `process_client'
puma (3.4.0) lib/puma/server.rb:271:in `block in run'
puma (3.4.0) lib/puma/thread_pool.rb:114:in `call'
puma (3.4.0) lib/puma/thread_pool.rb:114:in `block in spawn_thread'
  [1m[35m (19.7ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 26ms (ActiveRecord: 20.6ms)


Started GET "/api/v1/answers/19" for ::1 at 2016-06-19 15:06:12 -0400
  
AbstractController::ActionNotFound (The action 'show' could not be found for Api::V1::AnswersController):
  
actionpack (5.0.0.rc1) lib/abstract_controller/base.rb:121:in `process'
actionpack (5.0.0.rc1) lib/action_controller/metal.rb:190:in `dispatch'
actionpack (5.0.0.rc1) lib/action_controller/metal.rb:262:in `dispatch'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:50:in `dispatch'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:32:in `serve'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:39:in `block in serve'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:26:in `each'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:26:in `serve'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:725:in `call'
actionview (5.0.0.rc1) lib/action_view/digestor.rb:12:in `call'
rack (2.0.0.rc1) lib/rack/etag.rb:25:in `call'
rack (2.0.0.rc1) lib/rack/conditional_get.rb:25:in `call'
rack (2.0.0.rc1) lib/rack/head.rb:12:in `call'
activerecord (5.0.0.rc1) lib/active_record/migration.rb:552:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/callbacks.rb:38:in `block in call'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:97:in `__run_callbacks__'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:750:in `_run_call_callbacks'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:90:in `run_callbacks'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/callbacks.rb:36:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/remote_ip.rb:79:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/debug_exceptions.rb:49:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/show_exceptions.rb:31:in `call'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:36:in `call_app'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:24:in `block in call'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:70:in `block in tagged'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:26:in `tagged'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:70:in `tagged'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:24:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/request_id.rb:24:in `call'
rack (2.0.0.rc1) lib/rack/runtime.rb:22:in `call'
activesupport (5.0.0.rc1) lib/active_support/cache/strategy/local_cache_middleware.rb:28:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/static.rb:136:in `call'
rack (2.0.0.rc1) lib/rack/sendfile.rb:111:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
railties (5.0.0.rc1) lib/rails/engine.rb:522:in `call'
puma (3.4.0) lib/puma/configuration.rb:224:in `call'
puma (3.4.0) lib/puma/server.rb:569:in `handle_request'
puma (3.4.0) lib/puma/server.rb:406:in `process_client'
puma (3.4.0) lib/puma/server.rb:271:in `block in run'
puma (3.4.0) lib/puma/thread_pool.rb:114:in `call'
puma (3.4.0) lib/puma/thread_pool.rb:114:in `block in spawn_thread'
Started GET "/api/v1/answers/19" for ::1 at 2016-06-19 15:06:12 -0400
  
AbstractController::ActionNotFound (The action 'show' could not be found for Api::V1::AnswersController):
  
actionpack (5.0.0.rc1) lib/abstract_controller/base.rb:121:in `process'
actionpack (5.0.0.rc1) lib/action_controller/metal.rb:190:in `dispatch'
actionpack (5.0.0.rc1) lib/action_controller/metal.rb:262:in `dispatch'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:50:in `dispatch'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:32:in `serve'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:39:in `block in serve'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:26:in `each'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:26:in `serve'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:725:in `call'
actionview (5.0.0.rc1) lib/action_view/digestor.rb:12:in `call'
rack (2.0.0.rc1) lib/rack/etag.rb:25:in `call'
rack (2.0.0.rc1) lib/rack/conditional_get.rb:25:in `call'
rack (2.0.0.rc1) lib/rack/head.rb:12:in `call'
activerecord (5.0.0.rc1) lib/active_record/migration.rb:552:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/callbacks.rb:38:in `block in call'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:97:in `__run_callbacks__'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:750:in `_run_call_callbacks'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:90:in `run_callbacks'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/callbacks.rb:36:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/remote_ip.rb:79:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/debug_exceptions.rb:49:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/show_exceptions.rb:31:in `call'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:36:in `call_app'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:24:in `block in call'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:70:in `block in tagged'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:26:in `tagged'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:70:in `tagged'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:24:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/request_id.rb:24:in `call'
rack (2.0.0.rc1) lib/rack/runtime.rb:22:in `call'
activesupport (5.0.0.rc1) lib/active_support/cache/strategy/local_cache_middleware.rb:28:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/static.rb:136:in `call'
rack (2.0.0.rc1) lib/rack/sendfile.rb:111:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
railties (5.0.0.rc1) lib/rails/engine.rb:522:in `call'
puma (3.4.0) lib/puma/configuration.rb:224:in `call'
puma (3.4.0) lib/puma/server.rb:569:in `handle_request'
puma (3.4.0) lib/puma/server.rb:406:in `process_client'
puma (3.4.0) lib/puma/server.rb:271:in `block in run'
puma (3.4.0) lib/puma/thread_pool.rb:114:in `call'
puma (3.4.0) lib/puma/thread_pool.rb:114:in `block in spawn_thread'
Started GET "/api/v1/random" for ::1 at 2016-06-19 15:06:41 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.5ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 22]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (7.49ms)
Completed 200 OK in 10ms (Views: 7.4ms | ActiveRecord: 1.0ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-19 15:06:43 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"safsadf", "vote-count"=>nil, "vote-score"=>nil}, "question"=>{"data"=>{"id"=>"22", "attributes"=>{"content"=>"Can you tell me about a challenge you've faced at work and how you got through it?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: vote-count, vote-score
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 22], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "safsadf"], ["question_id", 22], ["created_at", 2016-06-19 19:06:43 UTC], ["updated_at", 2016-06-19 19:06:43 UTC]]
  [1m[35m (2.1ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 7ms (ActiveRecord: 2.8ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-19 15:07:23 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"id"=>"20", "attributes"=>{"content"=>"ADfadsfgsad", "vote-count"=>9, "vote-score"=>0}, "question"=>{"data"=>{"id"=>"22", "attributes"=>{"content"=>"Can you tell me about a challenge you've faced at work and how you got through it?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: vote-count, vote-score
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 22], ["LIMIT", 1]]
Started GET "/api/v1/answers/20" for ::1 at 2016-06-19 15:07:23 -0400
  [1m[35m (0.5ms)[0m  [1m[35mBEGIN[0m
  
AbstractController::ActionNotFound (The action 'show' could not be found for Api::V1::AnswersController):
  
actionpack (5.0.0.rc1) lib/abstract_controller/base.rb:121:in `process'
actionpack (5.0.0.rc1) lib/action_controller/metal.rb:190:in `dispatch'
actionpack (5.0.0.rc1) lib/action_controller/metal.rb:262:in `dispatch'
  [1m[35mSQL (0.6ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "ADfadsfgsad"], ["question_id", 22], ["created_at", 2016-06-19 19:07:23 UTC], ["updated_at", 2016-06-19 19:07:23 UTC]]
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:50:in `dispatch'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:32:in `serve'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:39:in `block in serve'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:26:in `each'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:26:in `serve'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:725:in `call'
actionview (5.0.0.rc1) lib/action_view/digestor.rb:12:in `call'
rack (2.0.0.rc1) lib/rack/etag.rb:25:in `call'
rack (2.0.0.rc1) lib/rack/conditional_get.rb:25:in `call'
rack (2.0.0.rc1) lib/rack/head.rb:12:in `call'
activerecord (5.0.0.rc1) lib/active_record/migration.rb:552:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/callbacks.rb:38:in `block in call'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:97:in `__run_callbacks__'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:750:in `_run_call_callbacks'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:90:in `run_callbacks'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/callbacks.rb:36:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/remote_ip.rb:79:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/debug_exceptions.rb:49:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/show_exceptions.rb:31:in `call'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:36:in `call_app'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:24:in `block in call'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:70:in `block in tagged'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:26:in `tagged'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:70:in `tagged'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:24:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/request_id.rb:24:in `call'
rack (2.0.0.rc1) lib/rack/runtime.rb:22:in `call'
activesupport (5.0.0.rc1) lib/active_support/cache/strategy/local_cache_middleware.rb:28:in `call'
  [1m[35m (1.5ms)[0m  [1m[35mCOMMIT[0m
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/executor.rb:12:in `call'
Completed 204 No Content in 12ms (ActiveRecord: 3.0ms)


actionpack (5.0.0.rc1) lib/action_dispatch/middleware/static.rb:136:in `call'
rack (2.0.0.rc1) lib/rack/sendfile.rb:111:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
railties (5.0.0.rc1) lib/rails/engine.rb:522:in `call'
puma (3.4.0) lib/puma/configuration.rb:224:in `call'
puma (3.4.0) lib/puma/server.rb:569:in `handle_request'
puma (3.4.0) lib/puma/server.rb:406:in `process_client'
puma (3.4.0) lib/puma/server.rb:271:in `block in run'
puma (3.4.0) lib/puma/thread_pool.rb:114:in `call'
puma (3.4.0) lib/puma/thread_pool.rb:114:in `block in spawn_thread'
Started GET "/api/v1/random" for ::1 at 2016-06-19 15:07:40 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 15]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (3.71ms)
Completed 200 OK in 6ms (Views: 3.9ms | ActiveRecord: 0.6ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-19 15:07:42 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"sadfadsf", "vote-count"=>nil, "vote-score"=>nil}, "question"=>{"data"=>{"id"=>"15", "attributes"=>{"content"=>"Can you name two programming paradigms important for JavaScript app developers?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: vote-count, vote-score
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.5ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 15], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "sadfadsf"], ["question_id", 15], ["created_at", 2016-06-19 19:07:42 UTC], ["updated_at", 2016-06-19 19:07:42 UTC]]
  [1m[35m (60.9ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 67ms (ActiveRecord: 61.8ms)


Started GET "/api/v1/random" for ::1 at 2016-06-19 15:15:14 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.4ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 16]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (5.26ms)
Completed 200 OK in 8ms (Views: 5.4ms | ActiveRecord: 1.0ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-19 15:15:16 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"asdfasdf", "vote-count"=>nil, "vote-score"=>nil}, "question"=>{"data"=>{"id"=>"16", "attributes"=>{"content"=>"Tell me about your long-term goals."}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: vote-count, vote-score
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.5ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 16], ["LIMIT", 1]]
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "asdfasdf"], ["question_id", 16], ["created_at", 2016-06-19 19:15:16 UTC], ["updated_at", 2016-06-19 19:15:16 UTC]]
  [1m[35m (58.2ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 66ms (ActiveRecord: 59.3ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-19 15:15:41 -0400
Started GET "/api/v1/answers/25" for ::1 at 2016-06-19 15:15:41 -0400
  
Processing by Api::V1::AnswersController#create as JSON
AbstractController::ActionNotFound (The action 'show' could not be found for Api::V1::AnswersController):
  Parameters: {"data"=>{"id"=>"25", "attributes"=>{"content"=>"dzfhsdf", "vote-count"=>9, "vote-score"=>0}, "question"=>{"data"=>{"id"=>"16", "attributes"=>{"content"=>"Tell me about your long-term goals."}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
  
Unpermitted parameters: vote-count, vote-score
actionpack (5.0.0.rc1) lib/abstract_controller/base.rb:121:in `process'
Unpermitted parameters: attributes, type
actionpack (5.0.0.rc1) lib/action_controller/metal.rb:190:in `dispatch'
actionpack (5.0.0.rc1) lib/action_controller/metal.rb:262:in `dispatch'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:50:in `dispatch'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:32:in `serve'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:39:in `block in serve'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:26:in `each'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:26:in `serve'
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 16], ["LIMIT", 1]]
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:725:in `call'
actionview (5.0.0.rc1) lib/action_view/digestor.rb:12:in `call'
rack (2.0.0.rc1) lib/rack/etag.rb:25:in `call'
  [1m[35m (0.4ms)[0m  [1m[35mBEGIN[0m
rack (2.0.0.rc1) lib/rack/conditional_get.rb:25:in `call'
rack (2.0.0.rc1) lib/rack/head.rb:12:in `call'
activerecord (5.0.0.rc1) lib/active_record/migration.rb:552:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/callbacks.rb:38:in `block in call'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:97:in `__run_callbacks__'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:750:in `_run_call_callbacks'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:90:in `run_callbacks'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/callbacks.rb:36:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/remote_ip.rb:79:in `call'
  [1m[35mSQL (0.5ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "dzfhsdf"], ["question_id", 16], ["created_at", 2016-06-19 19:15:42 UTC], ["updated_at", 2016-06-19 19:15:42 UTC]]
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/debug_exceptions.rb:49:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/show_exceptions.rb:31:in `call'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:36:in `call_app'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:24:in `block in call'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:70:in `block in tagged'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:26:in `tagged'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:70:in `tagged'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:24:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/request_id.rb:24:in `call'
rack (2.0.0.rc1) lib/rack/runtime.rb:22:in `call'
activesupport (5.0.0.rc1) lib/active_support/cache/strategy/local_cache_middleware.rb:28:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/static.rb:136:in `call'
rack (2.0.0.rc1) lib/rack/sendfile.rb:111:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
railties (5.0.0.rc1) lib/rails/engine.rb:522:in `call'
puma (3.4.0) lib/puma/configuration.rb:224:in `call'
puma (3.4.0) lib/puma/server.rb:569:in `handle_request'
puma (3.4.0) lib/puma/server.rb:406:in `process_client'
puma (3.4.0) lib/puma/server.rb:271:in `block in run'
  [1m[35m (0.8ms)[0m  [1m[35mCOMMIT[0m
puma (3.4.0) lib/puma/thread_pool.rb:114:in `call'
Completed 204 No Content in 10ms (ActiveRecord: 2.0ms)


puma (3.4.0) lib/puma/thread_pool.rb:114:in `block in spawn_thread'
Started GET "/api/v1/random" for ::1 at 2016-06-19 15:16:29 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.3ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 8]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (21.92ms)
Completed 200 OK in 55ms (Views: 45.0ms | ActiveRecord: 7.1ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-19 15:16:31 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"asdfadsfsafd", "vote-count"=>nil, "vote-score"=>nil}, "question"=>{"data"=>{"id"=>"8", "attributes"=>{"content"=>"How did you learn programming?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: vote-count, vote-score
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.5ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 8], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "asdfadsfsafd"], ["question_id", 8], ["created_at", 2016-06-19 19:16:31 UTC], ["updated_at", 2016-06-19 19:16:31 UTC]]
  [1m[35m (77.2ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 86ms (ActiveRecord: 78.2ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-19 15:16:32 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"id"=>"9", "attributes"=>{"content"=>"asdfsadf", "vote-count"=>9, "vote-score"=>0}, "question"=>{"data"=>{"id"=>"8", "attributes"=>{"content"=>"How did you learn programming?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: vote-count, vote-score
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 8], ["LIMIT", 1]]
  [1m[35m (0.5ms)[0m  [1m[35mBEGIN[0m
Started GET "/api/v1/answers/9" for ::1 at 2016-06-19 15:16:32 -0400
Processing by Api::V1::AnswersController#show as JSON
  Parameters: {"id"=>"9"}
  [1m[35mSQL (89.7ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "asdfsadf"], ["question_id", 8], ["created_at", 2016-06-19 19:16:32 UTC], ["updated_at", 2016-06-19 19:16:32 UTC]]
  [1m[35m (26.9ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 124ms (ActiveRecord: 117.3ms)


  [1m[36mAnswer Load (1.3ms)[0m  [1m[34mSELECT "answers".* FROM "answers"[0m
  [1m[36mAnswer Load (8.1ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."id" = $1 LIMIT $2[0m  [["id", 9], ["LIMIT", 1]]
  [1m[36mAnswer Load (8.3ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."id" = $1 LIMIT $2[0m  [["id", 9], ["LIMIT", 1]]
Started PATCH "/api/v1/answers/9" for ::1 at 2016-06-19 15:17:45 -0400
  [1m[36mCACHE (0.0ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."id" = $1 LIMIT $2[0m  [["id", 9], ["LIMIT", 1]]
Processing by Api::V1::AnswersController#update as JSON
  Parameters: {"data"=>{"id"=>"9", "attributes"=>{"content"=>"asdfsadf", "vote-count"=>9, "vote-score"=>0}, "question"=>{"data"=>{"id"=>"8", "attributes"=>{"content"=>"How did you learn programming?"}, "type"=>"questions"}}, "type"=>"answers"}, "id"=>"9", "answer"=>{}}
[active_model_serializers]   [1m[36mQuestion Load (7.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 8], ["LIMIT", 1]]
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (10.34ms)
Completed 500 Internal Server Error in 245892ms (Views: 3.7ms | ActiveRecord: 25.1ms)


Completed 500 Internal Server Error in 173632ms (ActiveRecord: 0.0ms)


  
SystemExit (exit):
  
app/controllers/api/v1/answers_controller.rb:24:in `show'
Started GET "/api/v1/answers/9" for ::1 at 2016-06-19 15:20:39 -0400
  
SystemExit (exit):
  
app/controllers/api/v1/answers_controller.rb:20:in `update'
Started GET "/api/v1/random" for ::1 at 2016-06-19 15:20:41 -0400
Processing by Api::V1::AnswersController#show as JSON
  Parameters: {"id"=>"9"}
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (1.0ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (16.8ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 5]]
  [1m[36mAnswer Load (2.6ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."id" = $1 LIMIT $2[0m  [["id", 9], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mQuestion Load (47.6ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 8], ["LIMIT", 1]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (399.96ms)
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (148.7ms)
Completed 200 OK in 576ms (Views: 453.5ms | ActiveRecord: 85.9ms)


Completed 200 OK in 652ms (Views: 154.3ms | ActiveRecord: 168.7ms)


Started GET "/api/v1/random" for ::1 at 2016-06-19 15:20:55 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (1.3ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (1.1ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 1]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (108.81ms)
Completed 200 OK in 178ms (Views: 114.9ms | ActiveRecord: 3.2ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-19 15:20:57 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"asdfadsfd", "vote-count"=>nil, "vote-score"=>nil}, "question"=>{"data"=>{"id"=>"1", "attributes"=>{"content"=>"What are you looking for in terms of career development?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: vote-count, vote-score
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.9ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  [1m[35m (0.6ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (1.3ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "asdfadsfd"], ["question_id", 1], ["created_at", 2016-06-19 19:20:57 UTC], ["updated_at", 2016-06-19 19:20:57 UTC]]
  [1m[35m (131.8ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 290ms (ActiveRecord: 135.2ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-19 15:20:59 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"id"=>"15", "attributes"=>{"content"=>"dasgasddsg", "vote-count"=>9, "vote-score"=>0}, "question"=>{"data"=>{"id"=>"1", "attributes"=>{"content"=>"What are you looking for in terms of career development?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: vote-count, vote-score
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (5.5ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
Started GET "/api/v1/answers/15" for ::1 at 2016-06-19 15:20:59 -0400
Processing by Api::V1::AnswersController#show as JSON
  [1m[35m (24.5ms)[0m  [1m[35mBEGIN[0m
  Parameters: {"id"=>"15"}
  [1m[35mSQL (9.6ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "dasgasddsg"], ["question_id", 1], ["created_at", 2016-06-19 19:20:59 UTC], ["updated_at", 2016-06-19 19:20:59 UTC]]
  [1m[36mAnswer Load (15.7ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."id" = $1 LIMIT $2[0m  [["id", 15], ["LIMIT", 1]]
  [1m[35m (49.5ms)[0m  [1m[35mCOMMIT[0m
[active_model_serializers]   [1m[36mQuestion Load (2.8ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
Completed 204 No Content in 242ms (ActiveRecord: 89.1ms)


[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (65.99ms)
Completed 200 OK in 123ms (Views: 83.7ms | ActiveRecord: 18.6ms)


Started GET "/api/v1/answers/15" for ::1 at 2016-06-19 15:21:01 -0400
Processing by Api::V1::AnswersController#show as JSON
Started PATCH "/api/v1/answers/15" for ::1 at 2016-06-19 15:21:01 -0400
  Parameters: {"id"=>"15"}
Processing by Api::V1::AnswersController#update as JSON
  Parameters: {"data"=>{"id"=>"15", "attributes"=>{"content"=>"dasgasddsg", "vote-count"=>9, "vote-score"=>0}, "question"=>{"data"=>{"id"=>"1", "attributes"=>{"content"=>"What are you looking for in terms of career development?"}, "type"=>"questions"}}, "type"=>"answers"}, "id"=>"15", "answer"=>{}}
  [1m[36mAnswer Load (2.5ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."id" = $1 LIMIT $2[0m  [["id", 15], ["LIMIT", 1]]
  [1m[36mAnswer Load (4.6ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."id" = $1 LIMIT $2[0m  [["id", 15], ["LIMIT", 1]]
  [1m[35m (39.8ms)[0m  [1m[35mBEGIN[0m
  [1m[36mQuestion Load (2.1ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mQuestion Load (16.7ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (100.59ms)
Completed 200 OK in 150ms (Views: 90.9ms | ActiveRecord: 19.3ms)


  [1m[35mSQL (0.8ms)[0m  [1m[33mUPDATE "answers" SET "vote_count" = $1, "updated_at" = $2 WHERE "answers"."id" = $3[0m  [["vote_count", 888], ["updated_at", 2016-06-19 19:21:02 UTC], ["id", 15]]
  [1m[35m (2.9ms)[0m  [1m[35mCOMMIT[0m
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (29.46ms)
Completed 200 OK in 244ms (Views: 40.9ms | ActiveRecord: 50.2ms)


Started GET "/api/v1/random" for ::1 at 2016-06-19 16:03:07 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.9ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.9ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 11]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (1145.13ms)
Completed 200 OK in 1373ms (Views: 1270.7ms | ActiveRecord: 15.4ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-19 16:03:12 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"wdedvdv", "vote-count"=>nil, "vote-score"=>nil}, "question"=>{"data"=>{"id"=>"11", "attributes"=>{"content"=>"Describe a time when you were able to improve upon the design that was originally suggested?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: vote-count, vote-score
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 11], ["LIMIT", 1]]
  [1m[35m (1.0ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (1.2ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "wdedvdv"], ["question_id", 11], ["created_at", 2016-06-19 20:03:12 UTC], ["updated_at", 2016-06-19 20:03:12 UTC]]
  [1m[35m (69.5ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 224ms (ActiveRecord: 72.4ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-19 16:03:14 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"id"=>"21", "attributes"=>{"content"=>"adsgdsfghdfsh", "vote-count"=>1, "vote-score"=>0}, "question"=>{"data"=>{"id"=>"11", "attributes"=>{"content"=>"Describe a time when you were able to improve upon the design that was originally suggested?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Started GET "/api/v1/answers/21" for ::1 at 2016-06-19 16:03:14 -0400
Unpermitted parameters: vote-count, vote-score
Processing by Api::V1::AnswersController#show as JSON
Unpermitted parameters: attributes, type
  Parameters: {"id"=>"21"}
  [1m[36mQuestion Load (19.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 11], ["LIMIT", 1]]
  [1m[36mAnswer Load (49.9ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."id" = $1 LIMIT $2[0m  [["id", 21], ["LIMIT", 1]]
  [1m[35m (72.9ms)[0m  [1m[35mBEGIN[0m
[active_model_serializers]   [1m[36mQuestion Load (50.5ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 11], ["LIMIT", 1]]
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (127.16ms)
Completed 200 OK in 214ms (Views: 84.3ms | ActiveRecord: 100.4ms)


  [1m[35mSQL (38.5ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "adsgdsfghdfsh"], ["question_id", 11], ["created_at", 2016-06-19 20:03:15 UTC], ["updated_at", 2016-06-19 20:03:15 UTC]]
  [1m[35m (26.0ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 328ms (ActiveRecord: 156.5ms)


Started GET "/api/v1/answers/21" for ::1 at 2016-06-19 16:03:34 -0400
Started PATCH "/api/v1/answers/21" for ::1 at 2016-06-19 16:03:34 -0400
Processing by Api::V1::AnswersController#show as JSON
Processing by Api::V1::AnswersController#update as JSON
  Parameters: {"id"=>"21"}
  Parameters: {"data"=>{"id"=>"21", "attributes"=>{"content"=>"adsgdsfghdfsh", "vote-count"=>2, "vote-score"=>0}, "question"=>{"data"=>{"id"=>"11", "attributes"=>{"content"=>"Describe a time when you were able to improve upon the design that was originally suggested?"}, "type"=>"questions"}}, "type"=>"answers"}, "id"=>"21", "answer"=>{}}
  [1m[36mAnswer Load (6.0ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."id" = $1 LIMIT $2[0m  [["id", 21], ["LIMIT", 1]]
Started GET "/api/v1/random" for ::1 at 2016-06-19 16:04:13 -0400
Completed 500 Internal Server Error in 38957ms (ActiveRecord: 0.0ms)


  
[active_model_serializers]   [1m[36mQuestion Load (26.6ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 11], ["LIMIT", 1]]
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
SystemExit (exit):
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (110.46ms)
  Parameters: {"question"=>{}}
  
Completed 200 OK in 39119ms (Views: 93.6ms | ActiveRecord: 32.6ms)


app/controllers/api/v1/answers_controller.rb:20:in `update'
  [1m[36mQuestion Load (129.1ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (103.6ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 17]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (677.4ms)
Completed 200 OK in 950ms (Views: 581.4ms | ActiveRecord: 232.7ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-19 16:04:18 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"dcdcdc", "vote-count"=>nil, "vote-score"=>nil}, "question"=>{"data"=>{"id"=>"17", "attributes"=>{"content"=>"Tell me about the most recent project you worked on. What were your responsibilities?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: vote-count, vote-score
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 17], ["LIMIT", 1]]
  [1m[35m (0.5ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.7ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "dcdcdc"], ["question_id", 17], ["created_at", 2016-06-19 20:04:18 UTC], ["updated_at", 2016-06-19 20:04:18 UTC]]
  [1m[35m (2.9ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 141ms (ActiveRecord: 4.9ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-19 16:04:20 -0400
Processing by Api::V1::AnswersController#create as JSON
Started GET "/api/v1/answers/13" for ::1 at 2016-06-19 16:04:20 -0400
  Parameters: {"data"=>{"id"=>"13", "attributes"=>{"content"=>"sadfadsf", "vote-count"=>9, "vote-score"=>0}, "question"=>{"data"=>{"id"=>"17", "attributes"=>{"content"=>"Tell me about the most recent project you worked on. What were your responsibilities?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Processing by Api::V1::AnswersController#show as JSON
Unpermitted parameters: vote-count, vote-score
  Parameters: {"id"=>"13"}
Unpermitted parameters: attributes, type
  [1m[36mAnswer Load (9.1ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."id" = $1 LIMIT $2[0m  [["id", 13], ["LIMIT", 1]]
  [1m[36mQuestion Load (44.9ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 17], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mQuestion Load (47.8ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 17], ["LIMIT", 1]]
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (108.24ms)
Completed 200 OK in 142ms (Views: 70.7ms | ActiveRecord: 56.9ms)


  [1m[35m (31.0ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.8ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "sadfadsf"], ["question_id", 17], ["created_at", 2016-06-19 20:04:20 UTC], ["updated_at", 2016-06-19 20:04:20 UTC]]
  [1m[35m (1.9ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 260ms (ActiveRecord: 78.5ms)


Started GET "/api/v1/answers/13" for ::1 at 2016-06-19 16:04:30 -0400
Started PATCH "/api/v1/answers/13" for ::1 at 2016-06-19 16:04:30 -0400
Processing by Api::V1::AnswersController#show as JSON
Processing by Api::V1::AnswersController#update as JSON
  Parameters: {"id"=>"13"}
  Parameters: {"data"=>{"id"=>"13", "attributes"=>{"content"=>"sadfadsf", "vote-count"=>9, "vote-score"=>0}, "question"=>{"data"=>{"id"=>"17", "attributes"=>{"content"=>"Tell me about the most recent project you worked on. What were your responsibilities?"}, "type"=>"questions"}}, "type"=>"answers"}, "id"=>"13", "answer"=>{}}
  [1m[36mAnswer Load (30199.6ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."id" = $1 LIMIT $2[0m  [["id", 13], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 17], ["LIMIT", 1]]
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (64.27ms)
Completed 200 OK in 30287ms (Views: 71.3ms | ActiveRecord: 30200.3ms)


Completed 500 Internal Server Error in 101930ms (ActiveRecord: 0.0ms)


  
SystemExit (exit):
  
app/controllers/api/v1/answers_controller.rb:20:in `update'
Started GET "/api/v1/random" for ::1 at 2016-06-19 16:06:17 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (1.0ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.8ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 24]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (339.98ms)
Completed 200 OK in 466ms (Views: 380.1ms | ActiveRecord: 1.8ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-19 16:06:22 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"dcdecedc", "vote-count"=>nil, "vote-score"=>nil}, "question"=>{"data"=>{"id"=>"24", "attributes"=>{"content"=>"Why do you want to be a web developer?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: vote-count, vote-score
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 24], ["LIMIT", 1]]
  [1m[35m (0.8ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.8ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "dcdecedc"], ["question_id", 24], ["created_at", 2016-06-19 20:06:22 UTC], ["updated_at", 2016-06-19 20:06:22 UTC]]
  [1m[35m (1.9ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mAnswer Load (1.5ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."question_id" = $1 ORDER BY "answers"."id" DESC LIMIT $2[0m  [["question_id", 24], ["LIMIT", 1]]
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (25.37ms)
Completed 200 OK in 212ms (Views: 39.5ms | ActiveRecord: 5.6ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-19 16:06:24 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"id"=>"28", "attributes"=>{"content"=>"agsdg", "vote-count"=>9, "vote-score"=>0}, "question"=>{"data"=>{"id"=>"24", "attributes"=>{"content"=>"Why do you want to be a web developer?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: vote-count, vote-score
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (5.0ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 24], ["LIMIT", 1]]
Started GET "/api/v1/answers/28" for ::1 at 2016-06-19 16:06:24 -0400
Processing by Api::V1::AnswersController#show as JSON
  Parameters: {"id"=>"28"}
  [1m[35m (50.5ms)[0m  [1m[35mBEGIN[0m
  [1m[36mAnswer Load (39.3ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."id" = $1 LIMIT $2[0m  [["id", 28], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mQuestion Load (13.1ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 24], ["LIMIT", 1]]
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (92.49ms)
  [1m[35mSQL (27.6ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "agsdg"], ["question_id", 24], ["created_at", 2016-06-19 20:06:24 UTC], ["updated_at", 2016-06-19 20:06:24 UTC]]
Completed 200 OK in 179ms (Views: 92.4ms | ActiveRecord: 52.4ms)


  [1m[35m (7.4ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mAnswer Load (1.2ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."question_id" = $1 ORDER BY "answers"."id" DESC LIMIT $2[0m  [["question_id", 24], ["LIMIT", 1]]
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (23.98ms)
Completed 200 OK in 377ms (Views: 35.8ms | ActiveRecord: 91.6ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-19 16:06:30 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"id"=>"28", "attributes"=>{"content"=>"agsdg", "vote-count"=>9, "vote-score"=>0}, "question"=>{"data"=>{"id"=>"24", "attributes"=>{"content"=>"Why do you want to be a web developer?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: vote-count, vote-score
Unpermitted parameters: attributes, type
Started GET "/api/v1/answers/28" for ::1 at 2016-06-19 16:06:30 -0400
  [1m[36mQuestion Load (26.7ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 24], ["LIMIT", 1]]
Processing by Api::V1::AnswersController#show as JSON
  [1m[35m (2.6ms)[0m  [1m[35mBEGIN[0m
  Parameters: {"id"=>"28"}
  [1m[35mSQL (6.7ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "agsdg"], ["question_id", 24], ["created_at", 2016-06-19 20:06:30 UTC], ["updated_at", 2016-06-19 20:06:30 UTC]]
  [1m[36mAnswer Load (3.4ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."id" = $1 LIMIT $2[0m  [["id", 28], ["LIMIT", 1]]
  [1m[35m (45.6ms)[0m  [1m[35mCOMMIT[0m
[active_model_serializers]   [1m[36mQuestion Load (6.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 24], ["LIMIT", 1]]
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (86.21ms)
Completed 200 OK in 128ms (Views: 94.9ms | ActiveRecord: 9.8ms)


  [1m[36mAnswer Load (34.2ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."question_id" = $1 ORDER BY "answers"."id" DESC LIMIT $2[0m  [["question_id", 24], ["LIMIT", 1]]
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (29.51ms)
Completed 200 OK in 344ms (Views: 38.4ms | ActiveRecord: 115.8ms)


Started GET "/api/v1/random" for ::1 at 2016-06-19 16:07:05 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.7ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 11]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (207.99ms)
Completed 200 OK in 271ms (Views: 219.9ms | ActiveRecord: 1.6ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-19 16:07:08 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"wsxwsx", "vote-count"=>nil, "vote-score"=>nil}, "question"=>{"data"=>{"id"=>"11", "attributes"=>{"content"=>"Describe a time when you were able to improve upon the design that was originally suggested?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: vote-count, vote-score
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 11], ["LIMIT", 1]]
  [1m[35m (0.5ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.8ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "wsxwsx"], ["question_id", 11], ["created_at", 2016-06-19 20:07:08 UTC], ["updated_at", 2016-06-19 20:07:08 UTC]]
  [1m[35m (2.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mAnswer Load (0.8ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."question_id" = $1 ORDER BY "answers"."id" DESC LIMIT $2[0m  [["question_id", 11], ["LIMIT", 1]]
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (24.2ms)
Completed 200 OK in 196ms (Views: 37.1ms | ActiveRecord: 5.2ms)


Started GET "/api/v1/random" for ::1 at 2016-06-19 16:09:00 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (1.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.7ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 17]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (322.75ms)
Completed 200 OK in 392ms (Views: 330.5ms | ActiveRecord: 2.5ms)


Started GET "/api/v1/random" for ::1 at 2016-06-19 16:10:30 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (1.3ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (2.3ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 21]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (159.56ms)
Completed 200 OK in 227ms (Views: 171.1ms | ActiveRecord: 3.6ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-19 16:10:32 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"dwxxw", "vote-count"=>nil, "vote-score"=>nil}, "question"=>{"data"=>{"id"=>"21", "attributes"=>{"content"=>"What is the difference between classical inheritance and prototypal inheritance? "}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: vote-count, vote-score
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (1.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 21], ["LIMIT", 1]]
  [1m[35m (0.6ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (1.0ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "dwxxw"], ["question_id", 21], ["created_at", 2016-06-19 20:10:32 UTC], ["updated_at", 2016-06-19 20:10:32 UTC]]
  [1m[35m (66.5ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mAnswer Load (1.9ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."question_id" = $1 ORDER BY "answers"."id" DESC LIMIT $2[0m  [["question_id", 21], ["LIMIT", 1]]
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (27.06ms)
Completed 200 OK in 280ms (Views: 40.2ms | ActiveRecord: 71.2ms)


Started GET "/api/v1/random" for ::1 at 2016-06-19 16:11:48 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (1.2ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (1.0ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 22]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (401.38ms)
Completed 200 OK in 463ms (Views: 408.7ms | ActiveRecord: 2.2ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-19 16:11:50 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"dwcwc", "vote-count"=>nil, "vote-score"=>nil}, "question"=>{"data"=>{"id"=>"22", "attributes"=>{"content"=>"Can you tell me about a challenge you've faced at work and how you got through it?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: vote-count, vote-score
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (1.1ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 22], ["LIMIT", 1]]
  [1m[35m (0.7ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (1.1ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "dwcwc"], ["question_id", 22], ["created_at", 2016-06-19 20:11:50 UTC], ["updated_at", 2016-06-19 20:11:50 UTC]]
  [1m[35m (89.7ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mAnswer Load (1.0ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."question_id" = $1 ORDER BY "answers"."id" DESC LIMIT $2[0m  [["question_id", 22], ["LIMIT", 1]]
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (31.65ms)
Completed 200 OK in 311ms (Views: 39.2ms | ActiveRecord: 93.7ms)


Started GET "/api/v1/answers/0" for ::1 at 2016-06-19 16:11:55 -0400
Processing by Api::V1::AnswersController#show as JSON
  Parameters: {"id"=>"0"}
  [1m[36mAnswer Load (0.9ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."id" = $1 LIMIT $2[0m  [["id", 0], ["LIMIT", 1]]
Completed 404 Not Found in 19ms (ActiveRecord: 0.9ms)


  
ActiveRecord::RecordNotFound (Couldn't find Answer with 'id'=0):
  
app/controllers/api/v1/answers_controller.rb:26:in `show'
Started GET "/api/v1/random" for ::1 at 2016-06-19 16:12:31 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.9ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.8ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 13]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (342.38ms)
Completed 200 OK in 401ms (Views: 350.0ms | ActiveRecord: 1.7ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-19 16:12:34 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"wdccwd", "vote-count"=>nil, "vote-score"=>nil}, "question"=>{"data"=>{"id"=>"13", "attributes"=>{"content"=>"Where would you like to be in your career five years from now?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: vote-count, vote-score
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.9ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 13], ["LIMIT", 1]]
  [1m[35m (5.0ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (1.0ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "wdccwd"], ["question_id", 13], ["created_at", 2016-06-19 20:12:34 UTC], ["updated_at", 2016-06-19 20:12:34 UTC]]
  [1m[35m (106.4ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mAnswer Load (1.0ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."question_id" = $1 ORDER BY "answers"."id" DESC LIMIT $2[0m  [["question_id", 13], ["LIMIT", 1]]
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (29.71ms)
Completed 200 OK in 314ms (Views: 37.5ms | ActiveRecord: 114.2ms)


Started GET "/api/v1/answers/1" for ::1 at 2016-06-19 16:12:39 -0400
Processing by Api::V1::AnswersController#show as JSON
  Parameters: {"id"=>"1"}
  [1m[36mAnswer Load (1.1ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (64.22ms)
Completed 200 OK in 94ms (Views: 74.3ms | ActiveRecord: 1.7ms)


Started PATCH "/api/v1/answers/1" for ::1 at 2016-06-19 16:12:39 -0400
Processing by Api::V1::AnswersController#update as JSON
  Parameters: {"data"=>{"id"=>"1", "attributes"=>{"content"=>"<p>Three, and more than you'd expect!</p>\n\n  <p>You could center a div horizontally, vertically, or both and there are\n  a ton of ways to do them each. It also depends on what you're trying to\n  center. The most common way I do it is using the margins. If you set\n    a div's margin to 0 auto, to will automatically get the width of the\n    client's screen and use that information to center the div.</p>\n\n  <p>If I had text within a div, I wold use the text-align: center css\n  attribute on the div.</p>", "vote-count"=>21, "vote-score"=>15}, "question"=>{"data"=>{"id"=>"2", "attributes"=>{"content"=>nil}, "type"=>"questions"}}, "type"=>"answers"}, "id"=>"1", "answer"=>{}}
  [1m[36mAnswer Load (7.1ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  [1m[35m (0.5ms)[0m  [1m[35mBEGIN[0m
  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
  [1m[35mSQL (1.2ms)[0m  [1m[33mUPDATE "answers" SET "vote_count" = $1, "updated_at" = $2 WHERE "answers"."id" = $3[0m  [["vote_count", 21], ["updated_at", 2016-06-19 20:12:39 UTC], ["id", 1]]
  [1m[35m (16.1ms)[0m  [1m[35mCOMMIT[0m
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (33.97ms)
Completed 200 OK in 186ms (Views: 42.6ms | ActiveRecord: 25.6ms)


Started GET "/api/v1/random" for ::1 at 2016-06-19 16:13:27 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (1.0ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (1.0ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 23]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (242.66ms)
Completed 200 OK in 317ms (Views: 256.1ms | ActiveRecord: 2.0ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-19 16:13:29 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"edcecd", "vote-count"=>nil, "vote-score"=>nil}, "question"=>{"data"=>{"id"=>"23", "attributes"=>{"content"=>"Explain a polymorphic association?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: vote-count, vote-score
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 23], ["LIMIT", 1]]
  [1m[35m (0.7ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.8ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "edcecd"], ["question_id", 23], ["created_at", 2016-06-19 20:13:29 UTC], ["updated_at", 2016-06-19 20:13:29 UTC]]
  [1m[35m (1.4ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mAnswer Load (0.9ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."question_id" = $1 ORDER BY "answers"."id" DESC LIMIT $2[0m  [["question_id", 23], ["LIMIT", 1]]
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (33.09ms)
Completed 200 OK in 226ms (Views: 40.6ms | ActiveRecord: 4.5ms)


Started GET "/api/v1/answers/0" for ::1 at 2016-06-19 16:13:31 -0400
Processing by Api::V1::AnswersController#show as JSON
  Parameters: {"id"=>"0"}
  [1m[36mAnswer Load (0.7ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."id" = $1 LIMIT $2[0m  [["id", 0], ["LIMIT", 1]]
Completed 404 Not Found in 21ms (ActiveRecord: 0.7ms)


  
ActiveRecord::RecordNotFound (Couldn't find Answer with 'id'=0):
  
app/controllers/api/v1/answers_controller.rb:26:in `show'
Started GET "/api/v1/random" for ::1 at 2016-06-19 16:13:53 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (1.0ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.8ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 13]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (366.47ms)
Completed 200 OK in 426ms (Views: 378.1ms | ActiveRecord: 1.8ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-19 16:13:55 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"edcedc", "vote-count"=>nil, "vote-score"=>nil}, "question"=>{"data"=>{"id"=>"13", "attributes"=>{"content"=>"Where would you like to be in your career five years from now?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: vote-count, vote-score
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.9ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 13], ["LIMIT", 1]]
  [1m[35m (0.6ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.8ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "edcedc"], ["question_id", 13], ["created_at", 2016-06-19 20:13:55 UTC], ["updated_at", 2016-06-19 20:13:55 UTC]]
  [1m[35m (2.9ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mAnswer Load (0.9ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."question_id" = $1 ORDER BY "answers"."id" DESC LIMIT $2[0m  [["question_id", 13], ["LIMIT", 1]]
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (30.86ms)
Completed 200 OK in 215ms (Views: 38.3ms | ActiveRecord: 6.2ms)


Started GET "/api/v1/answers/1" for ::1 at 2016-06-19 16:13:57 -0400
Processing by Api::V1::AnswersController#show as JSON
  Parameters: {"id"=>"1"}
  [1m[36mAnswer Load (0.8ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (62.22ms)
Completed 200 OK in 89ms (Views: 69.0ms | ActiveRecord: 1.5ms)


Started PATCH "/api/v1/answers/1" for ::1 at 2016-06-19 16:13:57 -0400
Processing by Api::V1::AnswersController#update as JSON
  Parameters: {"data"=>{"id"=>"1", "attributes"=>{"content"=>"<p>Three, and more than you'd expect!</p>\n\n  <p>You could center a div horizontally, vertically, or both and there are\n  a ton of ways to do them each. It also depends on what you're trying to\n  center. The most common way I do it is using the margins. If you set\n    a div's margin to 0 auto, to will automatically get the width of the\n    client's screen and use that information to center the div.</p>\n\n  <p>If I had text within a div, I wold use the text-align: center css\n  attribute on the div.</p>", "vote-count"=>22, "vote-score"=>15}, "question"=>{"data"=>{"id"=>"2", "attributes"=>{"content"=>nil}, "type"=>"questions"}}, "type"=>"answers"}, "id"=>"1", "answer"=>{}}
  [1m[36mAnswer Load (0.7ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  [1m[35m (0.6ms)[0m  [1m[35mBEGIN[0m
  [1m[36mQuestion Load (1.0ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
  [1m[35mSQL (0.9ms)[0m  [1m[33mUPDATE "answers" SET "vote_count" = $1, "updated_at" = $2 WHERE "answers"."id" = $3[0m  [["vote_count", 22], ["updated_at", 2016-06-19 20:13:57 UTC], ["id", 1]]
  [1m[35m (1.2ms)[0m  [1m[35mCOMMIT[0m
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (35.0ms)
Completed 200 OK in 164ms (Views: 46.3ms | ActiveRecord: 4.4ms)


Started GET "/api/v1/random" for ::1 at 2016-06-19 16:14:47 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.7ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 21]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (191.04ms)
Completed 200 OK in 254ms (Views: 207.5ms | ActiveRecord: 1.5ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-19 16:14:49 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"ecedc", "vote-count"=>nil, "vote-score"=>nil}, "question"=>{"data"=>{"id"=>"21", "attributes"=>{"content"=>"What is the difference between classical inheritance and prototypal inheritance? "}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: vote-count, vote-score
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 21], ["LIMIT", 1]]
  [1m[35m (0.6ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.9ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "ecedc"], ["question_id", 21], ["created_at", 2016-06-19 20:14:50 UTC], ["updated_at", 2016-06-19 20:14:50 UTC]]
  [1m[35m (54.5ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mAnswer Load (0.9ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."question_id" = $1 ORDER BY "answers"."id" DESC LIMIT $2[0m  [["question_id", 21], ["LIMIT", 1]]
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (26.98ms)
Completed 200 OK in 321ms (Views: 40.1ms | ActiveRecord: 57.5ms)


Started GET "/api/v1/answers/1" for ::1 at 2016-06-19 16:14:52 -0400
Processing by Api::V1::AnswersController#show as JSON
  Parameters: {"id"=>"1"}
  [1m[36mAnswer Load (0.7ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mQuestion Load (1.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (52.69ms)
Completed 200 OK in 78ms (Views: 62.6ms | ActiveRecord: 1.9ms)


Started PATCH "/api/v1/answers/1" for ::1 at 2016-06-19 16:16:06 -0400
Processing by Api::V1::AnswersController#update as JSON
  Parameters: {"data"=>{"id"=>"1", "attributes"=>{"content"=>"<p>Three, and more than you'd expect!</p>\n\n  <p>You could center a div horizontally, vertically, or both and there are\n  a ton of ways to do them each. It also depends on what you're trying to\n  center. The most common way I do it is using the margins. If you set\n    a div's margin to 0 auto, to will automatically get the width of the\n    client's screen and use that information to center the div.</p>\n\n  <p>If I had text within a div, I wold use the text-align: center css\n  attribute on the div.</p>", "vote-count"=>23, "vote-score"=>15}, "question"=>{"data"=>{"id"=>"2", "attributes"=>{"content"=>nil}, "type"=>"questions"}}, "type"=>"answers"}, "id"=>"1", "answer"=>{}}
  [1m[36mAnswer Load (0.9ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  [1m[35m (0.5ms)[0m  [1m[35mBEGIN[0m
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
  [1m[35mSQL (1.0ms)[0m  [1m[33mUPDATE "answers" SET "vote_count" = $1, "updated_at" = $2 WHERE "answers"."id" = $3[0m  [["vote_count", 23], ["updated_at", 2016-06-19 20:16:06 UTC], ["id", 1]]
  [1m[35m (43.8ms)[0m  [1m[35mCOMMIT[0m
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (41.13ms)
Completed 200 OK in 215ms (Views: 53.1ms | ActiveRecord: 47.0ms)


Started GET "/api/v1/random" for ::1 at 2016-06-19 16:16:08 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.7ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 11]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (225.09ms)
Completed 200 OK in 277ms (Views: 232.2ms | ActiveRecord: 1.5ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-19 16:16:10 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"edceddc", "vote-count"=>nil, "vote-score"=>nil}, "question"=>{"data"=>{"id"=>"11", "attributes"=>{"content"=>"Describe a time when you were able to improve upon the design that was originally suggested?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: vote-count, vote-score
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 11], ["LIMIT", 1]]
  [1m[35m (0.6ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.9ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "edceddc"], ["question_id", 11], ["created_at", 2016-06-19 20:16:10 UTC], ["updated_at", 2016-06-19 20:16:10 UTC]]
  [1m[35m (2.7ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mAnswer Load (0.9ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."question_id" = $1 ORDER BY "answers"."id" DESC LIMIT $2[0m  [["question_id", 11], ["LIMIT", 1]]
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (27.24ms)
Completed 200 OK in 191ms (Views: 39.4ms | ActiveRecord: 5.7ms)


Started GET "/api/v1/random" for ::1 at 2016-06-19 16:17:22 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.9ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.8ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 27]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (111.95ms)
Completed 200 OK in 169ms (Views: 119.8ms | ActiveRecord: 1.7ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-19 16:17:24 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"answer-id"=>nil, "content"=>"edcedc", "vote-count"=>nil, "vote-score"=>nil}, "question"=>{"data"=>{"id"=>"27", "attributes"=>{"content"=>"How would you declare and use a constructor in Ruby?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: answer-id, vote-count, vote-score
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 27], ["LIMIT", 1]]
  [1m[35m (0.6ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.9ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "edcedc"], ["question_id", 27], ["created_at", 2016-06-19 20:17:24 UTC], ["updated_at", 2016-06-19 20:17:24 UTC]]
  [1m[35m (58.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mAnswer Load (0.9ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."question_id" = $1 ORDER BY "answers"."id" DESC LIMIT $2[0m  [["question_id", 27], ["LIMIT", 1]]
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (28.47ms)
Completed 200 OK in 272ms (Views: 39.4ms | ActiveRecord: 61.5ms)


Started GET "/api/v1/answers/1" for ::1 at 2016-06-19 16:17:26 -0400
Processing by Api::V1::AnswersController#show as JSON
  Parameters: {"id"=>"1"}
  [1m[36mAnswer Load (0.9ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (52.57ms)
Completed 200 OK in 78ms (Views: 58.9ms | ActiveRecord: 1.6ms)


Started PATCH "/api/v1/answers/1" for ::1 at 2016-06-19 16:18:10 -0400
Processing by Api::V1::AnswersController#update as JSON
  Parameters: {"data"=>{"id"=>"1", "attributes"=>{"answer-id"=>nil, "content"=>"<p>Three, and more than you'd expect!</p>\n\n  <p>You could center a div horizontally, vertically, or both and there are\n  a ton of ways to do them each. It also depends on what you're trying to\n  center. The most common way I do it is using the margins. If you set\n    a div's margin to 0 auto, to will automatically get the width of the\n    client's screen and use that information to center the div.</p>\n\n  <p>If I had text within a div, I wold use the text-align: center css\n  attribute on the div.</p>", "vote-count"=>24, "vote-score"=>15}, "question"=>{"data"=>{"id"=>"2", "attributes"=>{"content"=>nil}, "type"=>"questions"}}, "type"=>"answers"}, "id"=>"1", "answer"=>{}}
  [1m[36mAnswer Load (1.5ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  [1m[35m (0.5ms)[0m  [1m[35mBEGIN[0m
  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
  [1m[35mSQL (1.0ms)[0m  [1m[33mUPDATE "answers" SET "vote_count" = $1, "updated_at" = $2 WHERE "answers"."id" = $3[0m  [["vote_count", 24], ["updated_at", 2016-06-19 20:18:10 UTC], ["id", 1]]
  [1m[35m (405.6ms)[0m  [1m[35mCOMMIT[0m
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (25.53ms)
Completed 200 OK in 558ms (Views: 34.6ms | ActiveRecord: 409.3ms)


Started GET "/api/v1/random" for ::1 at 2016-06-19 16:18:23 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.7ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 1]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (165.85ms)
Completed 200 OK in 219ms (Views: 172.9ms | ActiveRecord: 1.6ms)


Started GET "/api/v1/random" for ::1 at 2016-06-19 16:21:10 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (4.5ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.7ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 1]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (162.16ms)
Completed 200 OK in 237ms (Views: 169.5ms | ActiveRecord: 5.3ms)


Started GET "/api/v1/random" for ::1 at 2016-06-19 16:21:28 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.9ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.7ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 18]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (193.79ms)
Completed 200 OK in 249ms (Views: 204.4ms | ActiveRecord: 1.6ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-19 16:21:31 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"answer-id"=>nil, "content"=>"xss", "vote-count"=>nil, "vote-score"=>nil}, "question"=>{"data"=>{"id"=>"18", "attributes"=>{"content"=>"What are your short-term goals."}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: answer-id, vote-count, vote-score
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (1.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 18], ["LIMIT", 1]]
  [1m[35m (0.5ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.8ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "xss"], ["question_id", 18], ["created_at", 2016-06-19 20:21:31 UTC], ["updated_at", 2016-06-19 20:21:31 UTC]]
  [1m[35m (95.4ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mAnswer Load (0.9ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."question_id" = $1 ORDER BY "answers"."id" DESC LIMIT $2[0m  [["question_id", 18], ["LIMIT", 1]]
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (23.76ms)
Completed 200 OK in 287ms (Views: 36.2ms | ActiveRecord: 98.9ms)


Started GET "/api/v1/answers/1" for ::1 at 2016-06-19 16:21:33 -0400
Processing by Api::V1::AnswersController#show as JSON
  Parameters: {"id"=>"1"}
  [1m[36mAnswer Load (1.3ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (52.95ms)
Completed 200 OK in 83ms (Views: 59.5ms | ActiveRecord: 2.0ms)


Started PATCH "/api/v1/answers/1" for ::1 at 2016-06-19 16:22:09 -0400
Processing by Api::V1::AnswersController#update as JSON
  Parameters: {"data"=>{"id"=>"1", "attributes"=>{"answer-id"=>nil, "content"=>"<p>Three, and more than you'd expect!</p>\n\n  <p>You could center a div horizontally, vertically, or both and there are\n  a ton of ways to do them each. It also depends on what you're trying to\n  center. The most common way I do it is using the margins. If you set\n    a div's margin to 0 auto, to will automatically get the width of the\n    client's screen and use that information to center the div.</p>\n\n  <p>If I had text within a div, I wold use the text-align: center css\n  attribute on the div.</p>", "vote-count"=>25, "vote-score"=>15}, "question"=>{"data"=>{"id"=>"2", "attributes"=>{"content"=>nil}, "type"=>"questions"}}, "type"=>"answers"}, "id"=>"1", "answer"=>{}}
  [1m[36mAnswer Load (0.9ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  [1m[35m (0.6ms)[0m  [1m[35mBEGIN[0m
  [1m[36mQuestion Load (1.1ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
  [1m[35mSQL (0.9ms)[0m  [1m[33mUPDATE "answers" SET "vote_count" = $1, "updated_at" = $2 WHERE "answers"."id" = $3[0m  [["vote_count", 25], ["updated_at", 2016-06-19 20:22:09 UTC], ["id", 1]]
  [1m[35m (15.8ms)[0m  [1m[35mCOMMIT[0m
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (25.64ms)
Completed 200 OK in 183ms (Views: 37.4ms | ActiveRecord: 19.3ms)


Started GET "/api/v1/random" for ::1 at 2016-06-19 16:22:11 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.6ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 20]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (197.04ms)
Completed 200 OK in 254ms (Views: 208.2ms | ActiveRecord: 1.4ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-19 16:22:13 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"answer-id"=>nil, "content"=>"edcdec", "vote-count"=>nil, "vote-score"=>nil}, "question"=>{"data"=>{"id"=>"20", "attributes"=>{"content"=>"Please walk me through one of the projects on your resume."}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: answer-id, vote-count, vote-score
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 20], ["LIMIT", 1]]
  [1m[35m (0.9ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.9ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "edcdec"], ["question_id", 20], ["created_at", 2016-06-19 20:22:13 UTC], ["updated_at", 2016-06-19 20:22:13 UTC]]
  [1m[35m (2.7ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mAnswer Load (0.9ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."question_id" = $1 ORDER BY "answers"."id" DESC LIMIT $2[0m  [["question_id", 20], ["LIMIT", 1]]
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (23.41ms)
Completed 200 OK in 187ms (Views: 30.3ms | ActiveRecord: 6.0ms)


Started GET "/api/v1/random" for ::1 at 2016-06-19 16:22:48 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.8ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 13]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (357.01ms)
Completed 200 OK in 410ms (Views: 364.3ms | ActiveRecord: 1.6ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-19 16:22:50 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"answer-id"=>nil, "content"=>"swfwdf", "vote-count"=>nil, "vote-score"=>nil}, "question"=>{"data"=>{"id"=>"13", "attributes"=>{"content"=>"Where would you like to be in your career five years from now?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: answer-id, vote-count, vote-score
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 13], ["LIMIT", 1]]
  [1m[35m (0.6ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (7.9ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "swfwdf"], ["question_id", 13], ["created_at", 2016-06-19 20:22:50 UTC], ["updated_at", 2016-06-19 20:22:50 UTC]]
  [1m[35m (48.1ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mAnswer Load (0.8ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."question_id" = $1 ORDER BY "answers"."id" DESC LIMIT $2[0m  [["question_id", 13], ["LIMIT", 1]]
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (24.54ms)
Completed 200 OK in 240ms (Views: 35.2ms | ActiveRecord: 58.1ms)


Started GET "/api/v1/answers/14" for ::1 at 2016-06-19 16:22:51 -0400
Processing by Api::V1::AnswersController#show as JSON
  Parameters: {"id"=>"14"}
  [1m[36mAnswer Load (1.2ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."id" = $1 LIMIT $2[0m  [["id", 14], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 13], ["LIMIT", 1]]
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (51.46ms)
Completed 200 OK in 76ms (Views: 58.7ms | ActiveRecord: 1.8ms)


Started PATCH "/api/v1/answers/14" for ::1 at 2016-06-19 16:23:07 -0400
Processing by Api::V1::AnswersController#update as JSON
  Parameters: {"data"=>{"id"=>"14", "attributes"=>{"answer-id"=>nil, "content"=>"asDSAd", "vote-count"=>1, "vote-score"=>0}, "question"=>{"data"=>{"id"=>"13", "attributes"=>{"content"=>"Where would you like to be in your career five years from now?"}, "type"=>"questions"}}, "type"=>"answers"}, "id"=>"14", "answer"=>{}}
  [1m[36mAnswer Load (0.7ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."id" = $1 LIMIT $2[0m  [["id", 14], ["LIMIT", 1]]
  [1m[35m (0.6ms)[0m  [1m[35mBEGIN[0m
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 13], ["LIMIT", 1]]
  [1m[35mSQL (0.8ms)[0m  [1m[33mUPDATE "answers" SET "vote_count" = $1, "updated_at" = $2 WHERE "answers"."id" = $3[0m  [["vote_count", 1], ["updated_at", 2016-06-19 20:23:07 UTC], ["id", 14]]
  [1m[35m (106.8ms)[0m  [1m[35mCOMMIT[0m
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (29.34ms)
Completed 200 OK in 261ms (Views: 42.2ms | ActiveRecord: 109.7ms)


Started GET "/api/v1/random" for ::1 at 2016-06-19 16:23:46 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.8ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 10]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (165.53ms)
Completed 200 OK in 221ms (Views: 176.7ms | ActiveRecord: 1.6ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-19 16:23:48 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"answer-id"=>nil, "content"=>"dcdc", "vote-count"=>nil, "vote-score"=>nil}, "question"=>{"data"=>{"id"=>"10", "attributes"=>{"content"=>"How did you learn web development?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: answer-id, vote-count, vote-score
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 10], ["LIMIT", 1]]
  [1m[35m (0.5ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.8ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "dcdc"], ["question_id", 10], ["created_at", 2016-06-19 20:23:49 UTC], ["updated_at", 2016-06-19 20:23:49 UTC]]
  [1m[35m (1.4ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mAnswer Load (0.9ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."question_id" = $1 ORDER BY "answers"."id" DESC LIMIT $2[0m  [["question_id", 10], ["LIMIT", 1]]
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (23.93ms)
Completed 200 OK in 183ms (Views: 31.2ms | ActiveRecord: 4.4ms)


Started GET "/api/v1/answers/66" for ::1 at 2016-06-19 16:23:50 -0400
Processing by Api::V1::AnswersController#show as JSON
  Parameters: {"id"=>"66"}
  [1m[36mAnswer Load (0.7ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."id" = $1 LIMIT $2[0m  [["id", 66], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 10], ["LIMIT", 1]]
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (55.39ms)
Completed 200 OK in 83ms (Views: 62.8ms | ActiveRecord: 1.4ms)


Started PATCH "/api/v1/answers/66" for ::1 at 2016-06-19 16:23:51 -0400
Processing by Api::V1::AnswersController#update as JSON
  Parameters: {"data"=>{"id"=>"66", "attributes"=>{"answer-id"=>nil, "content"=>"asdfasdfsa", "vote-count"=>1, "vote-score"=>0}, "question"=>{"data"=>{"id"=>"10", "attributes"=>{"content"=>"How did you learn web development?"}, "type"=>"questions"}}, "type"=>"answers"}, "id"=>"66", "answer"=>{}}
  [1m[36mAnswer Load (0.6ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."id" = $1 LIMIT $2[0m  [["id", 66], ["LIMIT", 1]]
  [1m[35m (0.5ms)[0m  [1m[35mBEGIN[0m
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 10], ["LIMIT", 1]]
  [1m[35mSQL (0.9ms)[0m  [1m[33mUPDATE "answers" SET "vote_count" = $1, "updated_at" = $2 WHERE "answers"."id" = $3[0m  [["vote_count", 1], ["updated_at", 2016-06-19 20:23:51 UTC], ["id", 66]]
  [1m[35m (2.8ms)[0m  [1m[35mCOMMIT[0m
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (30.1ms)
Completed 200 OK in 146ms (Views: 37.3ms | ActiveRecord: 5.5ms)


Started PATCH "/api/v1/answers/66" for ::1 at 2016-06-19 16:23:52 -0400
Processing by Api::V1::AnswersController#update as JSON
  Parameters: {"data"=>{"id"=>"66", "attributes"=>{"answer-id"=>nil, "content"=>"asdfasdfsa", "vote-count"=>2, "vote-score"=>0}, "question"=>{"data"=>{"id"=>"10", "attributes"=>{"content"=>"How did you learn web development?"}, "type"=>"questions"}}, "type"=>"answers"}, "id"=>"66", "answer"=>{}}
Started GET "/api/v1/answers/66" for ::1 at 2016-06-19 16:23:52 -0400
Processing by Api::V1::AnswersController#show as JSON
  Parameters: {"id"=>"66"}
  [1m[36mAnswer Load (37.2ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."id" = $1 LIMIT $2[0m  [["id", 66], ["LIMIT", 1]]
  [1m[36mAnswer Load (4.5ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."id" = $1 LIMIT $2[0m  [["id", 66], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mQuestion Load (10.9ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 10], ["LIMIT", 1]]
  [1m[35m (2.2ms)[0m  [1m[35mBEGIN[0m
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (60.73ms)
Completed 200 OK in 121ms (Views: 86.1ms | ActiveRecord: 15.4ms)


  [1m[36mQuestion Load (18.1ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 10], ["LIMIT", 1]]
  [1m[35mSQL (9.0ms)[0m  [1m[33mUPDATE "answers" SET "vote_count" = $1, "updated_at" = $2 WHERE "answers"."id" = $3[0m  [["vote_count", 2], ["updated_at", 2016-06-19 20:23:52 UTC], ["id", 66]]
  [1m[35m (1.3ms)[0m  [1m[35mCOMMIT[0m
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (23.43ms)
Completed 200 OK in 260ms (Views: 36.2ms | ActiveRecord: 67.9ms)


Started GET "/api/v1/random" for ::1 at 2016-06-19 16:25:01 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (1.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.7ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 30]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (373.14ms)
Completed 200 OK in 532ms (Views: 416.8ms | ActiveRecord: 15.0ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-19 16:25:05 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"answer-id"=>nil, "content"=>"edcde", "vote-count"=>nil, "vote-score"=>nil}, "question"=>{"data"=>{"id"=>"30", "attributes"=>{"content"=>"How would you describe your work style?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: answer-id, vote-count, vote-score
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (4.5ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 30], ["LIMIT", 1]]
  [1m[35m (0.5ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.9ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "edcde"], ["question_id", 30], ["created_at", 2016-06-19 20:25:05 UTC], ["updated_at", 2016-06-19 20:25:05 UTC]]
  [1m[35m (156.2ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mAnswer Load (0.9ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."question_id" = $1 ORDER BY "answers"."id" DESC LIMIT $2[0m  [["question_id", 30], ["LIMIT", 1]]
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (25.36ms)
Completed 200 OK in 370ms (Views: 33.2ms | ActiveRecord: 162.9ms)


Started GET "/api/v1/answers/11" for ::1 at 2016-06-19 16:25:07 -0400
Processing by Api::V1::AnswersController#show as JSON
  Parameters: {"id"=>"11"}
  [1m[36mAnswer Load (0.7ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."id" = $1 LIMIT $2[0m  [["id", 11], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 30], ["LIMIT", 1]]
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (77.02ms)
Completed 200 OK in 110ms (Views: 83.6ms | ActiveRecord: 1.3ms)


Started PATCH "/api/v1/answers/11" for ::1 at 2016-06-19 16:25:07 -0400
Processing by Api::V1::AnswersController#update as JSON
  Parameters: {"data"=>{"id"=>"11", "attributes"=>{"answer-id"=>nil, "content"=>"SADFDSAFDAS", "vote-count"=>1, "vote-score"=>0}, "question"=>{"data"=>{"id"=>"30", "attributes"=>{"content"=>"How would you describe your work style?"}, "type"=>"questions"}}, "type"=>"answers"}, "id"=>"11", "answer"=>{}}
  [1m[36mAnswer Load (0.8ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."id" = $1 LIMIT $2[0m  [["id", 11], ["LIMIT", 1]]
  [1m[35m (1.0ms)[0m  [1m[35mBEGIN[0m
  [1m[36mQuestion Load (0.5ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 30], ["LIMIT", 1]]
  [1m[35mSQL (0.5ms)[0m  [1m[33mUPDATE "answers" SET "vote_count" = $1, "updated_at" = $2 WHERE "answers"."id" = $3[0m  [["vote_count", 1], ["updated_at", 2016-06-19 20:26:40 UTC], ["id", 11]]
  [1m[35m (1.1ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mAnswer Load (1.1ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."id" = $1 LIMIT $2[0m  [["id", 11], ["LIMIT", 1]]
Started GET "/api/v1/random" for ::1 at 2016-06-19 16:28:28 -0400
Completed 500 Internal Server Error in 200476ms (ActiveRecord: 5.0ms)


Started GET "/api/v1/random" for ::1 at 2016-06-19 16:28:28 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
SystemExit (exit):
  Parameters: {"question"=>{}}
  
  [1m[36mQuestion Load (1.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
app/controllers/api/v1/answers_controller.rb:21:in `update'
  [1m[36mQuestion Load (196.1ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (289.9ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 1]]
[active_model_serializers]   [1m[36mAnswer Load (113.4ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 13]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (688.03ms)
Completed 200 OK in 758ms (Views: 405.8ms | ActiveRecord: 291.7ms)


[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (1024.01ms)
Completed 200 OK in 1380ms (Views: 923.7ms | ActiveRecord: 309.4ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-19 16:28:31 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"answer-id"=>nil, "content"=>"cedced", "vote-count"=>nil, "vote-score"=>nil}, "question"=>{"data"=>{"id"=>"1", "attributes"=>{"content"=>"What are you looking for in terms of career development?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: answer-id, vote-count, vote-score
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.9ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  [1m[35m (0.6ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.8ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "cedced"], ["question_id", 1], ["created_at", 2016-06-19 20:28:33 UTC], ["updated_at", 2016-06-19 20:28:33 UTC]]
  [1m[35m (66.7ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mAnswer Load (0.7ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."question_id" = $1 ORDER BY "answers"."id" DESC LIMIT $2[0m  [["question_id", 1], ["LIMIT", 1]]
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (84.44ms)
Completed 200 OK in 515ms (Views: 100.0ms | ActiveRecord: 69.7ms)


Started GET "/api/v1/answers/122" for ::1 at 2016-06-19 16:28:34 -0400
Processing by Api::V1::AnswersController#show as JSON
  Parameters: {"id"=>"122"}
  [1m[36mAnswer Load (0.6ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."id" = $1 LIMIT $2[0m  [["id", 122], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mQuestion Load (1.6ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (76.88ms)
Completed 200 OK in 120ms (Views: 92.0ms | ActiveRecord: 2.2ms)


Started PATCH "/api/v1/answers/122" for ::1 at 2016-06-19 16:28:34 -0400
Processing by Api::V1::AnswersController#update as JSON
  Parameters: {"data"=>{"id"=>"122", "attributes"=>{"answer-id"=>nil, "content"=>"asdfadsfd", "vote-count"=>99, "vote-score"=>0}, "question"=>{"data"=>{"id"=>"1", "attributes"=>{"content"=>"What are you looking for in terms of career development?"}, "type"=>"questions"}}, "type"=>"answers"}, "id"=>"122", "answer"=>{}}
  [1m[36mAnswer Load (0.8ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."id" = $1 LIMIT $2[0m  [["id", 122], ["LIMIT", 1]]
  [1m[35m (0.6ms)[0m  [1m[35mBEGIN[0m
  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  [1m[35mSQL (1.0ms)[0m  [1m[33mUPDATE "answers" SET "vote_count" = $1, "updated_at" = $2 WHERE "answers"."id" = $3[0m  [["vote_count", 99], ["updated_at", 2016-06-19 20:28:34 UTC], ["id", 122]]
  [1m[35m (1.8ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 111ms (ActiveRecord: 4.9ms)


Started GET "/api/v1/answers/123" for ::1 at 2016-06-19 16:28:39 -0400
Processing by Api::V1::AnswersController#show as JSON
  Parameters: {"id"=>"123"}
  [1m[36mAnswer Load (0.8ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."id" = $1 LIMIT $2[0m  [["id", 123], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (64.22ms)
Completed 200 OK in 92ms (Views: 71.2ms | ActiveRecord: 1.5ms)


Started PATCH "/api/v1/answers/123" for ::1 at 2016-06-19 16:28:39 -0400
Processing by Api::V1::AnswersController#update as JSON
  Parameters: {"data"=>{"id"=>"123", "attributes"=>{"answer-id"=>nil, "content"=>"dasgasddsg", "vote-count"=>99, "vote-score"=>0}, "question"=>{"data"=>{"id"=>"1", "attributes"=>{"content"=>"What are you looking for in terms of career development?"}, "type"=>"questions"}}, "type"=>"answers"}, "id"=>"123", "answer"=>{}}
  [1m[36mAnswer Load (0.7ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."id" = $1 LIMIT $2[0m  [["id", 123], ["LIMIT", 1]]
  [1m[35m (0.5ms)[0m  [1m[35mBEGIN[0m
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  [1m[35mSQL (1.2ms)[0m  [1m[33mUPDATE "answers" SET "vote_count" = $1, "updated_at" = $2 WHERE "answers"."id" = $3[0m  [["vote_count", 99], ["updated_at", 2016-06-19 20:28:39 UTC], ["id", 123]]
  [1m[35m (1.8ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 109ms (ActiveRecord: 4.7ms)


Started PATCH "/api/v1/answers/122" for ::1 at 2016-06-19 16:28:43 -0400
Processing by Api::V1::AnswersController#update as JSON
  Parameters: {"data"=>{"id"=>"122", "attributes"=>{"answer-id"=>nil, "content"=>"asdfadsfd", "vote-count"=>99, "vote-score"=>0}, "question"=>{"data"=>{"id"=>"1", "attributes"=>{"content"=>"What are you looking for in terms of career development?"}, "type"=>"questions"}}, "type"=>"answers"}, "id"=>"122", "answer"=>{}}
Started GET "/api/v1/answers/122" for ::1 at 2016-06-19 16:28:43 -0400
Processing by Api::V1::AnswersController#show as JSON
  Parameters: {"id"=>"122"}
  [1m[36mAnswer Load (32.9ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."id" = $1 LIMIT $2[0m  [["id", 122], ["LIMIT", 1]]
  [1m[36mAnswer Load (12.0ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."id" = $1 LIMIT $2[0m  [["id", 122], ["LIMIT", 1]]
  [1m[35m (7.2ms)[0m  [1m[35mBEGIN[0m
[active_model_serializers]   [1m[36mQuestion Load (24.9ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  [1m[36mQuestion Load (7.7ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (92.02ms)
Completed 200 OK in 173ms (Views: 108.0ms | ActiveRecord: 36.8ms)


  [1m[35m (16.6ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 220ms (ActiveRecord: 64.4ms)


Started GET "/api/v1/random" for ::1 at 2016-06-19 16:29:53 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (3.1ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.8ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 3]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (219.98ms)
Completed 200 OK in 305ms (Views: 228.7ms | ActiveRecord: 3.9ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-19 16:29:56 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"answer-id"=>nil, "content"=>"exedx", "vote-count"=>nil, "vote-score"=>nil}, "question"=>{"data"=>{"id"=>"3", "attributes"=>{"content"=>"What are your strengths and weaknesses?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: answer-id, vote-count, vote-score
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 3], ["LIMIT", 1]]
  [1m[35m (0.5ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.8ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "exedx"], ["question_id", 3], ["created_at", 2016-06-19 20:29:56 UTC], ["updated_at", 2016-06-19 20:29:56 UTC]]
  [1m[35m (50.5ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mAnswer Load (0.8ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."question_id" = $1 ORDER BY "answers"."id" DESC LIMIT $2[0m  [["question_id", 3], ["LIMIT", 1]]
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (29.55ms)
Completed 200 OK in 253ms (Views: 37.3ms | ActiveRecord: 53.4ms)


Started GET "/api/v1/answers/23" for ::1 at 2016-06-19 16:29:59 -0400
Processing by Api::V1::AnswersController#show as JSON
  Parameters: {"id"=>"23"}
  [1m[36mAnswer Load (0.6ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."id" = $1 LIMIT $2[0m  [["id", 23], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 3], ["LIMIT", 1]]
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (58.98ms)
Completed 200 OK in 86ms (Views: 65.7ms | ActiveRecord: 1.2ms)


Started PATCH "/api/v1/answers/23" for ::1 at 2016-06-19 16:31:11 -0400
Processing by Api::V1::AnswersController#update as JSON
  Parameters: {"data"=>{"id"=>"23", "attributes"=>{"answer-id"=>nil, "content"=>"DFDSG", "vote-count"=>99, "vote-score"=>0}, "question"=>{"data"=>{"id"=>"3", "attributes"=>{"content"=>"What are your strengths and weaknesses?"}, "type"=>"questions"}}, "type"=>"answers"}, "id"=>"23", "answer"=>{}}
  [1m[36mAnswer Load (0.7ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."id" = $1 LIMIT $2[0m  [["id", 23], ["LIMIT", 1]]
  [1m[35m (0.6ms)[0m  [1m[35mBEGIN[0m
  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 3], ["LIMIT", 1]]
  [1m[35mSQL (0.9ms)[0m  [1m[33mUPDATE "answers" SET "vote_count" = $1, "updated_at" = $2 WHERE "answers"."id" = $3[0m  [["vote_count", 99], ["updated_at", 2016-06-19 20:31:11 UTC], ["id", 23]]
  [1m[35m (151.5ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 275ms (ActiveRecord: 154.4ms)


Started GET "/api/v1/random" for ::1 at 2016-06-19 16:31:13 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.9ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.9ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 4]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (211.17ms)
Completed 200 OK in 270ms (Views: 222.5ms | ActiveRecord: 1.8ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-19 16:31:16 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"answer-id"=>nil, "content"=>"2", "vote-count"=>nil, "vote-score"=>nil}, "question"=>{"data"=>{"id"=>"4", "attributes"=>{"content"=>"Explain the process of web development to a middle school kid."}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: answer-id, vote-count, vote-score
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (1.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 4], ["LIMIT", 1]]
  [1m[35m (0.6ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.8ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "2"], ["question_id", 4], ["created_at", 2016-06-19 20:31:16 UTC], ["updated_at", 2016-06-19 20:31:16 UTC]]
  [1m[35m (1.8ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mAnswer Load (0.8ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."question_id" = $1 ORDER BY "answers"."id" DESC LIMIT $2[0m  [["question_id", 4], ["LIMIT", 1]]
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (33.76ms)
Completed 200 OK in 292ms (Views: 41.1ms | ActiveRecord: 5.3ms)


Started GET "/api/v1/answers/3" for ::1 at 2016-06-19 16:31:21 -0400
Processing by Api::V1::AnswersController#show as JSON
  Parameters: {"id"=>"3"}
  [1m[36mAnswer Load (0.7ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."id" = $1 LIMIT $2[0m  [["id", 3], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mQuestion Load (0.9ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 4], ["LIMIT", 1]]
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (58.7ms)
Completed 200 OK in 87ms (Views: 64.8ms | ActiveRecord: 1.7ms)


Started PATCH "/api/v1/answers/3" for ::1 at 2016-06-19 16:31:24 -0400
Processing by Api::V1::AnswersController#update as JSON
  Parameters: {"data"=>{"id"=>"3", "attributes"=>{"answer-id"=>nil, "content"=>"<p>You know when you write notes and pass them to Suzie from\n  down the street? That's kind of what I do. Websites are like notes\n  you want your friends to read. For them to read your notes, you\n  need to also give them the note right? Well that is what the Internet\n  does for you. It sends the websites to the people who want to read\n  them.</p>\n\n  <p>The best part is, you know how you don't want Ms. Robinson to see\n  you pass that note? It's like that with the Internet too. There's\n  ways of keeping the visits to your website secret!</p>", "vote-count"=>99, "vote-score"=>2}, "question"=>{"data"=>{"id"=>"4", "attributes"=>{"content"=>"Explain the process of web development to a middle school kid."}, "type"=>"questions"}}, "type"=>"answers"}, "id"=>"3", "answer"=>{}}
  [1m[36mAnswer Load (0.7ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."id" = $1 LIMIT $2[0m  [["id", 3], ["LIMIT", 1]]
  [1m[35m (0.5ms)[0m  [1m[35mBEGIN[0m
  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 4], ["LIMIT", 1]]
  [1m[35mSQL (0.9ms)[0m  [1m[33mUPDATE "answers" SET "vote_count" = $1, "updated_at" = $2 WHERE "answers"."id" = $3[0m  [["vote_count", 99], ["updated_at", 2016-06-19 20:31:24 UTC], ["id", 3]]
  [1m[35m (23.1ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 138ms (ActiveRecord: 25.8ms)


Started PATCH "/api/v1/answers/3" for ::1 at 2016-06-19 16:31:30 -0400
Processing by Api::V1::AnswersController#update as JSON
  Parameters: {"data"=>{"id"=>"3", "attributes"=>{"answer-id"=>nil, "content"=>"<p>You know when you write notes and pass them to Suzie from\n  down the street? That's kind of what I do. Websites are like notes\n  you want your friends to read. For them to read your notes, you\n  need to also give them the note right? Well that is what the Internet\n  does for you. It sends the websites to the people who want to read\n  them.</p>\n\n  <p>The best part is, you know how you don't want Ms. Robinson to see\n  you pass that note? It's like that with the Internet too. There's\n  ways of keeping the visits to your website secret!</p>", "vote-count"=>99, "vote-score"=>2}, "question"=>{"data"=>{"id"=>"4", "attributes"=>{"content"=>"Explain the process of web development to a middle school kid."}, "type"=>"questions"}}, "type"=>"answers"}, "id"=>"3", "answer"=>{}}
Started GET "/api/v1/answers/3" for ::1 at 2016-06-19 16:31:30 -0400
Processing by Api::V1::AnswersController#show as JSON
  Parameters: {"id"=>"3"}
  [1m[36mAnswer Load (24.1ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."id" = $1 LIMIT $2[0m  [["id", 3], ["LIMIT", 1]]
  [1m[36mAnswer Load (13.6ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."id" = $1 LIMIT $2[0m  [["id", 3], ["LIMIT", 1]]
  [1m[35m (2.2ms)[0m  [1m[35mBEGIN[0m
[active_model_serializers]   [1m[36mQuestion Load (24.6ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 4], ["LIMIT", 1]]
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (78.54ms)
Completed 200 OK in 126ms (Views: 61.8ms | ActiveRecord: 38.2ms)


  [1m[36mQuestion Load (31.9ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 4], ["LIMIT", 1]]
  [1m[35m (5.0ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 212ms (ActiveRecord: 63.2ms)


Started GET "/api/v1/random" for ::1 at 2016-06-19 16:31:38 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.9ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.6ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 15]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (177.6ms)
Completed 200 OK in 241ms (Views: 189.7ms | ActiveRecord: 1.6ms)


Started GET "/api/v1/random" for ::1 at 2016-06-19 16:31:40 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.9ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.7ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 6]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (153.93ms)
Completed 200 OK in 213ms (Views: 161.5ms | ActiveRecord: 1.6ms)


Started GET "/api/v1/random" for ::1 at 2016-06-19 16:31:41 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (4.9ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.6ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 1]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (216.21ms)
Completed 200 OK in 279ms (Views: 223.4ms | ActiveRecord: 5.6ms)


Started GET "/api/v1/random" for ::1 at 2016-06-19 16:31:41 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.6ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 10]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (213.31ms)
Completed 200 OK in 272ms (Views: 220.7ms | ActiveRecord: 1.4ms)


Started GET "/api/v1/random" for ::1 at 2016-06-19 16:31:42 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.9ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.9ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 1]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (205.2ms)
Completed 200 OK in 265ms (Views: 217.2ms | ActiveRecord: 1.8ms)


Started GET "/api/v1/random" for ::1 at 2016-06-19 16:31:43 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (1.1ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 20]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (263.59ms)
Completed 200 OK in 326ms (Views: 275.7ms | ActiveRecord: 1.9ms)


Started GET "/api/v1/random" for ::1 at 2016-06-19 16:31:44 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (1.1ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (1.1ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 26]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (184.25ms)
Completed 200 OK in 257ms (Views: 199.9ms | ActiveRecord: 2.1ms)


Started GET "/api/v1/random" for ::1 at 2016-06-19 16:31:45 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (1.1ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.6ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 8]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (251.07ms)
Completed 200 OK in 315ms (Views: 262.8ms | ActiveRecord: 1.7ms)


Started GET "/api/v1/random" for ::1 at 2016-06-19 16:31:46 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.7ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 9]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (345.52ms)
Completed 200 OK in 417ms (Views: 354.8ms | ActiveRecord: 1.5ms)


Started GET "/api/v1/random" for ::1 at 2016-06-19 16:31:47 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.7ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 15]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (198.82ms)
Completed 200 OK in 252ms (Views: 206.5ms | ActiveRecord: 1.5ms)


Started GET "/api/v1/random" for ::1 at 2016-06-19 16:31:49 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.6ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 6]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (152.97ms)
Completed 200 OK in 214ms (Views: 161.1ms | ActiveRecord: 1.4ms)


Started GET "/api/v1/random" for ::1 at 2016-06-19 16:31:51 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (1.0ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.7ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 3]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (266.39ms)
Completed 200 OK in 333ms (Views: 278.2ms | ActiveRecord: 1.6ms)


Started GET "/api/v1/random" for ::1 at 2016-06-19 16:31:52 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.7ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 21]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (231.24ms)
Completed 200 OK in 293ms (Views: 243.3ms | ActiveRecord: 1.4ms)


Started GET "/api/v1/random" for ::1 at 2016-06-19 16:31:54 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.9ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (1.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 11]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (296.89ms)
Completed 200 OK in 362ms (Views: 303.4ms | ActiveRecord: 2.0ms)


Started GET "/api/v1/random" for ::1 at 2016-06-19 16:31:55 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.9ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 2]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (161.16ms)
Completed 200 OK in 218ms (Views: 168.3ms | ActiveRecord: 1.8ms)


Started GET "/api/v1/random" for ::1 at 2016-06-19 16:31:56 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.7ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 25]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (163.71ms)
Completed 200 OK in 224ms (Views: 171.2ms | ActiveRecord: 1.5ms)


Started GET "/api/v1/random" for ::1 at 2016-06-19 16:31:56 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.6ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 25]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (166.02ms)
Completed 200 OK in 226ms (Views: 174.0ms | ActiveRecord: 1.5ms)


Started GET "/api/v1/random" for ::1 at 2016-06-19 16:32:11 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (1.6ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (1.0ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 19]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (227.21ms)
Completed 200 OK in 292ms (Views: 238.8ms | ActiveRecord: 2.5ms)


Started GET "/api/v1/random" for ::1 at 2016-06-19 16:32:14 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (1.1ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 11]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (308.25ms)
Completed 200 OK in 371ms (Views: 320.7ms | ActiveRecord: 1.9ms)


Started GET "/api/v1/random" for ::1 at 2016-06-19 16:32:16 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (1.1ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 10]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (221.24ms)
Completed 200 OK in 288ms (Views: 232.5ms | ActiveRecord: 1.9ms)


Started GET "/api/v1/random" for ::1 at 2016-06-19 16:32:17 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.6ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 15]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (199.33ms)
Completed 200 OK in 261ms (Views: 216.0ms | ActiveRecord: 1.4ms)


Started GET "/api/v1/random" for ::1 at 2016-06-19 16:32:18 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.6ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 1]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (229.12ms)
Completed 200 OK in 296ms (Views: 238.4ms | ActiveRecord: 1.5ms)


Started GET "/api/v1/random" for ::1 at 2016-06-19 16:32:18 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.7ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 21]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (224.16ms)
Completed 200 OK in 303ms (Views: 235.7ms | ActiveRecord: 1.4ms)


Started GET "/api/v1/random" for ::1 at 2016-06-19 16:32:19 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.7ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 29]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (160.95ms)
Completed 200 OK in 219ms (Views: 167.9ms | ActiveRecord: 1.4ms)


Started GET "/api/v1/random" for ::1 at 2016-06-19 16:32:19 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (1.1ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.6ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 1]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (236.72ms)
Completed 200 OK in 313ms (Views: 249.2ms | ActiveRecord: 1.7ms)


Started GET "/api/v1/random" for ::1 at 2016-06-19 16:32:20 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (1.1ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.7ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 9]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (386.35ms)
Completed 200 OK in 451ms (Views: 394.4ms | ActiveRecord: 1.8ms)


Started GET "/api/v1/random" for ::1 at 2016-06-19 16:32:20 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.7ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 14]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (204.89ms)
Completed 200 OK in 269ms (Views: 212.2ms | ActiveRecord: 1.5ms)


Started GET "/api/v1/random" for ::1 at 2016-06-19 16:32:20 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.8ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 21]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (231.43ms)
Completed 200 OK in 299ms (Views: 242.8ms | ActiveRecord: 1.6ms)


Started GET "/api/v1/random" for ::1 at 2016-06-19 16:32:21 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.7ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 12]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (159.72ms)
Completed 200 OK in 233ms (Views: 172.9ms | ActiveRecord: 1.5ms)


Started GET "/api/v1/random" for ::1 at 2016-06-19 16:32:21 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (1.0ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.6ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 29]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (164.9ms)
Completed 200 OK in 234ms (Views: 171.9ms | ActiveRecord: 1.6ms)


Started GET "/api/v1/random" for ::1 at 2016-06-19 16:32:21 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.6ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 17]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (349.06ms)
Completed 200 OK in 423ms (Views: 365.6ms | ActiveRecord: 1.5ms)


Started GET "/api/v1/random" for ::1 at 2016-06-19 16:32:22 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.6ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 18]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (263.45ms)
Completed 200 OK in 329ms (Views: 275.3ms | ActiveRecord: 1.5ms)


Started GET "/api/v1/random" for ::1 at 2016-06-19 16:32:22 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.7ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 25]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (169.94ms)
Completed 200 OK in 244ms (Views: 191.1ms | ActiveRecord: 1.5ms)


Started GET "/api/v1/random" for ::1 at 2016-06-19 16:32:23 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.7ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 30]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (254.79ms)
Completed 200 OK in 321ms (Views: 269.8ms | ActiveRecord: 1.5ms)


Started GET "/api/v1/random" for ::1 at 2016-06-19 16:32:23 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.7ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 1]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (250.35ms)
Completed 200 OK in 326ms (Views: 261.3ms | ActiveRecord: 1.4ms)


Started GET "/api/v1/random" for ::1 at 2016-06-19 16:32:23 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.7ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 3]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (242.46ms)
Completed 200 OK in 308ms (Views: 254.4ms | ActiveRecord: 1.5ms)


Started GET "/api/v1/random" for ::1 at 2016-06-19 16:32:24 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.9ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.6ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 5]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (178.38ms)
Completed 200 OK in 246ms (Views: 194.0ms | ActiveRecord: 1.5ms)


Started GET "/api/v1/random" for ::1 at 2016-06-19 16:32:24 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.7ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 24]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (246.86ms)
Completed 200 OK in 323ms (Views: 265.1ms | ActiveRecord: 1.5ms)


Started GET "/api/v1/random" for ::1 at 2016-06-19 16:32:25 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (1.0ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.7ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 20]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (295.29ms)
Completed 200 OK in 368ms (Views: 303.8ms | ActiveRecord: 1.7ms)


Started GET "/api/v1/random" for ::1 at 2016-06-19 16:32:25 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.7ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 29]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (165.74ms)
Completed 200 OK in 239ms (Views: 181.4ms | ActiveRecord: 1.5ms)


Started GET "/api/v1/random" for ::1 at 2016-06-19 16:32:26 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (1.0ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 28]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (325.81ms)
Completed 200 OK in 393ms (Views: 334.9ms | ActiveRecord: 1.8ms)


Started GET "/api/v1/random" for ::1 at 2016-06-19 16:32:28 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (1.0ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.8ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 30]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (241.96ms)
Completed 200 OK in 310ms (Views: 254.5ms | ActiveRecord: 1.8ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-19 16:32:32 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"answer-id"=>nil, "content"=>"ed22e", "vote-count"=>nil, "vote-score"=>nil}, "question"=>{"data"=>{"id"=>"28", "attributes"=>{"content"=>"Do you have any questions for me?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: answer-id, vote-count, vote-score
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (1.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 28], ["LIMIT", 1]]
  [1m[35m (0.7ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.8ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "ed22e"], ["question_id", 28], ["created_at", 2016-06-19 20:32:32 UTC], ["updated_at", 2016-06-19 20:32:32 UTC]]
  [1m[35m (2.9ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mAnswer Load (0.9ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."question_id" = $1 ORDER BY "answers"."id" DESC LIMIT $2[0m  [["question_id", 28], ["LIMIT", 1]]
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (35.85ms)
Completed 200 OK in 241ms (Views: 46.7ms | ActiveRecord: 6.6ms)


Started GET "/api/v1/answers/24" for ::1 at 2016-06-19 16:32:34 -0400
Processing by Api::V1::AnswersController#show as JSON
  Parameters: {"id"=>"24"}
  [1m[36mAnswer Load (0.6ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."id" = $1 LIMIT $2[0m  [["id", 24], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 28], ["LIMIT", 1]]
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (61.02ms)
Completed 200 OK in 93ms (Views: 72.4ms | ActiveRecord: 1.3ms)


Started PATCH "/api/v1/answers/24" for ::1 at 2016-06-19 16:35:28 -0400
Processing by Api::V1::AnswersController#update as JSON
  Parameters: {"data"=>{"id"=>"24", "attributes"=>{"answer-id"=>nil, "content"=>"CZXGDG", "vote-count"=>99, "vote-score"=>0}, "question"=>{"data"=>{"id"=>"28", "attributes"=>{"content"=>"Do you have any questions for me?"}, "type"=>"questions"}}, "type"=>"answers"}, "id"=>"24", "answer"=>{}}
  [1m[36mAnswer Load (0.7ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."id" = $1 LIMIT $2[0m  [["id", 24], ["LIMIT", 1]]
  [1m[35m (0.6ms)[0m  [1m[35mBEGIN[0m
  [1m[36mQuestion Load (5.5ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 28], ["LIMIT", 1]]
  [1m[35mSQL (6.0ms)[0m  [1m[33mUPDATE "answers" SET "vote_count" = $1, "updated_at" = $2 WHERE "answers"."id" = $3[0m  [["vote_count", 99], ["updated_at", 2016-06-19 20:35:29 UTC], ["id", 24]]
  [1m[35m (16.5ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 152ms (ActiveRecord: 29.2ms)


Started GET "/api/v1/random" for ::1 at 2016-06-19 16:35:32 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (1.1ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (1.1ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 21]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (257.08ms)
Completed 200 OK in 321ms (Views: 264.3ms | ActiveRecord: 2.2ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-19 16:35:34 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"answer-id"=>nil, "content"=>"scdsc", "vote-count"=>nil, "vote-score"=>nil}, "question"=>{"data"=>{"id"=>"21", "attributes"=>{"content"=>"What is the difference between classical inheritance and prototypal inheritance? "}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: answer-id, vote-count, vote-score
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 21], ["LIMIT", 1]]
  [1m[35m (6.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (1.0ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "scdsc"], ["question_id", 21], ["created_at", 2016-06-19 20:35:34 UTC], ["updated_at", 2016-06-19 20:35:34 UTC]]
  [1m[35m (14.7ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mAnswer Load (0.9ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."question_id" = $1 ORDER BY "answers"."id" DESC LIMIT $2[0m  [["question_id", 21], ["LIMIT", 1]]
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (27.33ms)
Completed 200 OK in 284ms (Views: 39.0ms | ActiveRecord: 23.6ms)


Started GET "/api/v1/random" for ::1 at 2016-06-19 16:36:42 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (1.4ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.9ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 30]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (197.59ms)
Completed 200 OK in 260ms (Views: 209.6ms | ActiveRecord: 2.4ms)


Started GET "/api/v1/random" for ::1 at 2016-06-19 16:38:26 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (1.2ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.7ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 20]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (230.58ms)
Completed 200 OK in 302ms (Views: 252.3ms | ActiveRecord: 1.9ms)


Started GET "/api/v1/random" for ::1 at 2016-06-19 16:38:41 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (1.1ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (1.1ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 7]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (304.92ms)
Completed 200 OK in 363ms (Views: 312.2ms | ActiveRecord: 2.1ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-19 16:38:43 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"answer-id"=>nil, "content"=>"edcedc", "vote-count"=>nil, "vote-score"=>nil}, "question"=>{"data"=>{"id"=>"7", "attributes"=>{"content"=>"What is function hoisting in JavaScript?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: answer-id, vote-count, vote-score
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (1.0ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 7], ["LIMIT", 1]]
  [1m[35m (0.5ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (1.2ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "edcedc"], ["question_id", 7], ["created_at", 2016-06-19 20:38:43 UTC], ["updated_at", 2016-06-19 20:38:43 UTC]]
  [1m[35m (76.2ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mAnswer Load (1.6ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."question_id" = $1 ORDER BY "answers"."id" DESC LIMIT $2[0m  [["question_id", 7], ["LIMIT", 1]]
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (28.15ms)
Completed 200 OK in 272ms (Views: 35.6ms | ActiveRecord: 80.5ms)


Started GET "/api/v1/answers/22" for ::1 at 2016-06-19 16:38:44 -0400
Processing by Api::V1::AnswersController#show as JSON
  Parameters: {"id"=>"22"}
  [1m[36mAnswer Load (0.8ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."id" = $1 LIMIT $2[0m  [["id", 22], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 7], ["LIMIT", 1]]
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (47.55ms)
Completed 200 OK in 73ms (Views: 54.0ms | ActiveRecord: 1.5ms)


Started PATCH "/api/v1/answers/22" for ::1 at 2016-06-19 16:39:50 -0400
Processing by Api::V1::AnswersController#update as JSON
  Parameters: {"data"=>{"id"=>"22", "attributes"=>{"answer-id"=>nil, "content"=>"SDdsgsad", "vote-count"=>99, "vote-score"=>0}, "question"=>{"data"=>{"id"=>"7", "attributes"=>{"content"=>"What is function hoisting in JavaScript?"}, "type"=>"questions"}}, "type"=>"answers"}, "id"=>"22", "answer"=>{}}
  [1m[36mAnswer Load (1.0ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."id" = $1 LIMIT $2[0m  [["id", 22], ["LIMIT", 1]]
Completed 500 Internal Server Error in 39481ms (ActiveRecord: 1.0ms)


Started GET "/api/v1/random" for ::1 at 2016-06-19 16:40:30 -0400
  
SystemExit (exit):
  
app/controllers/api/v1/answers_controller.rb:21:in `update'
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.8ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 8]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (335.71ms)
Completed 200 OK in 471ms (Views: 377.3ms | ActiveRecord: 13.4ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-19 16:40:35 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"answer-id"=>nil, "content"=>"edcedc", "vote-count"=>nil, "vote-score"=>nil}, "question"=>{"data"=>{"id"=>"8", "attributes"=>{"content"=>"How did you learn programming?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: answer-id, vote-count, vote-score
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.9ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 8], ["LIMIT", 1]]
  [1m[35m (0.5ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.9ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "edcedc"], ["question_id", 8], ["created_at", 2016-06-19 20:40:35 UTC], ["updated_at", 2016-06-19 20:40:35 UTC]]
  [1m[35m (242.0ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mAnswer Load (1.1ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."question_id" = $1 ORDER BY "answers"."id" DESC LIMIT $2[0m  [["question_id", 8], ["LIMIT", 1]]
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (24.02ms)
Completed 200 OK in 441ms (Views: 36.3ms | ActiveRecord: 245.4ms)


Started GET "/api/v1/answers/9" for ::1 at 2016-06-19 16:40:37 -0400
Processing by Api::V1::AnswersController#show as JSON
  Parameters: {"id"=>"9"}
  [1m[36mAnswer Load (0.7ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."id" = $1 LIMIT $2[0m  [["id", 9], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mQuestion Load (0.9ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 8], ["LIMIT", 1]]
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (69.75ms)
Completed 200 OK in 98ms (Views: 79.9ms | ActiveRecord: 1.6ms)


Started PATCH "/api/v1/answers/9" for ::1 at 2016-06-19 16:41:10 -0400
Started PATCH "/api/v1/answers/9" for ::1 at 2016-06-19 16:41:10 -0400
Processing by Api::V1::AnswersController#update as JSON
Processing by Api::V1::AnswersController#update as JSON
  Parameters: {"data"=>{"id"=>"9", "attributes"=>{"answer-id"=>nil, "content"=>"asdfsadf", "vote-count"=>0, "vote-score"=>0}, "question"=>{"data"=>{"id"=>"8", "attributes"=>{"content"=>"How did you learn programming?"}, "type"=>"questions"}}, "type"=>"answers"}, "id"=>"9", "answer"=>{}}
  Parameters: {"data"=>{"id"=>"9", "attributes"=>{"answer-id"=>nil, "content"=>"asdfsadf", "vote-count"=>99, "vote-score"=>0}, "question"=>{"data"=>{"id"=>"8", "attributes"=>{"content"=>"How did you learn programming?"}, "type"=>"questions"}}, "type"=>"answers"}, "id"=>"9", "answer"=>{}}
  [1m[36mAnswer Load (1.1ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."id" = $1 LIMIT $2[0m  [["id", 9], ["LIMIT", 1]]
  [1m[36mAnswer Load (0.3ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."id" = $1 LIMIT $2[0m  [["id", 9], ["LIMIT", 1]]
  [1m[36mCACHE (0.0ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."id" = $1 LIMIT $2[0m  [["id", 9], ["LIMIT", 1]]
Completed 500 Internal Server Error in 42977ms (ActiveRecord: 1.2ms)


Completed 500 Internal Server Error in 39212ms (ActiveRecord: 0.3ms)


  
  
SystemExit (exit):
SystemExit (exit):
  
  
app/controllers/api/v1/answers_controller.rb:21:in `update'
app/controllers/api/v1/answers_controller.rb:21:in `update'
Started GET "/api/v1/random" for ::1 at 2016-06-19 16:42:11 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (1.0ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.8ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 18]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (426.04ms)
Completed 200 OK in 577ms (Views: 478.0ms | ActiveRecord: 1.8ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-19 16:42:15 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"answer-id"=>nil, "content"=>"edcedc", "vote-count"=>nil, "vote-score"=>nil}, "question"=>{"data"=>{"id"=>"18", "attributes"=>{"content"=>"What are your short-term goals."}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: answer-id, vote-count, vote-score
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 18], ["LIMIT", 1]]
  [1m[35m (0.8ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.8ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "edcedc"], ["question_id", 18], ["created_at", 2016-06-19 20:42:15 UTC], ["updated_at", 2016-06-19 20:42:15 UTC]]
  [1m[35m (117.5ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mAnswer Load (0.8ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."question_id" = $1 ORDER BY "answers"."id" DESC LIMIT $2[0m  [["question_id", 18], ["LIMIT", 1]]
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (27.93ms)
Completed 200 OK in 339ms (Views: 41.1ms | ActiveRecord: 120.5ms)


Started GET "/api/v1/answers/29" for ::1 at 2016-06-19 16:42:17 -0400
Processing by Api::V1::AnswersController#show as JSON
  Parameters: {"id"=>"29"}
  [1m[36mAnswer Load (0.7ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."id" = $1 LIMIT $2[0m  [["id", 29], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 18], ["LIMIT", 1]]
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (83.18ms)
Completed 200 OK in 117ms (Views: 89.8ms | ActiveRecord: 1.4ms)


Started PATCH "/api/v1/answers/29" for ::1 at 2016-06-19 16:42:17 -0400
Processing by Api::V1::AnswersController#update as JSON
  Parameters: {"data"=>{"id"=>"29", "attributes"=>{"answer-id"=>nil, "content"=>"adsgsadg", "vote-count"=>99, "vote-score"=>0}, "question"=>{"data"=>{"id"=>"18", "attributes"=>{"content"=>"What are your short-term goals."}, "type"=>"questions"}}, "type"=>"answers"}, "id"=>"29", "answer"=>{}}
  [1m[36mAnswer Load (0.8ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."id" = $1 LIMIT $2[0m  [["id", 29], ["LIMIT", 1]]
  [1m[35m (0.9ms)[0m  [1m[35mBEGIN[0m
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 18], ["LIMIT", 1]]
  [1m[35mSQL (1.0ms)[0m  [1m[33mUPDATE "answers" SET "vote_count" = $1, "updated_at" = $2 WHERE "answers"."id" = $3[0m  [["vote_count", 99], ["updated_at", 2016-06-19 20:42:17 UTC], ["id", 29]]
  [1m[35m (1.5ms)[0m  [1m[35mCOMMIT[0m
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (27.48ms)
Completed 200 OK in 155ms (Views: 38.8ms | ActiveRecord: 4.8ms)


Started GET "/api/v1/random" for ::1 at 2016-06-19 16:42:34 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.8ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 20]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (265.34ms)
Completed 200 OK in 324ms (Views: 272.2ms | ActiveRecord: 1.6ms)


Started GET "/api/v1/random" for ::1 at 2016-06-19 16:42:38 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (1.1ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.9ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 19]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (214.99ms)
Completed 200 OK in 277ms (Views: 226.2ms | ActiveRecord: 2.0ms)


Started GET "/api/v1/random" for ::1 at 2016-06-19 16:42:39 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.7ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 25]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (146.39ms)
Completed 200 OK in 204ms (Views: 154.4ms | ActiveRecord: 1.5ms)


Started GET "/api/v1/random" for ::1 at 2016-06-19 16:42:40 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.6ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 25]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (154.75ms)
Completed 200 OK in 210ms (Views: 161.9ms | ActiveRecord: 1.5ms)


Started GET "/api/v1/random" for ::1 at 2016-06-19 16:42:42 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.6ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 26]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (179.82ms)
Completed 200 OK in 241ms (Views: 186.9ms | ActiveRecord: 1.4ms)


Started GET "/api/v1/random" for ::1 at 2016-06-19 16:42:43 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.6ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 26]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (193.74ms)
Completed 200 OK in 250ms (Views: 201.0ms | ActiveRecord: 1.5ms)


Started GET "/api/v1/random" for ::1 at 2016-06-19 16:42:45 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.9ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.7ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 7]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (331.29ms)
Completed 200 OK in 393ms (Views: 342.5ms | ActiveRecord: 1.6ms)


Started GET "/api/v1/random" for ::1 at 2016-06-19 16:42:45 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (1.0ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.7ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 13]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (407.49ms)
Completed 200 OK in 472ms (Views: 418.7ms | ActiveRecord: 1.7ms)


Started GET "/api/v1/random" for ::1 at 2016-06-19 16:42:47 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.7ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 8]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (280.58ms)
Completed 200 OK in 341ms (Views: 287.5ms | ActiveRecord: 1.5ms)


Started GET "/api/v1/random" for ::1 at 2016-06-19 16:42:48 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (1.5ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.7ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 5]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (149.35ms)
Completed 200 OK in 207ms (Views: 160.6ms | ActiveRecord: 2.2ms)


Started GET "/api/v1/random" for ::1 at 2016-06-19 16:42:49 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.7ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 17]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (313.59ms)
Completed 200 OK in 376ms (Views: 329.9ms | ActiveRecord: 1.5ms)


Started GET "/api/v1/random" for ::1 at 2016-06-19 16:42:50 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.6ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 7]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (354.51ms)
Completed 200 OK in 419ms (Views: 361.6ms | ActiveRecord: 1.5ms)


Started GET "/api/v1/random" for ::1 at 2016-06-19 16:42:51 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.8ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 15]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (200.65ms)
Completed 200 OK in 253ms (Views: 207.4ms | ActiveRecord: 1.6ms)


Started GET "/api/v1/random" for ::1 at 2016-06-19 16:42:53 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.7ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 7]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (349.62ms)
Completed 200 OK in 408ms (Views: 357.2ms | ActiveRecord: 1.4ms)


Started GET "/api/v1/random" for ::1 at 2016-06-19 16:42:54 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (1.3ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.6ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 19]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (219.23ms)
Completed 200 OK in 278ms (Views: 226.6ms | ActiveRecord: 1.9ms)


Started GET "/api/v1/random" for ::1 at 2016-06-19 16:42:55 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.6ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 6]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (153.85ms)
Completed 200 OK in 214ms (Views: 160.8ms | ActiveRecord: 1.5ms)


Started GET "/api/v1/random" for ::1 at 2016-06-19 16:42:56 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (1.1ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 3]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (220.41ms)
Completed 200 OK in 279ms (Views: 231.2ms | ActiveRecord: 2.0ms)


Started GET "/api/v1/random" for ::1 at 2016-06-19 16:42:57 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.6ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 25]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (156.21ms)
Completed 200 OK in 221ms (Views: 163.3ms | ActiveRecord: 1.5ms)


Started GET "/api/v1/random" for ::1 at 2016-06-19 16:42:58 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.6ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 1]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (211.08ms)
Completed 200 OK in 271ms (Views: 222.8ms | ActiveRecord: 1.4ms)


Started GET "/api/v1/random" for ::1 at 2016-06-19 16:42:59 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (1.0ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.6ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 31]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (305.89ms)
Completed 200 OK in 367ms (Views: 312.9ms | ActiveRecord: 1.6ms)


Started GET "/api/v1/random" for ::1 at 2016-06-19 16:43:00 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.9ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.6ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 6]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (150.55ms)
Completed 200 OK in 210ms (Views: 157.6ms | ActiveRecord: 1.5ms)


Started GET "/api/v1/random" for ::1 at 2016-06-19 16:43:01 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.9ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.6ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 15]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (196.58ms)
Completed 200 OK in 257ms (Views: 204.5ms | ActiveRecord: 1.5ms)


Started GET "/api/v1/random" for ::1 at 2016-06-19 16:43:02 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.6ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 6]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (142.78ms)
Completed 200 OK in 213ms (Views: 156.6ms | ActiveRecord: 1.4ms)


Started GET "/api/v1/random" for ::1 at 2016-06-19 16:43:03 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (1.0ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (5.3ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 32]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (334.34ms)
Completed 200 OK in 389ms (Views: 337.2ms | ActiveRecord: 6.3ms)


Started GET "/api/v1/random" for ::1 at 2016-06-19 16:43:04 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.7ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 14]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (182.26ms)
Completed 200 OK in 239ms (Views: 189.1ms | ActiveRecord: 1.4ms)


Started GET "/api/v1/random" for ::1 at 2016-06-19 16:43:05 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.7ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 16]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (219.3ms)
Completed 200 OK in 282ms (Views: 230.8ms | ActiveRecord: 1.4ms)


Started GET "/api/v1/random" for ::1 at 2016-06-19 16:43:06 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.6ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 25]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (140.81ms)
Completed 200 OK in 206ms (Views: 154.0ms | ActiveRecord: 1.4ms)


Started GET "/api/v1/random" for ::1 at 2016-06-19 16:43:07 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.7ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 21]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (245.13ms)
Completed 200 OK in 307ms (Views: 256.7ms | ActiveRecord: 1.5ms)


Started GET "/api/v1/random" for ::1 at 2016-06-19 16:43:08 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.7ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 22]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (383.71ms)
Completed 200 OK in 446ms (Views: 395.9ms | ActiveRecord: 1.5ms)


Started GET "/api/v1/random" for ::1 at 2016-06-19 16:43:09 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.6ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 27]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (140.28ms)
Completed 200 OK in 204ms (Views: 153.9ms | ActiveRecord: 1.4ms)


Started GET "/api/v1/random" for ::1 at 2016-06-19 16:43:10 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.9ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.7ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 20]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (268.1ms)
Completed 200 OK in 330ms (Views: 280.2ms | ActiveRecord: 1.5ms)


Started GET "/api/v1/random" for ::1 at 2016-06-19 16:43:11 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.6ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 30]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (221.3ms)
Completed 200 OK in 283ms (Views: 233.1ms | ActiveRecord: 1.4ms)


Started GET "/api/v1/random" for ::1 at 2016-06-19 16:43:12 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.7ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 13]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (432.81ms)
Completed 200 OK in 494ms (Views: 444.5ms | ActiveRecord: 1.5ms)


Started GET "/api/v1/random" for ::1 at 2016-06-19 16:43:13 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (1.3ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 22]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (407.36ms)
Completed 200 OK in 465ms (Views: 413.6ms | ActiveRecord: 2.1ms)


Started GET "/api/v1/random" for ::1 at 2016-06-19 16:43:14 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (1.5ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.6ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 18]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (287.79ms)
Completed 200 OK in 361ms (Views: 299.6ms | ActiveRecord: 2.2ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-19 16:43:18 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"answer-id"=>nil, "content"=>"eee", "vote-count"=>nil, "vote-score"=>nil}, "question"=>{"data"=>{"id"=>"18", "attributes"=>{"content"=>"What are your short-term goals."}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: answer-id, vote-count, vote-score
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (1.0ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 18], ["LIMIT", 1]]
  [1m[35m (0.6ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (1.8ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "eee"], ["question_id", 18], ["created_at", 2016-06-19 20:43:18 UTC], ["updated_at", 2016-06-19 20:43:18 UTC]]
  [1m[35m (2.9ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mAnswer Load (0.9ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."question_id" = $1 ORDER BY "answers"."id" DESC LIMIT $2[0m  [["question_id", 18], ["LIMIT", 1]]
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (29.04ms)
Completed 200 OK in 214ms (Views: 36.5ms | ActiveRecord: 7.1ms)


Started GET "/api/v1/random" for ::1 at 2016-06-19 16:44:27 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (5.3ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.7ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 21]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (283.96ms)
Completed 200 OK in 346ms (Views: 291.4ms | ActiveRecord: 6.0ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-19 16:44:29 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"answer-id"=>nil, "content"=>"ddd", "vote-count"=>nil, "vote-score"=>nil}, "question"=>{"data"=>{"id"=>"21", "attributes"=>{"content"=>"What is the difference between classical inheritance and prototypal inheritance? "}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: answer-id, vote-count, vote-score
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.9ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 21], ["LIMIT", 1]]
  [1m[35m (0.6ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.8ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "ddd"], ["question_id", 21], ["created_at", 2016-06-19 20:44:29 UTC], ["updated_at", 2016-06-19 20:44:29 UTC]]
  [1m[35m (76.2ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mAnswer Load (1.0ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."question_id" = $1 ORDER BY "answers"."id" DESC LIMIT $2[0m  [["question_id", 21], ["LIMIT", 1]]
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (27.81ms)
Completed 200 OK in 307ms (Views: 46.7ms | ActiveRecord: 79.6ms)


Started GET "/api/v1/answers/60" for ::1 at 2016-06-19 16:44:31 -0400
Processing by Api::V1::AnswersController#show as JSON
  Parameters: {"id"=>"60"}
  [1m[36mAnswer Load (0.9ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."id" = $1 LIMIT $2[0m  [["id", 60], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mQuestion Load (1.6ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 21], ["LIMIT", 1]]
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (66.76ms)
Completed 200 OK in 94ms (Views: 72.8ms | ActiveRecord: 2.5ms)


Started PATCH "/api/v1/answers/60" for ::1 at 2016-06-19 16:44:31 -0400
Processing by Api::V1::AnswersController#update as JSON
  Parameters: {"data"=>{"id"=>"60", "attributes"=>{"answer-id"=>nil, "content"=>"asdfadsf", "vote-count"=>1, "vote-score"=>0}, "question"=>{"data"=>{"id"=>"21", "attributes"=>{"content"=>"What is the difference between classical inheritance and prototypal inheritance? "}, "type"=>"questions"}}, "type"=>"answers"}, "id"=>"60", "answer"=>{}}
  [1m[36mAnswer Load (0.7ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."id" = $1 LIMIT $2[0m  [["id", 60], ["LIMIT", 1]]
  [1m[35m (0.6ms)[0m  [1m[35mBEGIN[0m
  [1m[36mQuestion Load (6.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 21], ["LIMIT", 1]]
  [1m[35mSQL (0.9ms)[0m  [1m[33mUPDATE "answers" SET "vote_count" = $1, "updated_at" = $2 WHERE "answers"."id" = $3[0m  [["vote_count", 1], ["updated_at", 2016-06-19 20:44:31 UTC], ["id", 60]]
  [1m[35m (83.1ms)[0m  [1m[35mCOMMIT[0m
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (30.77ms)
Completed 200 OK in 263ms (Views: 39.2ms | ActiveRecord: 91.5ms)


Started GET "/api/v1/answers/104" for ::1 at 2016-06-19 16:44:33 -0400
Processing by Api::V1::AnswersController#show as JSON
  Parameters: {"id"=>"104"}
  [1m[36mAnswer Load (0.8ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."id" = $1 LIMIT $2[0m  [["id", 104], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mQuestion Load (1.1ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 21], ["LIMIT", 1]]
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (68.89ms)
Completed 200 OK in 105ms (Views: 80.3ms | ActiveRecord: 1.9ms)


Started PATCH "/api/v1/answers/104" for ::1 at 2016-06-19 16:44:33 -0400
Processing by Api::V1::AnswersController#update as JSON
  Parameters: {"data"=>{"id"=>"104", "attributes"=>{"answer-id"=>nil, "content"=>"asdfadsf", "vote-count"=>1, "vote-score"=>0}, "question"=>{"data"=>{"id"=>"21", "attributes"=>{"content"=>"What is the difference between classical inheritance and prototypal inheritance? "}, "type"=>"questions"}}, "type"=>"answers"}, "id"=>"104", "answer"=>{}}
  [1m[36mAnswer Load (0.9ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."id" = $1 LIMIT $2[0m  [["id", 104], ["LIMIT", 1]]
  [1m[35m (0.6ms)[0m  [1m[35mBEGIN[0m
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 21], ["LIMIT", 1]]
  [1m[35mSQL (0.9ms)[0m  [1m[33mUPDATE "answers" SET "vote_count" = $1, "updated_at" = $2 WHERE "answers"."id" = $3[0m  [["vote_count", 1], ["updated_at", 2016-06-19 20:44:33 UTC], ["id", 104]]
  [1m[35m (282.2ms)[0m  [1m[35mCOMMIT[0m
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (32.08ms)
Completed 200 OK in 444ms (Views: 41.3ms | ActiveRecord: 285.2ms)


Started GET "/api/v1/answers/132" for ::1 at 2016-06-19 16:44:34 -0400
Processing by Api::V1::AnswersController#show as JSON
  Parameters: {"id"=>"132"}
  [1m[36mAnswer Load (0.7ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."id" = $1 LIMIT $2[0m  [["id", 132], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mQuestion Load (0.9ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 21], ["LIMIT", 1]]
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (60.5ms)
Completed 200 OK in 102ms (Views: 77.2ms | ActiveRecord: 1.6ms)


Started PATCH "/api/v1/answers/132" for ::1 at 2016-06-19 16:44:34 -0400
Processing by Api::V1::AnswersController#update as JSON
  Parameters: {"data"=>{"id"=>"132", "attributes"=>{"answer-id"=>nil, "content"=>"dwxxw", "vote-count"=>1, "vote-score"=>0}, "question"=>{"data"=>{"id"=>"21", "attributes"=>{"content"=>"What is the difference between classical inheritance and prototypal inheritance? "}, "type"=>"questions"}}, "type"=>"answers"}, "id"=>"132", "answer"=>{}}
  [1m[36mAnswer Load (0.9ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."id" = $1 LIMIT $2[0m  [["id", 132], ["LIMIT", 1]]
  [1m[35m (0.6ms)[0m  [1m[35mBEGIN[0m
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 21], ["LIMIT", 1]]
  [1m[35mSQL (1.3ms)[0m  [1m[33mUPDATE "answers" SET "vote_count" = $1, "updated_at" = $2 WHERE "answers"."id" = $3[0m  [["vote_count", 1], ["updated_at", 2016-06-19 20:44:34 UTC], ["id", 132]]
  [1m[35m (193.6ms)[0m  [1m[35mCOMMIT[0m
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (34.76ms)
Completed 200 OK in 368ms (Views: 43.3ms | ActiveRecord: 197.1ms)


Started GET "/api/v1/answers/137" for ::1 at 2016-06-19 16:44:36 -0400
Processing by Api::V1::AnswersController#show as JSON
  Parameters: {"id"=>"137"}
  [1m[36mAnswer Load (0.7ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."id" = $1 LIMIT $2[0m  [["id", 137], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 21], ["LIMIT", 1]]
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (62.77ms)
Completed 200 OK in 103ms (Views: 83.0ms | ActiveRecord: 1.3ms)


Started PATCH "/api/v1/answers/137" for ::1 at 2016-06-19 16:44:36 -0400
Processing by Api::V1::AnswersController#update as JSON
  Parameters: {"data"=>{"id"=>"137", "attributes"=>{"answer-id"=>nil, "content"=>"ecedc", "vote-count"=>1, "vote-score"=>0}, "question"=>{"data"=>{"id"=>"21", "attributes"=>{"content"=>"What is the difference between classical inheritance and prototypal inheritance? "}, "type"=>"questions"}}, "type"=>"answers"}, "id"=>"137", "answer"=>{}}
  [1m[36mAnswer Load (5.8ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."id" = $1 LIMIT $2[0m  [["id", 137], ["LIMIT", 1]]
  [1m[35m (0.9ms)[0m  [1m[35mBEGIN[0m
  [1m[36mQuestion Load (0.9ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 21], ["LIMIT", 1]]
  [1m[35mSQL (1.0ms)[0m  [1m[33mUPDATE "answers" SET "vote_count" = $1, "updated_at" = $2 WHERE "answers"."id" = $3[0m  [["vote_count", 1], ["updated_at", 2016-06-19 20:44:36 UTC], ["id", 137]]
  [1m[35m (175.0ms)[0m  [1m[35mCOMMIT[0m
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (31.24ms)
Completed 200 OK in 349ms (Views: 38.8ms | ActiveRecord: 183.7ms)


Started GET "/api/v1/random" for ::1 at 2016-06-19 16:46:43 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.9ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (1.5ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 13]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (464.47ms)
Completed 200 OK in 529ms (Views: 475.8ms | ActiveRecord: 2.4ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-19 16:46:45 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"answer-id"=>nil, "content"=>"eddecde", "vote-count"=>nil, "vote-score"=>nil}, "question"=>{"data"=>{"id"=>"13", "attributes"=>{"content"=>"Where would you like to be in your career five years from now?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: answer-id, vote-count, vote-score
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 13], ["LIMIT", 1]]
  [1m[35m (0.6ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (1.3ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "eddecde"], ["question_id", 13], ["created_at", 2016-06-19 20:46:45 UTC], ["updated_at", 2016-06-19 20:46:45 UTC]]
  [1m[35m (1.4ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mAnswer Load (1.2ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."question_id" = $1 ORDER BY "answers"."id" DESC LIMIT $2[0m  [["question_id", 13], ["LIMIT", 1]]
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (29.01ms)
Completed 200 OK in 252ms (Views: 47.4ms | ActiveRecord: 5.3ms)


Started GET "/api/v1/answers/53" for ::1 at 2016-06-19 16:46:47 -0400
Processing by Api::V1::AnswersController#show as JSON
  Parameters: {"id"=>"53"}
  [1m[36mAnswer Load (2.8ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."id" = $1 LIMIT $2[0m  [["id", 53], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 13], ["LIMIT", 1]]
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (69.4ms)
Completed 200 OK in 109ms (Views: 76.6ms | ActiveRecord: 3.5ms)


Started PATCH "/api/v1/answers/53" for ::1 at 2016-06-19 16:46:47 -0400
Processing by Api::V1::AnswersController#update as JSON
  Parameters: {"data"=>{"id"=>"53", "attributes"=>{"answer-id"=>nil, "content"=>"sadfdsa", "vote-count"=>1, "vote-score"=>0}, "question"=>{"data"=>{"id"=>"13", "attributes"=>{"content"=>"Where would you like to be in your career five years from now?"}, "type"=>"questions"}}, "type"=>"answers"}, "id"=>"53", "answer"=>{}}
  [1m[36mAnswer Load (1.3ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."id" = $1 LIMIT $2[0m  [["id", 53], ["LIMIT", 1]]
  [1m[35m (0.6ms)[0m  [1m[35mBEGIN[0m
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 13], ["LIMIT", 1]]
  [1m[35mSQL (1.5ms)[0m  [1m[33mUPDATE "answers" SET "vote_count" = $1, "updated_at" = $2 WHERE "answers"."id" = $3[0m  [["vote_count", 1], ["updated_at", 2016-06-19 20:46:47 UTC], ["id", 53]]
  [1m[35m (1.5ms)[0m  [1m[35mCOMMIT[0m
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (30.76ms)
Completed 200 OK in 166ms (Views: 38.4ms | ActiveRecord: 5.4ms)


Started PATCH "/api/v1/answers/53" for ::1 at 2016-06-19 16:46:48 -0400
Started GET "/api/v1/answers/53" for ::1 at 2016-06-19 16:46:48 -0400
Processing by Api::V1::AnswersController#update as JSON
Processing by Api::V1::AnswersController#show as JSON
  Parameters: {"data"=>{"id"=>"53", "attributes"=>{"answer-id"=>nil, "content"=>"sadfdsa", "vote-count"=>2, "vote-score"=>0}, "question"=>{"data"=>{"id"=>"13", "attributes"=>{"content"=>"Where would you like to be in your career five years from now?"}, "type"=>"questions"}}, "type"=>"answers"}, "id"=>"53", "answer"=>{}}
  Parameters: {"id"=>"53"}
  [1m[36mAnswer Load (12.1ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."id" = $1 LIMIT $2[0m  [["id", 53], ["LIMIT", 1]]
  [1m[36mAnswer Load (3.3ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."id" = $1 LIMIT $2[0m  [["id", 53], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mQuestion Load (2.0ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 13], ["LIMIT", 1]]
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (62.5ms)
Completed 200 OK in 116ms (Views: 77.6ms | ActiveRecord: 5.4ms)


  [1m[35m (52.3ms)[0m  [1m[35mBEGIN[0m
  [1m[36mQuestion Load (1.0ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 13], ["LIMIT", 1]]
  [1m[35mSQL (0.9ms)[0m  [1m[33mUPDATE "answers" SET "vote_count" = $1, "updated_at" = $2 WHERE "answers"."id" = $3[0m  [["vote_count", 2], ["updated_at", 2016-06-19 20:46:48 UTC], ["id", 53]]
  [1m[35m (1.7ms)[0m  [1m[35mCOMMIT[0m
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (30.54ms)
Completed 200 OK in 295ms (Views: 45.6ms | ActiveRecord: 68.0ms)


Started GET "/api/v1/random" for ::1 at 2016-06-19 16:48:54 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (6.1ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 20]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (280.46ms)
Completed 200 OK in 347ms (Views: 287.5ms | ActiveRecord: 6.9ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-19 16:48:56 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"answer-id"=>nil, "content"=>"sss", "vote-count"=>nil, "vote-score"=>nil}, "question"=>{"data"=>{"id"=>"20", "attributes"=>{"content"=>"Please walk me through one of the projects on your resume."}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: answer-id, vote-count, vote-score
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 20], ["LIMIT", 1]]
  [1m[35m (0.8ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (1.2ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "sss"], ["question_id", 20], ["created_at", 2016-06-19 20:48:56 UTC], ["updated_at", 2016-06-19 20:48:56 UTC]]
  [1m[35m (2.9ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mAnswer Load (1.0ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."question_id" = $1 ORDER BY "answers"."id" DESC LIMIT $2[0m  [["question_id", 20], ["LIMIT", 1]]
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (33.56ms)
Completed 200 OK in 230ms (Views: 43.8ms | ActiveRecord: 6.7ms)


Started GET "/api/v1/answers/17" for ::1 at 2016-06-19 16:48:58 -0400
Processing by Api::V1::AnswersController#show as JSON
  Parameters: {"id"=>"17"}
  [1m[36mAnswer Load (0.9ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."id" = $1 LIMIT $2[0m  [["id", 17], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mQuestion Load (7.0ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 20], ["LIMIT", 1]]
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (68.5ms)
Completed 200 OK in 97ms (Views: 70.3ms | ActiveRecord: 7.9ms)


Started PATCH "/api/v1/answers/17" for ::1 at 2016-06-19 16:48:58 -0400
Processing by Api::V1::AnswersController#update as JSON
  Parameters: {"data"=>{"id"=>"17", "attributes"=>{"answer-id"=>nil, "content"=>"dsafadsf", "vote-count"=>1, "vote-score"=>0}, "question"=>{"data"=>{"id"=>"20", "attributes"=>{"content"=>"Please walk me through one of the projects on your resume."}, "type"=>"questions"}}, "type"=>"answers"}, "id"=>"17", "answer"=>{}}
  [1m[36mAnswer Load (0.6ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."id" = $1 LIMIT $2[0m  [["id", 17], ["LIMIT", 1]]
  [1m[35m (0.6ms)[0m  [1m[35mBEGIN[0m
  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 20], ["LIMIT", 1]]
  [1m[35mSQL (0.9ms)[0m  [1m[33mUPDATE "answers" SET "vote_count" = $1, "updated_at" = $2 WHERE "answers"."id" = $3[0m  [["vote_count", 1], ["updated_at", 2016-06-19 20:48:58 UTC], ["id", 17]]
  [1m[35m (3.2ms)[0m  [1m[35mCOMMIT[0m
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (34.49ms)
Completed 200 OK in 180ms (Views: 48.8ms | ActiveRecord: 6.0ms)


Started PATCH "/api/v1/answers/17" for ::1 at 2016-06-19 16:48:59 -0400
Processing by Api::V1::AnswersController#update as JSON
  Parameters: {"data"=>{"id"=>"17", "attributes"=>{"answer-id"=>nil, "content"=>"dsafadsf", "vote-count"=>2, "vote-score"=>0}, "question"=>{"data"=>{"id"=>"20", "attributes"=>{"content"=>"Please walk me through one of the projects on your resume."}, "type"=>"questions"}}, "type"=>"answers"}, "id"=>"17", "answer"=>{}}
  [1m[36mAnswer Load (10.4ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."id" = $1 LIMIT $2[0m  [["id", 17], ["LIMIT", 1]]
Started GET "/api/v1/answers/17" for ::1 at 2016-06-19 16:48:59 -0400
  [1m[35m (3.1ms)[0m  [1m[35mBEGIN[0m
Processing by Api::V1::AnswersController#show as JSON
  Parameters: {"id"=>"17"}
  [1m[36mQuestion Load (29.5ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 20], ["LIMIT", 1]]
  [1m[36mAnswer Load (47.8ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."id" = $1 LIMIT $2[0m  [["id", 17], ["LIMIT", 1]]
  [1m[35mSQL (2.7ms)[0m  [1m[33mUPDATE "answers" SET "vote_count" = $1, "updated_at" = $2 WHERE "answers"."id" = $3[0m  [["vote_count", 2], ["updated_at", 2016-06-19 20:48:59 UTC], ["id", 17]]
[active_model_serializers]   [1m[36mQuestion Load (1.3ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 20], ["LIMIT", 1]]
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (72.26ms)
Completed 200 OK in 159ms (Views: 83.6ms | ActiveRecord: 49.1ms)


  [1m[35m (33.4ms)[0m  [1m[35mCOMMIT[0m
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (31.67ms)
Completed 200 OK in 329ms (Views: 48.4ms | ActiveRecord: 79.3ms)


Started GET "/api/v1/random" for ::1 at 2016-06-19 16:49:44 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.9ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.9ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 20]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (318.19ms)
Completed 200 OK in 385ms (Views: 326.3ms | ActiveRecord: 1.7ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-19 16:49:46 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"answer-id"=>nil, "content"=>"sdsdf", "vote-count"=>nil, "vote-score"=>nil}, "question"=>{"data"=>{"id"=>"20", "attributes"=>{"content"=>"Please walk me through one of the projects on your resume."}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: answer-id, vote-count, vote-score
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 20], ["LIMIT", 1]]
  [1m[35m (5.5ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.9ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "sdsdf"], ["question_id", 20], ["created_at", 2016-06-19 20:49:46 UTC], ["updated_at", 2016-06-19 20:49:46 UTC]]
  [1m[35m (1.4ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mAnswer Load (1.0ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."question_id" = $1 ORDER BY "answers"."id" DESC LIMIT $2[0m  [["question_id", 20], ["LIMIT", 1]]
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (34.91ms)
Completed 200 OK in 245ms (Views: 49.4ms | ActiveRecord: 9.4ms)


Started GET "/api/v1/answers/34" for ::1 at 2016-06-19 16:49:48 -0400
Processing by Api::V1::AnswersController#show as JSON
  Parameters: {"id"=>"34"}
  [1m[36mAnswer Load (0.7ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."id" = $1 LIMIT $2[0m  [["id", 34], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 20], ["LIMIT", 1]]
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (67.32ms)
Completed 200 OK in 140ms (Views: 74.2ms | ActiveRecord: 1.4ms)


Started PATCH "/api/v1/answers/34" for ::1 at 2016-06-19 16:49:48 -0400
Processing by Api::V1::AnswersController#update as JSON
  Parameters: {"data"=>{"id"=>"34", "attributes"=>{"answer-id"=>nil, "content"=>"dsgg", "vote-count"=>1, "vote-score"=>0}, "question"=>{"data"=>{"id"=>"20", "attributes"=>{"content"=>"Please walk me through one of the projects on your resume."}, "type"=>"questions"}}, "type"=>"answers"}, "id"=>"34", "answer"=>{}}
  [1m[36mAnswer Load (0.8ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."id" = $1 LIMIT $2[0m  [["id", 34], ["LIMIT", 1]]
  [1m[35m (0.7ms)[0m  [1m[35mBEGIN[0m
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 20], ["LIMIT", 1]]
  [1m[35mSQL (0.9ms)[0m  [1m[33mUPDATE "answers" SET "vote_count" = $1, "updated_at" = $2 WHERE "answers"."id" = $3[0m  [["vote_count", 1], ["updated_at", 2016-06-19 20:49:49 UTC], ["id", 34]]
  [1m[35m (1.6ms)[0m  [1m[35mCOMMIT[0m
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (34.66ms)
Completed 200 OK in 175ms (Views: 48.6ms | ActiveRecord: 4.7ms)


Started GET "/api/v1/random" for ::1 at 2016-06-19 16:51:52 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.9ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.7ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 9]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (388.0ms)
Completed 200 OK in 457ms (Views: 401.3ms | ActiveRecord: 1.6ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-19 16:51:55 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"answer-id"=>nil, "content"=>"sss", "vote-count"=>nil, "vote-score"=>nil}, "question"=>{"data"=>{"id"=>"9", "attributes"=>{"content"=>"What is a closure?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: answer-id, vote-count, vote-score
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 9], ["LIMIT", 1]]
  [1m[35m (0.6ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (1.1ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "sss"], ["question_id", 9], ["created_at", 2016-06-19 20:51:56 UTC], ["updated_at", 2016-06-19 20:51:56 UTC]]
  [1m[35m (2.7ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mAnswer Load (1.0ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."question_id" = $1 ORDER BY "answers"."id" DESC LIMIT $2[0m  [["question_id", 9], ["LIMIT", 1]]
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (36.81ms)
Completed 200 OK in 253ms (Views: 53.2ms | ActiveRecord: 6.1ms)


Started GET "/api/v1/answers/19" for ::1 at 2016-06-19 16:51:57 -0400
Processing by Api::V1::AnswersController#show as JSON
  Parameters: {"id"=>"19"}
  [1m[36mAnswer Load (0.7ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."id" = $1 LIMIT $2[0m  [["id", 19], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mQuestion Load (1.0ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 9], ["LIMIT", 1]]
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (145.8ms)
Completed 200 OK in 179ms (Views: 156.9ms | ActiveRecord: 1.6ms)


Started PATCH "/api/v1/answers/19" for ::1 at 2016-06-19 16:51:57 -0400
Processing by Api::V1::AnswersController#update as JSON
  Parameters: {"data"=>{"id"=>"19", "attributes"=>{"answer-id"=>nil, "content"=>"sdgsdggasd", "vote-count"=>1, "vote-score"=>0}, "question"=>{"data"=>{"id"=>"9", "attributes"=>{"content"=>"What is a closure?"}, "type"=>"questions"}}, "type"=>"answers"}, "id"=>"19", "answer"=>{}}
  [1m[36mAnswer Load (0.7ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."id" = $1 LIMIT $2[0m  [["id", 19], ["LIMIT", 1]]
  [1m[35m (0.7ms)[0m  [1m[35mBEGIN[0m
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 9], ["LIMIT", 1]]
  [1m[35mSQL (0.9ms)[0m  [1m[33mUPDATE "answers" SET "vote_count" = $1, "updated_at" = $2 WHERE "answers"."id" = $3[0m  [["vote_count", 1], ["updated_at", 2016-06-19 20:51:57 UTC], ["id", 19]]
  [1m[35m (1.9ms)[0m  [1m[35mCOMMIT[0m
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (31.14ms)
Completed 200 OK in 175ms (Views: 40.3ms | ActiveRecord: 4.8ms)


Started GET "/api/v1/random" for ::1 at 2016-06-19 16:52:22 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.9ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (5.7ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 10]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (258.12ms)
Completed 200 OK in 325ms (Views: 265.8ms | ActiveRecord: 6.6ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-19 16:52:25 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"answer-id"=>nil, "content"=>"ddd", "vote-count"=>nil, "vote-score"=>nil}, "question"=>{"data"=>{"id"=>"10", "attributes"=>{"content"=>"How did you learn web development?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: answer-id, vote-count, vote-score
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 10], ["LIMIT", 1]]
  [1m[35m (1.0ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.8ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "ddd"], ["question_id", 10], ["created_at", 2016-06-19 20:52:25 UTC], ["updated_at", 2016-06-19 20:52:25 UTC]]
  [1m[35m (1.6ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mAnswer Load (1.1ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."question_id" = $1 ORDER BY "answers"."id" DESC LIMIT $2[0m  [["question_id", 10], ["LIMIT", 1]]
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (32.09ms)
Completed 200 OK in 225ms (Views: 45.1ms | ActiveRecord: 5.1ms)


Started GET "/api/v1/answers/66" for ::1 at 2016-06-19 16:52:27 -0400
Processing by Api::V1::AnswersController#show as JSON
  Parameters: {"id"=>"66"}
  [1m[36mAnswer Load (0.7ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."id" = $1 LIMIT $2[0m  [["id", 66], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 10], ["LIMIT", 1]]
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (67.9ms)
Completed 200 OK in 103ms (Views: 74.9ms | ActiveRecord: 1.5ms)


Started PATCH "/api/v1/answers/66" for ::1 at 2016-06-19 16:52:27 -0400
Processing by Api::V1::AnswersController#update as JSON
  Parameters: {"data"=>{"id"=>"66", "attributes"=>{"answer-id"=>nil, "content"=>"asdfasdfsa", "vote-count"=>3, "vote-score"=>0}, "question"=>{"data"=>{"id"=>"10", "attributes"=>{"content"=>"How did you learn web development?"}, "type"=>"questions"}}, "type"=>"answers"}, "id"=>"66", "answer"=>{}}
  [1m[36mAnswer Load (0.7ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."id" = $1 LIMIT $2[0m  [["id", 66], ["LIMIT", 1]]
  [1m[35m (0.5ms)[0m  [1m[35mBEGIN[0m
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 10], ["LIMIT", 1]]
  [1m[35mSQL (1.0ms)[0m  [1m[33mUPDATE "answers" SET "vote_count" = $1, "updated_at" = $2 WHERE "answers"."id" = $3[0m  [["vote_count", 3], ["updated_at", 2016-06-19 20:52:27 UTC], ["id", 66]]
  [1m[35m (2.8ms)[0m  [1m[35mCOMMIT[0m
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (34.82ms)
Completed 200 OK in 178ms (Views: 47.0ms | ActiveRecord: 5.7ms)


Started PATCH "/api/v1/answers/66" for ::1 at 2016-06-19 16:52:28 -0400
Processing by Api::V1::AnswersController#update as JSON
Started GET "/api/v1/answers/66" for ::1 at 2016-06-19 16:52:28 -0400
  Parameters: {"data"=>{"id"=>"66", "attributes"=>{"answer-id"=>nil, "content"=>"asdfasdfsa", "vote-count"=>4, "vote-score"=>0}, "question"=>{"data"=>{"id"=>"10", "attributes"=>{"content"=>"How did you learn web development?"}, "type"=>"questions"}}, "type"=>"answers"}, "id"=>"66", "answer"=>{}}
Processing by Api::V1::AnswersController#show as JSON
  [1m[36mAnswer Load (2.1ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."id" = $1 LIMIT $2[0m  [["id", 66], ["LIMIT", 1]]
  Parameters: {"id"=>"66"}
  [1m[35m (5.3ms)[0m  [1m[35mBEGIN[0m
  [1m[36mAnswer Load (30.9ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."id" = $1 LIMIT $2[0m  [["id", 66], ["LIMIT", 1]]
  [1m[36mQuestion Load (43.0ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 10], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mQuestion Load (46.7ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 10], ["LIMIT", 1]]
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (168.44ms)
Completed 200 OK in 225ms (Views: 129.2ms | ActiveRecord: 77.6ms)


  [1m[35mSQL (40.3ms)[0m  [1m[33mUPDATE "answers" SET "vote_count" = $1, "updated_at" = $2 WHERE "answers"."id" = $3[0m  [["vote_count", 4], ["updated_at", 2016-06-19 20:52:28 UTC], ["id", 66]]
  [1m[35m (5.3ms)[0m  [1m[35mCOMMIT[0m
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (25.5ms)
Completed 200 OK in 331ms (Views: 36.1ms | ActiveRecord: 96.0ms)


Started GET "/api/v1/random" for ::1 at 2016-06-19 16:52:42 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.9ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 31]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (321.6ms)
Completed 200 OK in 394ms (Views: 337.2ms | ActiveRecord: 1.8ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-19 16:52:44 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"answer-id"=>nil, "content"=>"sss", "vote-count"=>nil, "vote-score"=>nil}, "question"=>{"data"=>{"id"=>"31", "attributes"=>{"content"=>"How does the web work?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: answer-id, vote-count, vote-score
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 31], ["LIMIT", 1]]
  [1m[35m (0.5ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.9ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "sss"], ["question_id", 31], ["created_at", 2016-06-19 20:52:44 UTC], ["updated_at", 2016-06-19 20:52:44 UTC]]
  [1m[35m (16.0ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mAnswer Load (0.9ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."question_id" = $1 ORDER BY "answers"."id" DESC LIMIT $2[0m  [["question_id", 31], ["LIMIT", 1]]
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (29.48ms)
Completed 200 OK in 206ms (Views: 42.2ms | ActiveRecord: 19.0ms)


Started GET "/api/v1/random" for ::1 at 2016-06-19 16:52:46 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.9ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 11]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (261.16ms)
Completed 200 OK in 313ms (Views: 267.7ms | ActiveRecord: 1.7ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-19 16:52:48 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"answer-id"=>nil, "content"=>"ss", "vote-count"=>nil, "vote-score"=>nil}, "question"=>{"data"=>{"id"=>"11", "attributes"=>{"content"=>"Describe a time when you were able to improve upon the design that was originally suggested?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: answer-id, vote-count, vote-score
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 11], ["LIMIT", 1]]
  [1m[35m (0.5ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.8ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "ss"], ["question_id", 11], ["created_at", 2016-06-19 20:52:48 UTC], ["updated_at", 2016-06-19 20:52:48 UTC]]
  [1m[35m (1.8ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mAnswer Load (0.9ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."question_id" = $1 ORDER BY "answers"."id" DESC LIMIT $2[0m  [["question_id", 11], ["LIMIT", 1]]
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (28.83ms)
Completed 200 OK in 192ms (Views: 37.9ms | ActiveRecord: 4.7ms)


Started GET "/api/v1/answers/21" for ::1 at 2016-06-19 16:52:50 -0400
Processing by Api::V1::AnswersController#show as JSON
  Parameters: {"id"=>"21"}
  [1m[36mAnswer Load (1.1ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."id" = $1 LIMIT $2[0m  [["id", 21], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mQuestion Load (1.0ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 11], ["LIMIT", 1]]
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (50.83ms)
Completed 200 OK in 88ms (Views: 60.5ms | ActiveRecord: 2.1ms)


Started PATCH "/api/v1/answers/21" for ::1 at 2016-06-19 16:52:50 -0400
Processing by Api::V1::AnswersController#update as JSON
  Parameters: {"data"=>{"id"=>"21", "attributes"=>{"answer-id"=>nil, "content"=>"adsgdsfghdfsh", "vote-count"=>1, "vote-score"=>0}, "question"=>{"data"=>{"id"=>"11", "attributes"=>{"content"=>"Describe a time when you were able to improve upon the design that was originally suggested?"}, "type"=>"questions"}}, "type"=>"answers"}, "id"=>"21", "answer"=>{}}
  [1m[36mAnswer Load (0.6ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."id" = $1 LIMIT $2[0m  [["id", 21], ["LIMIT", 1]]
  [1m[35m (0.6ms)[0m  [1m[35mBEGIN[0m
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 11], ["LIMIT", 1]]
  [1m[35mSQL (0.8ms)[0m  [1m[33mUPDATE "answers" SET "vote_count" = $1, "updated_at" = $2 WHERE "answers"."id" = $3[0m  [["vote_count", 1], ["updated_at", 2016-06-19 20:52:50 UTC], ["id", 21]]
  [1m[35m (1.6ms)[0m  [1m[35mCOMMIT[0m
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (28.6ms)
Completed 200 OK in 149ms (Views: 40.2ms | ActiveRecord: 4.3ms)


Started GET "/api/v1/random" for ::1 at 2016-06-19 16:53:45 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (1.6ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.8ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 32]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (283.23ms)
Completed 200 OK in 337ms (Views: 290.5ms | ActiveRecord: 2.4ms)


Started GET "/api/v1/random" for ::1 at 2016-06-19 16:57:39 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (1.0ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.8ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 5]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (339.61ms)
Completed 200 OK in 468ms (Views: 380.0ms | ActiveRecord: 1.8ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-19 16:57:54 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"answer-id"=>nil, "content"=>"dddd", "vote-count"=>nil, "vote-score"=>nil}, "question"=>{"data"=>{"id"=>"5", "attributes"=>{"content"=>"What did you like least about your last job?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: answer-id, vote-count, vote-score
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (5.7ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 5], ["LIMIT", 1]]
  [1m[35m (0.8ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (1.0ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "dddd"], ["question_id", 5], ["created_at", 2016-06-19 20:57:54 UTC], ["updated_at", 2016-06-19 20:57:54 UTC]]
  [1m[35m (64.8ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mAnswer Load (1.7ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."question_id" = $1 ORDER BY "answers"."id" DESC LIMIT $2[0m  [["question_id", 5], ["LIMIT", 1]]
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (29.21ms)
Completed 200 OK in 279ms (Views: 39.3ms | ActiveRecord: 74.0ms)


Started GET "/api/v1/answers/37" for ::1 at 2016-06-20 09:22:18 -0400
Processing by Api::V1::AnswersController#show as JSON
  Parameters: {"id"=>"37"}
  [1m[36mAnswer Load (476.2ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."id" = $1 LIMIT $2[0m  [["id", 37], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mQuestion Load (116.9ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 5], ["LIMIT", 1]]
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (192.23ms)
Completed 200 OK in 715ms (Views: 84.2ms | ActiveRecord: 593.1ms)


Started PATCH "/api/v1/answers/37" for ::1 at 2016-06-20 09:22:20 -0400
Processing by Api::V1::AnswersController#update as JSON
  Parameters: {"data"=>{"id"=>"37", "attributes"=>{"answer-id"=>nil, "content"=>"asdfsadf", "vote-count"=>1, "vote-score"=>0}, "question"=>{"data"=>{"id"=>"5", "attributes"=>{"content"=>"What did you like least about your last job?"}, "type"=>"questions"}}, "type"=>"answers"}, "id"=>"37", "answer"=>{}}
  [1m[36mAnswer Load (0.9ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."id" = $1 LIMIT $2[0m  [["id", 37], ["LIMIT", 1]]
  [1m[35m (117.1ms)[0m  [1m[35mBEGIN[0m
  [1m[36mQuestion Load (0.9ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 5], ["LIMIT", 1]]
  [1m[35mSQL (389.4ms)[0m  [1m[33mUPDATE "answers" SET "vote_count" = $1, "updated_at" = $2 WHERE "answers"."id" = $3[0m  [["vote_count", 1], ["updated_at", 2016-06-20 13:22:21 UTC], ["id", 37]]
  [1m[35m (1098.9ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 1714ms (ActiveRecord: 1607.2ms)


Started GET "/api/v1/random" for ::1 at 2016-06-20 09:22:34 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (552.5ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (1.5ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 16]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (231.31ms)
Completed 200 OK in 848ms (Views: 239.6ms | ActiveRecord: 554.0ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-20 09:22:38 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"answer-id"=>nil, "content"=>"asdadassa", "vote-count"=>nil, "vote-score"=>nil}, "question"=>{"data"=>{"id"=>"16", "attributes"=>{"content"=>"Tell me about your long-term goals."}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: answer-id, vote-count, vote-score
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (1.1ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 16], ["LIMIT", 1]]
  [1m[35m (0.6ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (588.6ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "asdadassa"], ["question_id", 16], ["created_at", 2016-06-20 13:22:38 UTC], ["updated_at", 2016-06-20 13:22:38 UTC]]
  [1m[35m (2021.0ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mAnswer Load (131.8ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."question_id" = $1 ORDER BY "answers"."id" DESC LIMIT $2[0m  [["question_id", 16], ["LIMIT", 1]]
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (31.33ms)
Completed 200 OK in 2944ms (Views: 38.6ms | ActiveRecord: 2743.1ms)


Started GET "/api/v1/answers/25" for ::1 at 2016-06-20 09:22:41 -0400
Processing by Api::V1::AnswersController#show as JSON
  Parameters: {"id"=>"25"}
  [1m[36mAnswer Load (1.0ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."id" = $1 LIMIT $2[0m  [["id", 25], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mQuestion Load (1.1ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 16], ["LIMIT", 1]]
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (52.34ms)
Completed 200 OK in 83ms (Views: 62.1ms | ActiveRecord: 2.1ms)


Started PATCH "/api/v1/answers/25" for ::1 at 2016-06-20 09:22:42 -0400
Processing by Api::V1::AnswersController#update as JSON
  Parameters: {"data"=>{"id"=>"25", "attributes"=>{"answer-id"=>nil, "content"=>"dzfhsdf", "vote-count"=>1, "vote-score"=>0}, "question"=>{"data"=>{"id"=>"16", "attributes"=>{"content"=>"Tell me about your long-term goals."}, "type"=>"questions"}}, "type"=>"answers"}, "id"=>"25", "answer"=>{}}
  [1m[36mAnswer Load (0.9ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."id" = $1 LIMIT $2[0m  [["id", 25], ["LIMIT", 1]]
  [1m[35m (0.7ms)[0m  [1m[35mBEGIN[0m
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 16], ["LIMIT", 1]]
  [1m[35mSQL (1.1ms)[0m  [1m[33mUPDATE "answers" SET "vote_count" = $1, "updated_at" = $2 WHERE "answers"."id" = $3[0m  [["vote_count", 1], ["updated_at", 2016-06-20 13:22:43 UTC], ["id", 25]]
  [1m[35m (1877.9ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 2950ms (ActiveRecord: 1881.3ms)


Started GET "/api/v1/random" for ::1 at 2016-06-20 09:47:46 -0400
  [1m[36mActiveRecord::SchemaMigration Load (0.5ms)[0m  [1m[34mSELECT "schema_migrations".* FROM "schema_migrations"[0m
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (26.1ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 4]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (255.23ms)
Completed 200 OK in 393ms (Views: 316.1ms | ActiveRecord: 74.9ms)


Started GET "/api/v1/random" for ::1 at 2016-06-20 09:47:49 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.3ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 10]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (5.89ms)
Completed 200 OK in 8ms (Views: 6.1ms | ActiveRecord: 0.6ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-20 09:47:52 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"answer-id"=>nil, "content"=>"dsfsdf", "vote-count"=>nil, "vote-score"=>nil}, "question"=>{"data"=>{"id"=>"10", "attributes"=>{"content"=>"How did you learn web development?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: answer-id, vote-count, vote-score
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (1.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 10], ["LIMIT", 1]]
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (16.3ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "dsfsdf"], ["question_id", 10], ["created_at", 2016-06-20 13:47:52 UTC], ["updated_at", 2016-06-20 13:47:52 UTC]]
  [1m[35m (1.8ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mAnswer Load (0.8ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."question_id" = $1 ORDER BY "answers"."id" DESC LIMIT $2[0m  [["question_id", 10], ["LIMIT", 1]]
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (1.3ms)
Completed 200 OK in 34ms (Views: 2.1ms | ActiveRecord: 20.2ms)


Started GET "/api/v1/answers/66" for ::1 at 2016-06-20 09:47:54 -0400
Processing by Api::V1::AnswersController#show as JSON
  Parameters: {"id"=>"66"}
  [1m[36mAnswer Load (0.4ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."id" = $1 LIMIT $2[0m  [["id", 66], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 10], ["LIMIT", 1]]
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (3.84ms)
Completed 200 OK in 7ms (Views: 4.2ms | ActiveRecord: 0.7ms)


Started PATCH "/api/v1/answers/66" for ::1 at 2016-06-20 09:47:54 -0400
Processing by Api::V1::AnswersController#update as JSON
  Parameters: {"data"=>{"id"=>"66", "attributes"=>{"answer-id"=>nil, "content"=>"asdfasdfsa", "vote-count"=>5, "vote-score"=>0}, "question"=>{"data"=>{"id"=>"10", "attributes"=>{"content"=>"How did you learn web development?"}, "type"=>"questions"}}, "type"=>"answers"}, "id"=>"66", "answer"=>{}}
  [1m[36mAnswer Load (0.3ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."id" = $1 LIMIT $2[0m  [["id", 66], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 10], ["LIMIT", 1]]
  [1m[35mSQL (0.4ms)[0m  [1m[33mUPDATE "answers" SET "vote_count" = $1, "updated_at" = $2 WHERE "answers"."id" = $3[0m  [["vote_count", 5], ["updated_at", 2016-06-20 13:47:54 UTC], ["id", 66]]
  [1m[35m (20.3ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 26ms (ActiveRecord: 21.2ms)


Started GET "/api/v1/random" for ::1 at 2016-06-20 09:48:34 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.3ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 3]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (5.25ms)
Completed 200 OK in 7ms (Views: 5.5ms | ActiveRecord: 0.7ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-20 09:48:36 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"answer-id"=>nil, "content"=>"ddd", "vote-count"=>nil, "vote-score"=>nil}, "question"=>{"data"=>{"id"=>"3", "attributes"=>{"content"=>"What are your strengths and weaknesses?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: answer-id, vote-count, vote-score
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 3], ["LIMIT", 1]]
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.8ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "ddd"], ["question_id", 3], ["created_at", 2016-06-20 13:48:36 UTC], ["updated_at", 2016-06-20 13:48:36 UTC]]
  [1m[35m (2.6ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mAnswer Load (0.6ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."question_id" = $1 ORDER BY "answers"."id" DESC LIMIT $2[0m  [["question_id", 3], ["LIMIT", 1]]
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (1.17ms)
Completed 200 OK in 15ms (Views: 1.8ms | ActiveRecord: 4.6ms)


Started GET "/api/v1/answers/45" for ::1 at 2016-06-20 09:48:37 -0400
Processing by Api::V1::AnswersController#show as JSON
  Parameters: {"id"=>"45"}
  [1m[36mAnswer Load (0.3ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."id" = $1 LIMIT $2[0m  [["id", 45], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 3], ["LIMIT", 1]]
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (1.85ms)
Completed 200 OK in 3ms (Views: 2.0ms | ActiveRecord: 0.5ms)


Started PATCH "/api/v1/answers/45" for ::1 at 2016-06-20 09:48:37 -0400
Processing by Api::V1::AnswersController#update as JSON
  Parameters: {"data"=>{"id"=>"45", "attributes"=>{"answer-id"=>nil, "content"=>"asdggs", "vote-count"=>1, "vote-score"=>0}, "question"=>{"data"=>{"id"=>"3", "attributes"=>{"content"=>"What are your strengths and weaknesses?"}, "type"=>"questions"}}, "type"=>"answers"}, "id"=>"45", "answer"=>{}}
  [1m[36mAnswer Load (0.3ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."id" = $1 LIMIT $2[0m  [["id", 45], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 3], ["LIMIT", 1]]
  [1m[35mSQL (0.3ms)[0m  [1m[33mUPDATE "answers" SET "vote_count" = $1, "updated_at" = $2 WHERE "answers"."id" = $3[0m  [["vote_count", 1], ["updated_at", 2016-06-20 13:48:37 UTC], ["id", 45]]
  [1m[35m (1.0ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 6ms (ActiveRecord: 2.0ms)


Started PATCH "/api/v1/answers/45" for ::1 at 2016-06-20 09:49:08 -0400
Processing by Api::V1::AnswersController#update as JSON
  Parameters: {"data"=>{"id"=>"45", "attributes"=>{"answer-id"=>nil, "content"=>"asdggs", "vote-count"=>2, "vote-score"=>0}, "question"=>{"data"=>{"id"=>"3", "attributes"=>{"content"=>"What are your strengths and weaknesses?"}, "type"=>"questions"}}, "type"=>"answers"}, "id"=>"45", "answer"=>{}}
  [1m[36mAnswer Load (0.5ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."id" = $1 LIMIT $2[0m  [["id", 45], ["LIMIT", 1]]
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 3], ["LIMIT", 1]]
  [1m[35mSQL (0.4ms)[0m  [1m[33mUPDATE "answers" SET "vote_count" = $1, "updated_at" = $2 WHERE "answers"."id" = $3[0m  [["vote_count", 2], ["updated_at", 2016-06-20 13:49:08 UTC], ["id", 45]]
Started GET "/api/v1/answers/45" for ::1 at 2016-06-20 09:49:08 -0400
Processing by Api::V1::AnswersController#show as JSON
  Parameters: {"id"=>"45"}
  [1m[36mAnswer Load (0.9ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."id" = $1 LIMIT $2[0m  [["id", 45], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 3], ["LIMIT", 1]]
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (2.25ms)
Completed 200 OK in 4ms (Views: 2.1ms | ActiveRecord: 1.4ms)


  [1m[35m (303.9ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 311ms (ActiveRecord: 305.2ms)


Started GET "/api/v1/random" for ::1 at 2016-06-20 09:50:55 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.4ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 20]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (20.63ms)
Completed 200 OK in 44ms (Views: 38.4ms | ActiveRecord: 0.7ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-20 09:50:57 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"answer-id"=>nil, "content"=>"sdsds", "vote-count"=>nil, "vote-score"=>nil}, "question"=>{"data"=>{"id"=>"20", "attributes"=>{"content"=>"Please walk me through one of the projects on your resume."}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: answer-id, vote-count, vote-score
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 20], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.9ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "sdsds"], ["question_id", 20], ["created_at", 2016-06-20 13:50:57 UTC], ["updated_at", 2016-06-20 13:50:57 UTC]]
  [1m[35m (104.0ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mAnswer Load (0.9ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."question_id" = $1 ORDER BY "answers"."id" DESC LIMIT $2[0m  [["question_id", 20], ["LIMIT", 1]]
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (0.9ms)
Completed 200 OK in 141ms (Views: 1.5ms | ActiveRecord: 106.6ms)


Started GET "/api/v1/answers/35" for ::1 at 2016-06-20 09:50:59 -0400
Processing by Api::V1::AnswersController#show as JSON
  Parameters: {"id"=>"35"}
  [1m[36mAnswer Load (0.3ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."id" = $1 LIMIT $2[0m  [["id", 35], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 20], ["LIMIT", 1]]
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (14.16ms)
Completed 200 OK in 16ms (Views: 14.3ms | ActiveRecord: 0.6ms)


Started PATCH "/api/v1/answers/35" for ::1 at 2016-06-20 09:50:59 -0400
Processing by Api::V1::AnswersController#update as JSON
  Parameters: {"data"=>{"id"=>"35", "attributes"=>{"answer-id"=>nil, "content"=>"dsafadsf", "vote-count"=>1, "vote-score"=>0}, "question"=>{"data"=>{"id"=>"20", "attributes"=>{"content"=>"Please walk me through one of the projects on your resume."}, "type"=>"questions"}}, "type"=>"answers"}, "id"=>"35", "answer"=>{}}
  [1m[36mAnswer Load (0.3ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."id" = $1 LIMIT $2[0m  [["id", 35], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 20], ["LIMIT", 1]]
  [1m[35mSQL (0.5ms)[0m  [1m[33mUPDATE "answers" SET "vote_count" = $1, "updated_at" = $2 WHERE "answers"."id" = $3[0m  [["vote_count", 1], ["updated_at", 2016-06-20 13:50:59 UTC], ["id", 35]]
  [1m[35m (38.3ms)[0m  [1m[35mCOMMIT[0m
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (0.74ms)
Completed 200 OK in 45ms (Views: 1.3ms | ActiveRecord: 39.4ms)


Started GET "/api/v1/random" for ::1 at 2016-06-20 09:51:52 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (1.4ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.5ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 11]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (19.21ms)
Completed 200 OK in 25ms (Views: 20.5ms | ActiveRecord: 1.9ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-20 09:51:54 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"answer-id"=>nil, "content"=>"sadfsdf", "vote-count"=>nil, "vote-score"=>nil}, "question"=>{"data"=>{"id"=>"11", "attributes"=>{"content"=>"Describe a time when you were able to improve upon the design that was originally suggested?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: answer-id, vote-count, vote-score
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 11], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "sadfsdf"], ["question_id", 11], ["created_at", 2016-06-20 13:51:54 UTC], ["updated_at", 2016-06-20 13:51:54 UTC]]
  [1m[35m (15.4ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mAnswer Load (0.6ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."question_id" = $1 ORDER BY "answers"."id" DESC LIMIT $2[0m  [["question_id", 11], ["LIMIT", 1]]
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (0.83ms)
Completed 200 OK in 25ms (Views: 1.6ms | ActiveRecord: 16.8ms)


Started GET "/api/v1/answers/42" for ::1 at 2016-06-20 09:51:55 -0400
Processing by Api::V1::AnswersController#show as JSON
  Parameters: {"id"=>"42"}
  [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."id" = $1 LIMIT $2[0m  [["id", 42], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 11], ["LIMIT", 1]]
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (2.19ms)
Completed 200 OK in 4ms (Views: 2.4ms | ActiveRecord: 0.4ms)


Started GET "/api/v1/random" for ::1 at 2016-06-20 09:52:10 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.3ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 12]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (4.34ms)
Completed 200 OK in 6ms (Views: 4.5ms | ActiveRecord: 0.7ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-20 09:52:11 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"answer-id"=>nil, "content"=>"sdfsdf", "vote-count"=>nil, "vote-score"=>nil}, "question"=>{"data"=>{"id"=>"12", "attributes"=>{"content"=>"So tell me about yourself."}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: answer-id, vote-count, vote-score
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 12], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "sdfsdf"], ["question_id", 12], ["created_at", 2016-06-20 13:52:11 UTC], ["updated_at", 2016-06-20 13:52:11 UTC]]
  [1m[35m (1.0ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mAnswer Load (0.6ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."question_id" = $1 ORDER BY "answers"."id" DESC LIMIT $2[0m  [["question_id", 12], ["LIMIT", 1]]
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (1.06ms)
Completed 200 OK in 10ms (Views: 1.7ms | ActiveRecord: 2.4ms)


Started GET "/api/v1/answers/16" for ::1 at 2016-06-20 09:52:13 -0400
Processing by Api::V1::AnswersController#show as JSON
  Parameters: {"id"=>"16"}
  [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."id" = $1 LIMIT $2[0m  [["id", 16], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 12], ["LIMIT", 1]]
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (1.95ms)
Completed 200 OK in 3ms (Views: 2.2ms | ActiveRecord: 0.4ms)


Started GET "/api/v1/random" for ::1 at 2016-06-20 09:52:29 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.3ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 21]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (7.97ms)
Completed 200 OK in 10ms (Views: 8.3ms | ActiveRecord: 0.7ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-20 09:52:31 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"answer-id"=>nil, "content"=>"sdsdds", "vote-count"=>nil, "vote-score"=>nil}, "question"=>{"data"=>{"id"=>"21", "attributes"=>{"content"=>"What is the difference between classical inheritance and prototypal inheritance? "}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: answer-id, vote-count, vote-score
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 21], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "sdsdds"], ["question_id", 21], ["created_at", 2016-06-20 13:52:31 UTC], ["updated_at", 2016-06-20 13:52:31 UTC]]
  [1m[35m (0.9ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mAnswer Load (0.4ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."question_id" = $1 ORDER BY "answers"."id" DESC LIMIT $2[0m  [["question_id", 21], ["LIMIT", 1]]
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (0.78ms)
Completed 200 OK in 9ms (Views: 1.4ms | ActiveRecord: 2.2ms)


Started GET "/api/v1/answers/60" for ::1 at 2016-06-20 09:52:32 -0400
Processing by Api::V1::AnswersController#show as JSON
  Parameters: {"id"=>"60"}
  [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."id" = $1 LIMIT $2[0m  [["id", 60], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mQuestion Load (0.1ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 21], ["LIMIT", 1]]
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (1.91ms)
Completed 200 OK in 3ms (Views: 2.1ms | ActiveRecord: 0.4ms)


Started PATCH "/api/v1/answers/60" for ::1 at 2016-06-20 09:52:32 -0400
Processing by Api::V1::AnswersController#update as JSON
  Parameters: {"data"=>{"id"=>"60", "attributes"=>{"answer-id"=>nil, "content"=>"asdfadsf", "vote-count"=>1, "vote-score"=>0}, "question"=>{"data"=>{"id"=>"21", "attributes"=>{"content"=>"What is the difference between classical inheritance and prototypal inheritance? "}, "type"=>"questions"}}, "type"=>"answers"}, "id"=>"60", "answer"=>{}}
  [1m[36mAnswer Load (0.3ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."id" = $1 LIMIT $2[0m  [["id", 60], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 21], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mCOMMIT[0m
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (0.84ms)
Completed 200 OK in 5ms (Views: 1.3ms | ActiveRecord: 0.8ms)


Started PATCH "/api/v1/answers/60" for ::1 at 2016-06-20 09:52:40 -0400
Started GET "/api/v1/answers/60" for ::1 at 2016-06-20 09:52:40 -0400
Processing by Api::V1::AnswersController#update as JSON
Processing by Api::V1::AnswersController#show as JSON
  Parameters: {"data"=>{"id"=>"60", "attributes"=>{"answer-id"=>nil, "content"=>"asdfadsf", "vote-count"=>1, "vote-score"=>0}, "question"=>{"data"=>{"id"=>"21", "attributes"=>{"content"=>"What is the difference between classical inheritance and prototypal inheritance? "}, "type"=>"questions"}}, "type"=>"answers"}, "id"=>"60", "answer"=>{}}
  Parameters: {"id"=>"60"}
  [1m[36mAnswer Load (0.3ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."id" = $1 LIMIT $2[0m  [["id", 60], ["LIMIT", 1]]
  [1m[36mAnswer Load (0.5ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."id" = $1 LIMIT $2[0m  [["id", 60], ["LIMIT", 1]]
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
[active_model_serializers]   [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 21], ["LIMIT", 1]]
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (2.32ms)
  [1m[36mQuestion Load (0.9ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 21], ["LIMIT", 1]]
Completed 200 OK in 4ms (Views: 2.2ms | ActiveRecord: 1.2ms)


  [1m[35m (0.6ms)[0m  [1m[35mCOMMIT[0m
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (0.83ms)
Completed 200 OK in 8ms (Views: 1.4ms | ActiveRecord: 1.9ms)


Started PATCH "/api/v1/answers/60" for ::1 at 2016-06-20 09:52:41 -0400
Processing by Api::V1::AnswersController#update as JSON
  Parameters: {"data"=>{"id"=>"60", "attributes"=>{"answer-id"=>nil, "content"=>"asdfadsf", "vote-count"=>1, "vote-score"=>0}, "question"=>{"data"=>{"id"=>"21", "attributes"=>{"content"=>"What is the difference between classical inheritance and prototypal inheritance? "}, "type"=>"questions"}}, "type"=>"answers"}, "id"=>"60", "answer"=>{}}
Started GET "/api/v1/answers/60" for ::1 at 2016-06-20 09:52:41 -0400
Processing by Api::V1::AnswersController#show as JSON
  [1m[36mAnswer Load (1.5ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."id" = $1 LIMIT $2[0m  [["id", 60], ["LIMIT", 1]]
  Parameters: {"id"=>"60"}
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[36mAnswer Load (1.1ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."id" = $1 LIMIT $2[0m  [["id", 60], ["LIMIT", 1]]
  [1m[36mQuestion Load (1.5ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 21], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mQuestion Load (1.0ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 21], ["LIMIT", 1]]
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (2.58ms)
Completed 200 OK in 5ms (Views: 2.0ms | ActiveRecord: 2.1ms)


  [1m[35m (1.4ms)[0m  [1m[35mCOMMIT[0m
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (1.2ms)
Completed 200 OK in 10ms (Views: 1.9ms | ActiveRecord: 4.5ms)


Started PATCH "/api/v1/answers/60" for ::1 at 2016-06-20 09:52:41 -0400
Processing by Api::V1::AnswersController#update as JSON
  Parameters: {"data"=>{"id"=>"60", "attributes"=>{"answer-id"=>nil, "content"=>"asdfadsf", "vote-count"=>1, "vote-score"=>0}, "question"=>{"data"=>{"id"=>"21", "attributes"=>{"content"=>"What is the difference between classical inheritance and prototypal inheritance? "}, "type"=>"questions"}}, "type"=>"answers"}, "id"=>"60", "answer"=>{}}
Started GET "/api/v1/answers/60" for ::1 at 2016-06-20 09:52:41 -0400
Processing by Api::V1::AnswersController#show as JSON
  Parameters: {"id"=>"60"}
  [1m[36mAnswer Load (1.5ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."id" = $1 LIMIT $2[0m  [["id", 60], ["LIMIT", 1]]
  [1m[36mAnswer Load (0.5ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."id" = $1 LIMIT $2[0m  [["id", 60], ["LIMIT", 1]]
  [1m[35m (1.8ms)[0m  [1m[35mBEGIN[0m
[active_model_serializers]   [1m[36mQuestion Load (1.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 21], ["LIMIT", 1]]
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (2.99ms)
Completed 200 OK in 5ms (Views: 2.3ms | ActiveRecord: 1.7ms)


  [1m[36mQuestion Load (1.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 21], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mCOMMIT[0m
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (0.86ms)
Completed 200 OK in 10ms (Views: 1.5ms | ActiveRecord: 4.9ms)


Started PATCH "/api/v1/answers/60" for ::1 at 2016-06-20 09:52:46 -0400
Processing by Api::V1::AnswersController#update as JSON
  Parameters: {"data"=>{"id"=>"60", "attributes"=>{"answer-id"=>nil, "content"=>"asdfadsf", "vote-count"=>1, "vote-score"=>0}, "question"=>{"data"=>{"id"=>"21", "attributes"=>{"content"=>"What is the difference between classical inheritance and prototypal inheritance? "}, "type"=>"questions"}}, "type"=>"answers"}, "id"=>"60", "answer"=>{}}
Started GET "/api/v1/answers/60" for ::1 at 2016-06-20 09:52:46 -0400
Processing by Api::V1::AnswersController#show as JSON
  [1m[36mAnswer Load (1.3ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."id" = $1 LIMIT $2[0m  [["id", 60], ["LIMIT", 1]]
  Parameters: {"id"=>"60"}
  [1m[35m (0.5ms)[0m  [1m[35mBEGIN[0m
  [1m[36mAnswer Load (1.0ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."id" = $1 LIMIT $2[0m  [["id", 60], ["LIMIT", 1]]
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 21], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mQuestion Load (0.9ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 21], ["LIMIT", 1]]
  [1m[35m (0.2ms)[0m  [1m[35mCOMMIT[0m
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (2.73ms)
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (0.67ms)
Completed 200 OK in 6ms (Views: 3.4ms | ActiveRecord: 1.9ms)


Completed 200 OK in 9ms (Views: 1.3ms | ActiveRecord: 2.3ms)


Started GET "/api/v1/random" for ::1 at 2016-06-20 09:53:37 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.5ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 5]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (5.5ms)
Completed 200 OK in 9ms (Views: 5.8ms | ActiveRecord: 0.7ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-20 09:53:39 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"answer-id"=>nil, "content"=>"sdfgsfdg", "vote-count"=>nil, "vote-score"=>nil}, "question"=>{"data"=>{"id"=>"5", "attributes"=>{"content"=>"What did you like least about your last job?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: answer-id, vote-count, vote-score
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 5], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "sdfgsfdg"], ["question_id", 5], ["created_at", 2016-06-20 13:53:39 UTC], ["updated_at", 2016-06-20 13:53:39 UTC]]
  [1m[35m (166.5ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mAnswer Load (0.5ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."question_id" = $1 ORDER BY "answers"."id" DESC LIMIT $2[0m  [["question_id", 5], ["LIMIT", 1]]
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (0.8ms)
Completed 200 OK in 175ms (Views: 1.3ms | ActiveRecord: 167.7ms)


Started GET "/api/v1/answers/59" for ::1 at 2016-06-20 09:53:40 -0400
Processing by Api::V1::AnswersController#show as JSON
  Parameters: {"id"=>"59"}
  [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."id" = $1 LIMIT $2[0m  [["id", 59], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 5], ["LIMIT", 1]]
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (2.46ms)
Completed 200 OK in 4ms (Views: 2.8ms | ActiveRecord: 0.4ms)


Started PATCH "/api/v1/answers/59" for ::1 at 2016-06-20 09:53:40 -0400
Processing by Api::V1::AnswersController#update as JSON
  Parameters: {"data"=>{"id"=>"59", "attributes"=>{"answer-id"=>nil, "content"=>"asdfadsf", "vote-count"=>0, "vote-score"=>0}, "question"=>{"data"=>{"id"=>"5", "attributes"=>{"content"=>"What did you like least about your last job?"}, "type"=>"questions"}}, "type"=>"answers"}, "id"=>"59", "answer"=>{}}
  [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."id" = $1 LIMIT $2[0m  [["id", 59], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 5], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mCOMMIT[0m
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (0.89ms)
Completed 200 OK in 6ms (Views: 1.6ms | ActiveRecord: 0.7ms)


Started GET "/api/v1/random" for ::1 at 2016-06-20 09:54:02 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 3]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (6.97ms)
Completed 200 OK in 12ms (Views: 7.4ms | ActiveRecord: 0.9ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-20 09:54:03 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"answer-id"=>nil, "content"=>"asdfads", "vote-count"=>nil, "vote-score"=>nil}, "question"=>{"data"=>{"id"=>"3", "attributes"=>{"content"=>"What are your strengths and weaknesses?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: answer-id, vote-count, vote-score
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 3], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "asdfads"], ["question_id", 3], ["created_at", 2016-06-20 13:54:03 UTC], ["updated_at", 2016-06-20 13:54:03 UTC]]
  [1m[35m (144.0ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mAnswer Load (0.4ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."question_id" = $1 ORDER BY "answers"."id" DESC LIMIT $2[0m  [["question_id", 3], ["LIMIT", 1]]
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (1.21ms)
Completed 200 OK in 155ms (Views: 1.8ms | ActiveRecord: 145.3ms)


Started GET "/api/v1/answers/46" for ::1 at 2016-06-20 09:55:44 -0400
Processing by Api::V1::AnswersController#show as JSON
  Parameters: {"id"=>"46"}
  [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."id" = $1 LIMIT $2[0m  [["id", 46], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 3], ["LIMIT", 1]]
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (2.16ms)
Completed 200 OK in 4ms (Views: 2.4ms | ActiveRecord: 0.4ms)


Started PATCH "/api/v1/answers/46" for ::1 at 2016-06-20 09:55:44 -0400
Processing by Api::V1::AnswersController#update as JSON
  Parameters: {"data"=>{"id"=>"46", "attributes"=>{"answer-id"=>nil, "content"=>"DFDSG", "vote-count"=>0, "vote-score"=>0}, "question"=>{"data"=>{"id"=>"3", "attributes"=>{"content"=>"What are your strengths and weaknesses?"}, "type"=>"questions"}}, "type"=>"answers"}, "id"=>"46", "answer"=>{}}
  [1m[36mAnswer Load (0.5ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."id" = $1 LIMIT $2[0m  [["id", 46], ["LIMIT", 1]]
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 3], ["LIMIT", 1]]
  [1m[35m (0.2ms)[0m  [1m[35mCOMMIT[0m
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (1.5ms)
Completed 200 OK in 9ms (Views: 2.9ms | ActiveRecord: 1.2ms)


Started GET "/api/v1/random" for ::1 at 2016-06-20 09:55:50 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.3ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 6]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (4.7ms)
Completed 200 OK in 7ms (Views: 5.2ms | ActiveRecord: 0.6ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-20 09:55:51 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"answer-id"=>nil, "content"=>"sadfadsf", "vote-count"=>nil, "vote-score"=>nil}, "question"=>{"data"=>{"id"=>"6", "attributes"=>{"content"=>"How does the web work?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: answer-id, vote-count, vote-score
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 6], ["LIMIT", 1]]
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (1.3ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "sadfadsf"], ["question_id", 6], ["created_at", 2016-06-20 13:55:51 UTC], ["updated_at", 2016-06-20 13:55:51 UTC]]
  [1m[35m (42.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mAnswer Load (0.5ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."question_id" = $1 ORDER BY "answers"."id" DESC LIMIT $2[0m  [["question_id", 6], ["LIMIT", 1]]
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (0.84ms)
Completed 200 OK in 61ms (Views: 1.4ms | ActiveRecord: 44.6ms)


Started GET "/api/v1/answers/47" for ::1 at 2016-06-20 09:55:53 -0400
Processing by Api::V1::AnswersController#show as JSON
  Parameters: {"id"=>"47"}
  [1m[36mAnswer Load (0.3ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."id" = $1 LIMIT $2[0m  [["id", 47], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 6], ["LIMIT", 1]]
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (2.55ms)
Completed 200 OK in 4ms (Views: 2.9ms | ActiveRecord: 0.5ms)


Started PATCH "/api/v1/answers/47" for ::1 at 2016-06-20 09:55:53 -0400
Processing by Api::V1::AnswersController#update as JSON
  Parameters: {"data"=>{"id"=>"47", "attributes"=>{"answer-id"=>nil, "content"=>"asdfsadf", "vote-count"=>0, "vote-score"=>0}, "question"=>{"data"=>{"id"=>"6", "attributes"=>{"content"=>"How does the web work?"}, "type"=>"questions"}}, "type"=>"answers"}, "id"=>"47", "answer"=>{}}
  [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."id" = $1 LIMIT $2[0m  [["id", 47], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 6], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mCOMMIT[0m
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (0.85ms)
Completed 200 OK in 5ms (Views: 1.3ms | ActiveRecord: 0.6ms)


Started PATCH "/api/v1/answers/47" for ::1 at 2016-06-20 09:55:54 -0400
Processing by Api::V1::AnswersController#update as JSON
  Parameters: {"data"=>{"id"=>"47", "attributes"=>{"answer-id"=>nil, "content"=>"asdfsadf", "vote-count"=>0, "vote-score"=>0}, "question"=>{"data"=>{"id"=>"6", "attributes"=>{"content"=>"How does the web work?"}, "type"=>"questions"}}, "type"=>"answers"}, "id"=>"47", "answer"=>{}}
  [1m[36mAnswer Load (0.5ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."id" = $1 LIMIT $2[0m  [["id", 47], ["LIMIT", 1]]
Started GET "/api/v1/answers/47" for ::1 at 2016-06-20 09:55:54 -0400
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
Processing by Api::V1::AnswersController#show as JSON
  Parameters: {"id"=>"47"}
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 6], ["LIMIT", 1]]
  [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."id" = $1 LIMIT $2[0m  [["id", 47], ["LIMIT", 1]]
  [1m[35m (1.5ms)[0m  [1m[35mCOMMIT[0m
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (0.73ms)
Completed 200 OK in 9ms (Views: 1.2ms | ActiveRecord: 2.6ms)


[active_model_serializers]   [1m[36mQuestion Load (1.7ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 6], ["LIMIT", 1]]
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (3.3ms)
Completed 200 OK in 6ms (Views: 2.2ms | ActiveRecord: 1.9ms)


Started GET "/api/v1/random" for ::1 at 2016-06-20 09:56:56 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.3ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 26]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (5.44ms)
Completed 200 OK in 8ms (Views: 5.8ms | ActiveRecord: 0.7ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-20 09:56:58 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"answer-id"=>nil, "content"=>"asddasffds", "vote-count"=>nil, "vote-score"=>nil}, "question"=>{"data"=>{"id"=>"26", "attributes"=>{"content"=>"Why do you want to work for us?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: answer-id, vote-count, vote-score
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 26], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.7ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "asddasffds"], ["question_id", 26], ["created_at", 2016-06-20 13:56:58 UTC], ["updated_at", 2016-06-20 13:56:58 UTC]]
  [1m[35m (117.4ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mAnswer Load (0.6ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."question_id" = $1 ORDER BY "answers"."id" DESC LIMIT $2[0m  [["question_id", 26], ["LIMIT", 1]]
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (0.91ms)
Completed 200 OK in 128ms (Views: 1.4ms | ActiveRecord: 119.1ms)


Started GET "/api/v1/answers/10" for ::1 at 2016-06-20 09:57:50 -0400
Processing by Api::V1::AnswersController#show as JSON
  Parameters: {"id"=>"10"}
  [1m[36mAnswer Load (0.3ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."id" = $1 LIMIT $2[0m  [["id", 10], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 26], ["LIMIT", 1]]
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (32.96ms)
Completed 200 OK in 35ms (Views: 33.4ms | ActiveRecord: 0.5ms)


Started PATCH "/api/v1/answers/10" for ::1 at 2016-06-20 09:57:50 -0400
Processing by Api::V1::AnswersController#update as JSON
  Parameters: {"data"=>{"id"=>"10", "attributes"=>{"answer-id"=>nil, "content"=>"asasfasf", "vote-count"=>0, "vote-score"=>0}, "question"=>{"data"=>{"id"=>"26", "attributes"=>{"content"=>"Why do you want to work for us?"}, "type"=>"questions"}}, "type"=>"answers"}, "id"=>"10", "answer"=>{}}
  [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."id" = $1 LIMIT $2[0m  [["id", 10], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 26], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mCOMMIT[0m
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (0.86ms)
Completed 200 OK in 5ms (Views: 1.3ms | ActiveRecord: 0.6ms)


Started GET "/api/v1/random" for ::1 at 2016-06-20 09:57:56 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.4ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 25]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (5.86ms)
Completed 200 OK in 11ms (Views: 6.0ms | ActiveRecord: 1.1ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-20 09:57:58 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"answer-id"=>nil, "content"=>"sdfsdf", "vote-count"=>nil, "vote-score"=>nil}, "question"=>{"data"=>{"id"=>"25", "attributes"=>{"content"=>"Describe your production deployment process?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: answer-id, vote-count, vote-score
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 25], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (1.3ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "sdfsdf"], ["question_id", 25], ["created_at", 2016-06-20 13:57:58 UTC], ["updated_at", 2016-06-20 13:57:58 UTC]]
  [1m[35m (55.0ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mAnswer Load (0.5ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."question_id" = $1 ORDER BY "answers"."id" DESC LIMIT $2[0m  [["question_id", 25], ["LIMIT", 1]]
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (1.15ms)
Completed 200 OK in 70ms (Views: 1.8ms | ActiveRecord: 57.2ms)


Started GET "/api/v1/answers/12" for ::1 at 2016-06-20 09:57:59 -0400
Processing by Api::V1::AnswersController#show as JSON
  Parameters: {"id"=>"12"}
  [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."id" = $1 LIMIT $2[0m  [["id", 12], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 25], ["LIMIT", 1]]
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (2.66ms)
Completed 200 OK in 4ms (Views: 3.0ms | ActiveRecord: 0.5ms)


Started PATCH "/api/v1/answers/12" for ::1 at 2016-06-20 09:57:59 -0400
Processing by Api::V1::AnswersController#update as JSON
  Parameters: {"data"=>{"id"=>"12", "attributes"=>{"answer-id"=>nil, "content"=>"asdfadsfdas", "vote-count"=>0, "vote-score"=>0}, "question"=>{"data"=>{"id"=>"25", "attributes"=>{"content"=>"Describe your production deployment process?"}, "type"=>"questions"}}, "type"=>"answers"}, "id"=>"12", "answer"=>{}}
  [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."id" = $1 LIMIT $2[0m  [["id", 12], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 25], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mCOMMIT[0m
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (0.91ms)
Completed 200 OK in 6ms (Views: 1.5ms | ActiveRecord: 0.6ms)


Started PATCH "/api/v1/answers/12" for ::1 at 2016-06-20 09:59:39 -0400
Started GET "/api/v1/answers/12" for ::1 at 2016-06-20 09:59:39 -0400
Processing by Api::V1::AnswersController#update as JSON
Processing by Api::V1::AnswersController#show as JSON
  Parameters: {"data"=>{"id"=>"12", "attributes"=>{"answer-id"=>nil, "content"=>"asdfadsfdas", "vote-count"=>0, "vote-score"=>0}, "question"=>{"data"=>{"id"=>"25", "attributes"=>{"content"=>"Describe your production deployment process?"}, "type"=>"questions"}}, "type"=>"answers"}, "id"=>"12", "answer"=>{}}
  Parameters: {"id"=>"12"}
  [1m[36mAnswer Load (0.4ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."id" = $1 LIMIT $2[0m  [["id", 12], ["LIMIT", 1]]
  [1m[36mAnswer Load (0.6ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."id" = $1 LIMIT $2[0m  [["id", 12], ["LIMIT", 1]]
  [1m[35m (1.8ms)[0m  [1m[35mBEGIN[0m
[active_model_serializers]   [1m[36mQuestion Load (1.0ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 25], ["LIMIT", 1]]
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (2.82ms)
Completed 200 OK in 4ms (Views: 2.2ms | ActiveRecord: 1.6ms)


  [1m[36mQuestion Load (1.7ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 25], ["LIMIT", 1]]
  [1m[35m (0.2ms)[0m  [1m[35mCOMMIT[0m
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (0.95ms)
Completed 200 OK in 9ms (Views: 1.6ms | ActiveRecord: 4.1ms)


Started GET "/api/v1/random" for ::1 at 2016-06-20 10:07:56 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (1.2ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.4ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 28]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (24.28ms)
Completed 200 OK in 45ms (Views: 27.4ms | ActiveRecord: 1.6ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-20 10:08:57 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"answer-id"=>nil, "content"=>"ojhpoh", "vote-count"=>nil, "vote-score"=>nil}, "question"=>{"data"=>{"id"=>"28", "attributes"=>{"content"=>"Do you have any questions for me?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: answer-id, vote-count, vote-score
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.5ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 28], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (32.7ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "ojhpoh"], ["question_id", 28], ["created_at", 2016-06-20 14:08:57 UTC], ["updated_at", 2016-06-20 14:08:57 UTC]]
  [1m[35m (132.8ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mAnswer Load (0.9ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."question_id" = $1 ORDER BY "answers"."id" DESC LIMIT $2[0m  [["question_id", 28], ["LIMIT", 1]]
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (1.18ms)
Completed 200 OK in 244ms (Views: 2.0ms | ActiveRecord: 167.0ms)


Started GET "/api/v1/random" for ::1 at 2016-06-20 10:08:59 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 16]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (12.94ms)
Completed 200 OK in 16ms (Views: 13.5ms | ActiveRecord: 0.8ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-20 10:15:16 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"answer-id"=>nil, "content"=>"test from sophie", "vote-count"=>nil, "vote-score"=>nil}, "question"=>{"data"=>{"id"=>"16", "attributes"=>{"content"=>"Tell me about your long-term goals."}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: answer-id, vote-count, vote-score
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 16], ["LIMIT", 1]]
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (41.9ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "test from sophie"], ["question_id", 16], ["created_at", 2016-06-20 14:15:16 UTC], ["updated_at", 2016-06-20 14:15:16 UTC]]
  [1m[35m (58.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mAnswer Load (0.8ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."question_id" = $1 ORDER BY "answers"."id" DESC LIMIT $2[0m  [["question_id", 16], ["LIMIT", 1]]
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (4.07ms)
Completed 200 OK in 144ms (Views: 7.8ms | ActiveRecord: 101.8ms)


Started GET "/api/v1/random" for ::1 at 2016-06-20 10:15:19 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.4ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 2]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (7.6ms)
Completed 200 OK in 11ms (Views: 7.9ms | ActiveRecord: 1.1ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-20 10:15:23 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"answer-id"=>nil, "content"=>"blah blah blah", "vote-count"=>nil, "vote-score"=>nil}, "question"=>{"data"=>{"id"=>"2", "attributes"=>{"content"=>"How many ways can you center a div?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: answer-id, vote-count, vote-score
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "blah blah blah"], ["question_id", 2], ["created_at", 2016-06-20 14:15:23 UTC], ["updated_at", 2016-06-20 14:15:23 UTC]]
  [1m[35m (1.1ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mAnswer Load (0.6ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."question_id" = $1 ORDER BY "answers"."id" DESC LIMIT $2[0m  [["question_id", 2], ["LIMIT", 1]]
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (0.8ms)
Completed 200 OK in 73ms (Views: 1.3ms | ActiveRecord: 2.4ms)


Started GET "/api/v1/random" for ::1 at 2016-06-20 10:15:59 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.5ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.3ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 11]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (10.09ms)
Completed 200 OK in 13ms (Views: 10.5ms | ActiveRecord: 0.7ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-20 10:16:03 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"answer-id"=>nil, "content"=>"test test test", "vote-count"=>nil, "vote-score"=>nil}, "question"=>{"data"=>{"id"=>"11", "attributes"=>{"content"=>"Describe a time when you were able to improve upon the design that was originally suggested?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: answer-id, vote-count, vote-score
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.5ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 11], ["LIMIT", 1]]
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.6ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "test test test"], ["question_id", 11], ["created_at", 2016-06-20 14:16:03 UTC], ["updated_at", 2016-06-20 14:16:03 UTC]]
  [1m[35m (42.2ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mAnswer Load (0.4ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."question_id" = $1 ORDER BY "answers"."id" DESC LIMIT $2[0m  [["question_id", 11], ["LIMIT", 1]]
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (0.92ms)
Completed 200 OK in 55ms (Views: 1.4ms | ActiveRecord: 43.9ms)


Started GET "/api/v1/answers/42" for ::1 at 2016-06-20 10:16:18 -0400
Processing by Api::V1::AnswersController#show as JSON
  Parameters: {"id"=>"42"}
  [1m[36mAnswer Load (0.4ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."id" = $1 LIMIT $2[0m  [["id", 42], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mQuestion Load (0.5ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 11], ["LIMIT", 1]]
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (4.33ms)
Completed 200 OK in 6ms (Views: 4.3ms | ActiveRecord: 0.9ms)


Started PATCH "/api/v1/answers/42" for ::1 at 2016-06-20 10:16:18 -0400
Processing by Api::V1::AnswersController#update as JSON
  Parameters: {"data"=>{"id"=>"42", "attributes"=>{"answer-id"=>nil, "content"=>"dfshh", "vote-count"=>1, "vote-score"=>0}, "question"=>{"data"=>{"id"=>"11", "attributes"=>{"content"=>"Describe a time when you were able to improve upon the design that was originally suggested?"}, "type"=>"questions"}}, "type"=>"answers"}, "id"=>"42", "answer"=>{}}
  [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."id" = $1 LIMIT $2[0m  [["id", 42], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 11], ["LIMIT", 1]]
  [1m[35mSQL (0.3ms)[0m  [1m[33mUPDATE "answers" SET "vote_count" = $1, "updated_at" = $2 WHERE "answers"."id" = $3[0m  [["vote_count", 1], ["updated_at", 2016-06-20 14:16:18 UTC], ["id", 42]]
  [1m[35m (16.3ms)[0m  [1m[35mCOMMIT[0m
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (0.77ms)
Completed 200 OK in 29ms (Views: 8.2ms | ActiveRecord: 17.1ms)


Started GET "/api/v1/random" for ::1 at 2016-06-20 10:16:27 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.3ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 2]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (5.05ms)
Completed 200 OK in 8ms (Views: 5.5ms | ActiveRecord: 0.7ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-20 10:16:30 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"answer-id"=>nil, "content"=>"test ", "vote-count"=>nil, "vote-score"=>nil}, "question"=>{"data"=>{"id"=>"2", "attributes"=>{"content"=>"How many ways can you center a div?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: answer-id, vote-count, vote-score
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "test "], ["question_id", 2], ["created_at", 2016-06-20 14:16:31 UTC], ["updated_at", 2016-06-20 14:16:31 UTC]]
  [1m[35m (1.5ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mAnswer Load (0.4ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."question_id" = $1 ORDER BY "answers"."id" DESC LIMIT $2[0m  [["question_id", 2], ["LIMIT", 1]]
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (1.0ms)
Completed 200 OK in 10ms (Views: 1.4ms | ActiveRecord: 2.6ms)


Started GET "/api/v1/random" for ::1 at 2016-06-20 10:19:29 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.5ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.3ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 30]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (30.72ms)
Completed 200 OK in 65ms (Views: 49.2ms | ActiveRecord: 9.7ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-20 10:19:34 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"i dont knw", "vote-count"=>nil, "vote-score"=>nil}, "question"=>{"data"=>{"id"=>"30", "attributes"=>{"content"=>"How would you describe your work style?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: vote-count, vote-score
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 30], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (78.0ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "i dont knw"], ["question_id", 30], ["created_at", 2016-06-20 14:19:34 UTC], ["updated_at", 2016-06-20 14:19:34 UTC]]
  [1m[35m (48.0ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mAnswer Load (0.7ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."question_id" = $1 ORDER BY "answers"."id" DESC LIMIT $2[0m  [["question_id", 30], ["LIMIT", 1]]
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (0.97ms)
Completed 200 OK in 139ms (Views: 1.8ms | ActiveRecord: 127.4ms)


Started GET "/api/v1/random" for ::1 at 2016-06-20 10:20:36 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 15]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (25.65ms)
Completed 200 OK in 54ms (Views: 43.1ms | ActiveRecord: 6.5ms)


Started GET "/api/v1/random" for ::1 at 2016-06-20 10:20:37 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.5ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.3ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 28]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (11.44ms)
Completed 200 OK in 14ms (Views: 11.8ms | ActiveRecord: 0.8ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-20 10:20:38 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"adsf", "vote-count"=>nil, "vote-score"=>nil}, "question"=>{"data"=>{"id"=>"28", "attributes"=>{"content"=>"Do you have any questions for me?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Completed 500 Internal Server Error in 10553ms (ActiveRecord: 0.0ms)


  
SystemExit (exit):
  
app/controllers/api/v1/answers_controller.rb:12:in `create'
Started GET "/api/v1/random" for ::1 at 2016-06-20 10:21:00 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (5.7ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 27]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (85.72ms)
Completed 200 OK in 118ms (Views: 85.6ms | ActiveRecord: 6.3ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-20 10:21:02 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"asdfasd", "vote-count"=>nil, "vote-score"=>nil}, "question"=>{"data"=>{"id"=>"27", "attributes"=>{"content"=>"How would you declare and use a constructor in Ruby?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Completed 500 Internal Server Error in 24ms (ActiveRecord: 0.0ms)


  
SystemExit (exit):
  
app/controllers/api/v1/answers_controller.rb:12:in `create'
Started GET "/api/v1/random" for ::1 at 2016-06-20 10:21:15 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (1.3ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (1.0ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 7]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (477.83ms)
Completed 200 OK in 599ms (Views: 520.7ms | ActiveRecord: 2.2ms)


Started GET "/api/v1/random" for ::1 at 2016-06-20 10:21:17 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (1.1ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.7ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 4]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (195.4ms)
Completed 200 OK in 249ms (Views: 208.0ms | ActiveRecord: 1.8ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-20 10:21:20 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"asdf", "vote-count"=>nil, "vote-score"=>nil}, "question"=>{"data"=>{"id"=>"4", "attributes"=>{"content"=>"Explain the process of web development to a middle school kid."}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: vote-count, vote-score
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 4], ["LIMIT", 1]]
  [1m[35m (0.5ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (1.0ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "asdf"], ["question_id", 4], ["created_at", 2016-06-20 14:21:20 UTC], ["updated_at", 2016-06-20 14:21:20 UTC]]
  [1m[35m (69.4ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mAnswer Load (0.9ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."question_id" = $1 ORDER BY "answers"."id" DESC LIMIT $2[0m  [["question_id", 4], ["LIMIT", 1]]
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (22.86ms)
Completed 200 OK in 251ms (Views: 35.2ms | ActiveRecord: 72.6ms)


Started GET "/api/v1/random" for ::1 at 2016-06-20 10:26:08 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.8ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 28]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (520.73ms)
Completed 200 OK in 647ms (Views: 558.5ms | ActiveRecord: 1.6ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-20 10:26:12 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"asdf", "vote-count"=>nil, "vote-score"=>nil}, "question"=>{"data"=>{"id"=>"28", "attributes"=>{"content"=>"Do you have any questions for me?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Completed 500 Internal Server Error in 8230ms (ActiveRecord: 0.0ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-20 10:26:20 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"asdf", "vote-count"=>nil, "vote-score"=>nil}, "question"=>{"data"=>{"id"=>"28", "attributes"=>{"content"=>"Do you have any questions for me?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
  
SystemExit (exit):
  
app/controllers/api/v1/answers_controller.rb:12:in `create'
Completed 500 Internal Server Error in 1654ms (ActiveRecord: 0.0ms)


  
SystemExit (exit):
  
app/controllers/api/v1/answers_controller.rb:12:in `create'
Started GET "/api/v1/random" for ::1 at 2016-06-20 10:26:32 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.7ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 11]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (589.41ms)
Completed 200 OK in 719ms (Views: 623.4ms | ActiveRecord: 15.8ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-20 10:26:36 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"asdf", "vote-count"=>nil, "vote-score"=>nil}, "question"=>{"data"=>{"id"=>"11", "attributes"=>{"content"=>"Describe a time when you were able to improve upon the design that was originally suggested?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: vote-count, vote-score
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (1.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 11], ["LIMIT", 1]]
  [1m[35m (0.5ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (17.9ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "asdf"], ["question_id", 11], ["created_at", 2016-06-20 14:26:36 UTC], ["updated_at", 2016-06-20 14:26:36 UTC]]
  [1m[35m (93.2ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mAnswer Load (1.2ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."question_id" = $1 ORDER BY "answers"."id" DESC LIMIT $2[0m  [["question_id", 11], ["LIMIT", 1]]
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (24.59ms)
Completed 200 OK in 322ms (Views: 35.8ms | ActiveRecord: 114.0ms)


Started GET "/api/v1/random" for ::1 at 2016-06-20 10:33:37 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (1.2ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.7ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 21]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (311.13ms)
Completed 200 OK in 387ms (Views: 325.4ms | ActiveRecord: 1.9ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-20 10:33:43 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"testing from sophie", "vote-count"=>nil, "vote-score"=>nil}, "question"=>{"data"=>{"id"=>"21", "attributes"=>{"content"=>"What is the difference between classical inheritance and prototypal inheritance? "}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: vote-count, vote-score
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 21], ["LIMIT", 1]]
  [1m[35m (0.6ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (129.1ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "testing from sophie"], ["question_id", 21], ["created_at", 2016-06-20 14:33:43 UTC], ["updated_at", 2016-06-20 14:33:43 UTC]]
  [1m[35m (423.5ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mAnswer Load (0.8ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."question_id" = $1 ORDER BY "answers"."id" DESC LIMIT $2[0m  [["question_id", 21], ["LIMIT", 1]]
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (24.26ms)
Completed 200 OK in 738ms (Views: 31.9ms | ActiveRecord: 554.6ms)


Started GET "/api/v1/answers" for ::1 at 2016-06-20 10:35:32 -0400
Processing by Api::V1::AnswersController#index as HTML
  [1m[36mAnswer Load (2.0ms)[0m  [1m[34mSELECT "answers".* FROM "answers"[0m
[active_model_serializers]   [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 4], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 31], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 31], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 32], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.5ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 32], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 8], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 26], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 25], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 17], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 12], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mQuestion Load (1.5ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 27], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 22], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 7], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 32], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 32], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 24], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 31], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 31], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 28], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 28], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 31], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 19], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 4], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mQuestion Load (1.0ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 23], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 14], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (4.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 19], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 19], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mQuestion Load (0.9ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 3], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mQuestion Load (0.9ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 6], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.7ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 17], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.5ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 7], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 7], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mQuestion Load (1.1ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 9], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (1.1ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 9], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 13], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 22], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.5ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 23], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.5ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 17], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.6ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 17], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 5], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 29], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 20], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 9], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 6], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.6ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 12], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 14], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 28], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 25], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 7], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 31], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 22], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 17], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 23], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.6ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 13], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mQuestion Load (0.9ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 30], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 20], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.5ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 3], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 4], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 28], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 18], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 21], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 20], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.5ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 13], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (6.3ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 20], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 9], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 11], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.5ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 5], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mQuestion Load (1.0ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 16], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 10], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.5ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 3], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 11], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 4], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 8], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 13], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 32], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 7], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 26], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 15], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 28], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 32], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 22], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 30], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 19], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 22], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.8ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 10], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 13], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.6ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 9], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 14], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 16], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 7], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.5ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 26], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.7ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 28], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 32], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 8], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 30], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 10], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.6ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 18], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.8ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 29], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 9], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 15], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.6ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 18], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.5ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 31], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 18], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 23], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 7], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 22], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 13], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (4.5ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 13], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.5ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 9], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 9], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 22], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.6ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 22], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 15], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 16], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.7ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 16], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 8], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 8], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mQuestion Load (0.9ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 11], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 11], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 17], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 17], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 24], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 24], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 24], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.5ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 11], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 22], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 13], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.5ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 23], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 13], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 18], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 18], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 11], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 27], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.6ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 21], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 18], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.5ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 20], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 13], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 10], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 30], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.5ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 3], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.5ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 4], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 28], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 21], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.5ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 7], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 8], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 21], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.5ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 21], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 21], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 13], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 20], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.5ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 20], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 9], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.6ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 10], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 31], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 11], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 5], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 16], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 10], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 3], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 20], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 11], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 12], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 21], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (1.3ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 5], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 3], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.5ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 6], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 26], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 25], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 28], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 16], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.6ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 11], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 30], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.6ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 4], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 11], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mCACHE (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 21], ["LIMIT", 1]]
[active_model_serializers] Rendered ActiveModel::Serializer::CollectionSerializer with ActiveModelSerializers::Adapter::JsonApi (9990.91ms)
Completed 200 OK in 10401ms (Views: 10290.5ms | ActiveRecord: 107.4ms)


Started GET "/api/v1/random" for ::1 at 2016-06-20 10:37:50 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.9ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.7ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 9]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (410.22ms)
Completed 200 OK in 466ms (Views: 417.2ms | ActiveRecord: 1.5ms)


Started GET "/api/v1/random" for ::1 at 2016-06-20 10:47:34 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.7ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 29]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (165.08ms)
Completed 200 OK in 223ms (Views: 173.3ms | ActiveRecord: 1.5ms)


Started GET "/api/v1/random" for ::1 at 2016-06-20 10:47:53 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.9ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.6ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 25]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (187.75ms)
Completed 200 OK in 265ms (Views: 204.9ms | ActiveRecord: 1.5ms)


Started GET "/api/v1/random" for ::1 at 2016-06-20 10:47:59 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.9ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.7ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 7]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (367.97ms)
Completed 200 OK in 432ms (Views: 379.7ms | ActiveRecord: 1.6ms)


Started GET "/api/v1/random" for ::1 at 2016-06-20 10:48:04 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.9ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 7]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (379.62ms)
Completed 200 OK in 440ms (Views: 386.5ms | ActiveRecord: 1.8ms)


Started GET "/api/v1/random" for ::1 at 2016-06-20 10:48:13 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
[active_model_serializers]   [1m[36mAnswer Load (0.8ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 12]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (199.2ms)
Completed 200 OK in 260ms (Views: 207.1ms | ActiveRecord: 1.6ms)


Started GET "/api/v1/random" for ::1 at 2016-06-20 10:56:00 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[35m (1.0ms)[0m  [1m[34mSELECT COUNT(*) FROM "questions"[0m
[active_model_serializers] Rendered ActiveModel::Serializer::Null with Hash (6.33ms)
Completed 200 OK in 179ms (Views: 151.5ms | ActiveRecord: 1.0ms)


Started GET "/api/v1/random" for ::1 at 2016-06-20 10:56:26 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[35m (1.4ms)[0m  [1m[34mSELECT COUNT(*) FROM "questions"[0m
[active_model_serializers] Rendered ActiveModel::Serializer::Null with Hash (1.47ms)
Completed 200 OK in 38ms (Views: 14.4ms | ActiveRecord: 1.4ms)


Started GET "/api/v1/random" for ::1 at 2016-06-20 10:56:52 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[35m (0.7ms)[0m  [1m[34mSELECT COUNT(*) FROM "questions"[0m
[active_model_serializers] Rendered ActiveModel::Serializer::Null with Hash (1.9ms)
Completed 200 OK in 40ms (Views: 17.0ms | ActiveRecord: 0.7ms)


Started GET "/api/v1/random" for ::1 at 2016-06-20 10:58:05 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[35m (0.8ms)[0m  [1m[34mSELECT COUNT(*) FROM "questions"[0m
[active_model_serializers] Rendered ActiveModel::Serializer::Null with Hash (6.17ms)
Completed 200 OK in 35ms (Views: 14.4ms | ActiveRecord: 0.8ms)


Started GET "/api/v1/random" for ::1 at 2016-06-20 10:59:03 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[35m (0.8ms)[0m  [1m[34mSELECT COUNT(*) FROM "questions"[0m
[active_model_serializers] Rendered ActiveModel::Serializer::Null with Hash (1.12ms)
Completed 200 OK in 32ms (Views: 8.0ms | ActiveRecord: 0.8ms)


Started GET "/api/v1/random" for ::1 at 2016-06-20 10:59:35 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[35m (0.9ms)[0m  [1m[34mSELECT COUNT(*) FROM "questions"[0m
[active_model_serializers] Rendered ActiveModel::Serializer::Null with Hash (1.25ms)
Completed 200 OK in 34ms (Views: 9.0ms | ActiveRecord: 0.9ms)


Started GET "/api/v1/random" for ::1 at 2016-06-20 11:00:11 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[35m (0.7ms)[0m  [1m[34mSELECT COUNT(*) FROM "questions"[0m
[active_model_serializers] Rendered ActiveModel::Serializer::Null with Hash (1.72ms)
Completed 200 OK in 38ms (Views: 16.9ms | ActiveRecord: 0.7ms)


Started GET "/api/v1/questions/23" for ::1 at 2016-06-20 11:00:18 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"23"}
  [1m[36mQuestion Load (0.9ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 23], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.7ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 23]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (548.11ms)
Completed 200 OK in 692ms (Views: 608.3ms | ActiveRecord: 14.2ms)


Started GET "/api/v1/questions/23" for ::1 at 2016-06-20 11:00:33 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"23"}
  [1m[36mQuestion Load (0.9ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 23], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.9ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 23]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (269.12ms)
Completed 200 OK in 297ms (Views: 276.6ms | ActiveRecord: 1.7ms)


Started GET "/api/v1/questions/23" for ::1 at 2016-06-20 11:00:37 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"23"}
  [1m[36mQuestion Load (1.0ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 23], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.7ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 23]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (270.73ms)
Completed 200 OK in 308ms (Views: 278.3ms | ActiveRecord: 1.6ms)


Started GET "/api/v1/questions/23" for ::1 at 2016-06-20 11:01:23 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"23"}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 23], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.8ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 23]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (271.62ms)
Completed 200 OK in 305ms (Views: 279.2ms | ActiveRecord: 1.6ms)


Started GET "/api/v1/questions/23" for ::1 at 2016-06-20 11:01:32 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"23"}
  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 23], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.7ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 23]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (318.95ms)
Completed 200 OK in 355ms (Views: 332.1ms | ActiveRecord: 1.3ms)


Started GET "/api/v1/questions/23" for ::1 at 2016-06-20 11:02:13 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"23"}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 23], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (1.1ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 23]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (218.33ms)
Completed 200 OK in 245ms (Views: 225.1ms | ActiveRecord: 1.9ms)


Started GET "/api/v1/questions/23" for ::1 at 2016-06-20 11:02:19 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"23"}
  [1m[36mQuestion Load (1.3ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 23], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.7ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 23]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (216.67ms)
Completed 200 OK in 246ms (Views: 227.5ms | ActiveRecord: 2.0ms)


Started GET "/api/v1/questions/23" for ::1 at 2016-06-20 11:02:34 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"23"}
  [1m[36mQuestion Load (1.0ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 23], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.9ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 23]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (223.33ms)
Completed 200 OK in 251ms (Views: 231.1ms | ActiveRecord: 1.9ms)


Started GET "/api/v1/questions/23" for ::1 at 2016-06-20 11:02:48 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"23"}
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 23], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.6ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 23]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (221.02ms)
Completed 200 OK in 247ms (Views: 231.9ms | ActiveRecord: 1.3ms)


Started GET "/api/v1/questions/23" for ::1 at 2016-06-20 11:02:55 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"23"}
  [1m[36mQuestion Load (1.0ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 23], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.8ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 23]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (229.47ms)
Completed 200 OK in 263ms (Views: 237.7ms | ActiveRecord: 1.8ms)


Started GET "/api/v1/questions/23" for ::1 at 2016-06-20 11:05:29 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"23"}
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 23], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.7ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 23]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (216.42ms)
Completed 200 OK in 243ms (Views: 227.6ms | ActiveRecord: 1.3ms)


Started GET "/api/v1/questions/23" for ::1 at 2016-06-20 11:05:51 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"23"}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 23], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.8ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 23]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (222.3ms)
Completed 200 OK in 256ms (Views: 234.0ms | ActiveRecord: 1.5ms)


Started GET "/api/v1/questions/23" for ::1 at 2016-06-20 11:06:17 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"23"}
  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 23], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.7ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 23]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (213.04ms)
Completed 200 OK in 238ms (Views: 220.3ms | ActiveRecord: 1.4ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-20 11:06:34 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"testing!!!", "vote-count"=>nil, "vote-score"=>nil}, "question"=>{"data"=>{"id"=>"23", "attributes"=>{"content"=>"Explain a polymorphic association?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: vote-count, vote-score
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 23], ["LIMIT", 1]]
  [1m[35m (0.5ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.8ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "testing!!!"], ["question_id", 23], ["created_at", 2016-06-20 15:06:34 UTC], ["updated_at", 2016-06-20 15:06:34 UTC]]
  [1m[35m (82.6ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mAnswer Load (0.8ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."question_id" = $1 ORDER BY "answers"."id" DESC LIMIT $2[0m  [["question_id", 23], ["LIMIT", 1]]
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (28.28ms)
Completed 200 OK in 279ms (Views: 41.5ms | ActiveRecord: 85.7ms)


Started GET "/api/v1/questions/23" for ::1 at 2016-06-20 11:07:05 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"23"}
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 23], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.7ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 23]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (256.71ms)
Completed 200 OK in 283ms (Views: 264.6ms | ActiveRecord: 1.3ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-20 11:07:11 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"testing again ", "vote-count"=>nil, "vote-score"=>nil}, "question"=>{"data"=>{"id"=>"23", "attributes"=>{"content"=>"Explain a polymorphic association?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: vote-count, vote-score
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 23], ["LIMIT", 1]]
  [1m[35m (0.9ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.8ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "testing again "], ["question_id", 23], ["created_at", 2016-06-20 15:07:11 UTC], ["updated_at", 2016-06-20 15:07:11 UTC]]
  [1m[35m (1.5ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mAnswer Load (0.9ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."question_id" = $1 ORDER BY "answers"."id" DESC LIMIT $2[0m  [["question_id", 23], ["LIMIT", 1]]
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (23.63ms)
Completed 200 OK in 181ms (Views: 34.8ms | ActiveRecord: 4.7ms)


Started GET "/api/v1/questions/23" for ::1 at 2016-06-20 11:09:46 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"23"}
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 23], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.7ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 23]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (290.99ms)
Completed 200 OK in 315ms (Views: 297.9ms | ActiveRecord: 1.3ms)


Started GET "/api/v1/random" for ::1 at 2016-06-20 11:10:13 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[35m (1.0ms)[0m  [1m[34mSELECT COUNT(*) FROM "questions"[0m
[active_model_serializers] Rendered ActiveModel::Serializer::Null with Hash (1.14ms)
Completed 200 OK in 30ms (Views: 11.9ms | ActiveRecord: 1.0ms)


Started GET "/api/v1/questions/0" for ::1 at 2016-06-20 11:10:14 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"0"}
  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 0], ["LIMIT", 1]]
[active_model_serializers] Rendered ActiveModel::Serializer::Null with Class (1.87ms)
Completed 200 OK in 88ms (Views: 67.5ms | ActiveRecord: 0.7ms)


Started GET "/api/v1/random" for ::1 at 2016-06-20 11:10:39 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[35m (0.7ms)[0m  [1m[34mSELECT COUNT(*) FROM "questions"[0m
[active_model_serializers] Rendered ActiveModel::Serializer::Null with Hash (1.17ms)
Completed 200 OK in 44ms (Views: 23.3ms | ActiveRecord: 5.8ms)


Started GET "/api/v1/questions/10" for ::1 at 2016-06-20 11:10:40 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"10"}
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 10], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.7ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 10]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (450.89ms)
Completed 200 OK in 555ms (Views: 491.0ms | ActiveRecord: 1.3ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-20 11:10:57 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"skdjskdjs", "vote-count"=>nil, "vote-score"=>nil}, "question"=>{"data"=>{"id"=>"10", "attributes"=>{"content"=>"How did you learn web development?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: vote-count, vote-score
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 10], ["LIMIT", 1]]
  [1m[35m (0.8ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.9ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "skdjskdjs"], ["question_id", 10], ["created_at", 2016-06-20 15:10:58 UTC], ["updated_at", 2016-06-20 15:10:58 UTC]]
  [1m[35m (2.8ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mAnswer Load (0.7ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."question_id" = $1 ORDER BY "answers"."id" DESC LIMIT $2[0m  [["question_id", 10], ["LIMIT", 1]]
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (25.3ms)
Completed 200 OK in 197ms (Views: 37.1ms | ActiveRecord: 6.0ms)


Started GET "/api/v1/questions/10" for ::1 at 2016-06-20 11:14:24 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"10"}
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 10], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.8ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 10]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (489.32ms)
Completed 200 OK in 674ms (Views: 525.3ms | ActiveRecord: 7.7ms)


Started GET "/api/v1/random" for ::1 at 2016-06-20 11:14:28 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[35m (0.8ms)[0m  [1m[34mSELECT COUNT(*) FROM "questions"[0m
[active_model_serializers] Rendered ActiveModel::Serializer::Null with Hash (1.21ms)
Completed 200 OK in 43ms (Views: 23.6ms | ActiveRecord: 0.8ms)


Started GET "/api/v1/questions/14" for ::1 at 2016-06-20 11:14:28 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"14"}
  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 14], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.6ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 14]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (175.65ms)
Completed 200 OK in 200ms (Views: 186.6ms | ActiveRecord: 1.3ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-20 11:14:44 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"ssdsds", "vote-count"=>nil, "vote-score"=>nil}, "question"=>{"data"=>{"id"=>"14", "attributes"=>{"content"=>"Why do you want to work with us?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: vote-count, vote-score
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (1.0ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 14], ["LIMIT", 1]]
  [1m[35m (0.5ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.8ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "ssdsds"], ["question_id", 14], ["created_at", 2016-06-20 15:14:44 UTC], ["updated_at", 2016-06-20 15:14:44 UTC]]
  [1m[35m (2.0ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mAnswer Load (1.0ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."question_id" = $1 ORDER BY "answers"."id" DESC LIMIT $2[0m  [["question_id", 14], ["LIMIT", 1]]
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (25.5ms)
Completed 200 OK in 192ms (Views: 39.7ms | ActiveRecord: 5.3ms)


Started GET "/api/v1/questions/14" for ::1 at 2016-06-20 11:15:00 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"14"}
  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 14], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.8ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 14]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (413.86ms)
Completed 200 OK in 623ms (Views: 453.0ms | ActiveRecord: 10.4ms)


Started GET "/api/v1/random" for ::1 at 2016-06-20 11:15:05 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[35m (0.7ms)[0m  [1m[34mSELECT COUNT(*) FROM "questions"[0m
[active_model_serializers] Rendered ActiveModel::Serializer::Null with Hash (1.87ms)
Completed 200 OK in 57ms (Views: 35.7ms | ActiveRecord: 0.7ms)


Started GET "/api/v1/questions/3" for ::1 at 2016-06-20 11:15:05 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"3"}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 3], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (4.4ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 3]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (274.09ms)
Completed 200 OK in 304ms (Views: 279.4ms | ActiveRecord: 5.3ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-20 11:15:10 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"sdsdsdsds", "vote-count"=>nil, "vote-score"=>nil}, "question"=>{"data"=>{"id"=>"3", "attributes"=>{"content"=>"What are your strengths and weaknesses?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Completed 500 Internal Server Error in 76889ms (ActiveRecord: 0.0ms)


Started GET "/api/v1/questions/3" for ::1 at 2016-06-20 11:16:26 -0400
  
Processing by Api::V1::QuestionsController#show as JSON
SystemExit (exit):
  Parameters: {"id"=>"3"}
  
app/controllers/api/v1/answers_controller.rb:12:in `create'
  [1m[36mQuestion Load (83.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 3], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (35.6ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 3]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (824.96ms)
Completed 200 OK in 1037ms (Views: 893.4ms | ActiveRecord: 119.0ms)


Started GET "/api/v1/questions/3" for ::1 at 2016-06-20 11:17:16 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"3"}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 3], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.7ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 3]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (487.55ms)
Completed 200 OK in 677ms (Views: 525.5ms | ActiveRecord: 9.7ms)


Started GET "/api/v1/random" for ::1 at 2016-06-20 11:17:21 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[35m (0.7ms)[0m  [1m[34mSELECT COUNT(*) FROM "questions"[0m
[active_model_serializers] Rendered ActiveModel::Serializer::Null with Hash (1.16ms)
Completed 200 OK in 53ms (Views: 26.3ms | ActiveRecord: 0.7ms)


Started GET "/api/v1/questions/31" for ::1 at 2016-06-20 11:17:21 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"31"}
  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 31], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.7ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 31]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (342.36ms)
Completed 200 OK in 371ms (Views: 349.7ms | ActiveRecord: 1.3ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-20 11:17:26 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"asdasdas", "vote-count"=>nil, "vote-score"=>nil}, "question"=>{"data"=>{"id"=>"31", "attributes"=>{"content"=>"How does the web work?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Completed 500 Internal Server Error in 23291ms (ActiveRecord: 0.0ms)


  
SystemExit (exit):
  
app/controllers/api/v1/answers_controller.rb:12:in `create'
Started GET "/api/v1/random" for ::1 at 2016-06-20 11:34:56 -0400
  [1m[36mActiveRecord::SchemaMigration Load (25.2ms)[0m  [1m[34mSELECT "schema_migrations".* FROM "schema_migrations"[0m
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[35m (0.4ms)[0m  [1m[34mSELECT COUNT(*) FROM "questions"[0m
[active_model_serializers] Rendered ActiveModel::Serializer::Null with Hash (16.3ms)
Completed 200 OK in 39ms (Views: 37.2ms | ActiveRecord: 2.4ms)


Started GET "/api/v1/questions/20" for ::1 at 2016-06-20 11:34:57 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"20"}
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 20], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.6ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 20]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (99.71ms)
Completed 200 OK in 222ms (Views: 156.9ms | ActiveRecord: 32.4ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-20 11:35:01 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"lkjshdgsdgsd", "vote-count"=>nil, "vote-score"=>nil}, "question"=>{"data"=>{"id"=>"20", "attributes"=>{"content"=>"Please walk me through one of the projects on your resume."}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Completed 500 Internal Server Error in 6053513ms (ActiveRecord: 0.0ms)


  
SystemExit (exit):
  
app/controllers/api/v1/answers_controller.rb:8:in `create'
Started GET "/api/v1/questions/20" for ::1 at 2016-06-20 13:15:56 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"20"}
  [1m[36mQuestion Load (7.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 20], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (1.1ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 20]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (205.0ms)
Completed 200 OK in 234ms (Views: 212.9ms | ActiveRecord: 8.3ms)


Started GET "/api/v1/questions/20" for ::1 at 2016-06-20 13:19:28 -0400
  [1m[36mActiveRecord::SchemaMigration Load (0.5ms)[0m  [1m[34mSELECT "schema_migrations".* FROM "schema_migrations"[0m
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"20"}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 20], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.4ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 20]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (80.8ms)
Completed 200 OK in 269ms (Views: 165.6ms | ActiveRecord: 9.5ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-20 13:19:40 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"qwetqwet", "vote-count"=>nil, "vote-score"=>nil}, "question"=>{"data"=>{"id"=>"20", "attributes"=>{"content"=>"Please walk me through one of the projects on your resume."}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 20], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (26.3ms)[0m  [1m[32mINSERT INTO "answers" ("vote_score", "vote_count", "content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["vote_score", nil], ["vote_count", nil], ["content", "qwetqwet"], ["question_id", 20], ["created_at", 2016-06-20 17:19:40 UTC], ["updated_at", 2016-06-20 17:19:40 UTC]]
  [1m[35m (84.5ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mAnswer Load (1.1ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."question_id" = $1 ORDER BY "answers"."id" DESC LIMIT $2[0m  [["question_id", 20], ["LIMIT", 1]]
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (1.58ms)
Completed 200 OK in 219ms (Views: 2.5ms | ActiveRecord: 112.3ms)


Started GET "/api/v1/questions/20" for ::1 at 2016-06-20 13:19:45 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"20"}
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 20], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.4ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 20]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (9.19ms)
Completed 200 OK in 11ms (Views: 9.2ms | ActiveRecord: 0.7ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-20 13:19:47 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"fdgd", "vote-count"=>nil, "vote-score"=>nil}, "question"=>{"data"=>{"id"=>"20", "attributes"=>{"content"=>"Please walk me through one of the projects on your resume."}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 20], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "answers" ("vote_score", "vote_count", "content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["vote_score", nil], ["vote_count", nil], ["content", "fdgd"], ["question_id", 20], ["created_at", 2016-06-20 17:19:47 UTC], ["updated_at", 2016-06-20 17:19:47 UTC]]
  [1m[35m (2.1ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mAnswer Load (0.3ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."question_id" = $1 ORDER BY "answers"."id" DESC LIMIT $2[0m  [["question_id", 20], ["LIMIT", 1]]
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (0.77ms)
Completed 200 OK in 10ms (Views: 1.3ms | ActiveRecord: 3.2ms)


Started GET "/api/v1/questions/20" for ::1 at 2016-06-20 13:22:46 -0400
Started GET "/api/v1/questions/20" for ::1 at 2016-06-20 13:22:47 -0400
  [1m[36mActiveRecord::SchemaMigration Load (0.5ms)[0m  [1m[34mSELECT "schema_migrations".* FROM "schema_migrations"[0m
  [1m[36mActiveRecord::SchemaMigration Load (0.5ms)[0m  [1m[34mSELECT "schema_migrations".* FROM "schema_migrations"[0m
Processing by Api::V1::QuestionsController#show as JSON
  
  Parameters: {"id"=>"20"}
LoadError (Unable to autoload constant Api::V1::QuestionsController, expected /Users/hlpolivy/Development/code/final-project/QIQAPI/app/controllers/api/v1/questions_controller.rb to define it):
  
activesupport (5.0.0.rc1) lib/active_support/dependencies.rb:512:in `load_missing_constant'
activesupport (5.0.0.rc1) lib/active_support/dependencies.rb:203:in `const_missing'
activesupport (5.0.0.rc1) lib/active_support/inflector/methods.rb:270:in `const_get'
activesupport (5.0.0.rc1) lib/active_support/inflector/methods.rb:270:in `block in constantize'
activesupport (5.0.0.rc1) lib/active_support/inflector/methods.rb:266:in `each'
activesupport (5.0.0.rc1) lib/active_support/inflector/methods.rb:266:in `inject'
activesupport (5.0.0.rc1) lib/active_support/inflector/methods.rb:266:in `constantize'
activesupport (5.0.0.rc1) lib/active_support/dependencies.rb:583:in `get'
activesupport (5.0.0.rc1) lib/active_support/dependencies.rb:614:in `constantize'
actionpack (5.0.0.rc1) lib/action_dispatch/http/request.rb:93:in `controller_class'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:44:in `controller'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:30:in `serve'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:39:in `block in serve'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:26:in `each'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:26:in `serve'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:725:in `call'
actionview (5.0.0.rc1) lib/action_view/digestor.rb:12:in `call'
rack (2.0.0.rc1) lib/rack/etag.rb:25:in `call'
rack (2.0.0.rc1) lib/rack/conditional_get.rb:25:in `call'
rack (2.0.0.rc1) lib/rack/head.rb:12:in `call'
activerecord (5.0.0.rc1) lib/active_record/migration.rb:552:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/callbacks.rb:38:in `block in call'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:97:in `__run_callbacks__'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:750:in `_run_call_callbacks'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:90:in `run_callbacks'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/callbacks.rb:36:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/remote_ip.rb:79:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/debug_exceptions.rb:49:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/show_exceptions.rb:31:in `call'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:36:in `call_app'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:24:in `block in call'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:70:in `block in tagged'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:26:in `tagged'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:70:in `tagged'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:24:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/request_id.rb:24:in `call'
rack (2.0.0.rc1) lib/rack/runtime.rb:22:in `call'
activesupport (5.0.0.rc1) lib/active_support/cache/strategy/local_cache_middleware.rb:28:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/static.rb:136:in `call'
rack (2.0.0.rc1) lib/rack/sendfile.rb:111:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
railties (5.0.0.rc1) lib/rails/engine.rb:522:in `call'
puma (3.4.0) lib/puma/configuration.rb:224:in `call'
puma (3.4.0) lib/puma/server.rb:569:in `handle_request'
puma (3.4.0) lib/puma/server.rb:406:in `process_client'
puma (3.4.0) lib/puma/server.rb:271:in `block in run'
puma (3.4.0) lib/puma/thread_pool.rb:114:in `call'
puma (3.4.0) lib/puma/thread_pool.rb:114:in `block in spawn_thread'
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 20], ["LIMIT", 1]]
Started GET "/api/v1/random" for ::1 at 2016-06-20 13:22:53 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[35m (0.5ms)[0m  [1m[34mSELECT COUNT(*) FROM "questions"[0m
[active_model_serializers] Rendered ActiveModel::Serializer::Null with Hash (0.19ms)
Completed 200 OK in 323ms (Views: 321.3ms | ActiveRecord: 0.5ms)


Started GET "/api/v1/questions/31" for ::1 at 2016-06-20 13:22:54 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"31"}
  [1m[36mQuestion Load (1.0ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 31], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.5ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 20]]
[active_model_serializers]   [1m[36mAnswer Load (0.8ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 31]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (506.62ms)
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (109.72ms)
Completed 200 OK in 1110ms (Views: 802.6ms | ActiveRecord: 8.8ms)


Completed 200 OK in 112ms (Views: 100.9ms | ActiveRecord: 10.8ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-20 13:22:56 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"asadasd", "vote-count"=>0, "vote-score"=>0}, "question"=>{"data"=>{"id"=>"31", "attributes"=>{"content"=>"How does the web work?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 31], ["LIMIT", 1]]
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.6ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "asadasd"], ["question_id", 31], ["created_at", 2016-06-20 17:22:56 UTC], ["updated_at", 2016-06-20 17:22:56 UTC]]
  [1m[35m (617.8ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mAnswer Load (0.7ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."question_id" = $1 ORDER BY "answers"."id" DESC LIMIT $2[0m  [["question_id", 31], ["LIMIT", 1]]
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (1.02ms)
Completed 200 OK in 630ms (Views: 1.7ms | ActiveRecord: 619.7ms)


Started PATCH "/api/v1/answers/5" for ::1 at 2016-06-20 13:22:58 -0400
Processing by Api::V1::AnswersController#update as JSON
  Parameters: {"data"=>{"id"=>"5", "attributes"=>{"content"=>"<p>It's a series of tubes.</p>", "vote-count"=>23, "vote-score"=>-19}, "question"=>{"data"=>{"id"=>"31", "attributes"=>{"content"=>"How does the web work?"}, "type"=>"questions"}}, "type"=>"answers"}, "id"=>"5", "answer"=>{}}
  [1m[36mAnswer Load (0.3ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."id" = $1 LIMIT $2[0m  [["id", 5], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 31], ["LIMIT", 1]]
  [1m[35mSQL (0.4ms)[0m  [1m[33mUPDATE "answers" SET "vote_count" = $1, "vote_score" = $2, "updated_at" = $3 WHERE "answers"."id" = $4[0m  [["vote_count", 23], ["vote_score", -19], ["updated_at", 2016-06-20 17:22:58 UTC], ["id", 5]]
  [1m[35m (47.9ms)[0m  [1m[35mCOMMIT[0m
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (1.34ms)
Completed 200 OK in 58ms (Views: 2.1ms | ActiveRecord: 49.2ms)


Started PATCH "/api/v1/answers/5" for ::1 at 2016-06-20 13:22:59 -0400
Processing by Api::V1::AnswersController#update as JSON
  Parameters: {"data"=>{"id"=>"5", "attributes"=>{"content"=>"<p>It's a series of tubes.</p>", "vote-count"=>24, "vote-score"=>-18}, "question"=>{"data"=>{"id"=>"31", "attributes"=>{"content"=>"How does the web work?"}, "type"=>"questions"}}, "type"=>"answers"}, "id"=>"5", "answer"=>{}}
  [1m[36mAnswer Load (0.4ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."id" = $1 LIMIT $2[0m  [["id", 5], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 31], ["LIMIT", 1]]
  [1m[35mSQL (0.4ms)[0m  [1m[33mUPDATE "answers" SET "vote_count" = $1, "vote_score" = $2, "updated_at" = $3 WHERE "answers"."id" = $4[0m  [["vote_count", 24], ["vote_score", -18], ["updated_at", 2016-06-20 17:22:59 UTC], ["id", 5]]
  [1m[35m (796.6ms)[0m  [1m[35mCOMMIT[0m
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (1.8ms)
Completed 200 OK in 806ms (Views: 2.8ms | ActiveRecord: 797.8ms)


Started PATCH "/api/v1/answers/5" for ::1 at 2016-06-20 13:23:00 -0400
Processing by Api::V1::AnswersController#update as JSON
  Parameters: {"data"=>{"id"=>"5", "attributes"=>{"content"=>"<p>It's a series of tubes.</p>", "vote-count"=>25, "vote-score"=>-17}, "question"=>{"data"=>{"id"=>"31", "attributes"=>{"content"=>"How does the web work?"}, "type"=>"questions"}}, "type"=>"answers"}, "id"=>"5", "answer"=>{}}
  [1m[36mAnswer Load (0.4ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."id" = $1 LIMIT $2[0m  [["id", 5], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 31], ["LIMIT", 1]]
  [1m[35mSQL (0.4ms)[0m  [1m[33mUPDATE "answers" SET "vote_count" = $1, "vote_score" = $2, "updated_at" = $3 WHERE "answers"."id" = $4[0m  [["vote_count", 25], ["vote_score", -17], ["updated_at", 2016-06-20 17:23:00 UTC], ["id", 5]]
  [1m[35m (156.3ms)[0m  [1m[35mCOMMIT[0m
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (1.31ms)
Completed 200 OK in 166ms (Views: 2.2ms | ActiveRecord: 157.6ms)


Started PATCH "/api/v1/answers/5" for ::1 at 2016-06-20 13:23:01 -0400
Processing by Api::V1::AnswersController#update as JSON
  Parameters: {"data"=>{"id"=>"5", "attributes"=>{"content"=>"<p>It's a series of tubes.</p>", "vote-count"=>26, "vote-score"=>-16}, "question"=>{"data"=>{"id"=>"31", "attributes"=>{"content"=>"How does the web work?"}, "type"=>"questions"}}, "type"=>"answers"}, "id"=>"5", "answer"=>{}}
  [1m[36mAnswer Load (0.4ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."id" = $1 LIMIT $2[0m  [["id", 5], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 31], ["LIMIT", 1]]
  [1m[35mSQL (0.4ms)[0m  [1m[33mUPDATE "answers" SET "vote_count" = $1, "vote_score" = $2, "updated_at" = $3 WHERE "answers"."id" = $4[0m  [["vote_count", 26], ["vote_score", -16], ["updated_at", 2016-06-20 17:23:01 UTC], ["id", 5]]
  [1m[35m (174.6ms)[0m  [1m[35mCOMMIT[0m
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (1.33ms)
Completed 200 OK in 183ms (Views: 2.1ms | ActiveRecord: 175.7ms)


Started PATCH "/api/v1/answers/5" for ::1 at 2016-06-20 13:23:01 -0400
Processing by Api::V1::AnswersController#update as JSON
  Parameters: {"data"=>{"id"=>"5", "attributes"=>{"content"=>"<p>It's a series of tubes.</p>", "vote-count"=>27, "vote-score"=>-15}, "question"=>{"data"=>{"id"=>"31", "attributes"=>{"content"=>"How does the web work?"}, "type"=>"questions"}}, "type"=>"answers"}, "id"=>"5", "answer"=>{}}
  [1m[36mAnswer Load (0.3ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."id" = $1 LIMIT $2[0m  [["id", 5], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 31], ["LIMIT", 1]]
  [1m[35mSQL (0.3ms)[0m  [1m[33mUPDATE "answers" SET "vote_count" = $1, "vote_score" = $2, "updated_at" = $3 WHERE "answers"."id" = $4[0m  [["vote_count", 27], ["vote_score", -15], ["updated_at", 2016-06-20 17:23:01 UTC], ["id", 5]]
Started PATCH "/api/v1/answers/5" for ::1 at 2016-06-20 13:23:01 -0400
Processing by Api::V1::AnswersController#update as JSON
  Parameters: {"data"=>{"id"=>"5", "attributes"=>{"content"=>"<p>It's a series of tubes.</p>", "vote-count"=>28, "vote-score"=>-14}, "question"=>{"data"=>{"id"=>"31", "attributes"=>{"content"=>"How does the web work?"}, "type"=>"questions"}}, "type"=>"answers"}, "id"=>"5", "answer"=>{}}
  [1m[36mAnswer Load (0.3ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."id" = $1 LIMIT $2[0m  [["id", 5], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 31], ["LIMIT", 1]]
  [1m[35m (219.5ms)[0m  [1m[35mCOMMIT[0m
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (1.29ms)
Completed 200 OK in 227ms (Views: 2.0ms | ActiveRecord: 220.5ms)


  [1m[35mSQL (166.4ms)[0m  [1m[33mUPDATE "answers" SET "vote_count" = $1, "vote_score" = $2, "updated_at" = $3 WHERE "answers"."id" = $4[0m  [["vote_count", 28], ["vote_score", -14], ["updated_at", 2016-06-20 17:23:01 UTC], ["id", 5]]
Started PATCH "/api/v1/answers/5" for ::1 at 2016-06-20 13:23:01 -0400
Processing by Api::V1::AnswersController#update as JSON
  Parameters: {"data"=>{"id"=>"5", "attributes"=>{"content"=>"<p>It's a series of tubes.</p>", "vote-count"=>28, "vote-score"=>-14}, "question"=>{"data"=>{"id"=>"31", "attributes"=>{"content"=>"How does the web work?"}, "type"=>"questions"}}, "type"=>"answers"}, "id"=>"5", "answer"=>{}}
  [1m[36mAnswer Load (0.3ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."id" = $1 LIMIT $2[0m  [["id", 5], ["LIMIT", 1]]
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 31], ["LIMIT", 1]]
  [1m[35mSQL (151.2ms)[0m  [1m[33mUPDATE "answers" SET "vote_count" = $1, "vote_score" = $2, "updated_at" = $3 WHERE "answers"."id" = $4[0m  [["vote_count", 28], ["vote_score", -14], ["updated_at", 2016-06-20 17:23:01 UTC], ["id", 5]]
  [1m[35m (166.8ms)[0m  [1m[35mCOMMIT[0m
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (1.12ms)
Completed 200 OK in 343ms (Views: 3.0ms | ActiveRecord: 333.9ms)


Started PATCH "/api/v1/answers/5" for ::1 at 2016-06-20 13:23:02 -0400
Processing by Api::V1::AnswersController#update as JSON
  Parameters: {"data"=>{"id"=>"5", "attributes"=>{"content"=>"<p>It's a series of tubes.</p>", "vote-count"=>29, "vote-score"=>-13}, "question"=>{"data"=>{"id"=>"31", "attributes"=>{"content"=>"How does the web work?"}, "type"=>"questions"}}, "type"=>"answers"}, "id"=>"5", "answer"=>{}}
  [1m[36mAnswer Load (1.0ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."id" = $1 LIMIT $2[0m  [["id", 5], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[36mQuestion Load (0.5ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 31], ["LIMIT", 1]]
  [1m[35m (36.0ms)[0m  [1m[35mCOMMIT[0m
  [1m[35mSQL (13.5ms)[0m  [1m[33mUPDATE "answers" SET "vote_count" = $1, "vote_score" = $2, "updated_at" = $3 WHERE "answers"."id" = $4[0m  [["vote_count", 29], ["vote_score", -13], ["updated_at", 2016-06-20 17:23:02 UTC], ["id", 5]]
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (0.78ms)
Completed 200 OK in 195ms (Views: 1.6ms | ActiveRecord: 187.9ms)


Started PATCH "/api/v1/answers/5" for ::1 at 2016-06-20 13:23:02 -0400
Processing by Api::V1::AnswersController#update as JSON
  Parameters: {"data"=>{"id"=>"5", "attributes"=>{"content"=>"<p>It's a series of tubes.</p>", "vote-count"=>29, "vote-score"=>-13}, "question"=>{"data"=>{"id"=>"31", "attributes"=>{"content"=>"How does the web work?"}, "type"=>"questions"}}, "type"=>"answers"}, "id"=>"5", "answer"=>{}}
  [1m[36mAnswer Load (0.3ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."id" = $1 LIMIT $2[0m  [["id", 5], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 31], ["LIMIT", 1]]
  [1m[35mSQL (48.4ms)[0m  [1m[33mUPDATE "answers" SET "vote_count" = $1, "vote_score" = $2, "updated_at" = $3 WHERE "answers"."id" = $4[0m  [["vote_count", 29], ["vote_score", -13], ["updated_at", 2016-06-20 17:23:02 UTC], ["id", 5]]
  [1m[35m (207.4ms)[0m  [1m[35mCOMMIT[0m
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (0.74ms)
Completed 200 OK in 230ms (Views: 1.2ms | ActiveRecord: 222.4ms)


  [1m[35m (239.7ms)[0m  [1m[35mCOMMIT[0m
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (1.04ms)
Completed 200 OK in 296ms (Views: 1.6ms | ActiveRecord: 288.9ms)


Started GET "/api/v1/questions/31" for ::1 at 2016-06-20 13:25:56 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"31"}
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 31], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.3ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 31]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (16.62ms)
Completed 200 OK in 18ms (Views: 16.9ms | ActiveRecord: 0.6ms)


Started GET "/api/v1/questions/31" for ::1 at 2016-06-20 13:26:36 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"31"}
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 31], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 31]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (9.09ms)
Completed 200 OK in 11ms (Views: 9.3ms | ActiveRecord: 0.8ms)


Started GET "/api/v1/questions/31" for ::1 at 2016-06-20 13:27:43 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"31"}
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 31], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.4ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 31]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (11.13ms)
Completed 200 OK in 13ms (Views: 11.4ms | ActiveRecord: 0.7ms)


Started GET "/api/v1/questions/31" for ::1 at 2016-06-20 13:27:44 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"31"}
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 31], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.3ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 31]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (10.32ms)
Completed 200 OK in 13ms (Views: 10.5ms | ActiveRecord: 0.8ms)


Started GET "/api/v1/random" for ::1 at 2016-06-20 13:27:46 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[35m (0.6ms)[0m  [1m[34mSELECT COUNT(*) FROM "questions"[0m
[active_model_serializers] Rendered ActiveModel::Serializer::Null with Hash (0.07ms)
Completed 200 OK in 2ms (Views: 0.4ms | ActiveRecord: 0.6ms)


Started GET "/api/v1/questions/17" for ::1 at 2016-06-20 13:27:46 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"17"}
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 17], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.3ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 17]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (7.58ms)
Completed 200 OK in 30ms (Views: 29.1ms | ActiveRecord: 0.4ms)


Started GET "/api/v1/random" for ::1 at 2016-06-20 13:27:46 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[35m (0.3ms)[0m  [1m[34mSELECT COUNT(*) FROM "questions"[0m
[active_model_serializers] Rendered ActiveModel::Serializer::Null with Hash (0.06ms)
Completed 200 OK in 1ms (Views: 0.5ms | ActiveRecord: 0.3ms)


Started GET "/api/v1/questions/25" for ::1 at 2016-06-20 13:27:46 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"25"}
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 25], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.4ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 25]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (5.23ms)
Completed 200 OK in 7ms (Views: 5.2ms | ActiveRecord: 0.8ms)


Started GET "/api/v1/random" for ::1 at 2016-06-20 13:27:47 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[35m (0.5ms)[0m  [1m[34mSELECT COUNT(*) FROM "questions"[0m
[active_model_serializers] Rendered ActiveModel::Serializer::Null with Hash (0.1ms)
Completed 200 OK in 2ms (Views: 0.6ms | ActiveRecord: 0.5ms)


Started GET "/api/v1/questions/5" for ::1 at 2016-06-20 13:27:47 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"5"}
  [1m[36mQuestion Load (1.0ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 5], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (1.1ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 5]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (8.69ms)
Completed 200 OK in 12ms (Views: 8.3ms | ActiveRecord: 2.0ms)


Started GET "/api/v1/random" for ::1 at 2016-06-20 13:27:48 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[35m (0.3ms)[0m  [1m[34mSELECT COUNT(*) FROM "questions"[0m
[active_model_serializers] Rendered ActiveModel::Serializer::Null with Hash (0.08ms)
Completed 200 OK in 1ms (Views: 0.5ms | ActiveRecord: 0.3ms)


Started GET "/api/v1/questions/26" for ::1 at 2016-06-20 13:27:48 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"26"}
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 26], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.4ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 26]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (5.46ms)
Completed 200 OK in 7ms (Views: 5.5ms | ActiveRecord: 0.7ms)


Started GET "/api/v1/random" for ::1 at 2016-06-20 13:27:48 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[35m (0.3ms)[0m  [1m[34mSELECT COUNT(*) FROM "questions"[0m
[active_model_serializers] Rendered ActiveModel::Serializer::Null with Hash (0.07ms)
Completed 200 OK in 1ms (Views: 0.4ms | ActiveRecord: 0.3ms)


Started GET "/api/v1/questions/9" for ::1 at 2016-06-20 13:27:48 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"9"}
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 9], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.4ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 9]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (11.69ms)
Completed 200 OK in 14ms (Views: 11.9ms | ActiveRecord: 0.7ms)


Started GET "/api/v1/random" for ::1 at 2016-06-20 13:27:48 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[35m (0.3ms)[0m  [1m[34mSELECT COUNT(*) FROM "questions"[0m
[active_model_serializers] Rendered ActiveModel::Serializer::Null with Hash (0.07ms)
Completed 200 OK in 2ms (Views: 0.5ms | ActiveRecord: 0.3ms)


Started GET "/api/v1/questions/28" for ::1 at 2016-06-20 13:27:49 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"28"}
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 28], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.3ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 28]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (7.93ms)
Completed 200 OK in 10ms (Views: 8.1ms | ActiveRecord: 0.7ms)


Started GET "/api/v1/random" for ::1 at 2016-06-20 13:27:49 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[35m (0.3ms)[0m  [1m[34mSELECT COUNT(*) FROM "questions"[0m
[active_model_serializers] Rendered ActiveModel::Serializer::Null with Hash (0.06ms)
Completed 200 OK in 2ms (Views: 0.4ms | ActiveRecord: 0.3ms)


Started GET "/api/v1/questions/25" for ::1 at 2016-06-20 13:27:49 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"25"}
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 25], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.4ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 25]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (6.3ms)
Completed 200 OK in 9ms (Views: 6.8ms | ActiveRecord: 1.0ms)


Started GET "/api/v1/random" for ::1 at 2016-06-20 13:27:49 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[35m (0.3ms)[0m  [1m[34mSELECT COUNT(*) FROM "questions"[0m
[active_model_serializers] Rendered ActiveModel::Serializer::Null with Hash (0.1ms)
Completed 200 OK in 2ms (Views: 0.7ms | ActiveRecord: 0.3ms)


Started GET "/api/v1/questions/14" for ::1 at 2016-06-20 13:27:49 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"14"}
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 14], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.5ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 14]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (6.34ms)
Completed 200 OK in 8ms (Views: 6.4ms | ActiveRecord: 0.9ms)


Started GET "/api/v1/random" for ::1 at 2016-06-20 13:27:49 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[35m (0.3ms)[0m  [1m[34mSELECT COUNT(*) FROM "questions"[0m
[active_model_serializers] Rendered ActiveModel::Serializer::Null with Hash (0.2ms)
Completed 200 OK in 2ms (Views: 0.6ms | ActiveRecord: 0.3ms)


Started GET "/api/v1/questions/3" for ::1 at 2016-06-20 13:27:49 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"3"}
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 3], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.3ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 3]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (6.46ms)
Completed 200 OK in 8ms (Views: 6.6ms | ActiveRecord: 0.6ms)


Started GET "/api/v1/random" for ::1 at 2016-06-20 13:27:49 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[35m (0.3ms)[0m  [1m[34mSELECT COUNT(*) FROM "questions"[0m
[active_model_serializers] Rendered ActiveModel::Serializer::Null with Hash (0.1ms)
Completed 200 OK in 2ms (Views: 0.5ms | ActiveRecord: 0.3ms)


Started GET "/api/v1/questions/1" for ::1 at 2016-06-20 13:27:49 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"1"}
Started GET "/api/v1/random" for ::1 at 2016-06-20 13:27:49 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[36mQuestion Load (1.5ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  [1m[35m (2.2ms)[0m  [1m[34mSELECT COUNT(*) FROM "questions"[0m
[active_model_serializers] Rendered ActiveModel::Serializer::Null with Hash (0.08ms)
Completed 200 OK in 3ms (Views: 0.4ms | ActiveRecord: 2.2ms)


[active_model_serializers]   [1m[36mAnswer Load (1.4ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 1]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (7.85ms)
Completed 200 OK in 11ms (Views: 7.0ms | ActiveRecord: 2.9ms)


Started GET "/api/v1/questions/7" for ::1 at 2016-06-20 13:27:49 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"7"}
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 7], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.4ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 7]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (7.77ms)
Completed 200 OK in 10ms (Views: 7.8ms | ActiveRecord: 0.7ms)


Started GET "/api/v1/random" for ::1 at 2016-06-20 13:27:49 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[35m (0.3ms)[0m  [1m[34mSELECT COUNT(*) FROM "questions"[0m
[active_model_serializers] Rendered ActiveModel::Serializer::Null with Hash (0.07ms)
Completed 200 OK in 2ms (Views: 0.5ms | ActiveRecord: 0.3ms)


Started GET "/api/v1/questions/19" for ::1 at 2016-06-20 13:27:50 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"19"}
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 19], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.3ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 19]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (5.53ms)
Completed 200 OK in 7ms (Views: 5.7ms | ActiveRecord: 0.6ms)


Started GET "/api/v1/random" for ::1 at 2016-06-20 13:27:50 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[35m (0.5ms)[0m  [1m[34mSELECT COUNT(*) FROM "questions"[0m
[active_model_serializers] Rendered ActiveModel::Serializer::Null with Hash (0.12ms)
Completed 200 OK in 3ms (Views: 0.8ms | ActiveRecord: 0.5ms)


Started GET "/api/v1/questions/13" for ::1 at 2016-06-20 13:27:50 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"13"}
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 13], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.4ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 13]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (10.35ms)
Completed 200 OK in 12ms (Views: 10.5ms | ActiveRecord: 0.7ms)


Started GET "/api/v1/random" for ::1 at 2016-06-20 13:27:50 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[35m (0.4ms)[0m  [1m[34mSELECT COUNT(*) FROM "questions"[0m
[active_model_serializers] Rendered ActiveModel::Serializer::Null with Hash (0.09ms)
Completed 200 OK in 2ms (Views: 0.5ms | ActiveRecord: 0.4ms)


Started GET "/api/v1/random" for ::1 at 2016-06-20 13:27:50 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[35m (0.3ms)[0m  [1m[34mSELECT COUNT(*) FROM "questions"[0m
[active_model_serializers] Rendered ActiveModel::Serializer::Null with Hash (0.07ms)
Completed 200 OK in 1ms (Views: 0.4ms | ActiveRecord: 0.3ms)


Started GET "/api/v1/questions/15" for ::1 at 2016-06-20 13:27:50 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"15"}
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 15], ["LIMIT", 1]]
Started GET "/api/v1/questions/30" for ::1 at 2016-06-20 13:27:50 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"30"}
[active_model_serializers]   [1m[36mAnswer Load (2.3ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 15]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (8.38ms)
Completed 200 OK in 10ms (Views: 6.7ms | ActiveRecord: 2.6ms)


  [1m[36mQuestion Load (4.3ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 30], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.4ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 30]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (6.81ms)
Completed 200 OK in 13ms (Views: 7.0ms | ActiveRecord: 4.7ms)


Started GET "/api/v1/random" for ::1 at 2016-06-20 13:27:50 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[35m (0.3ms)[0m  [1m[34mSELECT COUNT(*) FROM "questions"[0m
[active_model_serializers] Rendered ActiveModel::Serializer::Null with Hash (0.07ms)
Completed 200 OK in 1ms (Views: 0.4ms | ActiveRecord: 0.3ms)


Started GET "/api/v1/questions/5" for ::1 at 2016-06-20 13:27:50 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"5"}
  [1m[36mQuestion Load (0.5ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 5], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.4ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 5]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (8.77ms)
Completed 200 OK in 12ms (Views: 9.0ms | ActiveRecord: 0.9ms)


Started GET "/api/v1/random" for ::1 at 2016-06-20 13:27:51 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[35m (0.2ms)[0m  [1m[34mSELECT COUNT(*) FROM "questions"[0m
[active_model_serializers] Rendered ActiveModel::Serializer::Null with Hash (0.07ms)
Completed 200 OK in 1ms (Views: 0.4ms | ActiveRecord: 0.2ms)


Started GET "/api/v1/questions/19" for ::1 at 2016-06-20 13:27:51 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"19"}
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 19], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.4ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 19]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (7.94ms)
Completed 200 OK in 10ms (Views: 8.1ms | ActiveRecord: 0.7ms)


Started GET "/api/v1/random" for ::1 at 2016-06-20 13:27:51 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[35m (0.5ms)[0m  [1m[34mSELECT COUNT(*) FROM "questions"[0m
[active_model_serializers] Rendered ActiveModel::Serializer::Null with Hash (0.09ms)
Completed 200 OK in 2ms (Views: 0.6ms | ActiveRecord: 0.5ms)


Started GET "/api/v1/questions/17" for ::1 at 2016-06-20 13:27:51 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"17"}
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 17], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.4ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 17]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (10.1ms)
Completed 200 OK in 12ms (Views: 10.5ms | ActiveRecord: 0.8ms)


Started GET "/api/v1/random" for ::1 at 2016-06-20 13:27:52 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[35m (0.3ms)[0m  [1m[34mSELECT COUNT(*) FROM "questions"[0m
[active_model_serializers] Rendered ActiveModel::Serializer::Null with Hash (0.07ms)
Completed 200 OK in 1ms (Views: 0.4ms | ActiveRecord: 0.3ms)


Started GET "/api/v1/questions/5" for ::1 at 2016-06-20 13:27:52 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"5"}
  [1m[36mQuestion Load (0.5ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 5], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.4ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 5]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (7.44ms)
Completed 200 OK in 10ms (Views: 7.6ms | ActiveRecord: 0.9ms)


Started GET "/api/v1/random" for ::1 at 2016-06-20 13:27:52 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[35m (0.6ms)[0m  [1m[34mSELECT COUNT(*) FROM "questions"[0m
[active_model_serializers] Rendered ActiveModel::Serializer::Null with Hash (0.1ms)
Completed 200 OK in 3ms (Views: 0.7ms | ActiveRecord: 0.6ms)


Started GET "/api/v1/questions/25" for ::1 at 2016-06-20 13:27:52 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"25"}
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 25], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.5ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 25]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (5.95ms)
Completed 200 OK in 8ms (Views: 6.1ms | ActiveRecord: 0.9ms)


Started GET "/api/v1/random" for ::1 at 2016-06-20 13:27:52 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[35m (0.3ms)[0m  [1m[34mSELECT COUNT(*) FROM "questions"[0m
[active_model_serializers] Rendered ActiveModel::Serializer::Null with Hash (0.07ms)
Completed 200 OK in 2ms (Views: 0.5ms | ActiveRecord: 0.3ms)


Started GET "/api/v1/questions/32" for ::1 at 2016-06-20 13:27:52 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"32"}
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 32], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.5ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 32]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (8.01ms)
Completed 200 OK in 10ms (Views: 8.1ms | ActiveRecord: 0.8ms)


Started GET "/api/v1/random" for ::1 at 2016-06-20 13:27:52 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[35m (0.3ms)[0m  [1m[34mSELECT COUNT(*) FROM "questions"[0m
[active_model_serializers] Rendered ActiveModel::Serializer::Null with Hash (0.07ms)
Completed 200 OK in 2ms (Views: 0.4ms | ActiveRecord: 0.3ms)


Started GET "/api/v1/questions/23" for ::1 at 2016-06-20 13:27:52 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"23"}
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 23], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.3ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 23]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (11.24ms)
Completed 200 OK in 13ms (Views: 11.4ms | ActiveRecord: 0.6ms)


Started GET "/api/v1/random" for ::1 at 2016-06-20 13:27:53 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[35m (0.3ms)[0m  [1m[34mSELECT COUNT(*) FROM "questions"[0m
[active_model_serializers] Rendered ActiveModel::Serializer::Null with Hash (0.12ms)
Completed 200 OK in 2ms (Views: 0.5ms | ActiveRecord: 0.3ms)


Started GET "/api/v1/questions/24" for ::1 at 2016-06-20 13:27:53 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"24"}
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 24], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.5ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 24]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (6.96ms)
Completed 200 OK in 9ms (Views: 7.1ms | ActiveRecord: 0.8ms)


Started GET "/api/v1/random" for ::1 at 2016-06-20 13:27:53 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[35m (0.4ms)[0m  [1m[34mSELECT COUNT(*) FROM "questions"[0m
[active_model_serializers] Rendered ActiveModel::Serializer::Null with Hash (0.07ms)
Completed 200 OK in 2ms (Views: 0.5ms | ActiveRecord: 0.4ms)


Started GET "/api/v1/questions/19" for ::1 at 2016-06-20 13:27:53 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"19"}
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 19], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.5ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 19]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (8.0ms)
Completed 200 OK in 10ms (Views: 8.2ms | ActiveRecord: 1.0ms)


Started GET "/api/v1/random" for ::1 at 2016-06-20 13:27:54 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[35m (0.3ms)[0m  [1m[34mSELECT COUNT(*) FROM "questions"[0m
[active_model_serializers] Rendered ActiveModel::Serializer::Null with Hash (0.07ms)
Completed 200 OK in 1ms (Views: 0.4ms | ActiveRecord: 0.3ms)


Started GET "/api/v1/questions/16" for ::1 at 2016-06-20 13:27:54 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"16"}
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 16], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.3ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 16]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (6.68ms)
Completed 200 OK in 8ms (Views: 6.8ms | ActiveRecord: 0.7ms)


Started GET "/api/v1/random" for ::1 at 2016-06-20 13:27:57 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[35m (0.2ms)[0m  [1m[34mSELECT COUNT(*) FROM "questions"[0m
[active_model_serializers] Rendered ActiveModel::Serializer::Null with Hash (0.07ms)
Completed 200 OK in 1ms (Views: 0.4ms | ActiveRecord: 0.2ms)


Started GET "/api/v1/questions/20" for ::1 at 2016-06-20 13:27:57 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"20"}
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 20], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.3ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 20]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (8.45ms)
Completed 200 OK in 10ms (Views: 8.6ms | ActiveRecord: 0.7ms)


Started GET "/api/v1/random" for ::1 at 2016-06-20 13:28:00 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[35m (0.3ms)[0m  [1m[34mSELECT COUNT(*) FROM "questions"[0m
[active_model_serializers] Rendered ActiveModel::Serializer::Null with Hash (0.11ms)
Completed 200 OK in 2ms (Views: 0.5ms | ActiveRecord: 0.3ms)


Started GET "/api/v1/questions/22" for ::1 at 2016-06-20 13:28:00 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"22"}
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 22], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.4ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 22]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (8.73ms)
Completed 200 OK in 10ms (Views: 8.9ms | ActiveRecord: 0.7ms)


Started GET "/api/v1/random" for ::1 at 2016-06-20 13:28:07 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[35m (0.3ms)[0m  [1m[34mSELECT COUNT(*) FROM "questions"[0m
[active_model_serializers] Rendered ActiveModel::Serializer::Null with Hash (0.09ms)
Completed 200 OK in 2ms (Views: 0.6ms | ActiveRecord: 0.3ms)


Started GET "/api/v1/questions/15" for ::1 at 2016-06-20 13:28:07 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"15"}
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 15], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.5ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 15]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (7.03ms)
Completed 200 OK in 9ms (Views: 7.1ms | ActiveRecord: 0.9ms)


Started GET "/api/v1/random" for ::1 at 2016-06-20 13:28:14 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[35m (0.2ms)[0m  [1m[34mSELECT COUNT(*) FROM "questions"[0m
[active_model_serializers] Rendered ActiveModel::Serializer::Null with Hash (0.06ms)
Completed 200 OK in 1ms (Views: 0.4ms | ActiveRecord: 0.2ms)


Started GET "/api/v1/questions/4" for ::1 at 2016-06-20 13:28:14 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"4"}
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 4], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.3ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 4]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (6.37ms)
Completed 200 OK in 8ms (Views: 6.5ms | ActiveRecord: 0.6ms)


Started GET "/api/v1/random" for ::1 at 2016-06-20 13:28:21 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[35m (0.3ms)[0m  [1m[34mSELECT COUNT(*) FROM "questions"[0m
[active_model_serializers] Rendered ActiveModel::Serializer::Null with Hash (0.07ms)
Completed 200 OK in 1ms (Views: 0.4ms | ActiveRecord: 0.3ms)


Started GET "/api/v1/questions/4" for ::1 at 2016-06-20 13:29:04 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"4"}
  [1m[36mQuestion Load (0.5ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 4], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.5ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 4]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (8.51ms)
Completed 200 OK in 11ms (Views: 8.8ms | ActiveRecord: 1.0ms)


Started GET "/api/v1/questions/4" for ::1 at 2016-06-20 13:29:05 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"4"}
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 4], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.4ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 4]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (6.69ms)
Completed 200 OK in 9ms (Views: 6.9ms | ActiveRecord: 0.8ms)


Started GET "/api/v1/questions/4" for ::1 at 2016-06-20 13:29:08 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"4"}
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 4], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.5ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 4]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (7.57ms)
Completed 200 OK in 9ms (Views: 7.7ms | ActiveRecord: 0.9ms)


Started GET "/api/v1/questions/4" for ::1 at 2016-06-20 13:29:11 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"4"}
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 4], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.4ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 4]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (6.72ms)
Completed 200 OK in 9ms (Views: 6.9ms | ActiveRecord: 0.8ms)


Started GET "/api/v1/random" for ::1 at 2016-06-20 13:29:16 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[35m (0.3ms)[0m  [1m[34mSELECT COUNT(*) FROM "questions"[0m
[active_model_serializers] Rendered ActiveModel::Serializer::Null with Hash (0.07ms)
Completed 200 OK in 2ms (Views: 0.5ms | ActiveRecord: 0.3ms)


Started GET "/api/v1/questions/22" for ::1 at 2016-06-20 13:29:16 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"22"}
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 22], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.4ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 22]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (8.88ms)
Completed 200 OK in 10ms (Views: 9.0ms | ActiveRecord: 0.7ms)


Started GET "/api/v1/questions/22" for ::1 at 2016-06-20 13:30:27 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"22"}
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 22], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.4ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 22]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (9.68ms)
Completed 200 OK in 11ms (Views: 9.8ms | ActiveRecord: 0.8ms)


Started GET "/api/v1/questions/22" for ::1 at 2016-06-20 13:30:49 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"22"}
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 22], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.3ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 22]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (8.54ms)
Completed 200 OK in 10ms (Views: 8.7ms | ActiveRecord: 0.7ms)


Started GET "/api/v1/questions/22" for ::1 at 2016-06-20 13:31:01 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"22"}
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 22], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.4ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 22]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (8.46ms)
Completed 200 OK in 10ms (Views: 8.6ms | ActiveRecord: 0.7ms)


Started GET "/api/v1/questions/22" for ::1 at 2016-06-20 13:31:31 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"22"}
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 22], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.3ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 22]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (8.71ms)
Completed 200 OK in 10ms (Views: 8.8ms | ActiveRecord: 0.7ms)


Started GET "/api/v1/questions/22" for ::1 at 2016-06-20 13:31:45 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"22"}
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 22], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.6ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 22]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (9.53ms)
Completed 200 OK in 11ms (Views: 9.5ms | ActiveRecord: 0.9ms)


Started GET "/api/v1/questions/22" for ::1 at 2016-06-20 13:31:51 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"22"}
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 22], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.4ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 22]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (10.46ms)
Completed 200 OK in 12ms (Views: 10.6ms | ActiveRecord: 0.8ms)


Started GET "/api/v1/random" for ::1 at 2016-06-20 13:32:19 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[35m (0.5ms)[0m  [1m[34mSELECT COUNT(*) FROM "questions"[0m
[active_model_serializers] Rendered ActiveModel::Serializer::Null with Hash (0.1ms)
Completed 200 OK in 2ms (Views: 0.6ms | ActiveRecord: 0.5ms)


Started GET "/api/v1/questions/16" for ::1 at 2016-06-20 13:32:19 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"16"}
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 16], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.6ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 16]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (8.33ms)
Completed 200 OK in 10ms (Views: 8.3ms | ActiveRecord: 0.9ms)


Started GET "/api/v1/questions/16" for ::1 at 2016-06-20 13:32:28 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"16"}
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 16], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.4ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 16]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (7.06ms)
Completed 200 OK in 9ms (Views: 7.2ms | ActiveRecord: 0.7ms)


Started GET "/api/v1/questions/16" for ::1 at 2016-06-20 13:32:33 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"16"}
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 16], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.4ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 16]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (8.7ms)
Completed 200 OK in 11ms (Views: 8.9ms | ActiveRecord: 0.8ms)


Started GET "/api/v1/questions/16" for ::1 at 2016-06-20 13:32:35 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"16"}
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 16], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.3ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 16]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (6.27ms)
Completed 200 OK in 8ms (Views: 6.4ms | ActiveRecord: 0.6ms)


Started GET "/api/v1/random" for ::1 at 2016-06-20 13:32:41 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
  [1m[35m (0.3ms)[0m  [1m[34mSELECT COUNT(*) FROM "questions"[0m
[active_model_serializers] Rendered ActiveModel::Serializer::Null with Hash (0.06ms)
Completed 200 OK in 1ms (Views: 0.4ms | ActiveRecord: 0.3ms)


Started GET "/api/v1/questions/33" for ::1 at 2016-06-20 13:32:41 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"33"}
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 33], ["LIMIT", 1]]
[active_model_serializers] Rendered ActiveModel::Serializer::Null with Class (0.12ms)
Completed 200 OK in 87ms (Views: 85.7ms | ActiveRecord: 0.4ms)


Started GET "/api/v1/random" for ::1 at 2016-06-20 13:34:09 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
[active_model_serializers] Rendered ActiveModel::Serializer::Null with Hash (0.09ms)
Completed 200 OK in 2ms (Views: 1.5ms | ActiveRecord: 1.5ms)


Started GET "/api/v1/questions/21" for ::1 at 2016-06-20 13:34:09 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"21"}
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 21], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.3ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 21]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (23.22ms)
Completed 200 OK in 74ms (Views: 69.0ms | ActiveRecord: 0.6ms)


Started GET "/api/v1/questions/21" for ::1 at 2016-06-20 13:34:33 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"21"}
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 21], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.4ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 21]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (7.94ms)
Completed 200 OK in 10ms (Views: 8.2ms | ActiveRecord: 0.7ms)


Started GET "/api/v1/questions/21" for ::1 at 2016-06-20 13:34:36 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"21"}
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 21], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.4ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 21]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (8.7ms)
Completed 200 OK in 11ms (Views: 8.9ms | ActiveRecord: 0.8ms)


Started GET "/api/v1/random" for ::1 at 2016-06-20 13:34:38 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
[active_model_serializers] Rendered ActiveModel::Serializer::Null with Hash (0.07ms)
Completed 200 OK in 1ms (Views: 0.4ms | ActiveRecord: 0.0ms)


Started GET "/api/v1/questions/14" for ::1 at 2016-06-20 13:34:38 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"14"}
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 14], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.4ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 14]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (5.41ms)
Completed 200 OK in 7ms (Views: 5.5ms | ActiveRecord: 0.7ms)


Started GET "/api/v1/questions/14" for ::1 at 2016-06-20 13:34:43 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"14"}
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 14], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.4ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 14]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (5.81ms)
Completed 200 OK in 7ms (Views: 5.9ms | ActiveRecord: 0.7ms)


Started GET "/api/v1/random" for ::1 at 2016-06-20 13:34:45 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
[active_model_serializers] Rendered ActiveModel::Serializer::Null with Hash (0.07ms)
Completed 200 OK in 1ms (Views: 0.5ms | ActiveRecord: 0.0ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-20 13:34:48 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"safdaf", "vote-count"=>0, "vote-score"=>0}, "question"=>{"data"=>{"id"=>"14", "attributes"=>{"content"=>"Why do you want to work with us?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 14], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.6ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "safdaf"], ["question_id", 14], ["created_at", 2016-06-20 17:34:48 UTC], ["updated_at", 2016-06-20 17:34:48 UTC]]
  [1m[35m (52.6ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mAnswer Load (1.4ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."question_id" = $1 ORDER BY "answers"."id" DESC LIMIT $2[0m  [["question_id", 14], ["LIMIT", 1]]
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (1.11ms)
Completed 200 OK in 65ms (Views: 2.0ms | ActiveRecord: 55.1ms)


Started GET "/api/v1/random" for ::1 at 2016-06-20 13:34:49 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
[active_model_serializers] Rendered ActiveModel::Serializer::Null with Hash (0.09ms)
Completed 200 OK in 1ms (Views: 0.7ms | ActiveRecord: 0.0ms)


Started GET "/api/v1/questions/4" for ::1 at 2016-06-20 13:34:49 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"4"}
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 4], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 4]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (6.16ms)
Completed 200 OK in 7ms (Views: 6.3ms | ActiveRecord: 0.4ms)


Started GET "/api/v1/random" for ::1 at 2016-06-20 13:34:54 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
[active_model_serializers] Rendered ActiveModel::Serializer::Null with Hash (0.1ms)
Completed 200 OK in 1ms (Views: 0.5ms | ActiveRecord: 0.0ms)


Started GET "/api/v1/questions/10" for ::1 at 2016-06-20 13:34:54 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"10"}
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 10], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.3ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 10]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (6.75ms)
Completed 200 OK in 8ms (Views: 7.0ms | ActiveRecord: 0.6ms)


Started GET "/api/v1/random" for ::1 at 2016-06-20 13:34:55 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
[active_model_serializers] Rendered ActiveModel::Serializer::Null with Hash (0.17ms)
Completed 200 OK in 1ms (Views: 0.6ms | ActiveRecord: 0.0ms)


Started GET "/api/v1/questions/4" for ::1 at 2016-06-20 13:34:55 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"4"}
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 4], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.3ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 4]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (8.93ms)
Completed 200 OK in 11ms (Views: 9.3ms | ActiveRecord: 0.7ms)


Started GET "/api/v1/questions/4" for ::1 at 2016-06-20 13:35:34 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"4"}
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 4], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.4ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 4]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (6.98ms)
Completed 200 OK in 8ms (Views: 7.1ms | ActiveRecord: 0.7ms)


Started GET "/api/v1/questions/4" for ::1 at 2016-06-20 13:35:35 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"4"}
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 4], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.3ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 4]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (7.69ms)
Completed 200 OK in 9ms (Views: 8.1ms | ActiveRecord: 0.5ms)


Started GET "/api/v1/random" for ::1 at 2016-06-20 13:35:41 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
[active_model_serializers] Rendered ActiveModel::Serializer::Null with Hash (0.07ms)
Completed 200 OK in 1ms (Views: 0.5ms | ActiveRecord: 0.0ms)


Started GET "/api/v1/questions/19" for ::1 at 2016-06-20 13:35:41 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"19"}
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 19], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.3ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 19]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (6.13ms)
Completed 200 OK in 8ms (Views: 6.3ms | ActiveRecord: 0.6ms)


Started GET "/api/v1/questions/19" for ::1 at 2016-06-20 13:35:55 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"19"}
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 19], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 19]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (4.97ms)
Completed 200 OK in 6ms (Views: 5.2ms | ActiveRecord: 0.4ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-20 13:35:58 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"saffs", "vote-count"=>0, "vote-score"=>0}, "question"=>{"data"=>{"id"=>"19", "attributes"=>{"content"=>"Do you have any questions for me?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 19], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "saffs"], ["question_id", 19], ["created_at", 2016-06-20 17:35:58 UTC], ["updated_at", 2016-06-20 17:35:58 UTC]]
  [1m[35m (95.2ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mAnswer Load (0.5ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."question_id" = $1 ORDER BY "answers"."id" DESC LIMIT $2[0m  [["question_id", 19], ["LIMIT", 1]]
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (1.4ms)
Completed 200 OK in 105ms (Views: 2.1ms | ActiveRecord: 96.4ms)


Started GET "/api/v1/random" for ::1 at 2016-06-20 13:35:59 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
[active_model_serializers] Rendered ActiveModel::Serializer::Null with Hash (0.07ms)
Completed 200 OK in 1ms (Views: 0.4ms | ActiveRecord: 0.0ms)


Started GET "/api/v1/questions/23" for ::1 at 2016-06-20 13:35:59 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"23"}
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 23], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 23]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (6.78ms)
Completed 200 OK in 8ms (Views: 7.0ms | ActiveRecord: 0.4ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-20 13:36:01 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"sdfsdf", "vote-count"=>0, "vote-score"=>0}, "question"=>{"data"=>{"id"=>"23", "attributes"=>{"content"=>"Explain a polymorphic association?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 23], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.5ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "sdfsdf"], ["question_id", 23], ["created_at", 2016-06-20 17:36:01 UTC], ["updated_at", 2016-06-20 17:36:01 UTC]]
  [1m[35m (1.0ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mAnswer Load (0.3ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."question_id" = $1 ORDER BY "answers"."id" DESC LIMIT $2[0m  [["question_id", 23], ["LIMIT", 1]]
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (0.73ms)
Completed 200 OK in 9ms (Views: 1.2ms | ActiveRecord: 2.2ms)


Started GET "/api/v1/random" for ::1 at 2016-06-20 13:36:02 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
[active_model_serializers] Rendered ActiveModel::Serializer::Null with Hash (0.07ms)
Completed 200 OK in 1ms (Views: 0.5ms | ActiveRecord: 0.0ms)


Started GET "/api/v1/questions/28" for ::1 at 2016-06-20 13:36:02 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"28"}
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 28], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 28]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (8.05ms)
Completed 200 OK in 9ms (Views: 8.3ms | ActiveRecord: 0.4ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-20 13:36:05 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"asfafsasfas", "vote-count"=>0, "vote-score"=>0}, "question"=>{"data"=>{"id"=>"28", "attributes"=>{"content"=>"Do you have any questions for me?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 28], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "asfafsasfas"], ["question_id", 28], ["created_at", 2016-06-20 17:36:05 UTC], ["updated_at", 2016-06-20 17:36:05 UTC]]
  [1m[35m (1.2ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mAnswer Load (0.4ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."question_id" = $1 ORDER BY "answers"."id" DESC LIMIT $2[0m  [["question_id", 28], ["LIMIT", 1]]
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (0.75ms)
Completed 200 OK in 10ms (Views: 1.2ms | ActiveRecord: 2.4ms)


Started GET "/api/v1/random" for ::1 at 2016-06-20 13:36:06 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
[active_model_serializers] Rendered ActiveModel::Serializer::Null with Hash (0.11ms)
Completed 200 OK in 1ms (Views: 0.5ms | ActiveRecord: 0.0ms)


Started GET "/api/v1/questions/16" for ::1 at 2016-06-20 13:36:06 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"16"}
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 16], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 16]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (7.04ms)
Completed 200 OK in 8ms (Views: 7.3ms | ActiveRecord: 0.4ms)


Started GET "/api/v1/random" for ::1 at 2016-06-20 13:36:25 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
[active_model_serializers] Rendered ActiveModel::Serializer::Null with Hash (0.11ms)
Completed 200 OK in 1ms (Views: 0.4ms | ActiveRecord: 0.0ms)


Started GET "/api/v1/questions/14" for ::1 at 2016-06-20 13:36:25 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"14"}
  [1m[36mQuestion Load (0.5ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 14], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.4ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 14]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (6.56ms)
Completed 200 OK in 8ms (Views: 6.7ms | ActiveRecord: 0.9ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-20 13:36:27 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"fdssdg", "vote-count"=>0, "vote-score"=>0}, "question"=>{"data"=>{"id"=>"14", "attributes"=>{"content"=>"Why do you want to work with us?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 14], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.6ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "fdssdg"], ["question_id", 14], ["created_at", 2016-06-20 17:36:27 UTC], ["updated_at", 2016-06-20 17:36:27 UTC]]
  [1m[35m (0.6ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mAnswer Load (0.5ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."question_id" = $1 ORDER BY "answers"."id" DESC LIMIT $2[0m  [["question_id", 14], ["LIMIT", 1]]
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (0.82ms)
Completed 200 OK in 8ms (Views: 1.3ms | ActiveRecord: 1.9ms)


Started GET "/api/v1/questions/14" for ::1 at 2016-06-20 13:36:28 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"14"}
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 14], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.8ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 14]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (8.12ms)
Completed 200 OK in 10ms (Views: 8.1ms | ActiveRecord: 1.0ms)


Started GET "/api/v1/questions/14" for ::1 at 2016-06-20 13:37:27 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"14"}
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 14], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.7ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 14]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (7.31ms)
Completed 200 OK in 9ms (Views: 7.1ms | ActiveRecord: 1.0ms)


Started GET "/api/v1/questions/14" for ::1 at 2016-06-20 13:37:36 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"14"}
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 14], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.3ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 14]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (7.12ms)
Completed 200 OK in 9ms (Views: 7.3ms | ActiveRecord: 0.6ms)


Started GET "/api/v1/questions/14" for ::1 at 2016-06-20 13:37:47 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"14"}
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 14], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.5ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 14]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (9.61ms)
Completed 200 OK in 12ms (Views: 9.9ms | ActiveRecord: 0.8ms)


Started GET "/api/v1/questions/14" for ::1 at 2016-06-20 13:39:47 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"14"}
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 14], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.4ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 14]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (6.28ms)
Completed 200 OK in 8ms (Views: 6.6ms | ActiveRecord: 0.7ms)


Started GET "/api/v1/questions/14" for ::1 at 2016-06-20 13:39:51 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"14"}
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 14], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.3ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 14]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (11.56ms)
Completed 200 OK in 13ms (Views: 11.7ms | ActiveRecord: 0.6ms)


Started GET "/api/v1/random" for ::1 at 2016-06-20 15:33:07 -0400
  [1m[36mActiveRecord::SchemaMigration Load (121.7ms)[0m  [1m[34mSELECT "schema_migrations".* FROM "schema_migrations"[0m
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
[active_model_serializers] Rendered ActiveModel::Serializer::Null with Hash (15.91ms)
Completed 200 OK in 40ms (Views: 39.6ms | ActiveRecord: 29.2ms)


Started GET "/api/v1/questions/15" for ::1 at 2016-06-20 15:33:10 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"15"}
  [1m[36mQuestion Load (32.0ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 15], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (66.0ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 15]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (170.03ms)
Completed 200 OK in 455ms (Views: 147.8ms | ActiveRecord: 275.4ms)


Started GET "/api/v1/random" for ::1 at 2016-06-20 15:38:58 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
[active_model_serializers] Rendered ActiveModel::Serializer::Null with Hash (0.13ms)
Completed 200 OK in 1ms (Views: 0.8ms | ActiveRecord: 0.0ms)


Started GET "/api/v1/questions/1" for ::1 at 2016-06-20 15:38:58 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"1"}
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.3ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 1]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (6.92ms)
Completed 200 OK in 9ms (Views: 7.2ms | ActiveRecord: 0.7ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-20 15:39:01 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"asdasd", "vote-count"=>0, "vote-score"=>0}, "question"=>{"data"=>{"id"=>"1", "attributes"=>{"content"=>"What are you looking for in terms of career development?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.5ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  [1m[35m (31.3ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (154.9ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "asdasd"], ["question_id", 1], ["created_at", 2016-06-20 19:39:01 UTC], ["updated_at", 2016-06-20 19:39:01 UTC]]
  [1m[35m (33.6ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mAnswer Load (0.9ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."question_id" = $1 ORDER BY "answers"."id" DESC LIMIT $2[0m  [["question_id", 1], ["LIMIT", 1]]
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (1.3ms)
Completed 200 OK in 279ms (Views: 2.1ms | ActiveRecord: 221.2ms)


Started PATCH "/api/v1/answers/15" for ::1 at 2016-06-20 15:39:03 -0400
Processing by Api::V1::AnswersController#update as JSON
  Parameters: {"data"=>{"id"=>"15", "attributes"=>{"content"=>"dasgasddsg", "vote-count"=>889, "vote-score"=>1}, "question"=>{"data"=>{"id"=>"1", "attributes"=>{"content"=>"What are you looking for in terms of career development?"}, "type"=>"questions"}}, "type"=>"answers"}, "id"=>"15", "answer"=>{}}
  [1m[36mAnswer Load (0.3ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."id" = $1 LIMIT $2[0m  [["id", 15], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  [1m[35mSQL (42.7ms)[0m  [1m[33mUPDATE "answers" SET "vote_count" = $1, "vote_score" = $2, "updated_at" = $3 WHERE "answers"."id" = $4[0m  [["vote_count", 889], ["vote_score", 1], ["updated_at", 2016-06-20 19:39:03 UTC], ["id", 15]]
  [1m[35m (1.2ms)[0m  [1m[35mCOMMIT[0m
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (1.29ms)
Completed 200 OK in 54ms (Views: 2.1ms | ActiveRecord: 44.5ms)


Started PATCH "/api/v1/answers/15" for ::1 at 2016-06-20 15:39:04 -0400
Processing by Api::V1::AnswersController#update as JSON
  Parameters: {"data"=>{"id"=>"15", "attributes"=>{"content"=>"dasgasddsg", "vote-count"=>890, "vote-score"=>2}, "question"=>{"data"=>{"id"=>"1", "attributes"=>{"content"=>"What are you looking for in terms of career development?"}, "type"=>"questions"}}, "type"=>"answers"}, "id"=>"15", "answer"=>{}}
  [1m[36mAnswer Load (0.4ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."id" = $1 LIMIT $2[0m  [["id", 15], ["LIMIT", 1]]
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  [1m[35mSQL (0.3ms)[0m  [1m[33mUPDATE "answers" SET "vote_count" = $1, "vote_score" = $2, "updated_at" = $3 WHERE "answers"."id" = $4[0m  [["vote_count", 890], ["vote_score", 2], ["updated_at", 2016-06-20 19:39:04 UTC], ["id", 15]]
  [1m[35m (0.8ms)[0m  [1m[35mCOMMIT[0m
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (0.76ms)
Completed 200 OK in 9ms (Views: 1.2ms | ActiveRecord: 2.0ms)


Started PATCH "/api/v1/answers/145" for ::1 at 2016-06-20 15:39:05 -0400
Processing by Api::V1::AnswersController#update as JSON
  Parameters: {"data"=>{"id"=>"145", "attributes"=>{"content"=>"cedced", "vote-count"=>1, "vote-score"=>1}, "question"=>{"data"=>{"id"=>"1", "attributes"=>{"content"=>"What are you looking for in terms of career development?"}, "type"=>"questions"}}, "type"=>"answers"}, "id"=>"145", "answer"=>{}}
  [1m[36mAnswer Load (0.3ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."id" = $1 LIMIT $2[0m  [["id", 145], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  [1m[35mSQL (0.3ms)[0m  [1m[33mUPDATE "answers" SET "vote_count" = $1, "vote_score" = $2, "updated_at" = $3 WHERE "answers"."id" = $4[0m  [["vote_count", 1], ["vote_score", 1], ["updated_at", 2016-06-20 19:39:05 UTC], ["id", 145]]
  [1m[35m (0.7ms)[0m  [1m[35mCOMMIT[0m
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (0.76ms)
Completed 200 OK in 7ms (Views: 1.2ms | ActiveRecord: 1.7ms)


Started PATCH "/api/v1/answers/145" for ::1 at 2016-06-20 15:39:06 -0400
Processing by Api::V1::AnswersController#update as JSON
  Parameters: {"data"=>{"id"=>"145", "attributes"=>{"content"=>"cedced", "vote-count"=>2, "vote-score"=>2}, "question"=>{"data"=>{"id"=>"1", "attributes"=>{"content"=>"What are you looking for in terms of career development?"}, "type"=>"questions"}}, "type"=>"answers"}, "id"=>"145", "answer"=>{}}
  [1m[36mAnswer Load (0.6ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."id" = $1 LIMIT $2[0m  [["id", 145], ["LIMIT", 1]]
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  [1m[35mSQL (0.3ms)[0m  [1m[33mUPDATE "answers" SET "vote_count" = $1, "vote_score" = $2, "updated_at" = $3 WHERE "answers"."id" = $4[0m  [["vote_count", 2], ["vote_score", 2], ["updated_at", 2016-06-20 19:39:06 UTC], ["id", 145]]
  [1m[35m (0.9ms)[0m  [1m[35mCOMMIT[0m
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (0.75ms)
Completed 200 OK in 10ms (Views: 1.2ms | ActiveRecord: 2.2ms)


Started PATCH "/api/v1/answers/145" for ::1 at 2016-06-20 15:39:08 -0400
Processing by Api::V1::AnswersController#update as JSON
  Parameters: {"data"=>{"id"=>"145", "attributes"=>{"content"=>"cedced", "vote-count"=>3, "vote-score"=>1}, "question"=>{"data"=>{"id"=>"1", "attributes"=>{"content"=>"What are you looking for in terms of career development?"}, "type"=>"questions"}}, "type"=>"answers"}, "id"=>"145", "answer"=>{}}
  [1m[36mAnswer Load (0.5ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."id" = $1 LIMIT $2[0m  [["id", 145], ["LIMIT", 1]]
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  [1m[35mSQL (0.3ms)[0m  [1m[33mUPDATE "answers" SET "vote_count" = $1, "vote_score" = $2, "updated_at" = $3 WHERE "answers"."id" = $4[0m  [["vote_count", 3], ["vote_score", 1], ["updated_at", 2016-06-20 19:39:08 UTC], ["id", 145]]
  [1m[35m (0.6ms)[0m  [1m[35mCOMMIT[0m
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (0.74ms)
Completed 200 OK in 8ms (Views: 1.2ms | ActiveRecord: 1.8ms)


Started PATCH "/api/v1/answers/145" for ::1 at 2016-06-20 15:39:09 -0400
Processing by Api::V1::AnswersController#update as JSON
  Parameters: {"data"=>{"id"=>"145", "attributes"=>{"content"=>"cedced", "vote-count"=>4, "vote-score"=>0}, "question"=>{"data"=>{"id"=>"1", "attributes"=>{"content"=>"What are you looking for in terms of career development?"}, "type"=>"questions"}}, "type"=>"answers"}, "id"=>"145", "answer"=>{}}
  [1m[36mAnswer Load (0.4ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."id" = $1 LIMIT $2[0m  [["id", 145], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  [1m[35mSQL (0.4ms)[0m  [1m[33mUPDATE "answers" SET "vote_count" = $1, "vote_score" = $2, "updated_at" = $3 WHERE "answers"."id" = $4[0m  [["vote_count", 4], ["vote_score", 0], ["updated_at", 2016-06-20 19:39:09 UTC], ["id", 145]]
  [1m[35m (0.7ms)[0m  [1m[35mCOMMIT[0m
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (0.75ms)
Completed 200 OK in 9ms (Views: 1.2ms | ActiveRecord: 1.8ms)


Started PATCH "/api/v1/answers/145" for ::1 at 2016-06-20 15:39:10 -0400
Processing by Api::V1::AnswersController#update as JSON
  Parameters: {"data"=>{"id"=>"145", "attributes"=>{"content"=>"cedced", "vote-count"=>5, "vote-score"=>-1}, "question"=>{"data"=>{"id"=>"1", "attributes"=>{"content"=>"What are you looking for in terms of career development?"}, "type"=>"questions"}}, "type"=>"answers"}, "id"=>"145", "answer"=>{}}
  [1m[36mAnswer Load (0.6ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."id" = $1 LIMIT $2[0m  [["id", 145], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  [1m[35mSQL (0.4ms)[0m  [1m[33mUPDATE "answers" SET "vote_count" = $1, "vote_score" = $2, "updated_at" = $3 WHERE "answers"."id" = $4[0m  [["vote_count", 5], ["vote_score", -1], ["updated_at", 2016-06-20 19:39:10 UTC], ["id", 145]]
  [1m[35m (0.8ms)[0m  [1m[35mCOMMIT[0m
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (0.78ms)
Completed 200 OK in 8ms (Views: 1.2ms | ActiveRecord: 2.1ms)


Started PATCH "/api/v1/answers/145" for ::1 at 2016-06-20 15:39:10 -0400
Processing by Api::V1::AnswersController#update as JSON
  Parameters: {"data"=>{"id"=>"145", "attributes"=>{"content"=>"cedced", "vote-count"=>6, "vote-score"=>-2}, "question"=>{"data"=>{"id"=>"1", "attributes"=>{"content"=>"What are you looking for in terms of career development?"}, "type"=>"questions"}}, "type"=>"answers"}, "id"=>"145", "answer"=>{}}
  [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."id" = $1 LIMIT $2[0m  [["id", 145], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  [1m[35mSQL (0.4ms)[0m  [1m[33mUPDATE "answers" SET "vote_count" = $1, "vote_score" = $2, "updated_at" = $3 WHERE "answers"."id" = $4[0m  [["vote_count", 6], ["vote_score", -2], ["updated_at", 2016-06-20 19:39:10 UTC], ["id", 145]]
  [1m[35m (0.8ms)[0m  [1m[35mCOMMIT[0m
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (0.75ms)
Completed 200 OK in 8ms (Views: 1.3ms | ActiveRecord: 1.8ms)


Started PATCH "/api/v1/answers/145" for ::1 at 2016-06-20 15:39:10 -0400
Processing by Api::V1::AnswersController#update as JSON
  Parameters: {"data"=>{"id"=>"145", "attributes"=>{"content"=>"cedced", "vote-count"=>7, "vote-score"=>-3}, "question"=>{"data"=>{"id"=>"1", "attributes"=>{"content"=>"What are you looking for in terms of career development?"}, "type"=>"questions"}}, "type"=>"answers"}, "id"=>"145", "answer"=>{}}
  [1m[36mAnswer Load (0.3ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."id" = $1 LIMIT $2[0m  [["id", 145], ["LIMIT", 1]]
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  [1m[35mSQL (0.3ms)[0m  [1m[33mUPDATE "answers" SET "vote_count" = $1, "vote_score" = $2, "updated_at" = $3 WHERE "answers"."id" = $4[0m  [["vote_count", 7], ["vote_score", -3], ["updated_at", 2016-06-20 19:39:10 UTC], ["id", 145]]
  [1m[35m (0.7ms)[0m  [1m[35mCOMMIT[0m
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (0.76ms)
Completed 200 OK in 7ms (Views: 1.2ms | ActiveRecord: 1.6ms)


Started PATCH "/api/v1/answers/145" for ::1 at 2016-06-20 15:39:10 -0400
Processing by Api::V1::AnswersController#update as JSON
  Parameters: {"data"=>{"id"=>"145", "attributes"=>{"content"=>"cedced", "vote-count"=>8, "vote-score"=>-4}, "question"=>{"data"=>{"id"=>"1", "attributes"=>{"content"=>"What are you looking for in terms of career development?"}, "type"=>"questions"}}, "type"=>"answers"}, "id"=>"145", "answer"=>{}}
  [1m[36mAnswer Load (0.3ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."id" = $1 LIMIT $2[0m  [["id", 145], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[36mQuestion Load (0.1ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  [1m[35mSQL (0.3ms)[0m  [1m[33mUPDATE "answers" SET "vote_count" = $1, "vote_score" = $2, "updated_at" = $3 WHERE "answers"."id" = $4[0m  [["vote_count", 8], ["vote_score", -4], ["updated_at", 2016-06-20 19:39:10 UTC], ["id", 145]]
  [1m[35m (0.8ms)[0m  [1m[35mCOMMIT[0m
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (0.73ms)
Completed 200 OK in 7ms (Views: 1.2ms | ActiveRecord: 1.6ms)


Started PATCH "/api/v1/answers/145" for ::1 at 2016-06-20 15:39:11 -0400
Processing by Api::V1::AnswersController#update as JSON
  Parameters: {"data"=>{"id"=>"145", "attributes"=>{"content"=>"cedced", "vote-count"=>9, "vote-score"=>-5}, "question"=>{"data"=>{"id"=>"1", "attributes"=>{"content"=>"What are you looking for in terms of career development?"}, "type"=>"questions"}}, "type"=>"answers"}, "id"=>"145", "answer"=>{}}
  [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."id" = $1 LIMIT $2[0m  [["id", 145], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[36mQuestion Load (0.1ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  [1m[35mSQL (0.4ms)[0m  [1m[33mUPDATE "answers" SET "vote_count" = $1, "vote_score" = $2, "updated_at" = $3 WHERE "answers"."id" = $4[0m  [["vote_count", 9], ["vote_score", -5], ["updated_at", 2016-06-20 19:39:11 UTC], ["id", 145]]
  [1m[35m (0.6ms)[0m  [1m[35mCOMMIT[0m
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (0.91ms)
Completed 200 OK in 7ms (Views: 1.4ms | ActiveRecord: 1.5ms)


Started PATCH "/api/v1/answers/145" for ::1 at 2016-06-20 15:39:11 -0400
Processing by Api::V1::AnswersController#update as JSON
  Parameters: {"data"=>{"id"=>"145", "attributes"=>{"content"=>"cedced", "vote-count"=>10, "vote-score"=>-4}, "question"=>{"data"=>{"id"=>"1", "attributes"=>{"content"=>"What are you looking for in terms of career development?"}, "type"=>"questions"}}, "type"=>"answers"}, "id"=>"145", "answer"=>{}}
  [1m[36mAnswer Load (0.4ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."id" = $1 LIMIT $2[0m  [["id", 145], ["LIMIT", 1]]
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  [1m[35mSQL (0.4ms)[0m  [1m[33mUPDATE "answers" SET "vote_count" = $1, "vote_score" = $2, "updated_at" = $3 WHERE "answers"."id" = $4[0m  [["vote_count", 10], ["vote_score", -4], ["updated_at", 2016-06-20 19:39:11 UTC], ["id", 145]]
  [1m[35m (16.0ms)[0m  [1m[35mCOMMIT[0m
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (0.76ms)
Completed 200 OK in 25ms (Views: 1.2ms | ActiveRecord: 17.3ms)


Started PATCH "/api/v1/answers/145" for ::1 at 2016-06-20 15:39:12 -0400
Processing by Api::V1::AnswersController#update as JSON
  Parameters: {"data"=>{"id"=>"145", "attributes"=>{"content"=>"cedced", "vote-count"=>11, "vote-score"=>-3}, "question"=>{"data"=>{"id"=>"1", "attributes"=>{"content"=>"What are you looking for in terms of career development?"}, "type"=>"questions"}}, "type"=>"answers"}, "id"=>"145", "answer"=>{}}
  [1m[36mAnswer Load (0.4ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."id" = $1 LIMIT $2[0m  [["id", 145], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  [1m[35mSQL (0.3ms)[0m  [1m[33mUPDATE "answers" SET "vote_count" = $1, "vote_score" = $2, "updated_at" = $3 WHERE "answers"."id" = $4[0m  [["vote_count", 11], ["vote_score", -3], ["updated_at", 2016-06-20 19:39:12 UTC], ["id", 145]]
  [1m[35m (23.7ms)[0m  [1m[35mCOMMIT[0m
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (0.91ms)
Completed 200 OK in 31ms (Views: 1.4ms | ActiveRecord: 24.8ms)


Started PATCH "/api/v1/answers/145" for ::1 at 2016-06-20 15:39:12 -0400
Processing by Api::V1::AnswersController#update as JSON
  Parameters: {"data"=>{"id"=>"145", "attributes"=>{"content"=>"cedced", "vote-count"=>12, "vote-score"=>-2}, "question"=>{"data"=>{"id"=>"1", "attributes"=>{"content"=>"What are you looking for in terms of career development?"}, "type"=>"questions"}}, "type"=>"answers"}, "id"=>"145", "answer"=>{}}
  [1m[36mAnswer Load (0.3ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."id" = $1 LIMIT $2[0m  [["id", 145], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  [1m[35mSQL (0.3ms)[0m  [1m[33mUPDATE "answers" SET "vote_count" = $1, "vote_score" = $2, "updated_at" = $3 WHERE "answers"."id" = $4[0m  [["vote_count", 12], ["vote_score", -2], ["updated_at", 2016-06-20 19:39:12 UTC], ["id", 145]]
  [1m[35m (2.8ms)[0m  [1m[35mCOMMIT[0m
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (0.75ms)
Completed 200 OK in 9ms (Views: 1.2ms | ActiveRecord: 3.7ms)


Started PATCH "/api/v1/answers/145" for ::1 at 2016-06-20 15:39:12 -0400
Processing by Api::V1::AnswersController#update as JSON
  Parameters: {"data"=>{"id"=>"145", "attributes"=>{"content"=>"cedced", "vote-count"=>13, "vote-score"=>-1}, "question"=>{"data"=>{"id"=>"1", "attributes"=>{"content"=>"What are you looking for in terms of career development?"}, "type"=>"questions"}}, "type"=>"answers"}, "id"=>"145", "answer"=>{}}
  [1m[36mAnswer Load (0.3ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."id" = $1 LIMIT $2[0m  [["id", 145], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  [1m[35mSQL (0.3ms)[0m  [1m[33mUPDATE "answers" SET "vote_count" = $1, "vote_score" = $2, "updated_at" = $3 WHERE "answers"."id" = $4[0m  [["vote_count", 13], ["vote_score", -1], ["updated_at", 2016-06-20 19:39:12 UTC], ["id", 145]]
  [1m[35m (0.6ms)[0m  [1m[35mCOMMIT[0m
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (0.75ms)
Completed 200 OK in 7ms (Views: 1.2ms | ActiveRecord: 1.5ms)


Started PATCH "/api/v1/answers/145" for ::1 at 2016-06-20 15:39:12 -0400
Processing by Api::V1::AnswersController#update as JSON
  Parameters: {"data"=>{"id"=>"145", "attributes"=>{"content"=>"cedced", "vote-count"=>14, "vote-score"=>0}, "question"=>{"data"=>{"id"=>"1", "attributes"=>{"content"=>"What are you looking for in terms of career development?"}, "type"=>"questions"}}, "type"=>"answers"}, "id"=>"145", "answer"=>{}}
  [1m[36mAnswer Load (0.3ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."id" = $1 LIMIT $2[0m  [["id", 145], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  [1m[35mSQL (0.3ms)[0m  [1m[33mUPDATE "answers" SET "vote_count" = $1, "vote_score" = $2, "updated_at" = $3 WHERE "answers"."id" = $4[0m  [["vote_count", 14], ["vote_score", 0], ["updated_at", 2016-06-20 19:39:12 UTC], ["id", 145]]
  [1m[35m (15.8ms)[0m  [1m[35mCOMMIT[0m
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (0.73ms)
Completed 200 OK in 22ms (Views: 1.2ms | ActiveRecord: 16.7ms)


Started PATCH "/api/v1/answers/145" for ::1 at 2016-06-20 15:39:12 -0400
Processing by Api::V1::AnswersController#update as JSON
  Parameters: {"data"=>{"id"=>"145", "attributes"=>{"content"=>"cedced", "vote-count"=>15, "vote-score"=>1}, "question"=>{"data"=>{"id"=>"1", "attributes"=>{"content"=>"What are you looking for in terms of career development?"}, "type"=>"questions"}}, "type"=>"answers"}, "id"=>"145", "answer"=>{}}
  [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."id" = $1 LIMIT $2[0m  [["id", 145], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[36mQuestion Load (0.1ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  [1m[35mSQL (0.3ms)[0m  [1m[33mUPDATE "answers" SET "vote_count" = $1, "vote_score" = $2, "updated_at" = $3 WHERE "answers"."id" = $4[0m  [["vote_count", 15], ["vote_score", 1], ["updated_at", 2016-06-20 19:39:12 UTC], ["id", 145]]
  [1m[35m (15.5ms)[0m  [1m[35mCOMMIT[0m
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (0.8ms)
Completed 200 OK in 22ms (Views: 1.3ms | ActiveRecord: 16.3ms)


Started PATCH "/api/v1/answers/145" for ::1 at 2016-06-20 15:39:13 -0400
Processing by Api::V1::AnswersController#update as JSON
  Parameters: {"data"=>{"id"=>"145", "attributes"=>{"content"=>"cedced", "vote-count"=>16, "vote-score"=>2}, "question"=>{"data"=>{"id"=>"1", "attributes"=>{"content"=>"What are you looking for in terms of career development?"}, "type"=>"questions"}}, "type"=>"answers"}, "id"=>"145", "answer"=>{}}
  [1m[36mAnswer Load (0.3ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."id" = $1 LIMIT $2[0m  [["id", 145], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[36mQuestion Load (0.1ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  [1m[35mSQL (0.5ms)[0m  [1m[33mUPDATE "answers" SET "vote_count" = $1, "vote_score" = $2, "updated_at" = $3 WHERE "answers"."id" = $4[0m  [["vote_count", 16], ["vote_score", 2], ["updated_at", 2016-06-20 19:39:13 UTC], ["id", 145]]
  [1m[35m (61.2ms)[0m  [1m[35mCOMMIT[0m
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (1.31ms)
Completed 200 OK in 69ms (Views: 2.2ms | ActiveRecord: 62.3ms)


Started PATCH "/api/v1/answers/145" for ::1 at 2016-06-20 15:39:13 -0400
Processing by Api::V1::AnswersController#update as JSON
  Parameters: {"data"=>{"id"=>"145", "attributes"=>{"content"=>"cedced", "vote-count"=>17, "vote-score"=>3}, "question"=>{"data"=>{"id"=>"1", "attributes"=>{"content"=>"What are you looking for in terms of career development?"}, "type"=>"questions"}}, "type"=>"answers"}, "id"=>"145", "answer"=>{}}
  [1m[36mAnswer Load (0.3ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."id" = $1 LIMIT $2[0m  [["id", 145], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  [1m[35mSQL (0.5ms)[0m  [1m[33mUPDATE "answers" SET "vote_count" = $1, "vote_score" = $2, "updated_at" = $3 WHERE "answers"."id" = $4[0m  [["vote_count", 17], ["vote_score", 3], ["updated_at", 2016-06-20 19:39:13 UTC], ["id", 145]]
  [1m[35m (93.5ms)[0m  [1m[35mCOMMIT[0m
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (0.79ms)
Completed 200 OK in 107ms (Views: 1.3ms | ActiveRecord: 94.6ms)


Started PATCH "/api/v1/answers/145" for ::1 at 2016-06-20 15:39:13 -0400
Processing by Api::V1::AnswersController#update as JSON
  Parameters: {"data"=>{"id"=>"145", "attributes"=>{"content"=>"cedced", "vote-count"=>18, "vote-score"=>4}, "question"=>{"data"=>{"id"=>"1", "attributes"=>{"content"=>"What are you looking for in terms of career development?"}, "type"=>"questions"}}, "type"=>"answers"}, "id"=>"145", "answer"=>{}}
  [1m[36mAnswer Load (0.3ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."id" = $1 LIMIT $2[0m  [["id", 145], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  [1m[35mSQL (0.5ms)[0m  [1m[33mUPDATE "answers" SET "vote_count" = $1, "vote_score" = $2, "updated_at" = $3 WHERE "answers"."id" = $4[0m  [["vote_count", 18], ["vote_score", 4], ["updated_at", 2016-06-20 19:39:13 UTC], ["id", 145]]
  [1m[35m (15.6ms)[0m  [1m[35mCOMMIT[0m
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (0.98ms)
Completed 200 OK in 23ms (Views: 1.7ms | ActiveRecord: 16.8ms)


Started GET "/api/v1/random" for ::1 at 2016-06-20 15:39:14 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
[active_model_serializers] Rendered ActiveModel::Serializer::Null with Hash (0.28ms)
Completed 200 OK in 1ms (Views: 0.7ms | ActiveRecord: 0.0ms)


Started GET "/api/v1/questions/15" for ::1 at 2016-06-20 15:39:14 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"15"}
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 15], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.3ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 15]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (5.36ms)
Completed 200 OK in 7ms (Views: 5.5ms | ActiveRecord: 0.5ms)


Started GET "/api/v1/random" for ::1 at 2016-06-20 15:48:04 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
[active_model_serializers] Rendered ActiveModel::Serializer::Null with Hash (0.11ms)
Completed 200 OK in 1ms (Views: 0.6ms | ActiveRecord: 0.0ms)


Started GET "/api/v1/questions/30" for ::1 at 2016-06-20 15:48:04 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"30"}
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 30], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.4ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 30]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (10.08ms)
Completed 200 OK in 12ms (Views: 10.4ms | ActiveRecord: 0.6ms)


Started GET "/api/v1/questions/30" for ::1 at 2016-06-20 15:48:30 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"30"}
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 30], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.3ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 30]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (5.93ms)
Completed 200 OK in 7ms (Views: 6.1ms | ActiveRecord: 0.6ms)


Started GET "/api/v1/questions/30" for ::1 at 2016-06-20 15:48:40 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"30"}
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 30], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.3ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 30]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (5.9ms)
Completed 200 OK in 7ms (Views: 6.1ms | ActiveRecord: 0.5ms)


Started GET "/api/v1/random" for ::1 at 2016-06-20 15:48:43 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
[active_model_serializers] Rendered ActiveModel::Serializer::Null with Hash (0.11ms)
Completed 200 OK in 1ms (Views: 0.7ms | ActiveRecord: 0.0ms)


Started GET "/api/v1/questions/14" for ::1 at 2016-06-20 15:48:43 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"14"}
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 14], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.3ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 14]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (8.78ms)
Completed 200 OK in 11ms (Views: 9.1ms | ActiveRecord: 0.6ms)


Started GET "/api/v1/random" for ::1 at 2016-06-20 15:57:22 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
[active_model_serializers] Rendered ActiveModel::Serializer::Null with Hash (0.07ms)
Completed 200 OK in 1ms (Views: 0.4ms | ActiveRecord: 0.0ms)


Started GET "/api/v1/questions/6" for ::1 at 2016-06-20 15:57:22 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"6"}
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 6], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 6]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (5.78ms)
Completed 200 OK in 7ms (Views: 6.1ms | ActiveRecord: 0.4ms)


Started GET "/api/v1/random" for ::1 at 2016-06-20 16:11:26 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
[active_model_serializers] Rendered ActiveModel::Serializer::Null with Hash (0.11ms)
Completed 200 OK in 1ms (Views: 0.7ms | ActiveRecord: 0.0ms)


Started GET "/api/v1/questions/30" for ::1 at 2016-06-20 16:11:26 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"30"}
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 30], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.3ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 30]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (9.23ms)
Completed 200 OK in 11ms (Views: 9.4ms | ActiveRecord: 0.5ms)


Started GET "/api/v1/questions/30" for ::1 at 2016-06-20 16:11:42 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"30"}
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 30], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.3ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 30]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (7.43ms)
Completed 200 OK in 9ms (Views: 7.9ms | ActiveRecord: 0.5ms)


Started GET "/api/v1/questions/30" for ::1 at 2016-06-20 16:19:27 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"30"}
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 30], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 30]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (5.98ms)
Completed 200 OK in 8ms (Views: 6.3ms | ActiveRecord: 0.4ms)


Started GET "/api/v1/questions/30" for ::1 at 2016-06-20 16:20:19 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"30"}
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 30], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 30]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (6.33ms)
Completed 200 OK in 8ms (Views: 6.6ms | ActiveRecord: 0.4ms)


Started GET "/api/v1/random" for ::1 at 2016-06-20 16:20:21 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
[active_model_serializers] Rendered ActiveModel::Serializer::Null with Hash (0.08ms)
Completed 200 OK in 1ms (Views: 0.4ms | ActiveRecord: 0.0ms)


Started GET "/api/v1/questions/16" for ::1 at 2016-06-20 16:20:21 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"16"}
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 16], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 16]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (6.45ms)
Completed 200 OK in 8ms (Views: 6.7ms | ActiveRecord: 0.4ms)


Started GET "/api/v1/random" for ::1 at 2016-06-20 16:20:29 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
[active_model_serializers] Rendered ActiveModel::Serializer::Null with Hash (0.11ms)
Completed 200 OK in 1ms (Views: 0.7ms | ActiveRecord: 0.0ms)


Started GET "/api/v1/questions/8" for ::1 at 2016-06-20 16:20:29 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"8"}
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 8], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.3ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 8]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (8.32ms)
Completed 200 OK in 10ms (Views: 8.4ms | ActiveRecord: 0.5ms)


Started GET "/api/v1/random" for ::1 at 2016-06-20 16:21:35 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
[active_model_serializers] Rendered ActiveModel::Serializer::Null with Hash (0.06ms)
Completed 200 OK in 1ms (Views: 0.5ms | ActiveRecord: 0.0ms)


Started GET "/api/v1/questions/27" for ::1 at 2016-06-20 16:21:35 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"27"}
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 27], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 27]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (3.7ms)
Completed 200 OK in 5ms (Views: 3.9ms | ActiveRecord: 0.4ms)


Started GET "/api/v1/random" for ::1 at 2016-06-20 16:21:35 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
[active_model_serializers] Rendered ActiveModel::Serializer::Null with Hash (0.22ms)
Completed 200 OK in 1ms (Views: 0.7ms | ActiveRecord: 0.0ms)


Started GET "/api/v1/questions/5" for ::1 at 2016-06-20 16:21:35 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"5"}
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 5], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.3ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 5]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (7.02ms)
Completed 200 OK in 9ms (Views: 7.4ms | ActiveRecord: 0.5ms)


Started GET "/api/v1/random" for ::1 at 2016-06-20 16:21:36 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
[active_model_serializers] Rendered ActiveModel::Serializer::Null with Hash (0.11ms)
Completed 200 OK in 1ms (Views: 0.5ms | ActiveRecord: 0.0ms)


Started GET "/api/v1/questions/17" for ::1 at 2016-06-20 16:21:36 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"17"}
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 17], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 17]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (6.44ms)
Completed 200 OK in 8ms (Views: 6.7ms | ActiveRecord: 0.3ms)


Started GET "/api/v1/random" for ::1 at 2016-06-20 16:21:37 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
[active_model_serializers] Rendered ActiveModel::Serializer::Null with Hash (0.09ms)
Completed 200 OK in 1ms (Views: 0.5ms | ActiveRecord: 0.0ms)


Started GET "/api/v1/questions/4" for ::1 at 2016-06-20 16:21:37 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"4"}
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 4], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 4]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (6.03ms)
Completed 200 OK in 7ms (Views: 6.2ms | ActiveRecord: 0.4ms)


Started GET "/api/v1/random" for ::1 at 2016-06-20 16:21:37 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
[active_model_serializers] Rendered ActiveModel::Serializer::Null with Hash (0.09ms)
Completed 200 OK in 1ms (Views: 0.5ms | ActiveRecord: 0.0ms)


Started GET "/api/v1/questions/23" for ::1 at 2016-06-20 16:21:37 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"23"}
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 23], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 23]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (8.86ms)
Completed 200 OK in 10ms (Views: 9.2ms | ActiveRecord: 0.3ms)


Started GET "/api/v1/random" for ::1 at 2016-06-20 16:21:38 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
[active_model_serializers] Rendered ActiveModel::Serializer::Null with Hash (0.09ms)
Completed 200 OK in 1ms (Views: 0.5ms | ActiveRecord: 0.0ms)


Started GET "/api/v1/questions/29" for ::1 at 2016-06-20 16:21:38 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"29"}
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 29], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 29]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (3.97ms)
Completed 200 OK in 5ms (Views: 4.2ms | ActiveRecord: 0.4ms)


Started GET "/api/v1/random" for ::1 at 2016-06-20 16:21:38 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
[active_model_serializers] Rendered ActiveModel::Serializer::Null with Hash (0.09ms)
Completed 200 OK in 1ms (Views: 0.6ms | ActiveRecord: 0.0ms)


Started GET "/api/v1/questions/5" for ::1 at 2016-06-20 16:21:38 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"5"}
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 5], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 5]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (6.69ms)
Completed 200 OK in 8ms (Views: 7.0ms | ActiveRecord: 0.5ms)


Started GET "/api/v1/random" for ::1 at 2016-06-20 16:21:39 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
[active_model_serializers] Rendered ActiveModel::Serializer::Null with Hash (0.07ms)
Completed 200 OK in 1ms (Views: 0.4ms | ActiveRecord: 0.0ms)


Started GET "/api/v1/questions/29" for ::1 at 2016-06-20 16:21:39 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"29"}
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 29], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 29]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (6.31ms)
Completed 200 OK in 8ms (Views: 6.8ms | ActiveRecord: 0.5ms)


Started GET "/api/v1/random" for ::1 at 2016-06-20 16:21:39 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
[active_model_serializers] Rendered ActiveModel::Serializer::Null with Hash (0.13ms)
Completed 200 OK in 1ms (Views: 0.7ms | ActiveRecord: 0.0ms)


Started GET "/api/v1/questions/24" for ::1 at 2016-06-20 16:21:39 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"24"}
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 24], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 24]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (5.4ms)
Completed 200 OK in 7ms (Views: 5.7ms | ActiveRecord: 0.4ms)


Started GET "/api/v1/random" for ::1 at 2016-06-20 16:21:39 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
[active_model_serializers] Rendered ActiveModel::Serializer::Null with Hash (0.12ms)
Completed 200 OK in 1ms (Views: 0.7ms | ActiveRecord: 0.0ms)


Started GET "/api/v1/questions/25" for ::1 at 2016-06-20 16:21:39 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"25"}
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 25], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 25]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (4.16ms)
Completed 200 OK in 6ms (Views: 4.6ms | ActiveRecord: 0.3ms)


Started GET "/api/v1/random" for ::1 at 2016-06-20 16:21:40 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
[active_model_serializers] Rendered ActiveModel::Serializer::Null with Hash (0.12ms)
Completed 200 OK in 1ms (Views: 0.7ms | ActiveRecord: 0.0ms)


Started GET "/api/v1/questions/29" for ::1 at 2016-06-20 16:21:40 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"29"}
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 29], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.3ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 29]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (6.1ms)
Completed 200 OK in 8ms (Views: 6.5ms | ActiveRecord: 0.7ms)


Started GET "/api/v1/random" for ::1 at 2016-06-20 16:21:40 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
[active_model_serializers] Rendered ActiveModel::Serializer::Null with Hash (0.09ms)
Completed 200 OK in 1ms (Views: 0.5ms | ActiveRecord: 0.0ms)


Started GET "/api/v1/questions/6" for ::1 at 2016-06-20 16:21:40 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"6"}
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 6], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 6]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (4.01ms)
Completed 200 OK in 5ms (Views: 4.3ms | ActiveRecord: 0.3ms)


Started GET "/api/v1/random" for ::1 at 2016-06-20 16:21:41 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
[active_model_serializers] Rendered ActiveModel::Serializer::Null with Hash (0.08ms)
Completed 200 OK in 1ms (Views: 0.5ms | ActiveRecord: 0.0ms)


Started GET "/api/v1/questions/13" for ::1 at 2016-06-20 16:21:41 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"13"}
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 13], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 13]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (8.36ms)
Completed 200 OK in 10ms (Views: 8.6ms | ActiveRecord: 0.3ms)


Started GET "/api/v1/random" for ::1 at 2016-06-20 16:21:41 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
[active_model_serializers] Rendered ActiveModel::Serializer::Null with Hash (0.08ms)
Completed 200 OK in 1ms (Views: 0.5ms | ActiveRecord: 0.0ms)


Started GET "/api/v1/questions/15" for ::1 at 2016-06-20 16:21:41 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"15"}
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 15], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 15]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (4.23ms)
Completed 200 OK in 6ms (Views: 4.5ms | ActiveRecord: 0.4ms)


Started GET "/api/v1/random" for ::1 at 2016-06-20 16:21:42 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
[active_model_serializers] Rendered ActiveModel::Serializer::Null with Hash (0.16ms)
Completed 200 OK in 1ms (Views: 1.0ms | ActiveRecord: 0.0ms)


Started GET "/api/v1/questions/6" for ::1 at 2016-06-20 16:21:42 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"6"}
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 6], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.3ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 6]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (10.14ms)
Completed 200 OK in 12ms (Views: 10.5ms | ActiveRecord: 0.5ms)


Started GET "/api/v1/random" for ::1 at 2016-06-20 16:21:42 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
[active_model_serializers] Rendered ActiveModel::Serializer::Null with Hash (0.09ms)
Completed 200 OK in 1ms (Views: 0.6ms | ActiveRecord: 0.0ms)


Started GET "/api/v1/questions/12" for ::1 at 2016-06-20 16:21:42 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"12"}
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 12], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 12]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (4.23ms)
Completed 200 OK in 6ms (Views: 4.5ms | ActiveRecord: 0.3ms)


Started GET "/api/v1/random" for ::1 at 2016-06-20 16:21:42 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
[active_model_serializers] Rendered ActiveModel::Serializer::Null with Hash (0.11ms)
Completed 200 OK in 1ms (Views: 0.6ms | ActiveRecord: 0.0ms)


Started GET "/api/v1/questions/22" for ::1 at 2016-06-20 16:21:42 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"22"}
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 22], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 22]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (9.41ms)
Completed 200 OK in 11ms (Views: 9.7ms | ActiveRecord: 0.4ms)


Started GET "/api/v1/random" for ::1 at 2016-06-20 16:21:42 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
[active_model_serializers] Rendered ActiveModel::Serializer::Null with Hash (0.09ms)
Completed 200 OK in 1ms (Views: 0.7ms | ActiveRecord: 0.0ms)


Started GET "/api/v1/questions/27" for ::1 at 2016-06-20 16:21:42 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"27"}
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 27], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 27]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (6.67ms)
Completed 200 OK in 9ms (Views: 7.1ms | ActiveRecord: 0.6ms)


Started GET "/api/v1/random" for ::1 at 2016-06-20 16:21:43 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
[active_model_serializers] Rendered ActiveModel::Serializer::Null with Hash (0.1ms)
Completed 200 OK in 1ms (Views: 0.8ms | ActiveRecord: 0.0ms)


Started GET "/api/v1/questions/22" for ::1 at 2016-06-20 16:21:43 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"22"}
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 22], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.3ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 22]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (10.69ms)
Completed 200 OK in 13ms (Views: 11.1ms | ActiveRecord: 0.5ms)


Started GET "/api/v1/random" for ::1 at 2016-06-20 16:21:43 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
[active_model_serializers] Rendered ActiveModel::Serializer::Null with Hash (0.11ms)
Completed 200 OK in 1ms (Views: 0.7ms | ActiveRecord: 0.0ms)


Started GET "/api/v1/questions/15" for ::1 at 2016-06-20 16:21:43 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"15"}
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 15], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 15]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (6.51ms)
Completed 200 OK in 8ms (Views: 6.8ms | ActiveRecord: 0.5ms)


Started GET "/api/v1/random" for ::1 at 2016-06-20 16:21:43 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
[active_model_serializers] Rendered ActiveModel::Serializer::Null with Hash (0.16ms)
Completed 200 OK in 1ms (Views: 0.6ms | ActiveRecord: 0.0ms)


Started GET "/api/v1/questions/3" for ::1 at 2016-06-20 16:21:43 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"3"}
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 3], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 3]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (6.14ms)
Completed 200 OK in 7ms (Views: 6.4ms | ActiveRecord: 0.3ms)


Started GET "/api/v1/random" for ::1 at 2016-06-20 16:21:43 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
[active_model_serializers] Rendered ActiveModel::Serializer::Null with Hash (0.06ms)
Completed 200 OK in 1ms (Views: 0.4ms | ActiveRecord: 0.0ms)


Started GET "/api/v1/questions/27" for ::1 at 2016-06-20 16:21:43 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"27"}
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 27], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 27]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (5.5ms)
Completed 200 OK in 7ms (Views: 5.8ms | ActiveRecord: 0.5ms)


Started GET "/api/v1/random" for ::1 at 2016-06-20 16:21:43 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
[active_model_serializers] Rendered ActiveModel::Serializer::Null with Hash (0.09ms)
Completed 200 OK in 1ms (Views: 0.5ms | ActiveRecord: 0.0ms)


Started GET "/api/v1/questions/23" for ::1 at 2016-06-20 16:21:43 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"23"}
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 23], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.3ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 23]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (9.82ms)
Completed 200 OK in 12ms (Views: 10.1ms | ActiveRecord: 0.6ms)


Started GET "/api/v1/random" for ::1 at 2016-06-20 16:21:44 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
[active_model_serializers] Rendered ActiveModel::Serializer::Null with Hash (0.09ms)
Completed 200 OK in 1ms (Views: 0.8ms | ActiveRecord: 0.0ms)


Started GET "/api/v1/questions/21" for ::1 at 2016-06-20 16:21:44 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"21"}
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 21], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 21]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (7.45ms)
Completed 200 OK in 9ms (Views: 7.9ms | ActiveRecord: 0.4ms)


Started GET "/api/v1/random" for ::1 at 2016-06-20 16:21:44 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
[active_model_serializers] Rendered ActiveModel::Serializer::Null with Hash (0.1ms)
Completed 200 OK in 1ms (Views: 0.5ms | ActiveRecord: 0.0ms)


Started GET "/api/v1/questions/19" for ::1 at 2016-06-20 16:21:44 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"19"}
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 19], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 19]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (5.51ms)
Completed 200 OK in 7ms (Views: 5.8ms | ActiveRecord: 0.3ms)


Started GET "/api/v1/random" for ::1 at 2016-06-20 16:21:44 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
[active_model_serializers] Rendered ActiveModel::Serializer::Null with Hash (0.09ms)
Completed 200 OK in 1ms (Views: 0.5ms | ActiveRecord: 0.0ms)


Started GET "/api/v1/questions/11" for ::1 at 2016-06-20 16:21:44 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"11"}
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 11], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 11]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (8.49ms)
Completed 200 OK in 10ms (Views: 8.8ms | ActiveRecord: 0.3ms)


Started GET "/api/v1/random" for ::1 at 2016-06-20 16:21:44 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
[active_model_serializers] Rendered ActiveModel::Serializer::Null with Hash (0.09ms)
Completed 200 OK in 1ms (Views: 0.5ms | ActiveRecord: 0.0ms)


Started GET "/api/v1/questions/5" for ::1 at 2016-06-20 16:21:44 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"5"}
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 5], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 5]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (6.49ms)
Completed 200 OK in 9ms (Views: 6.8ms | ActiveRecord: 0.6ms)


Started GET "/api/v1/random" for ::1 at 2016-06-20 16:21:45 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
[active_model_serializers] Rendered ActiveModel::Serializer::Null with Hash (0.09ms)
Completed 200 OK in 1ms (Views: 0.5ms | ActiveRecord: 0.0ms)


Started GET "/api/v1/questions/24" for ::1 at 2016-06-20 16:21:45 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"24"}
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 24], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.5ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 24]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (10.23ms)
Completed 200 OK in 12ms (Views: 10.2ms | ActiveRecord: 0.7ms)


Started GET "/api/v1/random" for ::1 at 2016-06-20 16:28:44 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
[active_model_serializers] Rendered ActiveModel::Serializer::Null with Hash (0.11ms)
Completed 200 OK in 1ms (Views: 0.8ms | ActiveRecord: 0.0ms)


Started GET "/api/v1/questions/1" for ::1 at 2016-06-20 16:28:44 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"1"}
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.4ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 1]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (8.5ms)
Completed 200 OK in 10ms (Views: 8.6ms | ActiveRecord: 0.5ms)


Started GET "/api/v1/questions/1" for ::1 at 2016-06-20 16:28:46 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"1"}
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.3ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 1]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (6.1ms)
Completed 200 OK in 8ms (Views: 6.3ms | ActiveRecord: 0.5ms)


Started GET "/api/v1/questions/1" for ::1 at 2016-06-20 16:28:49 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"1"}
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 1]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (6.05ms)
Completed 200 OK in 7ms (Views: 6.3ms | ActiveRecord: 0.4ms)


Started GET "/api/v1/random" for ::1 at 2016-06-20 16:28:57 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
[active_model_serializers] Rendered ActiveModel::Serializer::Null with Hash (0.07ms)
Completed 200 OK in 1ms (Views: 0.5ms | ActiveRecord: 0.0ms)


Started GET "/api/v1/questions/21" for ::1 at 2016-06-20 16:28:57 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"21"}
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 21], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.4ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 21]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (8.52ms)
Completed 200 OK in 10ms (Views: 8.6ms | ActiveRecord: 0.6ms)


Started GET "/api/v1/questions/21" for ::1 at 2016-06-20 16:31:08 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"21"}
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 21], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.3ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 21]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (7.88ms)
Completed 200 OK in 9ms (Views: 8.1ms | ActiveRecord: 0.5ms)


Started GET "/api/v1/questions/21" for ::1 at 2016-06-20 16:31:16 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"21"}
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 21], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 21]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (8.23ms)
Completed 200 OK in 10ms (Views: 8.5ms | ActiveRecord: 0.4ms)


Started GET "/api/v1/questions/21" for ::1 at 2016-06-20 16:31:20 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"21"}
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 21], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.3ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 21]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (12.03ms)
Completed 200 OK in 14ms (Views: 12.4ms | ActiveRecord: 0.5ms)


Started GET "/api/v1/questions/21" for ::1 at 2016-06-20 16:31:37 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"21"}
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 21], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.3ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 21]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (8.11ms)
Completed 200 OK in 10ms (Views: 8.3ms | ActiveRecord: 0.5ms)


Started GET "/api/v1/questions/21" for ::1 at 2016-06-20 16:31:41 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"21"}
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 21], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 21]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (7.72ms)
Completed 200 OK in 9ms (Views: 8.0ms | ActiveRecord: 0.4ms)


Started GET "/api/v1/random" for ::1 at 2016-06-20 16:33:17 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
[active_model_serializers] Rendered ActiveModel::Serializer::Null with Hash (0.11ms)
Completed 200 OK in 1ms (Views: 0.7ms | ActiveRecord: 0.0ms)


Started GET "/api/v1/questions/8" for ::1 at 2016-06-20 16:33:18 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"8"}
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 8], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.3ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 8]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (6.74ms)
Completed 200 OK in 8ms (Views: 6.9ms | ActiveRecord: 0.5ms)


Started GET "/api/v1/random" for ::1 at 2016-06-20 16:33:19 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
[active_model_serializers] Rendered ActiveModel::Serializer::Null with Hash (0.06ms)
Completed 200 OK in 1ms (Views: 0.4ms | ActiveRecord: 0.0ms)


Started GET "/api/v1/questions/25" for ::1 at 2016-06-20 16:33:19 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"25"}
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 25], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 25]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (3.95ms)
Completed 200 OK in 5ms (Views: 4.2ms | ActiveRecord: 0.3ms)


Started GET "/api/v1/random" for ::1 at 2016-06-20 16:33:20 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
[active_model_serializers] Rendered ActiveModel::Serializer::Null with Hash (0.09ms)
Completed 200 OK in 1ms (Views: 0.5ms | ActiveRecord: 0.0ms)


Started GET "/api/v1/questions/28" for ::1 at 2016-06-20 16:33:20 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"28"}
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 28], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.3ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 28]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (7.91ms)
Completed 200 OK in 9ms (Views: 8.1ms | ActiveRecord: 0.5ms)


Started GET "/api/v1/random" for ::1 at 2016-06-20 16:33:20 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
[active_model_serializers] Rendered ActiveModel::Serializer::Null with Hash (0.08ms)
Completed 200 OK in 1ms (Views: 0.5ms | ActiveRecord: 0.0ms)


Started GET "/api/v1/questions/16" for ::1 at 2016-06-20 16:33:20 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"16"}
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 16], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 16]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (9.4ms)
Completed 200 OK in 11ms (Views: 9.7ms | ActiveRecord: 0.4ms)


Started GET "/api/v1/random" for ::1 at 2016-06-20 16:33:20 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
[active_model_serializers] Rendered ActiveModel::Serializer::Null with Hash (0.06ms)
Completed 200 OK in 1ms (Views: 0.4ms | ActiveRecord: 0.0ms)


Started GET "/api/v1/questions/29" for ::1 at 2016-06-20 16:33:20 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"29"}
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 29], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 29]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (3.81ms)
Completed 200 OK in 5ms (Views: 4.1ms | ActiveRecord: 0.4ms)


Started GET "/api/v1/random" for ::1 at 2016-06-20 16:33:21 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
[active_model_serializers] Rendered ActiveModel::Serializer::Null with Hash (0.06ms)
Completed 200 OK in 1ms (Views: 0.5ms | ActiveRecord: 0.0ms)


Started GET "/api/v1/questions/17" for ::1 at 2016-06-20 16:33:21 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"17"}
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 17], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 17]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (7.5ms)
Completed 200 OK in 9ms (Views: 7.7ms | ActiveRecord: 0.5ms)


Started GET "/api/v1/random" for ::1 at 2016-06-20 16:33:21 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
[active_model_serializers] Rendered ActiveModel::Serializer::Null with Hash (0.09ms)
Completed 200 OK in 1ms (Views: 0.5ms | ActiveRecord: 0.0ms)


Started GET "/api/v1/questions/18" for ::1 at 2016-06-20 16:33:21 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"18"}
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 18], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 18]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (7.59ms)
Completed 200 OK in 9ms (Views: 7.9ms | ActiveRecord: 0.4ms)


Started GET "/api/v1/random" for ::1 at 2016-06-20 16:33:21 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
[active_model_serializers] Rendered ActiveModel::Serializer::Null with Hash (0.06ms)
Completed 200 OK in 1ms (Views: 0.4ms | ActiveRecord: 0.0ms)


Started GET "/api/v1/questions/15" for ::1 at 2016-06-20 16:33:21 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"15"}
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 15], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 15]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (4.26ms)
Completed 200 OK in 6ms (Views: 4.5ms | ActiveRecord: 0.4ms)


Started GET "/api/v1/random" for ::1 at 2016-06-20 16:33:21 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
[active_model_serializers] Rendered ActiveModel::Serializer::Null with Hash (0.09ms)
Completed 200 OK in 1ms (Views: 0.5ms | ActiveRecord: 0.0ms)


Started GET "/api/v1/questions/3" for ::1 at 2016-06-20 16:33:21 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"3"}
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 3], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 3]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (8.03ms)
Completed 200 OK in 9ms (Views: 8.4ms | ActiveRecord: 0.4ms)


Started GET "/api/v1/random" for ::1 at 2016-06-20 16:33:22 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
[active_model_serializers] Rendered ActiveModel::Serializer::Null with Hash (0.2ms)
Completed 200 OK in 1ms (Views: 0.7ms | ActiveRecord: 0.0ms)


Started GET "/api/v1/questions/10" for ::1 at 2016-06-20 16:33:22 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"10"}
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 10], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.3ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 10]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (10.01ms)
Completed 200 OK in 12ms (Views: 10.3ms | ActiveRecord: 0.7ms)


Started GET "/api/v1/random" for ::1 at 2016-06-20 16:33:22 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
[active_model_serializers] Rendered ActiveModel::Serializer::Null with Hash (0.09ms)
Completed 200 OK in 1ms (Views: 0.6ms | ActiveRecord: 0.0ms)


Started GET "/api/v1/questions/5" for ::1 at 2016-06-20 16:33:22 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"5"}
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 5], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 5]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (4.87ms)
Completed 200 OK in 6ms (Views: 5.1ms | ActiveRecord: 0.3ms)


Started GET "/api/v1/random" for ::1 at 2016-06-20 16:33:22 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
[active_model_serializers] Rendered ActiveModel::Serializer::Null with Hash (0.07ms)
Completed 200 OK in 1ms (Views: 0.5ms | ActiveRecord: 0.0ms)


Started GET "/api/v1/questions/16" for ::1 at 2016-06-20 16:33:22 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"16"}
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 16], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.4ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 16]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (8.85ms)
Completed 200 OK in 11ms (Views: 9.0ms | ActiveRecord: 0.6ms)


Started GET "/api/v1/random" for ::1 at 2016-06-20 16:33:23 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
[active_model_serializers] Rendered ActiveModel::Serializer::Null with Hash (0.09ms)
Completed 200 OK in 1ms (Views: 0.6ms | ActiveRecord: 0.0ms)


Started GET "/api/v1/questions/12" for ::1 at 2016-06-20 16:33:23 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"12"}
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 12], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 12]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (4.52ms)
Completed 200 OK in 6ms (Views: 4.9ms | ActiveRecord: 0.4ms)


Started GET "/api/v1/random" for ::1 at 2016-06-20 16:33:23 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
[active_model_serializers] Rendered ActiveModel::Serializer::Null with Hash (0.09ms)
Completed 200 OK in 1ms (Views: 0.5ms | ActiveRecord: 0.0ms)


Started GET "/api/v1/questions/10" for ::1 at 2016-06-20 16:33:23 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"10"}
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 10], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.3ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 10]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (9.74ms)
Completed 200 OK in 12ms (Views: 10.1ms | ActiveRecord: 0.6ms)


Started GET "/api/v1/random" for ::1 at 2016-06-20 16:33:24 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
[active_model_serializers] Rendered ActiveModel::Serializer::Null with Hash (0.08ms)
Completed 200 OK in 1ms (Views: 0.5ms | ActiveRecord: 0.0ms)


Started GET "/api/v1/questions/15" for ::1 at 2016-06-20 16:33:24 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"15"}
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 15], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.3ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 15]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (8.46ms)
Completed 200 OK in 10ms (Views: 8.8ms | ActiveRecord: 0.6ms)


Started GET "/api/v1/questions/15" for ::1 at 2016-06-20 16:34:17 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"15"}
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 15], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.3ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 15]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (4.93ms)
Completed 200 OK in 7ms (Views: 5.2ms | ActiveRecord: 0.6ms)


Started GET "/api/v1/random" for ::1 at 2016-06-20 16:34:47 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
[active_model_serializers] Rendered ActiveModel::Serializer::Null with Hash (0.07ms)
Completed 200 OK in 1ms (Views: 0.4ms | ActiveRecord: 0.0ms)


Started GET "/api/v1/questions/27" for ::1 at 2016-06-20 16:34:47 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"27"}
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 27], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 27]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (3.62ms)
Completed 200 OK in 5ms (Views: 3.8ms | ActiveRecord: 0.3ms)


Started GET "/api/v1/random" for ::1 at 2016-06-20 16:34:48 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
[active_model_serializers] Rendered ActiveModel::Serializer::Null with Hash (0.11ms)
Completed 200 OK in 1ms (Views: 0.5ms | ActiveRecord: 0.0ms)


Started GET "/api/v1/questions/28" for ::1 at 2016-06-20 16:34:48 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"28"}
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 28], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 28]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (7.86ms)
Completed 200 OK in 9ms (Views: 8.1ms | ActiveRecord: 0.4ms)


Started GET "/api/v1/random" for ::1 at 2016-06-20 16:34:48 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
[active_model_serializers] Rendered ActiveModel::Serializer::Null with Hash (0.06ms)
Completed 200 OK in 1ms (Views: 0.4ms | ActiveRecord: 0.0ms)


Started GET "/api/v1/questions/4" for ::1 at 2016-06-20 16:34:48 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"4"}
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 4], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 4]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (5.84ms)
Completed 200 OK in 7ms (Views: 6.1ms | ActiveRecord: 0.4ms)


Started GET "/api/v1/random" for ::1 at 2016-06-20 16:34:49 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
[active_model_serializers] Rendered ActiveModel::Serializer::Null with Hash (0.06ms)
Completed 200 OK in 1ms (Views: 0.4ms | ActiveRecord: 0.0ms)


Started GET "/api/v1/questions/26" for ::1 at 2016-06-20 16:34:49 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"26"}
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 26], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 26]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (4.91ms)
Completed 200 OK in 6ms (Views: 5.2ms | ActiveRecord: 0.4ms)


Started GET "/api/v1/random" for ::1 at 2016-06-20 16:34:49 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
[active_model_serializers] Rendered ActiveModel::Serializer::Null with Hash (0.08ms)
Completed 200 OK in 1ms (Views: 0.6ms | ActiveRecord: 0.0ms)


Started GET "/api/v1/questions/6" for ::1 at 2016-06-20 16:34:49 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"6"}
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 6], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 6]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (4.18ms)
Completed 200 OK in 5ms (Views: 4.4ms | ActiveRecord: 0.3ms)


Started GET "/api/v1/random" for ::1 at 2016-06-20 16:34:49 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
[active_model_serializers] Rendered ActiveModel::Serializer::Null with Hash (0.14ms)
Completed 200 OK in 1ms (Views: 0.6ms | ActiveRecord: 0.0ms)


Started GET "/api/v1/questions/4" for ::1 at 2016-06-20 16:34:49 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"4"}
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 4], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.3ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 4]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (8.61ms)
Completed 200 OK in 11ms (Views: 9.0ms | ActiveRecord: 0.5ms)


Started GET "/api/v1/random" for ::1 at 2016-06-20 16:34:49 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
[active_model_serializers] Rendered ActiveModel::Serializer::Null with Hash (0.08ms)
Completed 200 OK in 1ms (Views: 0.5ms | ActiveRecord: 0.0ms)


Started GET "/api/v1/questions/2" for ::1 at 2016-06-20 16:34:49 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"2"}
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.3ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 2]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (6.33ms)
Completed 200 OK in 8ms (Views: 6.6ms | ActiveRecord: 0.5ms)


Started GET "/api/v1/random" for ::1 at 2016-06-20 16:34:50 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
[active_model_serializers] Rendered ActiveModel::Serializer::Null with Hash (0.06ms)
Completed 200 OK in 1ms (Views: 0.4ms | ActiveRecord: 0.0ms)


Started GET "/api/v1/questions/25" for ::1 at 2016-06-20 16:34:50 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"25"}
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 25], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 25]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (4.34ms)
Completed 200 OK in 6ms (Views: 4.6ms | ActiveRecord: 0.4ms)


Started GET "/api/v1/random" for ::1 at 2016-06-20 16:34:50 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
[active_model_serializers] Rendered ActiveModel::Serializer::Null with Hash (0.09ms)
Completed 200 OK in 1ms (Views: 0.5ms | ActiveRecord: 0.0ms)


Started GET "/api/v1/questions/23" for ::1 at 2016-06-20 16:34:50 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"23"}
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 23], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 23]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (6.9ms)
Completed 200 OK in 8ms (Views: 7.1ms | ActiveRecord: 0.3ms)


Started GET "/api/v1/random" for ::1 at 2016-06-20 16:34:50 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
[active_model_serializers] Rendered ActiveModel::Serializer::Null with Hash (0.08ms)
Completed 200 OK in 1ms (Views: 0.5ms | ActiveRecord: 0.0ms)


Started GET "/api/v1/questions/9" for ::1 at 2016-06-20 16:34:50 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"9"}
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 9], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 9]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (8.0ms)
Completed 200 OK in 9ms (Views: 8.2ms | ActiveRecord: 0.4ms)


Started GET "/api/v1/random" for ::1 at 2016-06-20 16:34:50 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
[active_model_serializers] Rendered ActiveModel::Serializer::Null with Hash (0.08ms)
Completed 200 OK in 1ms (Views: 0.5ms | ActiveRecord: 0.0ms)


Started GET "/api/v1/questions/19" for ::1 at 2016-06-20 16:34:50 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"19"}
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 19], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 19]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (5.47ms)
Completed 200 OK in 7ms (Views: 5.7ms | ActiveRecord: 0.4ms)


Started GET "/api/v1/random" for ::1 at 2016-06-20 16:34:50 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
[active_model_serializers] Rendered ActiveModel::Serializer::Null with Hash (0.08ms)
Completed 200 OK in 1ms (Views: 0.5ms | ActiveRecord: 0.0ms)


Started GET "/api/v1/questions/22" for ::1 at 2016-06-20 16:34:50 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"22"}
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 22], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 22]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (7.47ms)
Completed 200 OK in 9ms (Views: 7.8ms | ActiveRecord: 0.4ms)


Started GET "/api/v1/random" for ::1 at 2016-06-20 16:34:51 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
[active_model_serializers] Rendered ActiveModel::Serializer::Null with Hash (0.06ms)
Completed 200 OK in 1ms (Views: 0.4ms | ActiveRecord: 0.0ms)


Started GET "/api/v1/questions/6" for ::1 at 2016-06-20 16:34:51 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"6"}
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 6], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 6]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (7.27ms)
Completed 200 OK in 9ms (Views: 7.6ms | ActiveRecord: 0.4ms)


Started GET "/api/v1/random" for ::1 at 2016-06-20 16:34:51 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
[active_model_serializers] Rendered ActiveModel::Serializer::Null with Hash (0.11ms)
Completed 200 OK in 1ms (Views: 0.5ms | ActiveRecord: 0.0ms)


Started GET "/api/v1/questions/8" for ::1 at 2016-06-20 16:34:51 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"8"}
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 8], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 8]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (5.62ms)
Completed 200 OK in 7ms (Views: 5.8ms | ActiveRecord: 0.3ms)


Started GET "/api/v1/random" for ::1 at 2016-06-20 16:34:51 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
[active_model_serializers] Rendered ActiveModel::Serializer::Null with Hash (0.06ms)
Completed 200 OK in 1ms (Views: 0.4ms | ActiveRecord: 0.0ms)


Started GET "/api/v1/questions/15" for ::1 at 2016-06-20 16:34:51 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"15"}
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 15], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.3ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 15]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (5.61ms)
Completed 200 OK in 7ms (Views: 5.9ms | ActiveRecord: 0.6ms)


Started GET "/api/v1/random" for ::1 at 2016-06-20 16:34:51 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
[active_model_serializers] Rendered ActiveModel::Serializer::Null with Hash (0.06ms)
Completed 200 OK in 1ms (Views: 0.4ms | ActiveRecord: 0.0ms)


Started GET "/api/v1/questions/1" for ::1 at 2016-06-20 16:34:51 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"1"}
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 1]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (6.06ms)
Completed 200 OK in 7ms (Views: 6.3ms | ActiveRecord: 0.3ms)


Started GET "/api/v1/random" for ::1 at 2016-06-20 16:34:52 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
[active_model_serializers] Rendered ActiveModel::Serializer::Null with Hash (0.09ms)
Completed 200 OK in 1ms (Views: 0.6ms | ActiveRecord: 0.0ms)


Started GET "/api/v1/questions/12" for ::1 at 2016-06-20 16:34:52 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"12"}
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 12], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 12]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (4.87ms)
Completed 200 OK in 6ms (Views: 5.1ms | ActiveRecord: 0.4ms)


Started GET "/api/v1/random" for ::1 at 2016-06-20 16:34:52 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
[active_model_serializers] Rendered ActiveModel::Serializer::Null with Hash (0.09ms)
Completed 200 OK in 1ms (Views: 0.6ms | ActiveRecord: 0.0ms)


Started GET "/api/v1/questions/6" for ::1 at 2016-06-20 16:34:52 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"6"}
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 6], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.4ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 6]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (6.35ms)
Completed 200 OK in 8ms (Views: 6.7ms | ActiveRecord: 0.7ms)


Started GET "/api/v1/random" for ::1 at 2016-06-20 16:34:52 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
[active_model_serializers] Rendered ActiveModel::Serializer::Null with Hash (0.11ms)
Completed 200 OK in 1ms (Views: 0.5ms | ActiveRecord: 0.0ms)


Started GET "/api/v1/questions/23" for ::1 at 2016-06-20 16:34:52 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"23"}
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 23], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.3ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 23]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (9.67ms)
Completed 200 OK in 12ms (Views: 10.0ms | ActiveRecord: 0.5ms)


Started GET "/api/v1/random" for ::1 at 2016-06-20 16:34:52 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
[active_model_serializers] Rendered ActiveModel::Serializer::Null with Hash (0.09ms)
Completed 200 OK in 1ms (Views: 0.5ms | ActiveRecord: 0.0ms)


Started GET "/api/v1/questions/25" for ::1 at 2016-06-20 16:34:52 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"25"}
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 25], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.3ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 25]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (5.82ms)
Completed 200 OK in 8ms (Views: 6.3ms | ActiveRecord: 0.5ms)


Started GET "/api/v1/random" for ::1 at 2016-06-20 16:34:53 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
[active_model_serializers] Rendered ActiveModel::Serializer::Null with Hash (0.08ms)
Completed 200 OK in 1ms (Views: 0.5ms | ActiveRecord: 0.0ms)


Started GET "/api/v1/questions/6" for ::1 at 2016-06-20 16:34:53 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"6"}
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 6], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 6]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (6.01ms)
Completed 200 OK in 8ms (Views: 6.3ms | ActiveRecord: 0.5ms)


Started GET "/api/v1/random" for ::1 at 2016-06-20 16:34:53 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
[active_model_serializers] Rendered ActiveModel::Serializer::Null with Hash (0.06ms)
Completed 200 OK in 1ms (Views: 0.4ms | ActiveRecord: 0.0ms)


Started GET "/api/v1/questions/15" for ::1 at 2016-06-20 16:34:53 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"15"}
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 15], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.4ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 15]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (8.25ms)
Completed 200 OK in 11ms (Views: 8.8ms | ActiveRecord: 0.8ms)


Started GET "/api/v1/random" for ::1 at 2016-06-20 16:34:53 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
[active_model_serializers] Rendered ActiveModel::Serializer::Null with Hash (0.08ms)
Completed 200 OK in 1ms (Views: 0.5ms | ActiveRecord: 0.0ms)


Started GET "/api/v1/questions/2" for ::1 at 2016-06-20 16:34:53 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"2"}
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.3ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 2]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (7.56ms)
Completed 200 OK in 9ms (Views: 7.9ms | ActiveRecord: 0.5ms)


Started GET "/api/v1/random" for ::1 at 2016-06-20 16:34:54 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
[active_model_serializers] Rendered ActiveModel::Serializer::Null with Hash (0.08ms)
Completed 200 OK in 1ms (Views: 0.5ms | ActiveRecord: 0.0ms)


Started GET "/api/v1/questions/12" for ::1 at 2016-06-20 16:34:54 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"12"}
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 12], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.3ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 12]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (5.68ms)
Completed 200 OK in 8ms (Views: 6.1ms | ActiveRecord: 0.5ms)


Started GET "/api/v1/questions/12" for ::1 at 2016-06-20 16:35:57 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"12"}
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 12], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 12]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (4.91ms)
Completed 200 OK in 6ms (Views: 5.2ms | ActiveRecord: 0.5ms)


Started GET "/api/v1/questions/12" for ::1 at 2016-06-20 16:47:50 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"12"}
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 12], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.3ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 12]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (7.12ms)
Completed 200 OK in 9ms (Views: 7.6ms | ActiveRecord: 0.6ms)


Started GET "/api/v1/questions/12" for ::1 at 2016-06-20 16:47:51 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"12"}
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 12], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 12]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (4.31ms)
Completed 200 OK in 6ms (Views: 4.6ms | ActiveRecord: 0.4ms)


Started GET "/api/v1/random" for ::1 at 2016-06-20 16:54:09 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
[active_model_serializers] Rendered ActiveModel::Serializer::Null with Hash (0.07ms)
Completed 200 OK in 1ms (Views: 0.4ms | ActiveRecord: 0.0ms)


Started GET "/api/v1/questions/3" for ::1 at 2016-06-20 16:54:09 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"3"}
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 3], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.4ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 3]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (7.3ms)
Completed 200 OK in 9ms (Views: 7.4ms | ActiveRecord: 0.6ms)


Started GET "/api/v1/random" for ::1 at 2016-06-20 16:54:11 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
[active_model_serializers] Rendered ActiveModel::Serializer::Null with Hash (0.07ms)
Completed 200 OK in 1ms (Views: 0.4ms | ActiveRecord: 0.0ms)


Started GET "/api/v1/random" for ::1 at 2016-06-20 16:54:12 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
[active_model_serializers] Rendered ActiveModel::Serializer::Null with Hash (0.06ms)
Completed 200 OK in 1ms (Views: 0.4ms | ActiveRecord: 0.0ms)


Started GET "/api/v1/random" for ::1 at 2016-06-20 16:54:13 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
[active_model_serializers] Rendered ActiveModel::Serializer::Null with Hash (0.06ms)
Completed 200 OK in 1ms (Views: 0.4ms | ActiveRecord: 0.0ms)


Started GET "/api/v1/questions/1" for ::1 at 2016-06-20 16:54:13 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"1"}
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 1]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (5.94ms)
Completed 200 OK in 7ms (Views: 6.2ms | ActiveRecord: 0.4ms)


Started GET "/api/v1/random" for ::1 at 2016-06-20 16:54:13 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
[active_model_serializers] Rendered ActiveModel::Serializer::Null with Hash (0.09ms)
Completed 200 OK in 1ms (Views: 0.6ms | ActiveRecord: 0.0ms)


Started GET "/api/v1/questions/15" for ::1 at 2016-06-20 16:54:13 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"15"}
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 15], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 15]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (4.63ms)
Completed 200 OK in 6ms (Views: 4.8ms | ActiveRecord: 0.4ms)


Started GET "/api/v1/random" for ::1 at 2016-06-20 16:54:14 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
[active_model_serializers] Rendered ActiveModel::Serializer::Null with Hash (0.09ms)
Completed 200 OK in 1ms (Views: 0.5ms | ActiveRecord: 0.0ms)


Started GET "/api/v1/questions/8" for ::1 at 2016-06-20 16:54:14 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"8"}
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 8], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 8]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (6.17ms)
Completed 200 OK in 8ms (Views: 6.5ms | ActiveRecord: 0.4ms)


Started GET "/api/v1/random" for ::1 at 2016-06-20 16:54:14 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
[active_model_serializers] Rendered ActiveModel::Serializer::Null with Hash (0.08ms)
Completed 200 OK in 1ms (Views: 0.5ms | ActiveRecord: 0.0ms)


Started GET "/api/v1/questions/21" for ::1 at 2016-06-20 16:54:14 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"21"}
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 21], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 21]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (7.81ms)
Completed 200 OK in 9ms (Views: 8.0ms | ActiveRecord: 0.4ms)


Started GET "/api/v1/random" for ::1 at 2016-06-20 16:54:15 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
[active_model_serializers] Rendered ActiveModel::Serializer::Null with Hash (0.09ms)
Completed 200 OK in 1ms (Views: 0.6ms | ActiveRecord: 0.0ms)


Started GET "/api/v1/questions/23" for ::1 at 2016-06-20 16:54:15 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"23"}
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 23], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 23]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (7.45ms)
Completed 200 OK in 9ms (Views: 7.7ms | ActiveRecord: 0.4ms)


Started GET "/api/v1/random" for ::1 at 2016-06-20 16:54:16 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
[active_model_serializers] Rendered ActiveModel::Serializer::Null with Hash (0.06ms)
Completed 200 OK in 1ms (Views: 0.4ms | ActiveRecord: 0.0ms)


Started GET "/api/v1/questions/19" for ::1 at 2016-06-20 16:54:16 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"19"}
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 19], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 19]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (5.77ms)
Completed 200 OK in 7ms (Views: 6.0ms | ActiveRecord: 0.4ms)


Started GET "/api/v1/random" for ::1 at 2016-06-20 16:54:16 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
[active_model_serializers] Rendered ActiveModel::Serializer::Null with Hash (0.09ms)
Completed 200 OK in 1ms (Views: 0.5ms | ActiveRecord: 0.0ms)


Started GET "/api/v1/questions/2" for ::1 at 2016-06-20 16:54:16 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"2"}
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.3ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 2]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (5.65ms)
Completed 200 OK in 7ms (Views: 5.8ms | ActiveRecord: 0.5ms)


Started GET "/api/v1/random" for ::1 at 2016-06-20 16:54:17 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
[active_model_serializers] Rendered ActiveModel::Serializer::Null with Hash (0.11ms)
Completed 200 OK in 1ms (Views: 0.7ms | ActiveRecord: 0.0ms)


Started GET "/api/v1/questions/27" for ::1 at 2016-06-20 16:54:17 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"27"}
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 27], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 27]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (3.74ms)
Completed 200 OK in 5ms (Views: 4.0ms | ActiveRecord: 0.3ms)


Started GET "/api/v1/random" for ::1 at 2016-06-20 16:54:17 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
[active_model_serializers] Rendered ActiveModel::Serializer::Null with Hash (0.07ms)
Completed 200 OK in 1ms (Views: 0.4ms | ActiveRecord: 0.0ms)


Started GET "/api/v1/questions/11" for ::1 at 2016-06-20 16:54:17 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"11"}
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 11], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 11]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (8.53ms)
Completed 200 OK in 10ms (Views: 8.7ms | ActiveRecord: 0.4ms)


Started GET "/api/v1/random" for ::1 at 2016-06-20 16:54:18 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
[active_model_serializers] Rendered ActiveModel::Serializer::Null with Hash (0.09ms)
Completed 200 OK in 1ms (Views: 0.6ms | ActiveRecord: 0.0ms)


Started GET "/api/v1/questions/15" for ::1 at 2016-06-20 16:54:18 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"15"}
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 15], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.3ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 15]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (6.39ms)
Completed 200 OK in 8ms (Views: 6.6ms | ActiveRecord: 0.5ms)


Started GET "/api/v1/random" for ::1 at 2016-06-20 16:54:18 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
[active_model_serializers] Rendered ActiveModel::Serializer::Null with Hash (0.08ms)
Completed 200 OK in 1ms (Views: 0.5ms | ActiveRecord: 0.0ms)


Started GET "/api/v1/questions/30" for ::1 at 2016-06-20 16:54:18 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"30"}
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 30], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 30]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (5.41ms)
Completed 200 OK in 7ms (Views: 5.6ms | ActiveRecord: 0.4ms)


Started GET "/api/v1/random" for ::1 at 2016-06-20 16:54:19 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
[active_model_serializers] Rendered ActiveModel::Serializer::Null with Hash (0.09ms)
Completed 200 OK in 1ms (Views: 0.5ms | ActiveRecord: 0.0ms)


Started GET "/api/v1/questions/12" for ::1 at 2016-06-20 16:54:19 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"12"}
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 12], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 12]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (3.86ms)
Completed 200 OK in 5ms (Views: 4.1ms | ActiveRecord: 0.3ms)


Started GET "/api/v1/random" for ::1 at 2016-06-20 16:54:19 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
[active_model_serializers] Rendered ActiveModel::Serializer::Null with Hash (0.09ms)
Completed 200 OK in 1ms (Views: 0.5ms | ActiveRecord: 0.0ms)


Started GET "/api/v1/questions/4" for ::1 at 2016-06-20 16:54:19 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"4"}
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 4], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 4]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (5.55ms)
Completed 200 OK in 7ms (Views: 5.8ms | ActiveRecord: 0.4ms)


Started GET "/api/v1/questions/4" for ::1 at 2016-06-20 16:55:03 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"4"}
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 4], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 4]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (6.85ms)
Completed 200 OK in 8ms (Views: 7.1ms | ActiveRecord: 0.4ms)


Started GET "/api/v1/random" for ::1 at 2016-06-20 16:55:06 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
[active_model_serializers] Rendered ActiveModel::Serializer::Null with Hash (0.09ms)
Completed 200 OK in 1ms (Views: 0.5ms | ActiveRecord: 0.0ms)


Started GET "/api/v1/questions/26" for ::1 at 2016-06-20 16:55:06 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"26"}
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 26], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 26]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (7.8ms)
Completed 200 OK in 9ms (Views: 8.1ms | ActiveRecord: 0.4ms)


Started GET "/api/v1/random" for ::1 at 2016-06-20 16:55:08 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
[active_model_serializers] Rendered ActiveModel::Serializer::Null with Hash (0.09ms)
Completed 200 OK in 1ms (Views: 0.5ms | ActiveRecord: 0.0ms)


Started GET "/api/v1/questions/25" for ::1 at 2016-06-20 16:55:08 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"25"}
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 25], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 25]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (4.47ms)
Completed 200 OK in 6ms (Views: 4.9ms | ActiveRecord: 0.3ms)


Started GET "/api/v1/random" for ::1 at 2016-06-20 16:55:08 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
[active_model_serializers] Rendered ActiveModel::Serializer::Null with Hash (0.16ms)
Completed 200 OK in 1ms (Views: 0.6ms | ActiveRecord: 0.0ms)


Started GET "/api/v1/questions/16" for ::1 at 2016-06-20 16:55:09 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"16"}
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 16], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 16]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (7.03ms)
Completed 200 OK in 9ms (Views: 7.2ms | ActiveRecord: 0.4ms)


Started GET "/api/v1/questions/16" for ::1 at 2016-06-20 16:55:37 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"16"}
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 16], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 16]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (7.2ms)
Completed 200 OK in 9ms (Views: 7.5ms | ActiveRecord: 0.5ms)


Started GET "/api/v1/questions/16" for ::1 at 2016-06-20 16:56:12 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"16"}
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 16], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 16]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (6.8ms)
Completed 200 OK in 8ms (Views: 7.0ms | ActiveRecord: 0.4ms)


Started GET "/api/v1/questions/16" for ::1 at 2016-06-20 16:56:39 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"16"}
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 16], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 16]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (6.57ms)
Completed 200 OK in 8ms (Views: 6.8ms | ActiveRecord: 0.4ms)


Started GET "/api/v1/questions/16" for ::1 at 2016-06-20 16:56:40 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"16"}
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 16], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.7ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 16]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (13.06ms)
Completed 200 OK in 16ms (Views: 13.0ms | ActiveRecord: 1.0ms)


Started GET "/api/v1/random" for ::1 at 2016-06-20 16:56:42 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
[active_model_serializers] Rendered ActiveModel::Serializer::Null with Hash (0.07ms)
Completed 200 OK in 1ms (Views: 0.4ms | ActiveRecord: 0.0ms)


Started GET "/api/v1/questions/27" for ::1 at 2016-06-20 16:56:42 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"27"}
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 27], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 27]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (3.92ms)
Completed 200 OK in 5ms (Views: 4.2ms | ActiveRecord: 0.4ms)


Started GET "/api/v1/random" for ::1 at 2016-06-20 16:56:43 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
[active_model_serializers] Rendered ActiveModel::Serializer::Null with Hash (0.15ms)
Completed 200 OK in 1ms (Views: 0.6ms | ActiveRecord: 0.0ms)


Started GET "/api/v1/questions/5" for ::1 at 2016-06-20 16:56:43 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"5"}
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 5], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 5]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (4.93ms)
Completed 200 OK in 6ms (Views: 5.1ms | ActiveRecord: 0.4ms)


Started GET "/api/v1/random" for ::1 at 2016-06-20 16:56:43 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
[active_model_serializers] Rendered ActiveModel::Serializer::Null with Hash (0.09ms)
Completed 200 OK in 1ms (Views: 0.6ms | ActiveRecord: 0.0ms)


Started GET "/api/v1/questions/17" for ::1 at 2016-06-20 16:56:43 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"17"}
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 17], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 17]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (6.64ms)
Completed 200 OK in 8ms (Views: 7.0ms | ActiveRecord: 0.3ms)


Started GET "/api/v1/random" for ::1 at 2016-06-20 16:56:44 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
[active_model_serializers] Rendered ActiveModel::Serializer::Null with Hash (0.15ms)
Completed 200 OK in 1ms (Views: 0.6ms | ActiveRecord: 0.0ms)


Started GET "/api/v1/questions/26" for ::1 at 2016-06-20 16:56:44 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"26"}
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 26], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 26]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (4.88ms)
Completed 200 OK in 6ms (Views: 5.1ms | ActiveRecord: 0.4ms)


Started GET "/api/v1/random" for ::1 at 2016-06-20 16:56:44 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
[active_model_serializers] Rendered ActiveModel::Serializer::Null with Hash (0.07ms)
Completed 200 OK in 1ms (Views: 0.4ms | ActiveRecord: 0.0ms)


Started GET "/api/v1/questions/7" for ::1 at 2016-06-20 16:56:44 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"7"}
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 7], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 7]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (7.21ms)
Completed 200 OK in 8ms (Views: 7.4ms | ActiveRecord: 0.3ms)


Started GET "/api/v1/random" for ::1 at 2016-06-20 16:56:45 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
[active_model_serializers] Rendered ActiveModel::Serializer::Null with Hash (0.09ms)
Completed 200 OK in 1ms (Views: 0.6ms | ActiveRecord: 0.0ms)


Started GET "/api/v1/questions/16" for ::1 at 2016-06-20 16:56:45 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"16"}
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 16], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.3ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 16]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (8.35ms)
Completed 200 OK in 10ms (Views: 8.5ms | ActiveRecord: 0.5ms)


Started GET "/api/v1/random" for ::1 at 2016-06-20 16:56:45 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
[active_model_serializers] Rendered ActiveModel::Serializer::Null with Hash (0.09ms)
Completed 200 OK in 1ms (Views: 0.5ms | ActiveRecord: 0.0ms)


Started GET "/api/v1/questions/21" for ::1 at 2016-06-20 16:56:45 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"21"}
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 21], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 21]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (7.35ms)
Completed 200 OK in 9ms (Views: 7.6ms | ActiveRecord: 0.3ms)


Started GET "/api/v1/random" for ::1 at 2016-06-20 16:56:45 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
[active_model_serializers] Rendered ActiveModel::Serializer::Null with Hash (0.09ms)
Completed 200 OK in 1ms (Views: 0.6ms | ActiveRecord: 0.0ms)


Started GET "/api/v1/questions/6" for ::1 at 2016-06-20 16:56:45 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"6"}
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 6], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 6]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (4.19ms)
Completed 200 OK in 5ms (Views: 4.5ms | ActiveRecord: 0.3ms)


Started GET "/api/v1/random" for ::1 at 2016-06-20 16:56:46 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
[active_model_serializers] Rendered ActiveModel::Serializer::Null with Hash (0.09ms)
Completed 200 OK in 1ms (Views: 0.5ms | ActiveRecord: 0.0ms)


Started GET "/api/v1/questions/30" for ::1 at 2016-06-20 16:56:46 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"30"}
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 30], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 30]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (5.3ms)
Completed 200 OK in 7ms (Views: 5.6ms | ActiveRecord: 0.3ms)


Started GET "/api/v1/random" for ::1 at 2016-06-20 16:56:46 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
[active_model_serializers] Rendered ActiveModel::Serializer::Null with Hash (0.09ms)
Completed 200 OK in 1ms (Views: 0.5ms | ActiveRecord: 0.0ms)


Started GET "/api/v1/questions/7" for ::1 at 2016-06-20 16:56:46 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"7"}
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 7], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 7]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (9.01ms)
Completed 200 OK in 11ms (Views: 9.3ms | ActiveRecord: 0.5ms)


Started GET "/api/v1/random" for ::1 at 2016-06-20 16:56:47 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
[active_model_serializers] Rendered ActiveModel::Serializer::Null with Hash (0.09ms)
Completed 200 OK in 1ms (Views: 0.5ms | ActiveRecord: 0.0ms)


Started GET "/api/v1/questions/22" for ::1 at 2016-06-20 16:56:47 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"22"}
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 22], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 22]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (7.76ms)
Completed 200 OK in 9ms (Views: 8.0ms | ActiveRecord: 0.3ms)


Started GET "/api/v1/questions/22" for ::1 at 2016-06-20 16:57:00 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"22"}
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 22], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.3ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 22]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (9.65ms)
Completed 200 OK in 11ms (Views: 9.8ms | ActiveRecord: 0.5ms)


Started GET "/api/v1/questions/22" for ::1 at 2016-06-20 16:57:02 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"22"}
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 22], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.3ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 22]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (9.3ms)
Completed 200 OK in 11ms (Views: 9.5ms | ActiveRecord: 0.5ms)


Started GET "/api/v1/questions/22" for ::1 at 2016-06-20 16:59:14 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"22"}
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 22], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 22]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (8.75ms)
Completed 200 OK in 10ms (Views: 9.1ms | ActiveRecord: 0.4ms)


Started GET "/api/v1/questions/22" for ::1 at 2016-06-20 16:59:37 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"22"}
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 22], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.3ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 22]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (9.1ms)
Completed 200 OK in 11ms (Views: 9.4ms | ActiveRecord: 0.5ms)


Started GET "/api/v1/questions/22" for ::1 at 2016-06-20 16:59:39 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"22"}
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 22], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.3ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 22]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (8.9ms)
Completed 200 OK in 11ms (Views: 9.2ms | ActiveRecord: 0.6ms)


Started GET "/api/v1/questions/22" for ::1 at 2016-06-20 16:59:47 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"22"}
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 22], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.3ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 22]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (10.31ms)
Completed 200 OK in 12ms (Views: 10.5ms | ActiveRecord: 0.5ms)


Started GET "/api/v1/questions/22" for ::1 at 2016-06-20 16:59:54 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"22"}
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 22], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 22]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (7.74ms)
Completed 200 OK in 9ms (Views: 7.9ms | ActiveRecord: 0.4ms)


Started GET "/api/v1/questions/22" for ::1 at 2016-06-20 17:00:44 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"22"}
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 22], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 22]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (7.75ms)
Completed 200 OK in 9ms (Views: 8.0ms | ActiveRecord: 0.4ms)


Started GET "/api/v1/questions/22" for ::1 at 2016-06-20 17:00:47 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"22"}
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 22], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.8ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 22]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (16.49ms)
Completed 200 OK in 19ms (Views: 16.8ms | ActiveRecord: 1.1ms)


Started GET "/api/v1/random" for ::1 at 2016-06-20 17:00:51 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
[active_model_serializers] Rendered ActiveModel::Serializer::Null with Hash (0.09ms)
Completed 200 OK in 1ms (Views: 0.6ms | ActiveRecord: 0.0ms)


Started GET "/api/v1/questions/12" for ::1 at 2016-06-20 17:00:51 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"12"}
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 12], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 12]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (5.07ms)
Completed 200 OK in 6ms (Views: 5.3ms | ActiveRecord: 0.4ms)


Started GET "/api/v1/questions/12" for ::1 at 2016-06-20 17:01:10 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"12"}
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 12], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.3ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 12]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (5.16ms)
Completed 200 OK in 7ms (Views: 5.3ms | ActiveRecord: 0.5ms)


Started GET "/api/v1/random" for ::1 at 2016-06-20 17:01:12 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
[active_model_serializers] Rendered ActiveModel::Serializer::Null with Hash (0.09ms)
Completed 200 OK in 1ms (Views: 0.5ms | ActiveRecord: 0.0ms)


Started GET "/api/v1/questions/1" for ::1 at 2016-06-20 17:01:12 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"1"}
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 1]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (6.28ms)
Completed 200 OK in 8ms (Views: 6.6ms | ActiveRecord: 0.4ms)


Started GET "/api/v1/random" for ::1 at 2016-06-20 17:01:12 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
[active_model_serializers] Rendered ActiveModel::Serializer::Null with Hash (0.22ms)
Completed 200 OK in 1ms (Views: 0.7ms | ActiveRecord: 0.0ms)


Started GET "/api/v1/random" for ::1 at 2016-06-20 17:01:13 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
[active_model_serializers] Rendered ActiveModel::Serializer::Null with Hash (0.09ms)
Completed 200 OK in 1ms (Views: 0.7ms | ActiveRecord: 0.0ms)


Started GET "/api/v1/questions/12" for ::1 at 2016-06-20 17:01:13 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"12"}
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 12], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 12]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (6.41ms)
Completed 200 OK in 8ms (Views: 6.7ms | ActiveRecord: 0.5ms)


Started GET "/api/v1/random" for ::1 at 2016-06-20 17:01:14 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
[active_model_serializers] Rendered ActiveModel::Serializer::Null with Hash (0.08ms)
Completed 200 OK in 1ms (Views: 0.5ms | ActiveRecord: 0.0ms)


Started GET "/api/v1/questions/4" for ::1 at 2016-06-20 17:01:14 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"4"}
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 4], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 4]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (6.35ms)
Completed 200 OK in 8ms (Views: 6.6ms | ActiveRecord: 0.4ms)


Started GET "/api/v1/questions/4" for ::1 at 2016-06-20 17:01:16 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"4"}
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 4], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.3ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 4]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (6.85ms)
Completed 200 OK in 9ms (Views: 7.1ms | ActiveRecord: 0.6ms)


Started GET "/api/v1/random" for ::1 at 2016-06-20 17:01:18 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
[active_model_serializers] Rendered ActiveModel::Serializer::Null with Hash (0.09ms)
Completed 200 OK in 1ms (Views: 0.6ms | ActiveRecord: 0.0ms)


Started GET "/api/v1/questions/10" for ::1 at 2016-06-20 17:01:18 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"10"}
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 10], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 10]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (6.74ms)
Completed 200 OK in 8ms (Views: 7.0ms | ActiveRecord: 0.3ms)


Started GET "/api/v1/questions/10" for ::1 at 2016-06-20 17:02:16 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"10"}
  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 10], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.5ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 10]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (11.15ms)
Completed 200 OK in 14ms (Views: 11.4ms | ActiveRecord: 1.2ms)


Started GET "/api/v1/random" for ::1 at 2016-06-20 17:02:19 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
[active_model_serializers] Rendered ActiveModel::Serializer::Null with Hash (0.09ms)
Completed 200 OK in 1ms (Views: 0.5ms | ActiveRecord: 0.0ms)


Started GET "/api/v1/questions/13" for ::1 at 2016-06-20 17:02:19 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"13"}
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 13], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 13]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (8.86ms)
Completed 200 OK in 10ms (Views: 9.2ms | ActiveRecord: 0.4ms)


Started GET "/api/v1/random" for ::1 at 2016-06-20 17:02:20 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
[active_model_serializers] Rendered ActiveModel::Serializer::Null with Hash (0.09ms)
Completed 200 OK in 1ms (Views: 0.5ms | ActiveRecord: 0.0ms)


Started GET "/api/v1/questions/14" for ::1 at 2016-06-20 17:02:20 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"14"}
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 14], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 14]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (6.18ms)
Completed 200 OK in 7ms (Views: 6.4ms | ActiveRecord: 0.3ms)


Started GET "/api/v1/random" for ::1 at 2016-06-20 17:02:21 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
[active_model_serializers] Rendered ActiveModel::Serializer::Null with Hash (0.1ms)
Completed 200 OK in 1ms (Views: 0.5ms | ActiveRecord: 0.0ms)


Started GET "/api/v1/questions/15" for ::1 at 2016-06-20 17:02:21 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"15"}
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 15], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 15]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (4.35ms)
Completed 200 OK in 6ms (Views: 4.6ms | ActiveRecord: 0.4ms)


Started GET "/api/v1/random" for ::1 at 2016-06-20 17:02:21 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
[active_model_serializers] Rendered ActiveModel::Serializer::Null with Hash (0.08ms)
Completed 200 OK in 1ms (Views: 0.5ms | ActiveRecord: 0.0ms)


Started GET "/api/v1/questions/23" for ::1 at 2016-06-20 17:02:21 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"23"}
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 23], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 23]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (7.05ms)
Completed 200 OK in 8ms (Views: 7.2ms | ActiveRecord: 0.3ms)


Started GET "/api/v1/random" for ::1 at 2016-06-20 17:02:22 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
[active_model_serializers] Rendered ActiveModel::Serializer::Null with Hash (0.11ms)
Completed 200 OK in 1ms (Views: 0.6ms | ActiveRecord: 0.0ms)


Started GET "/api/v1/questions/3" for ::1 at 2016-06-20 17:02:22 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"3"}
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 3], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 3]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (6.06ms)
Completed 200 OK in 7ms (Views: 6.3ms | ActiveRecord: 0.4ms)


Started GET "/api/v1/random" for ::1 at 2016-06-20 17:02:22 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
[active_model_serializers] Rendered ActiveModel::Serializer::Null with Hash (0.11ms)
Completed 200 OK in 1ms (Views: 0.7ms | ActiveRecord: 0.0ms)


Started GET "/api/v1/questions/9" for ::1 at 2016-06-20 17:02:22 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"9"}
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 9], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 9]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (7.62ms)
Completed 200 OK in 9ms (Views: 7.8ms | ActiveRecord: 0.3ms)


Started GET "/api/v1/random" for ::1 at 2016-06-20 17:02:22 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
[active_model_serializers] Rendered ActiveModel::Serializer::Null with Hash (0.09ms)
Completed 200 OK in 1ms (Views: 0.5ms | ActiveRecord: 0.0ms)


Started GET "/api/v1/questions/7" for ::1 at 2016-06-20 17:02:22 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"7"}
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 7], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 7]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (7.2ms)
Completed 200 OK in 9ms (Views: 7.5ms | ActiveRecord: 0.4ms)


Started GET "/api/v1/random" for ::1 at 2016-06-20 17:02:22 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
[active_model_serializers] Rendered ActiveModel::Serializer::Null with Hash (0.09ms)
Completed 200 OK in 1ms (Views: 0.5ms | ActiveRecord: 0.0ms)


Started GET "/api/v1/questions/29" for ::1 at 2016-06-20 17:02:22 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"29"}
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 29], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 29]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (3.47ms)
Completed 200 OK in 5ms (Views: 3.7ms | ActiveRecord: 0.3ms)


Started GET "/api/v1/random" for ::1 at 2016-06-20 17:02:23 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
[active_model_serializers] Rendered ActiveModel::Serializer::Null with Hash (0.08ms)
Completed 200 OK in 1ms (Views: 0.5ms | ActiveRecord: 0.0ms)


Started GET "/api/v1/questions/6" for ::1 at 2016-06-20 17:02:23 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"6"}
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 6], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 6]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (3.99ms)
Completed 200 OK in 5ms (Views: 4.2ms | ActiveRecord: 0.3ms)


Started GET "/api/v1/random" for ::1 at 2016-06-20 17:02:23 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
[active_model_serializers] Rendered ActiveModel::Serializer::Null with Hash (0.09ms)
Completed 200 OK in 1ms (Views: 0.6ms | ActiveRecord: 0.0ms)


Started GET "/api/v1/questions/27" for ::1 at 2016-06-20 17:02:23 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"27"}
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 27], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 27]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (3.58ms)
Completed 200 OK in 5ms (Views: 3.8ms | ActiveRecord: 0.3ms)


Started GET "/api/v1/random" for ::1 at 2016-06-20 17:02:23 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
[active_model_serializers] Rendered ActiveModel::Serializer::Null with Hash (0.09ms)
Completed 200 OK in 1ms (Views: 0.5ms | ActiveRecord: 0.0ms)


Started GET "/api/v1/questions/7" for ::1 at 2016-06-20 17:02:23 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"7"}
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 7], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.3ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 7]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (10.67ms)
Completed 200 OK in 12ms (Views: 11.0ms | ActiveRecord: 0.5ms)


Started GET "/api/v1/random" for ::1 at 2016-06-20 17:02:23 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
[active_model_serializers] Rendered ActiveModel::Serializer::Null with Hash (0.14ms)
Completed 200 OK in 1ms (Views: 0.6ms | ActiveRecord: 0.0ms)


Started GET "/api/v1/questions/28" for ::1 at 2016-06-20 17:02:23 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"28"}
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 28], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 28]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (8.18ms)
Completed 200 OK in 10ms (Views: 8.5ms | ActiveRecord: 0.5ms)


Started GET "/api/v1/random" for ::1 at 2016-06-20 17:02:24 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
[active_model_serializers] Rendered ActiveModel::Serializer::Null with Hash (0.16ms)
Completed 200 OK in 1ms (Views: 0.7ms | ActiveRecord: 0.0ms)


Started GET "/api/v1/questions/12" for ::1 at 2016-06-20 17:02:24 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"12"}
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 12], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 12]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (4.34ms)
Completed 200 OK in 6ms (Views: 4.6ms | ActiveRecord: 0.4ms)


Started GET "/api/v1/questions/12" for ::1 at 2016-06-20 17:02:49 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"12"}
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 12], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 12]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (4.97ms)
Completed 200 OK in 6ms (Views: 5.2ms | ActiveRecord: 0.4ms)


Started GET "/api/v1/random" for ::1 at 2016-06-20 17:02:50 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
[active_model_serializers] Rendered ActiveModel::Serializer::Null with Hash (0.11ms)
Completed 200 OK in 1ms (Views: 0.6ms | ActiveRecord: 0.0ms)


Started GET "/api/v1/questions/26" for ::1 at 2016-06-20 17:02:50 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"26"}
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 26], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 26]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (4.92ms)
Completed 200 OK in 6ms (Views: 5.2ms | ActiveRecord: 0.4ms)


Started GET "/api/v1/random" for ::1 at 2016-06-20 17:02:51 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
[active_model_serializers] Rendered ActiveModel::Serializer::Null with Hash (0.12ms)
Completed 200 OK in 1ms (Views: 0.7ms | ActiveRecord: 0.0ms)


Started GET "/api/v1/questions/14" for ::1 at 2016-06-20 17:02:51 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"14"}
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 14], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 14]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (5.92ms)
Completed 200 OK in 7ms (Views: 6.1ms | ActiveRecord: 0.3ms)


Started GET "/api/v1/questions/14" for ::1 at 2016-06-20 17:02:53 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"14"}
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 14], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 14]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (6.85ms)
Completed 200 OK in 8ms (Views: 7.1ms | ActiveRecord: 0.4ms)


Started GET "/api/v1/questions/14" for ::1 at 2016-06-20 17:06:38 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"14"}
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 14], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.3ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 14]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (7.35ms)
Completed 200 OK in 9ms (Views: 7.7ms | ActiveRecord: 0.5ms)


Started GET "/api/v1/random" for ::1 at 2016-06-20 17:06:40 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
[active_model_serializers] Rendered ActiveModel::Serializer::Null with Hash (0.09ms)
Completed 200 OK in 1ms (Views: 0.5ms | ActiveRecord: 0.0ms)


Started GET "/api/v1/questions/3" for ::1 at 2016-06-20 17:06:40 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"3"}
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 3], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 3]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (9.19ms)
Completed 200 OK in 10ms (Views: 9.4ms | ActiveRecord: 0.4ms)


Started GET "/api/v1/random" for ::1 at 2016-06-20 17:06:41 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
[active_model_serializers] Rendered ActiveModel::Serializer::Null with Hash (0.09ms)
Completed 200 OK in 1ms (Views: 0.6ms | ActiveRecord: 0.0ms)


Started GET "/api/v1/questions/20" for ::1 at 2016-06-20 17:06:41 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"20"}
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 20], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 20]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (8.93ms)
Completed 200 OK in 10ms (Views: 9.3ms | ActiveRecord: 0.4ms)


Started GET "/api/v1/random" for ::1 at 2016-06-20 17:06:42 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
[active_model_serializers] Rendered ActiveModel::Serializer::Null with Hash (0.09ms)
Completed 200 OK in 1ms (Views: 0.7ms | ActiveRecord: 0.0ms)


Started GET "/api/v1/questions/1" for ::1 at 2016-06-20 17:06:42 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"1"}
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 1]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (6.06ms)
Completed 200 OK in 7ms (Views: 6.4ms | ActiveRecord: 0.3ms)


Started GET "/api/v1/random" for ::1 at 2016-06-20 17:06:42 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
[active_model_serializers] Rendered ActiveModel::Serializer::Null with Hash (0.09ms)
Completed 200 OK in 1ms (Views: 0.7ms | ActiveRecord: 0.0ms)


Started GET "/api/v1/questions/22" for ::1 at 2016-06-20 17:06:42 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"22"}
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 22], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 22]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (8.22ms)
Completed 200 OK in 10ms (Views: 8.4ms | ActiveRecord: 0.4ms)


Started GET "/api/v1/random" for ::1 at 2016-06-20 17:06:43 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
[active_model_serializers] Rendered ActiveModel::Serializer::Null with Hash (0.08ms)
Completed 200 OK in 1ms (Views: 0.6ms | ActiveRecord: 0.0ms)


Started GET "/api/v1/questions/6" for ::1 at 2016-06-20 17:06:43 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"6"}
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 6], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 6]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (4.43ms)
Completed 200 OK in 6ms (Views: 4.7ms | ActiveRecord: 0.3ms)


Started GET "/api/v1/random" for ::1 at 2016-06-20 17:06:43 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
[active_model_serializers] Rendered ActiveModel::Serializer::Null with Hash (0.12ms)
Completed 200 OK in 1ms (Views: 0.5ms | ActiveRecord: 0.0ms)


Started GET "/api/v1/questions/21" for ::1 at 2016-06-20 17:06:43 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"21"}
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 21], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 21]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (7.28ms)
Completed 200 OK in 9ms (Views: 7.5ms | ActiveRecord: 0.4ms)


Started GET "/api/v1/random" for ::1 at 2016-06-20 17:06:44 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
[active_model_serializers] Rendered ActiveModel::Serializer::Null with Hash (0.09ms)
Completed 200 OK in 1ms (Views: 0.5ms | ActiveRecord: 0.0ms)


Started GET "/api/v1/questions/12" for ::1 at 2016-06-20 17:06:44 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"12"}
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 12], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 12]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (4.24ms)
Completed 200 OK in 6ms (Views: 4.6ms | ActiveRecord: 0.3ms)


Started GET "/api/v1/questions/12" for ::1 at 2016-06-20 17:06:57 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"12"}
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 12], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 12]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (4.47ms)
Completed 200 OK in 6ms (Views: 4.7ms | ActiveRecord: 0.4ms)


Started GET "/api/v1/questions/12" for ::1 at 2016-06-20 17:06:59 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"12"}
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 12], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.3ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 12]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (5.27ms)
Completed 200 OK in 7ms (Views: 5.6ms | ActiveRecord: 0.5ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-20 17:08:11 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"hello", "vote-count"=>0, "vote-score"=>0}, "question"=>{"data"=>{"id"=>"12", "attributes"=>{"content"=>"So tell me about yourself."}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 12], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "hello"], ["question_id", 12], ["created_at", 2016-06-20 21:08:11 UTC], ["updated_at", 2016-06-20 21:08:11 UTC]]
  [1m[35m (65.4ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mAnswer Load (0.6ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."question_id" = $1 ORDER BY "answers"."id" DESC LIMIT $2[0m  [["question_id", 12], ["LIMIT", 1]]
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (1.32ms)
Completed 200 OK in 76ms (Views: 2.1ms | ActiveRecord: 66.9ms)


Started GET "/api/v1/questions/12" for ::1 at 2016-06-20 17:10:23 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"12"}
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 12], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.3ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 12]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (10.25ms)
Completed 200 OK in 12ms (Views: 10.7ms | ActiveRecord: 0.6ms)


Started GET "/api/v1/questions/12" for ::1 at 2016-06-20 17:10:54 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"12"}
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 12], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 12]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (5.87ms)
Completed 200 OK in 7ms (Views: 6.1ms | ActiveRecord: 0.4ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-20 17:10:56 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"asfas", "vote-count"=>0, "vote-score"=>0}, "question"=>{"data"=>{"id"=>"12", "attributes"=>{"content"=>"So tell me about yourself."}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 12], ["LIMIT", 1]]
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "asfas"], ["question_id", 12], ["created_at", 2016-06-20 21:10:56 UTC], ["updated_at", 2016-06-20 21:10:56 UTC]]
  [1m[35m (115.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mAnswer Load (0.5ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."question_id" = $1 ORDER BY "answers"."id" DESC LIMIT $2[0m  [["question_id", 12], ["LIMIT", 1]]
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (1.5ms)
Completed 200 OK in 124ms (Views: 2.2ms | ActiveRecord: 116.5ms)


Started GET "/api/v1/questions/12" for ::1 at 2016-06-20 17:10:59 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"12"}
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 12], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 12]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (6.32ms)
Completed 200 OK in 8ms (Views: 6.5ms | ActiveRecord: 0.4ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-20 17:11:01 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"asdasd", "vote-count"=>0, "vote-score"=>0}, "question"=>{"data"=>{"id"=>"12", "attributes"=>{"content"=>"So tell me about yourself."}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 12], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "asdasd"], ["question_id", 12], ["created_at", 2016-06-20 21:11:01 UTC], ["updated_at", 2016-06-20 21:11:01 UTC]]
  [1m[35m (2.1ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mAnswer Load (0.4ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."question_id" = $1 ORDER BY "answers"."id" DESC LIMIT $2[0m  [["question_id", 12], ["LIMIT", 1]]
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (0.77ms)
Completed 200 OK in 10ms (Views: 1.2ms | ActiveRecord: 3.1ms)


Started GET "/api/v1/questions/12" for ::1 at 2016-06-20 17:11:14 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"12"}
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 12], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 12]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (6.38ms)
Completed 200 OK in 8ms (Views: 6.7ms | ActiveRecord: 0.5ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-20 17:11:16 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"aaa", "vote-count"=>0, "vote-score"=>0}, "question"=>{"data"=>{"id"=>"12", "attributes"=>{"content"=>"So tell me about yourself."}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 12], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "aaa"], ["question_id", 12], ["created_at", 2016-06-20 21:11:16 UTC], ["updated_at", 2016-06-20 21:11:16 UTC]]
  [1m[35m (2.0ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mAnswer Load (0.3ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."question_id" = $1 ORDER BY "answers"."id" DESC LIMIT $2[0m  [["question_id", 12], ["LIMIT", 1]]
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (0.75ms)
Completed 200 OK in 9ms (Views: 1.2ms | ActiveRecord: 3.0ms)


Started GET "/api/v1/questions/12" for ::1 at 2016-06-20 17:11:48 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"12"}
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 12], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 12]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (7.93ms)
Completed 200 OK in 10ms (Views: 8.2ms | ActiveRecord: 0.5ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-20 17:11:50 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"asdsqd", "vote-count"=>0, "vote-score"=>0}, "question"=>{"data"=>{"id"=>"12", "attributes"=>{"content"=>"So tell me about yourself."}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 12], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "asdsqd"], ["question_id", 12], ["created_at", 2016-06-20 21:11:50 UTC], ["updated_at", 2016-06-20 21:11:50 UTC]]
  [1m[35m (2.1ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mAnswer Load (0.4ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."question_id" = $1 ORDER BY "answers"."id" DESC LIMIT $2[0m  [["question_id", 12], ["LIMIT", 1]]
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (0.88ms)
Completed 200 OK in 10ms (Views: 1.3ms | ActiveRecord: 3.2ms)


Started PATCH "/api/v1/answers/16" for ::1 at 2016-06-20 17:11:53 -0400
Processing by Api::V1::AnswersController#update as JSON
  Parameters: {"data"=>{"id"=>"16", "attributes"=>{"content"=>"dsfadsf", "vote-count"=>1, "vote-score"=>1}, "question"=>{"data"=>{"id"=>"12", "attributes"=>{"content"=>"So tell me about yourself."}, "type"=>"questions"}}, "type"=>"answers"}, "id"=>"16", "answer"=>{}}
  [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."id" = $1 LIMIT $2[0m  [["id", 16], ["LIMIT", 1]]
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 12], ["LIMIT", 1]]
  [1m[35mSQL (0.3ms)[0m  [1m[33mUPDATE "answers" SET "vote_count" = $1, "vote_score" = $2, "updated_at" = $3 WHERE "answers"."id" = $4[0m  [["vote_count", 1], ["vote_score", 1], ["updated_at", 2016-06-20 21:11:53 UTC], ["id", 16]]
  [1m[35m (2.4ms)[0m  [1m[35mCOMMIT[0m
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (0.82ms)
Completed 200 OK in 9ms (Views: 1.3ms | ActiveRecord: 3.2ms)


Started PATCH "/api/v1/answers/16" for ::1 at 2016-06-20 17:11:54 -0400
Processing by Api::V1::AnswersController#update as JSON
  Parameters: {"data"=>{"id"=>"16", "attributes"=>{"content"=>"dsfadsf", "vote-count"=>2, "vote-score"=>2}, "question"=>{"data"=>{"id"=>"12", "attributes"=>{"content"=>"So tell me about yourself."}, "type"=>"questions"}}, "type"=>"answers"}, "id"=>"16", "answer"=>{}}
  [1m[36mAnswer Load (0.3ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."id" = $1 LIMIT $2[0m  [["id", 16], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[36mQuestion Load (0.1ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 12], ["LIMIT", 1]]
  [1m[35mSQL (0.4ms)[0m  [1m[33mUPDATE "answers" SET "vote_count" = $1, "vote_score" = $2, "updated_at" = $3 WHERE "answers"."id" = $4[0m  [["vote_count", 2], ["vote_score", 2], ["updated_at", 2016-06-20 21:11:54 UTC], ["id", 16]]
  [1m[35m (49.8ms)[0m  [1m[35mCOMMIT[0m
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (1.05ms)
Completed 200 OK in 57ms (Views: 1.7ms | ActiveRecord: 50.7ms)


Started PATCH "/api/v1/answers/16" for ::1 at 2016-06-20 17:11:54 -0400
Processing by Api::V1::AnswersController#update as JSON
  Parameters: {"data"=>{"id"=>"16", "attributes"=>{"content"=>"dsfadsf", "vote-count"=>3, "vote-score"=>3}, "question"=>{"data"=>{"id"=>"12", "attributes"=>{"content"=>"So tell me about yourself."}, "type"=>"questions"}}, "type"=>"answers"}, "id"=>"16", "answer"=>{}}
  [1m[36mAnswer Load (0.3ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."id" = $1 LIMIT $2[0m  [["id", 16], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 12], ["LIMIT", 1]]
  [1m[35mSQL (0.4ms)[0m  [1m[33mUPDATE "answers" SET "vote_count" = $1, "vote_score" = $2, "updated_at" = $3 WHERE "answers"."id" = $4[0m  [["vote_count", 3], ["vote_score", 3], ["updated_at", 2016-06-20 21:11:54 UTC], ["id", 16]]
  [1m[35m (2.1ms)[0m  [1m[35mCOMMIT[0m
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (0.78ms)
Completed 200 OK in 10ms (Views: 1.3ms | ActiveRecord: 3.2ms)


Started GET "/api/v1/random" for ::1 at 2016-06-20 17:12:02 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
[active_model_serializers] Rendered ActiveModel::Serializer::Null with Hash (0.13ms)
Completed 200 OK in 1ms (Views: 0.5ms | ActiveRecord: 0.0ms)


Started GET "/api/v1/questions/23" for ::1 at 2016-06-20 17:12:02 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"23"}
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 23], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.3ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 23]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (9.04ms)
Completed 200 OK in 11ms (Views: 9.3ms | ActiveRecord: 0.6ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-20 17:12:06 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"asdasd", "vote-count"=>0, "vote-score"=>0}, "question"=>{"data"=>{"id"=>"23", "attributes"=>{"content"=>"Explain a polymorphic association?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 23], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "asdasd"], ["question_id", 23], ["created_at", 2016-06-20 21:12:06 UTC], ["updated_at", 2016-06-20 21:12:06 UTC]]
  [1m[35m (0.8ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mAnswer Load (0.4ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."question_id" = $1 ORDER BY "answers"."id" DESC LIMIT $2[0m  [["question_id", 23], ["LIMIT", 1]]
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (0.76ms)
Completed 200 OK in 8ms (Views: 1.3ms | ActiveRecord: 1.8ms)


Started GET "/api/v1/random" for ::1 at 2016-06-20 17:12:07 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
[active_model_serializers] Rendered ActiveModel::Serializer::Null with Hash (0.08ms)
Completed 200 OK in 1ms (Views: 0.5ms | ActiveRecord: 0.0ms)


Started GET "/api/v1/questions/13" for ::1 at 2016-06-20 17:12:07 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"13"}
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 13], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 13]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (9.56ms)
Completed 200 OK in 11ms (Views: 9.9ms | ActiveRecord: 0.4ms)


Started GET "/api/v1/random" for ::1 at 2016-06-20 17:12:14 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
[active_model_serializers] Rendered ActiveModel::Serializer::Null with Hash (0.09ms)
Completed 200 OK in 1ms (Views: 0.6ms | ActiveRecord: 0.0ms)


Started GET "/api/v1/questions/8" for ::1 at 2016-06-20 17:12:14 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"8"}
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 8], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 8]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (6.26ms)
Completed 200 OK in 8ms (Views: 6.5ms | ActiveRecord: 0.4ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-20 17:12:16 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"asdasda", "vote-count"=>0, "vote-score"=>0}, "question"=>{"data"=>{"id"=>"8", "attributes"=>{"content"=>"How did you learn programming?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 8], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "asdasda"], ["question_id", 8], ["created_at", 2016-06-20 21:12:16 UTC], ["updated_at", 2016-06-20 21:12:16 UTC]]
  [1m[35m (2.2ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mAnswer Load (0.4ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."question_id" = $1 ORDER BY "answers"."id" DESC LIMIT $2[0m  [["question_id", 8], ["LIMIT", 1]]
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (0.97ms)
Completed 200 OK in 11ms (Views: 1.5ms | ActiveRecord: 3.4ms)


Started GET "/api/v1/random" for ::1 at 2016-06-20 17:12:17 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
[active_model_serializers] Rendered ActiveModel::Serializer::Null with Hash (0.08ms)
Completed 200 OK in 1ms (Views: 0.6ms | ActiveRecord: 0.0ms)


Started GET "/api/v1/questions/3" for ::1 at 2016-06-20 17:12:17 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"3"}
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 3], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 3]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (6.29ms)
Completed 200 OK in 8ms (Views: 6.5ms | ActiveRecord: 0.4ms)


Started GET "/api/v1/questions/3" for ::1 at 2016-06-20 17:13:29 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"3"}
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 3], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 3]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (6.92ms)
Completed 200 OK in 8ms (Views: 7.2ms | ActiveRecord: 0.4ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-20 17:13:31 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"asdas", "vote-count"=>0, "vote-score"=>0}, "question"=>{"data"=>{"id"=>"3", "attributes"=>{"content"=>"What are your strengths and weaknesses?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 3], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "asdas"], ["question_id", 3], ["created_at", 2016-06-20 21:13:31 UTC], ["updated_at", 2016-06-20 21:13:31 UTC]]
  [1m[35m (2.2ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mAnswer Load (0.4ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."question_id" = $1 ORDER BY "answers"."id" DESC LIMIT $2[0m  [["question_id", 3], ["LIMIT", 1]]
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (0.78ms)
Completed 200 OK in 10ms (Views: 1.2ms | ActiveRecord: 3.2ms)


Started GET "/api/v1/random" for ::1 at 2016-06-20 17:13:32 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
[active_model_serializers] Rendered ActiveModel::Serializer::Null with Hash (0.07ms)
Completed 200 OK in 1ms (Views: 0.4ms | ActiveRecord: 0.0ms)


Started GET "/api/v1/questions/21" for ::1 at 2016-06-20 17:13:32 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"21"}
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 21], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 21]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (7.47ms)
Completed 200 OK in 9ms (Views: 7.7ms | ActiveRecord: 0.4ms)


Started GET "/api/v1/questions/21" for ::1 at 2016-06-20 17:14:22 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"21"}
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 21], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 21]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (10.42ms)
Completed 200 OK in 12ms (Views: 10.6ms | ActiveRecord: 0.4ms)


Started GET "/api/v1/questions/21" for ::1 at 2016-06-20 17:14:22 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"21"}
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 21], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 21]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (8.13ms)
Completed 200 OK in 10ms (Views: 8.4ms | ActiveRecord: 0.4ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-20 17:14:24 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"asdas", "vote-count"=>0, "vote-score"=>0}, "question"=>{"data"=>{"id"=>"21", "attributes"=>{"content"=>"What is the difference between classical inheritance and prototypal inheritance? "}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 21], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "asdas"], ["question_id", 21], ["created_at", 2016-06-20 21:14:24 UTC], ["updated_at", 2016-06-20 21:14:24 UTC]]
  [1m[35m (2.1ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mAnswer Load (0.4ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."question_id" = $1 ORDER BY "answers"."id" DESC LIMIT $2[0m  [["question_id", 21], ["LIMIT", 1]]
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (0.75ms)
Completed 200 OK in 10ms (Views: 1.2ms | ActiveRecord: 3.1ms)


Started GET "/api/v1/random" for ::1 at 2016-06-20 17:14:26 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
[active_model_serializers] Rendered ActiveModel::Serializer::Null with Hash (0.07ms)
Completed 200 OK in 1ms (Views: 0.4ms | ActiveRecord: 0.0ms)


Started GET "/api/v1/questions/17" for ::1 at 2016-06-20 17:14:26 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"17"}
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 17], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.3ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 17]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (7.86ms)
Completed 200 OK in 10ms (Views: 8.2ms | ActiveRecord: 0.6ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-20 17:14:27 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"adsad", "vote-count"=>0, "vote-score"=>0}, "question"=>{"data"=>{"id"=>"17", "attributes"=>{"content"=>"Tell me about the most recent project you worked on. What were your responsibilities?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 17], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "adsad"], ["question_id", 17], ["created_at", 2016-06-20 21:14:27 UTC], ["updated_at", 2016-06-20 21:14:27 UTC]]
  [1m[35m (22.8ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mAnswer Load (0.4ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."question_id" = $1 ORDER BY "answers"."id" DESC LIMIT $2[0m  [["question_id", 17], ["LIMIT", 1]]
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (0.8ms)
Completed 200 OK in 31ms (Views: 1.4ms | ActiveRecord: 23.9ms)


Started GET "/api/v1/random" for ::1 at 2016-06-20 17:14:29 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
[active_model_serializers] Rendered ActiveModel::Serializer::Null with Hash (0.09ms)
Completed 200 OK in 1ms (Views: 0.7ms | ActiveRecord: 0.0ms)


Started GET "/api/v1/questions/20" for ::1 at 2016-06-20 17:14:29 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"20"}
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 20], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.3ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 20]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (9.29ms)
Completed 200 OK in 11ms (Views: 9.6ms | ActiveRecord: 0.5ms)


Started GET "/api/v1/questions/20" for ::1 at 2016-06-20 17:14:37 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"20"}
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 20], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 20]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (9.35ms)
Completed 200 OK in 11ms (Views: 9.6ms | ActiveRecord: 0.4ms)


Started GET "/api/v1/questions/20" for ::1 at 2016-06-20 17:14:39 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"20"}
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 20], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 20]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (9.15ms)
Completed 200 OK in 11ms (Views: 9.4ms | ActiveRecord: 0.4ms)


Started GET "/api/v1/random" for ::1 at 2016-06-20 17:14:40 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
[active_model_serializers] Rendered ActiveModel::Serializer::Null with Hash (0.1ms)
Completed 200 OK in 1ms (Views: 0.7ms | ActiveRecord: 0.0ms)


Started GET "/api/v1/questions/12" for ::1 at 2016-06-20 17:14:40 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"12"}
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 12], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 12]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (6.97ms)
Completed 200 OK in 8ms (Views: 7.3ms | ActiveRecord: 0.3ms)


Started GET "/api/v1/random" for ::1 at 2016-06-20 17:14:42 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
[active_model_serializers] Rendered ActiveModel::Serializer::Null with Hash (0.09ms)
Completed 200 OK in 1ms (Views: 0.6ms | ActiveRecord: 0.0ms)


Started GET "/api/v1/questions/2" for ::1 at 2016-06-20 17:14:42 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"2"}
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 2]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (5.04ms)
Completed 200 OK in 6ms (Views: 5.3ms | ActiveRecord: 0.3ms)


Started GET "/api/v1/random" for ::1 at 2016-06-20 17:14:43 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
[active_model_serializers] Rendered ActiveModel::Serializer::Null with Hash (0.09ms)
Completed 200 OK in 1ms (Views: 0.6ms | ActiveRecord: 0.0ms)


Started GET "/api/v1/questions/23" for ::1 at 2016-06-20 17:14:43 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"23"}
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 23], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 23]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (8.11ms)
Completed 200 OK in 10ms (Views: 8.3ms | ActiveRecord: 0.5ms)


Started GET "/api/v1/random" for ::1 at 2016-06-20 17:14:43 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
[active_model_serializers] Rendered ActiveModel::Serializer::Null with Hash (0.12ms)
Completed 200 OK in 1ms (Views: 0.7ms | ActiveRecord: 0.0ms)


Started GET "/api/v1/questions/4" for ::1 at 2016-06-20 17:14:43 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"4"}
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 4], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 4]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (6.14ms)
Completed 200 OK in 7ms (Views: 6.4ms | ActiveRecord: 0.4ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-20 17:14:45 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"asdas", "vote-count"=>0, "vote-score"=>0}, "question"=>{"data"=>{"id"=>"4", "attributes"=>{"content"=>"Explain the process of web development to a middle school kid."}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 4], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "asdas"], ["question_id", 4], ["created_at", 2016-06-20 21:14:45 UTC], ["updated_at", 2016-06-20 21:14:45 UTC]]
  [1m[35m (2.2ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mAnswer Load (0.3ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."question_id" = $1 ORDER BY "answers"."id" DESC LIMIT $2[0m  [["question_id", 4], ["LIMIT", 1]]
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (0.78ms)
Completed 200 OK in 10ms (Views: 1.3ms | ActiveRecord: 3.1ms)


Started PATCH "/api/v1/answers/4" for ::1 at 2016-06-20 17:14:46 -0400
Processing by Api::V1::AnswersController#update as JSON
  Parameters: {"data"=>{"id"=>"4", "attributes"=>{"content"=>"<p>Web development is like, you know, creating front end\n  presentations of backend APIs using asynchronious requests.</p>", "vote-count"=>13, "vote-score"=>-6}, "question"=>{"data"=>{"id"=>"4", "attributes"=>{"content"=>"Explain the process of web development to a middle school kid."}, "type"=>"questions"}}, "type"=>"answers"}, "id"=>"4", "answer"=>{}}
  [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."id" = $1 LIMIT $2[0m  [["id", 4], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 4], ["LIMIT", 1]]
  [1m[35mSQL (0.5ms)[0m  [1m[33mUPDATE "answers" SET "vote_count" = $1, "vote_score" = $2, "updated_at" = $3 WHERE "answers"."id" = $4[0m  [["vote_count", 13], ["vote_score", -6], ["updated_at", 2016-06-20 21:14:46 UTC], ["id", 4]]
  [1m[35m (1.0ms)[0m  [1m[35mCOMMIT[0m
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (0.85ms)
Completed 200 OK in 8ms (Views: 1.3ms | ActiveRecord: 2.0ms)


Started GET "/api/v1/random" for ::1 at 2016-06-20 17:14:47 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
[active_model_serializers] Rendered ActiveModel::Serializer::Null with Hash (0.08ms)
Completed 200 OK in 1ms (Views: 0.6ms | ActiveRecord: 0.0ms)


Started GET "/api/v1/questions/14" for ::1 at 2016-06-20 17:14:47 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"14"}
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 14], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.4ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 14]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (7.29ms)
Completed 200 OK in 9ms (Views: 7.5ms | ActiveRecord: 0.6ms)


Started GET "/api/v1/questions/14" for ::1 at 2016-06-20 17:16:45 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"14"}
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 14], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.3ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 14]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (6.76ms)
Completed 200 OK in 8ms (Views: 7.0ms | ActiveRecord: 0.4ms)


Started GET "/api/v1/questions/14" for ::1 at 2016-06-20 17:17:23 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"14"}
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 14], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 14]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (6.74ms)
Completed 200 OK in 8ms (Views: 6.9ms | ActiveRecord: 0.4ms)


Started GET "/api/v1/questions/14" for ::1 at 2016-06-20 17:17:32 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"14"}
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 14], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 14]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (6.86ms)
Completed 200 OK in 8ms (Views: 7.2ms | ActiveRecord: 0.4ms)


Started GET "/api/v1/questions/14" for ::1 at 2016-06-20 17:19:23 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"14"}
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 14], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.4ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 14]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (8.19ms)
Completed 200 OK in 10ms (Views: 8.5ms | ActiveRecord: 0.7ms)


Started GET "/api/v1/questions/14" for ::1 at 2016-06-20 17:19:58 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"14"}
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 14], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 14]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (7.15ms)
Completed 200 OK in 9ms (Views: 7.4ms | ActiveRecord: 0.5ms)


Started GET "/api/v1/random" for ::1 at 2016-06-20 17:23:09 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
[active_model_serializers] Rendered ActiveModel::Serializer::Null with Hash (0.07ms)
Completed 200 OK in 1ms (Views: 0.4ms | ActiveRecord: 0.0ms)


Started GET "/api/v1/questions/14" for ::1 at 2016-06-20 17:23:09 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"14"}
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 14], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 14]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (8.04ms)
Completed 200 OK in 9ms (Views: 8.3ms | ActiveRecord: 0.4ms)


Started GET "/api/v1/questions/14" for ::1 at 2016-06-20 17:23:23 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"14"}
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 14], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 14]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (6.24ms)
Completed 200 OK in 8ms (Views: 6.5ms | ActiveRecord: 0.4ms)


Started GET "/api/v1/questions/14" for ::1 at 2016-06-20 17:23:51 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"14"}
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 14], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.3ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 14]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (8.23ms)
Completed 200 OK in 10ms (Views: 8.4ms | ActiveRecord: 0.5ms)


Started GET "/api/v1/questions/14" for ::1 at 2016-06-20 17:23:52 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"14"}
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 14], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.3ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 14]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (7.67ms)
Completed 200 OK in 9ms (Views: 8.1ms | ActiveRecord: 0.5ms)


Started GET "/api/v1/questions/14" for ::1 at 2016-06-20 17:24:06 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"14"}
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 14], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 14]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (6.57ms)
Completed 200 OK in 8ms (Views: 6.8ms | ActiveRecord: 0.4ms)


Started GET "/api/v1/questions/14" for ::1 at 2016-06-20 17:24:11 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"14"}
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 14], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 14]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (7.56ms)
Completed 200 OK in 9ms (Views: 7.8ms | ActiveRecord: 0.5ms)


Started GET "/api/v1/random" for ::1 at 2016-06-20 17:24:51 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
[active_model_serializers] Rendered ActiveModel::Serializer::Null with Hash (0.09ms)
Completed 200 OK in 1ms (Views: 0.6ms | ActiveRecord: 0.0ms)


Started GET "/api/v1/questions/12" for ::1 at 2016-06-20 17:24:51 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"12"}
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 12], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 12]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (7.46ms)
Completed 200 OK in 9ms (Views: 7.7ms | ActiveRecord: 0.4ms)


Started GET "/api/v1/random" for ::1 at 2016-06-20 17:25:00 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
[active_model_serializers] Rendered ActiveModel::Serializer::Null with Hash (0.07ms)
Completed 200 OK in 1ms (Views: 0.4ms | ActiveRecord: 0.0ms)


Started GET "/api/v1/questions/16" for ::1 at 2016-06-20 17:25:00 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"16"}
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 16], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.3ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 16]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (10.77ms)
Completed 200 OK in 12ms (Views: 11.1ms | ActiveRecord: 0.5ms)


Started GET "/api/v1/random" for ::1 at 2016-06-20 17:25:31 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
[active_model_serializers] Rendered ActiveModel::Serializer::Null with Hash (0.14ms)
Completed 200 OK in 1ms (Views: 0.5ms | ActiveRecord: 0.0ms)


Started GET "/api/v1/questions/18" for ::1 at 2016-06-20 17:25:31 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"18"}
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 18], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.4ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 18]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (10.06ms)
Completed 200 OK in 11ms (Views: 10.2ms | ActiveRecord: 0.5ms)


Started GET "/api/v1/random" for ::1 at 2016-06-20 17:29:14 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
[active_model_serializers] Rendered ActiveModel::Serializer::Null with Hash (0.08ms)
Completed 200 OK in 1ms (Views: 0.5ms | ActiveRecord: 0.0ms)


Started GET "/api/v1/questions/16" for ::1 at 2016-06-20 17:29:14 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"16"}
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 16], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.3ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 16]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (7.0ms)
Completed 200 OK in 9ms (Views: 7.2ms | ActiveRecord: 0.5ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-20 17:29:33 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>nil, "vote-count"=>0, "vote-score"=>0}, "question"=>{"data"=>{"id"=>"16", "attributes"=>{"content"=>"Tell me about your long-term goals."}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 16], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "answers" ("question_id", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["question_id", 16], ["created_at", 2016-06-20 21:29:33 UTC], ["updated_at", 2016-06-20 21:29:33 UTC]]
  [1m[35m (2.1ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mAnswer Load (0.4ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."question_id" = $1 ORDER BY "answers"."id" DESC LIMIT $2[0m  [["question_id", 16], ["LIMIT", 1]]
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (1.04ms)
Completed 200 OK in 11ms (Views: 1.6ms | ActiveRecord: 3.1ms)


Started GET "/api/v1/questions/16" for ::1 at 2016-06-20 17:29:38 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"16"}
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 16], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 16]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (8.29ms)
Completed 200 OK in 10ms (Views: 8.5ms | ActiveRecord: 0.4ms)


Started GET "/api/v1/random" for ::1 at 2016-06-20 17:32:53 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
[active_model_serializers] Rendered ActiveModel::Serializer::Null with Hash (0.07ms)
Completed 200 OK in 1ms (Views: 0.5ms | ActiveRecord: 0.0ms)


Started GET "/api/v1/questions/19" for ::1 at 2016-06-20 17:32:53 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"19"}
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 19], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.4ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 19]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (8.34ms)
Completed 200 OK in 10ms (Views: 8.4ms | ActiveRecord: 0.6ms)


Started GET "/api/v1/random" for ::1 at 2016-06-20 17:33:54 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
[active_model_serializers] Rendered ActiveModel::Serializer::Null with Hash (0.06ms)
Completed 200 OK in 1ms (Views: 0.4ms | ActiveRecord: 0.0ms)


Started GET "/api/v1/questions/13" for ::1 at 2016-06-20 17:33:54 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"13"}
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 13], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 13]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (9.55ms)
Completed 200 OK in 11ms (Views: 9.8ms | ActiveRecord: 0.4ms)


Started GET "/api/v1/questions/13" for ::1 at 2016-06-20 17:34:28 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"13"}
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 13], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.3ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 13]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (12.15ms)
Completed 200 OK in 14ms (Views: 12.5ms | ActiveRecord: 0.5ms)


Started GET "/api/v1/questions/13" for ::1 at 2016-06-20 17:35:19 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"13"}
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 13], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.3ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 13]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (10.07ms)
Completed 200 OK in 12ms (Views: 10.4ms | ActiveRecord: 0.4ms)


Started GET "/api/v1/questions/13" for ::1 at 2016-06-20 17:35:29 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"13"}
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 13], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 13]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (10.03ms)
Completed 200 OK in 11ms (Views: 10.3ms | ActiveRecord: 0.4ms)


Started GET "/api/v1/questions/13" for ::1 at 2016-06-20 17:35:31 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"13"}
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 13], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.3ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 13]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (9.97ms)
Completed 200 OK in 12ms (Views: 10.2ms | ActiveRecord: 0.4ms)


Started GET "/api/v1/questions/13" for ::1 at 2016-06-20 17:35:43 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"13"}
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 13], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.3ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 13]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (10.62ms)
Completed 200 OK in 12ms (Views: 10.9ms | ActiveRecord: 0.5ms)


Started GET "/api/v1/questions/13" for ::1 at 2016-06-20 17:36:11 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"13"}
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 13], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 13]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (10.0ms)
Completed 200 OK in 11ms (Views: 10.3ms | ActiveRecord: 0.5ms)


Started GET "/api/v1/questions/13" for ::1 at 2016-06-20 17:37:46 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"13"}
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 13], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 13]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (9.75ms)
Completed 200 OK in 11ms (Views: 10.0ms | ActiveRecord: 0.4ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-20 17:37:49 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"asdfsadfasdfdsg", "vote-count"=>0, "vote-score"=>0}, "question"=>{"data"=>{"id"=>"13", "attributes"=>{"content"=>"Where would you like to be in your career five years from now?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 13], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "asdfsadfasdfdsg"], ["question_id", 13], ["created_at", 2016-06-20 21:37:49 UTC], ["updated_at", 2016-06-20 21:37:49 UTC]]
  [1m[35m (1.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mAnswer Load (0.3ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."question_id" = $1 ORDER BY "answers"."id" DESC LIMIT $2[0m  [["question_id", 13], ["LIMIT", 1]]
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (0.72ms)
Completed 200 OK in 9ms (Views: 1.2ms | ActiveRecord: 2.3ms)


Started GET "/api/v1/questions/13" for ::1 at 2016-06-20 17:37:58 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"13"}
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 13], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 13]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (10.44ms)
Completed 200 OK in 12ms (Views: 10.7ms | ActiveRecord: 0.4ms)


Started GET "/api/v1/questions/13" for ::1 at 2016-06-20 17:38:36 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"13"}
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 13], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 13]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (10.19ms)
Completed 200 OK in 12ms (Views: 10.4ms | ActiveRecord: 0.4ms)


Started GET "/api/v1/questions/13" for ::1 at 2016-06-20 17:39:21 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"13"}
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 13], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.4ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 13]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (13.32ms)
Completed 200 OK in 16ms (Views: 13.6ms | ActiveRecord: 0.8ms)


Started GET "/api/v1/questions/13" for ::1 at 2016-06-20 17:40:57 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"13"}
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 13], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 13]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (10.12ms)
Completed 200 OK in 12ms (Views: 10.4ms | ActiveRecord: 0.4ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-20 17:41:01 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>nil, "vote-count"=>0, "vote-score"=>0}, "question"=>{"data"=>{"id"=>"13", "attributes"=>{"content"=>"Where would you like to be in your career five years from now?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 13], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.5ms)[0m  [1m[32mINSERT INTO "answers" ("question_id", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["question_id", 13], ["created_at", 2016-06-20 21:41:01 UTC], ["updated_at", 2016-06-20 21:41:01 UTC]]
  [1m[35m (2.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mAnswer Load (0.4ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."question_id" = $1 ORDER BY "answers"."id" DESC LIMIT $2[0m  [["question_id", 13], ["LIMIT", 1]]
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (0.77ms)
Completed 200 OK in 11ms (Views: 1.3ms | ActiveRecord: 3.5ms)


Started GET "/api/v1/questions/13" for ::1 at 2016-06-20 17:41:03 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"13"}
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 13], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.3ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 13]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (11.37ms)
Completed 200 OK in 13ms (Views: 11.6ms | ActiveRecord: 0.5ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-20 17:41:31 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>nil, "vote-count"=>0, "vote-score"=>0}, "question"=>{"data"=>{"id"=>"13", "attributes"=>{"content"=>"Where would you like to be in your career five years from now?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 13], ["LIMIT", 1]]
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "answers" ("question_id", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["question_id", 13], ["created_at", 2016-06-20 21:41:31 UTC], ["updated_at", 2016-06-20 21:41:31 UTC]]
  [1m[35m (1.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mAnswer Load (0.3ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."question_id" = $1 ORDER BY "answers"."id" DESC LIMIT $2[0m  [["question_id", 13], ["LIMIT", 1]]
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (0.85ms)
Completed 200 OK in 11ms (Views: 1.3ms | ActiveRecord: 2.6ms)


Started PATCH "/api/v1/answers/54" for ::1 at 2016-06-20 17:41:35 -0400
Processing by Api::V1::AnswersController#update as JSON
  Parameters: {"data"=>{"id"=>"54", "attributes"=>{"content"=>"asDSAd", "vote-count"=>1, "vote-score"=>1}, "question"=>{"data"=>{"id"=>"13", "attributes"=>{"content"=>"Where would you like to be in your career five years from now?"}, "type"=>"questions"}}, "type"=>"answers"}, "id"=>"54", "answer"=>{}}
  [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."id" = $1 LIMIT $2[0m  [["id", 54], ["LIMIT", 1]]
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 13], ["LIMIT", 1]]
  [1m[35mSQL (0.5ms)[0m  [1m[33mUPDATE "answers" SET "vote_count" = $1, "vote_score" = $2, "updated_at" = $3 WHERE "answers"."id" = $4[0m  [["vote_count", 1], ["vote_score", 1], ["updated_at", 2016-06-20 21:41:35 UTC], ["id", 54]]
  [1m[35m (2.2ms)[0m  [1m[35mCOMMIT[0m
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (0.81ms)
Completed 200 OK in 10ms (Views: 1.3ms | ActiveRecord: 3.2ms)


Started PATCH "/api/v1/answers/54" for ::1 at 2016-06-20 17:41:35 -0400
Processing by Api::V1::AnswersController#update as JSON
  Parameters: {"data"=>{"id"=>"54", "attributes"=>{"content"=>"asDSAd", "vote-count"=>2, "vote-score"=>2}, "question"=>{"data"=>{"id"=>"13", "attributes"=>{"content"=>"Where would you like to be in your career five years from now?"}, "type"=>"questions"}}, "type"=>"answers"}, "id"=>"54", "answer"=>{}}
  [1m[36mAnswer Load (0.3ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."id" = $1 LIMIT $2[0m  [["id", 54], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 13], ["LIMIT", 1]]
  [1m[35mSQL (0.4ms)[0m  [1m[33mUPDATE "answers" SET "vote_count" = $1, "vote_score" = $2, "updated_at" = $3 WHERE "answers"."id" = $4[0m  [["vote_count", 2], ["vote_score", 2], ["updated_at", 2016-06-20 21:41:35 UTC], ["id", 54]]
  [1m[35m (52.6ms)[0m  [1m[35mCOMMIT[0m
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (1.31ms)
Completed 200 OK in 61ms (Views: 2.0ms | ActiveRecord: 53.5ms)


Started PATCH "/api/v1/answers/54" for ::1 at 2016-06-20 17:41:36 -0400
Processing by Api::V1::AnswersController#update as JSON
  Parameters: {"data"=>{"id"=>"54", "attributes"=>{"content"=>"asDSAd", "vote-count"=>3, "vote-score"=>3}, "question"=>{"data"=>{"id"=>"13", "attributes"=>{"content"=>"Where would you like to be in your career five years from now?"}, "type"=>"questions"}}, "type"=>"answers"}, "id"=>"54", "answer"=>{}}
  [1m[36mAnswer Load (0.3ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."id" = $1 LIMIT $2[0m  [["id", 54], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 13], ["LIMIT", 1]]
  [1m[35mSQL (0.4ms)[0m  [1m[33mUPDATE "answers" SET "vote_count" = $1, "vote_score" = $2, "updated_at" = $3 WHERE "answers"."id" = $4[0m  [["vote_count", 3], ["vote_score", 3], ["updated_at", 2016-06-20 21:41:36 UTC], ["id", 54]]
  [1m[35m (15.7ms)[0m  [1m[35mCOMMIT[0m
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (1.39ms)
Completed 200 OK in 24ms (Views: 2.3ms | ActiveRecord: 16.7ms)


Started PATCH "/api/v1/answers/54" for ::1 at 2016-06-20 17:41:36 -0400
Processing by Api::V1::AnswersController#update as JSON
  Parameters: {"data"=>{"id"=>"54", "attributes"=>{"content"=>"asDSAd", "vote-count"=>4, "vote-score"=>4}, "question"=>{"data"=>{"id"=>"13", "attributes"=>{"content"=>"Where would you like to be in your career five years from now?"}, "type"=>"questions"}}, "type"=>"answers"}, "id"=>"54", "answer"=>{}}
  [1m[36mAnswer Load (0.3ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."id" = $1 LIMIT $2[0m  [["id", 54], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 13], ["LIMIT", 1]]
  [1m[35mSQL (0.3ms)[0m  [1m[33mUPDATE "answers" SET "vote_count" = $1, "vote_score" = $2, "updated_at" = $3 WHERE "answers"."id" = $4[0m  [["vote_count", 4], ["vote_score", 4], ["updated_at", 2016-06-20 21:41:36 UTC], ["id", 54]]
  [1m[35m (15.2ms)[0m  [1m[35mCOMMIT[0m
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (1.27ms)
Completed 200 OK in 24ms (Views: 2.0ms | ActiveRecord: 16.3ms)


Started PATCH "/api/v1/answers/54" for ::1 at 2016-06-20 17:41:37 -0400
Processing by Api::V1::AnswersController#update as JSON
  Parameters: {"data"=>{"id"=>"54", "attributes"=>{"content"=>"asDSAd", "vote-count"=>5, "vote-score"=>5}, "question"=>{"data"=>{"id"=>"13", "attributes"=>{"content"=>"Where would you like to be in your career five years from now?"}, "type"=>"questions"}}, "type"=>"answers"}, "id"=>"54", "answer"=>{}}
  [1m[36mAnswer Load (0.3ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."id" = $1 LIMIT $2[0m  [["id", 54], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 13], ["LIMIT", 1]]
  [1m[35mSQL (0.4ms)[0m  [1m[33mUPDATE "answers" SET "vote_count" = $1, "vote_score" = $2, "updated_at" = $3 WHERE "answers"."id" = $4[0m  [["vote_count", 5], ["vote_score", 5], ["updated_at", 2016-06-20 21:41:37 UTC], ["id", 54]]
  [1m[35m (2.4ms)[0m  [1m[35mCOMMIT[0m
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (0.87ms)
Completed 200 OK in 10ms (Views: 1.3ms | ActiveRecord: 3.4ms)


Started PATCH "/api/v1/answers/54" for ::1 at 2016-06-20 17:41:37 -0400
Processing by Api::V1::AnswersController#update as JSON
  Parameters: {"data"=>{"id"=>"54", "attributes"=>{"content"=>"asDSAd", "vote-count"=>6, "vote-score"=>4}, "question"=>{"data"=>{"id"=>"13", "attributes"=>{"content"=>"Where would you like to be in your career five years from now?"}, "type"=>"questions"}}, "type"=>"answers"}, "id"=>"54", "answer"=>{}}
  [1m[36mAnswer Load (0.3ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."id" = $1 LIMIT $2[0m  [["id", 54], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 13], ["LIMIT", 1]]
  [1m[35mSQL (0.4ms)[0m  [1m[33mUPDATE "answers" SET "vote_count" = $1, "vote_score" = $2, "updated_at" = $3 WHERE "answers"."id" = $4[0m  [["vote_count", 6], ["vote_score", 4], ["updated_at", 2016-06-20 21:41:37 UTC], ["id", 54]]
  [1m[35m (2.4ms)[0m  [1m[35mCOMMIT[0m
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (0.8ms)
Completed 200 OK in 10ms (Views: 1.3ms | ActiveRecord: 3.4ms)


Started PATCH "/api/v1/answers/54" for ::1 at 2016-06-20 17:41:37 -0400
Processing by Api::V1::AnswersController#update as JSON
  Parameters: {"data"=>{"id"=>"54", "attributes"=>{"content"=>"asDSAd", "vote-count"=>7, "vote-score"=>3}, "question"=>{"data"=>{"id"=>"13", "attributes"=>{"content"=>"Where would you like to be in your career five years from now?"}, "type"=>"questions"}}, "type"=>"answers"}, "id"=>"54", "answer"=>{}}
  [1m[36mAnswer Load (0.3ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."id" = $1 LIMIT $2[0m  [["id", 54], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 13], ["LIMIT", 1]]
  [1m[35mSQL (0.4ms)[0m  [1m[33mUPDATE "answers" SET "vote_count" = $1, "vote_score" = $2, "updated_at" = $3 WHERE "answers"."id" = $4[0m  [["vote_count", 7], ["vote_score", 3], ["updated_at", 2016-06-20 21:41:37 UTC], ["id", 54]]
  [1m[35m (0.9ms)[0m  [1m[35mCOMMIT[0m
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (0.74ms)
Completed 200 OK in 8ms (Views: 1.2ms | ActiveRecord: 1.9ms)


Started PATCH "/api/v1/answers/54" for ::1 at 2016-06-20 17:41:38 -0400
Processing by Api::V1::AnswersController#update as JSON
  Parameters: {"data"=>{"id"=>"54", "attributes"=>{"content"=>"asDSAd", "vote-count"=>8, "vote-score"=>2}, "question"=>{"data"=>{"id"=>"13", "attributes"=>{"content"=>"Where would you like to be in your career five years from now?"}, "type"=>"questions"}}, "type"=>"answers"}, "id"=>"54", "answer"=>{}}
  [1m[36mAnswer Load (0.3ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."id" = $1 LIMIT $2[0m  [["id", 54], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 13], ["LIMIT", 1]]
  [1m[35mSQL (0.3ms)[0m  [1m[33mUPDATE "answers" SET "vote_count" = $1, "vote_score" = $2, "updated_at" = $3 WHERE "answers"."id" = $4[0m  [["vote_count", 8], ["vote_score", 2], ["updated_at", 2016-06-20 21:41:38 UTC], ["id", 54]]
  [1m[35m (0.9ms)[0m  [1m[35mCOMMIT[0m
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (0.77ms)
Completed 200 OK in 7ms (Views: 1.2ms | ActiveRecord: 1.7ms)


Started PATCH "/api/v1/answers/54" for ::1 at 2016-06-20 17:41:38 -0400
Processing by Api::V1::AnswersController#update as JSON
  Parameters: {"data"=>{"id"=>"54", "attributes"=>{"content"=>"asDSAd", "vote-count"=>9, "vote-score"=>1}, "question"=>{"data"=>{"id"=>"13", "attributes"=>{"content"=>"Where would you like to be in your career five years from now?"}, "type"=>"questions"}}, "type"=>"answers"}, "id"=>"54", "answer"=>{}}
  [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."id" = $1 LIMIT $2[0m  [["id", 54], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[36mQuestion Load (0.1ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 13], ["LIMIT", 1]]
  [1m[35mSQL (0.3ms)[0m  [1m[33mUPDATE "answers" SET "vote_count" = $1, "vote_score" = $2, "updated_at" = $3 WHERE "answers"."id" = $4[0m  [["vote_count", 9], ["vote_score", 1], ["updated_at", 2016-06-20 21:41:38 UTC], ["id", 54]]
  [1m[35m (0.9ms)[0m  [1m[35mCOMMIT[0m
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (0.71ms)
Completed 200 OK in 7ms (Views: 1.1ms | ActiveRecord: 1.7ms)


Started PATCH "/api/v1/answers/54" for ::1 at 2016-06-20 17:41:38 -0400
Processing by Api::V1::AnswersController#update as JSON
  Parameters: {"data"=>{"id"=>"54", "attributes"=>{"content"=>"asDSAd", "vote-count"=>10, "vote-score"=>0}, "question"=>{"data"=>{"id"=>"13", "attributes"=>{"content"=>"Where would you like to be in your career five years from now?"}, "type"=>"questions"}}, "type"=>"answers"}, "id"=>"54", "answer"=>{}}
  [1m[36mAnswer Load (0.3ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."id" = $1 LIMIT $2[0m  [["id", 54], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 13], ["LIMIT", 1]]
  [1m[35mSQL (0.4ms)[0m  [1m[33mUPDATE "answers" SET "vote_count" = $1, "vote_score" = $2, "updated_at" = $3 WHERE "answers"."id" = $4[0m  [["vote_count", 10], ["vote_score", 0], ["updated_at", 2016-06-20 21:41:38 UTC], ["id", 54]]
  [1m[35m (0.9ms)[0m  [1m[35mCOMMIT[0m
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (0.77ms)
Completed 200 OK in 8ms (Views: 1.2ms | ActiveRecord: 1.8ms)


Started PATCH "/api/v1/answers/54" for ::1 at 2016-06-20 17:41:38 -0400
Processing by Api::V1::AnswersController#update as JSON
  Parameters: {"data"=>{"id"=>"54", "attributes"=>{"content"=>"asDSAd", "vote-count"=>11, "vote-score"=>-1}, "question"=>{"data"=>{"id"=>"13", "attributes"=>{"content"=>"Where would you like to be in your career five years from now?"}, "type"=>"questions"}}, "type"=>"answers"}, "id"=>"54", "answer"=>{}}
  [1m[36mAnswer Load (0.4ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."id" = $1 LIMIT $2[0m  [["id", 54], ["LIMIT", 1]]
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[36mQuestion Load (0.1ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 13], ["LIMIT", 1]]
  [1m[35mSQL (0.3ms)[0m  [1m[33mUPDATE "answers" SET "vote_count" = $1, "vote_score" = $2, "updated_at" = $3 WHERE "answers"."id" = $4[0m  [["vote_count", 11], ["vote_score", -1], ["updated_at", 2016-06-20 21:41:38 UTC], ["id", 54]]
  [1m[35m (0.8ms)[0m  [1m[35mCOMMIT[0m
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (0.83ms)
Completed 200 OK in 8ms (Views: 1.3ms | ActiveRecord: 1.8ms)


Started PATCH "/api/v1/answers/54" for ::1 at 2016-06-20 17:41:38 -0400
Processing by Api::V1::AnswersController#update as JSON
  Parameters: {"data"=>{"id"=>"54", "attributes"=>{"content"=>"asDSAd", "vote-count"=>12, "vote-score"=>-2}, "question"=>{"data"=>{"id"=>"13", "attributes"=>{"content"=>"Where would you like to be in your career five years from now?"}, "type"=>"questions"}}, "type"=>"answers"}, "id"=>"54", "answer"=>{}}
  [1m[36mAnswer Load (0.3ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."id" = $1 LIMIT $2[0m  [["id", 54], ["LIMIT", 1]]
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 13], ["LIMIT", 1]]
  [1m[35mSQL (0.3ms)[0m  [1m[33mUPDATE "answers" SET "vote_count" = $1, "vote_score" = $2, "updated_at" = $3 WHERE "answers"."id" = $4[0m  [["vote_count", 12], ["vote_score", -2], ["updated_at", 2016-06-20 21:41:38 UTC], ["id", 54]]
  [1m[35m (1.0ms)[0m  [1m[35mCOMMIT[0m
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (0.78ms)
Completed 200 OK in 8ms (Views: 1.2ms | ActiveRecord: 2.0ms)


Started PATCH "/api/v1/answers/54" for ::1 at 2016-06-20 17:41:39 -0400
Processing by Api::V1::AnswersController#update as JSON
  Parameters: {"data"=>{"id"=>"54", "attributes"=>{"content"=>"asDSAd", "vote-count"=>13, "vote-score"=>-1}, "question"=>{"data"=>{"id"=>"13", "attributes"=>{"content"=>"Where would you like to be in your career five years from now?"}, "type"=>"questions"}}, "type"=>"answers"}, "id"=>"54", "answer"=>{}}
  [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."id" = $1 LIMIT $2[0m  [["id", 54], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 13], ["LIMIT", 1]]
  [1m[35mSQL (0.3ms)[0m  [1m[33mUPDATE "answers" SET "vote_count" = $1, "vote_score" = $2, "updated_at" = $3 WHERE "answers"."id" = $4[0m  [["vote_count", 13], ["vote_score", -1], ["updated_at", 2016-06-20 21:41:39 UTC], ["id", 54]]
  [1m[35m (2.3ms)[0m  [1m[35mCOMMIT[0m
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (0.79ms)
Completed 200 OK in 9ms (Views: 1.3ms | ActiveRecord: 3.3ms)


Started PATCH "/api/v1/answers/54" for ::1 at 2016-06-20 17:41:39 -0400
Processing by Api::V1::AnswersController#update as JSON
  Parameters: {"data"=>{"id"=>"54", "attributes"=>{"content"=>"asDSAd", "vote-count"=>14, "vote-score"=>0}, "question"=>{"data"=>{"id"=>"13", "attributes"=>{"content"=>"Where would you like to be in your career five years from now?"}, "type"=>"questions"}}, "type"=>"answers"}, "id"=>"54", "answer"=>{}}
  [1m[36mAnswer Load (0.3ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."id" = $1 LIMIT $2[0m  [["id", 54], ["LIMIT", 1]]
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 13], ["LIMIT", 1]]
  [1m[35mSQL (0.3ms)[0m  [1m[33mUPDATE "answers" SET "vote_count" = $1, "vote_score" = $2, "updated_at" = $3 WHERE "answers"."id" = $4[0m  [["vote_count", 14], ["vote_score", 0], ["updated_at", 2016-06-20 21:41:39 UTC], ["id", 54]]
  [1m[35m (0.7ms)[0m  [1m[35mCOMMIT[0m
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (0.68ms)
Completed 200 OK in 8ms (Views: 1.1ms | ActiveRecord: 1.6ms)


Started PATCH "/api/v1/answers/54" for ::1 at 2016-06-20 17:41:40 -0400
Processing by Api::V1::AnswersController#update as JSON
  Parameters: {"data"=>{"id"=>"54", "attributes"=>{"content"=>"asDSAd", "vote-count"=>15, "vote-score"=>1}, "question"=>{"data"=>{"id"=>"13", "attributes"=>{"content"=>"Where would you like to be in your career five years from now?"}, "type"=>"questions"}}, "type"=>"answers"}, "id"=>"54", "answer"=>{}}
  [1m[36mAnswer Load (0.3ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."id" = $1 LIMIT $2[0m  [["id", 54], ["LIMIT", 1]]
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 13], ["LIMIT", 1]]
  [1m[35mSQL (0.4ms)[0m  [1m[33mUPDATE "answers" SET "vote_count" = $1, "vote_score" = $2, "updated_at" = $3 WHERE "answers"."id" = $4[0m  [["vote_count", 15], ["vote_score", 1], ["updated_at", 2016-06-20 21:41:40 UTC], ["id", 54]]
  [1m[35m (0.9ms)[0m  [1m[35mCOMMIT[0m
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (0.76ms)
Completed 200 OK in 8ms (Views: 1.2ms | ActiveRecord: 1.9ms)


Started PATCH "/api/v1/answers/54" for ::1 at 2016-06-20 17:41:40 -0400
Processing by Api::V1::AnswersController#update as JSON
  Parameters: {"data"=>{"id"=>"54", "attributes"=>{"content"=>"asDSAd", "vote-count"=>16, "vote-score"=>2}, "question"=>{"data"=>{"id"=>"13", "attributes"=>{"content"=>"Where would you like to be in your career five years from now?"}, "type"=>"questions"}}, "type"=>"answers"}, "id"=>"54", "answer"=>{}}
  [1m[36mAnswer Load (0.3ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."id" = $1 LIMIT $2[0m  [["id", 54], ["LIMIT", 1]]
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 13], ["LIMIT", 1]]
  [1m[35mSQL (0.3ms)[0m  [1m[33mUPDATE "answers" SET "vote_count" = $1, "vote_score" = $2, "updated_at" = $3 WHERE "answers"."id" = $4[0m  [["vote_count", 16], ["vote_score", 2], ["updated_at", 2016-06-20 21:41:40 UTC], ["id", 54]]
  [1m[35m (0.8ms)[0m  [1m[35mCOMMIT[0m
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (0.74ms)
Completed 200 OK in 8ms (Views: 1.2ms | ActiveRecord: 1.8ms)


Started PATCH "/api/v1/answers/54" for ::1 at 2016-06-20 17:41:40 -0400
Processing by Api::V1::AnswersController#update as JSON
  Parameters: {"data"=>{"id"=>"54", "attributes"=>{"content"=>"asDSAd", "vote-count"=>17, "vote-score"=>1}, "question"=>{"data"=>{"id"=>"13", "attributes"=>{"content"=>"Where would you like to be in your career five years from now?"}, "type"=>"questions"}}, "type"=>"answers"}, "id"=>"54", "answer"=>{}}
  [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."id" = $1 LIMIT $2[0m  [["id", 54], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 13], ["LIMIT", 1]]
  [1m[35mSQL (0.3ms)[0m  [1m[33mUPDATE "answers" SET "vote_count" = $1, "vote_score" = $2, "updated_at" = $3 WHERE "answers"."id" = $4[0m  [["vote_count", 17], ["vote_score", 1], ["updated_at", 2016-06-20 21:41:40 UTC], ["id", 54]]
  [1m[35m (2.4ms)[0m  [1m[35mCOMMIT[0m
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (0.76ms)
Completed 200 OK in 9ms (Views: 1.2ms | ActiveRecord: 3.2ms)


Started PATCH "/api/v1/answers/54" for ::1 at 2016-06-20 17:41:41 -0400
Processing by Api::V1::AnswersController#update as JSON
  Parameters: {"data"=>{"id"=>"54", "attributes"=>{"content"=>"asDSAd", "vote-count"=>18, "vote-score"=>0}, "question"=>{"data"=>{"id"=>"13", "attributes"=>{"content"=>"Where would you like to be in your career five years from now?"}, "type"=>"questions"}}, "type"=>"answers"}, "id"=>"54", "answer"=>{}}
  [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."id" = $1 LIMIT $2[0m  [["id", 54], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 13], ["LIMIT", 1]]
  [1m[35mSQL (0.3ms)[0m  [1m[33mUPDATE "answers" SET "vote_count" = $1, "vote_score" = $2, "updated_at" = $3 WHERE "answers"."id" = $4[0m  [["vote_count", 18], ["vote_score", 0], ["updated_at", 2016-06-20 21:41:41 UTC], ["id", 54]]
  [1m[35m (1.1ms)[0m  [1m[35mCOMMIT[0m
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (0.81ms)
Completed 200 OK in 8ms (Views: 1.4ms | ActiveRecord: 1.9ms)


Started PATCH "/api/v1/answers/54" for ::1 at 2016-06-20 17:41:41 -0400
Processing by Api::V1::AnswersController#update as JSON
  Parameters: {"data"=>{"id"=>"54", "attributes"=>{"content"=>"asDSAd", "vote-count"=>19, "vote-score"=>-1}, "question"=>{"data"=>{"id"=>"13", "attributes"=>{"content"=>"Where would you like to be in your career five years from now?"}, "type"=>"questions"}}, "type"=>"answers"}, "id"=>"54", "answer"=>{}}
  [1m[36mAnswer Load (0.3ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."id" = $1 LIMIT $2[0m  [["id", 54], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 13], ["LIMIT", 1]]
  [1m[35mSQL (0.3ms)[0m  [1m[33mUPDATE "answers" SET "vote_count" = $1, "vote_score" = $2, "updated_at" = $3 WHERE "answers"."id" = $4[0m  [["vote_count", 19], ["vote_score", -1], ["updated_at", 2016-06-20 21:41:41 UTC], ["id", 54]]
  [1m[35m (0.9ms)[0m  [1m[35mCOMMIT[0m
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (0.7ms)
Completed 200 OK in 8ms (Views: 1.1ms | ActiveRecord: 1.8ms)


Started PATCH "/api/v1/answers/54" for ::1 at 2016-06-20 17:41:41 -0400
Processing by Api::V1::AnswersController#update as JSON
  Parameters: {"data"=>{"id"=>"54", "attributes"=>{"content"=>"asDSAd", "vote-count"=>20, "vote-score"=>-2}, "question"=>{"data"=>{"id"=>"13", "attributes"=>{"content"=>"Where would you like to be in your career five years from now?"}, "type"=>"questions"}}, "type"=>"answers"}, "id"=>"54", "answer"=>{}}
  [1m[36mAnswer Load (0.3ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."id" = $1 LIMIT $2[0m  [["id", 54], ["LIMIT", 1]]
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 13], ["LIMIT", 1]]
  [1m[35mSQL (0.4ms)[0m  [1m[33mUPDATE "answers" SET "vote_count" = $1, "vote_score" = $2, "updated_at" = $3 WHERE "answers"."id" = $4[0m  [["vote_count", 20], ["vote_score", -2], ["updated_at", 2016-06-20 21:41:41 UTC], ["id", 54]]
  [1m[35m (0.9ms)[0m  [1m[35mCOMMIT[0m
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (0.76ms)
Completed 200 OK in 8ms (Views: 1.2ms | ActiveRecord: 1.9ms)


Started PATCH "/api/v1/answers/54" for ::1 at 2016-06-20 17:41:42 -0400
Processing by Api::V1::AnswersController#update as JSON
  Parameters: {"data"=>{"id"=>"54", "attributes"=>{"content"=>"asDSAd", "vote-count"=>21, "vote-score"=>-1}, "question"=>{"data"=>{"id"=>"13", "attributes"=>{"content"=>"Where would you like to be in your career five years from now?"}, "type"=>"questions"}}, "type"=>"answers"}, "id"=>"54", "answer"=>{}}
  [1m[36mAnswer Load (0.4ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."id" = $1 LIMIT $2[0m  [["id", 54], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 13], ["LIMIT", 1]]
  [1m[35mSQL (0.3ms)[0m  [1m[33mUPDATE "answers" SET "vote_count" = $1, "vote_score" = $2, "updated_at" = $3 WHERE "answers"."id" = $4[0m  [["vote_count", 21], ["vote_score", -1], ["updated_at", 2016-06-20 21:41:42 UTC], ["id", 54]]
  [1m[35m (2.4ms)[0m  [1m[35mCOMMIT[0m
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (0.85ms)
Completed 200 OK in 10ms (Views: 1.4ms | ActiveRecord: 3.4ms)


Started PATCH "/api/v1/answers/54" for ::1 at 2016-06-20 17:41:42 -0400
Processing by Api::V1::AnswersController#update as JSON
  Parameters: {"data"=>{"id"=>"54", "attributes"=>{"content"=>"asDSAd", "vote-count"=>22, "vote-score"=>0}, "question"=>{"data"=>{"id"=>"13", "attributes"=>{"content"=>"Where would you like to be in your career five years from now?"}, "type"=>"questions"}}, "type"=>"answers"}, "id"=>"54", "answer"=>{}}
  [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."id" = $1 LIMIT $2[0m  [["id", 54], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 13], ["LIMIT", 1]]
  [1m[35mSQL (0.4ms)[0m  [1m[33mUPDATE "answers" SET "vote_count" = $1, "vote_score" = $2, "updated_at" = $3 WHERE "answers"."id" = $4[0m  [["vote_count", 22], ["vote_score", 0], ["updated_at", 2016-06-20 21:41:42 UTC], ["id", 54]]
  [1m[35m (0.9ms)[0m  [1m[35mCOMMIT[0m
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (0.73ms)
Completed 200 OK in 7ms (Views: 1.2ms | ActiveRecord: 1.7ms)


Started PATCH "/api/v1/answers/54" for ::1 at 2016-06-20 17:41:42 -0400
Processing by Api::V1::AnswersController#update as JSON
  Parameters: {"data"=>{"id"=>"54", "attributes"=>{"content"=>"asDSAd", "vote-count"=>23, "vote-score"=>1}, "question"=>{"data"=>{"id"=>"13", "attributes"=>{"content"=>"Where would you like to be in your career five years from now?"}, "type"=>"questions"}}, "type"=>"answers"}, "id"=>"54", "answer"=>{}}
  [1m[36mAnswer Load (0.3ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."id" = $1 LIMIT $2[0m  [["id", 54], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 13], ["LIMIT", 1]]
  [1m[35mSQL (0.4ms)[0m  [1m[33mUPDATE "answers" SET "vote_count" = $1, "vote_score" = $2, "updated_at" = $3 WHERE "answers"."id" = $4[0m  [["vote_count", 23], ["vote_score", 1], ["updated_at", 2016-06-20 21:41:42 UTC], ["id", 54]]
  [1m[35m (0.9ms)[0m  [1m[35mCOMMIT[0m
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (0.84ms)
Completed 200 OK in 8ms (Views: 1.3ms | ActiveRecord: 1.9ms)


Started PATCH "/api/v1/answers/54" for ::1 at 2016-06-20 17:41:43 -0400
Processing by Api::V1::AnswersController#update as JSON
  Parameters: {"data"=>{"id"=>"54", "attributes"=>{"content"=>"asDSAd", "vote-count"=>24, "vote-score"=>0}, "question"=>{"data"=>{"id"=>"13", "attributes"=>{"content"=>"Where would you like to be in your career five years from now?"}, "type"=>"questions"}}, "type"=>"answers"}, "id"=>"54", "answer"=>{}}
  [1m[36mAnswer Load (0.3ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."id" = $1 LIMIT $2[0m  [["id", 54], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 13], ["LIMIT", 1]]
  [1m[35mSQL (0.4ms)[0m  [1m[33mUPDATE "answers" SET "vote_count" = $1, "vote_score" = $2, "updated_at" = $3 WHERE "answers"."id" = $4[0m  [["vote_count", 24], ["vote_score", 0], ["updated_at", 2016-06-20 21:41:43 UTC], ["id", 54]]
  [1m[35m (2.2ms)[0m  [1m[35mCOMMIT[0m
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (0.73ms)
Completed 200 OK in 9ms (Views: 1.2ms | ActiveRecord: 3.2ms)


Started PATCH "/api/v1/answers/54" for ::1 at 2016-06-20 17:41:43 -0400
Processing by Api::V1::AnswersController#update as JSON
  Parameters: {"data"=>{"id"=>"54", "attributes"=>{"content"=>"asDSAd", "vote-count"=>25, "vote-score"=>-1}, "question"=>{"data"=>{"id"=>"13", "attributes"=>{"content"=>"Where would you like to be in your career five years from now?"}, "type"=>"questions"}}, "type"=>"answers"}, "id"=>"54", "answer"=>{}}
  [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."id" = $1 LIMIT $2[0m  [["id", 54], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 13], ["LIMIT", 1]]
  [1m[35mSQL (0.4ms)[0m  [1m[33mUPDATE "answers" SET "vote_count" = $1, "vote_score" = $2, "updated_at" = $3 WHERE "answers"."id" = $4[0m  [["vote_count", 25], ["vote_score", -1], ["updated_at", 2016-06-20 21:41:43 UTC], ["id", 54]]
  [1m[35m (0.9ms)[0m  [1m[35mCOMMIT[0m
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (0.86ms)
Completed 200 OK in 8ms (Views: 1.3ms | ActiveRecord: 1.8ms)


Started PATCH "/api/v1/answers/54" for ::1 at 2016-06-20 17:41:43 -0400
Processing by Api::V1::AnswersController#update as JSON
  Parameters: {"data"=>{"id"=>"54", "attributes"=>{"content"=>"asDSAd", "vote-count"=>26, "vote-score"=>-2}, "question"=>{"data"=>{"id"=>"13", "attributes"=>{"content"=>"Where would you like to be in your career five years from now?"}, "type"=>"questions"}}, "type"=>"answers"}, "id"=>"54", "answer"=>{}}
  [1m[36mAnswer Load (0.3ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."id" = $1 LIMIT $2[0m  [["id", 54], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 13], ["LIMIT", 1]]
  [1m[35mSQL (0.3ms)[0m  [1m[33mUPDATE "answers" SET "vote_count" = $1, "vote_score" = $2, "updated_at" = $3 WHERE "answers"."id" = $4[0m  [["vote_count", 26], ["vote_score", -2], ["updated_at", 2016-06-20 21:41:43 UTC], ["id", 54]]
  [1m[35m (0.9ms)[0m  [1m[35mCOMMIT[0m
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (0.75ms)
Completed 200 OK in 8ms (Views: 1.2ms | ActiveRecord: 1.8ms)


Started PATCH "/api/v1/answers/54" for ::1 at 2016-06-20 17:41:44 -0400
Processing by Api::V1::AnswersController#update as JSON
  Parameters: {"data"=>{"id"=>"54", "attributes"=>{"content"=>"asDSAd", "vote-count"=>27, "vote-score"=>-1}, "question"=>{"data"=>{"id"=>"13", "attributes"=>{"content"=>"Where would you like to be in your career five years from now?"}, "type"=>"questions"}}, "type"=>"answers"}, "id"=>"54", "answer"=>{}}
  [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."id" = $1 LIMIT $2[0m  [["id", 54], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[36mQuestion Load (0.1ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 13], ["LIMIT", 1]]
  [1m[35mSQL (0.3ms)[0m  [1m[33mUPDATE "answers" SET "vote_count" = $1, "vote_score" = $2, "updated_at" = $3 WHERE "answers"."id" = $4[0m  [["vote_count", 27], ["vote_score", -1], ["updated_at", 2016-06-20 21:41:44 UTC], ["id", 54]]
  [1m[35m (0.8ms)[0m  [1m[35mCOMMIT[0m
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (0.71ms)
Completed 200 OK in 7ms (Views: 1.1ms | ActiveRecord: 1.6ms)


Started PATCH "/api/v1/answers/54" for ::1 at 2016-06-20 17:41:44 -0400
Processing by Api::V1::AnswersController#update as JSON
  Parameters: {"data"=>{"id"=>"54", "attributes"=>{"content"=>"asDSAd", "vote-count"=>28, "vote-score"=>0}, "question"=>{"data"=>{"id"=>"13", "attributes"=>{"content"=>"Where would you like to be in your career five years from now?"}, "type"=>"questions"}}, "type"=>"answers"}, "id"=>"54", "answer"=>{}}
  [1m[36mAnswer Load (0.3ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."id" = $1 LIMIT $2[0m  [["id", 54], ["LIMIT", 1]]
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 13], ["LIMIT", 1]]
  [1m[35mSQL (0.3ms)[0m  [1m[33mUPDATE "answers" SET "vote_count" = $1, "vote_score" = $2, "updated_at" = $3 WHERE "answers"."id" = $4[0m  [["vote_count", 28], ["vote_score", 0], ["updated_at", 2016-06-20 21:41:44 UTC], ["id", 54]]
  [1m[35m (0.9ms)[0m  [1m[35mCOMMIT[0m
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (0.79ms)
Completed 200 OK in 8ms (Views: 1.2ms | ActiveRecord: 1.9ms)


Started GET "/api/v1/questions/13" for ::1 at 2016-06-20 17:43:04 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"13"}
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 13], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.3ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 13]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (13.26ms)
Completed 200 OK in 15ms (Views: 13.8ms | ActiveRecord: 0.6ms)


Started GET "/api/v1/questions/13" for ::1 at 2016-06-20 17:44:34 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"13"}
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 13], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.5ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 13]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (13.66ms)
Completed 200 OK in 16ms (Views: 13.9ms | ActiveRecord: 0.8ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-20 17:44:39 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"sdfdsf", "vote-count"=>0, "vote-score"=>0}, "question"=>{"data"=>{"id"=>"13", "attributes"=>{"content"=>"Where would you like to be in your career five years from now?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 13], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "sdfdsf"], ["question_id", 13], ["created_at", 2016-06-20 21:44:39 UTC], ["updated_at", 2016-06-20 21:44:39 UTC]]
  [1m[35m (2.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mAnswer Load (0.4ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."question_id" = $1 ORDER BY "answers"."id" DESC LIMIT $2[0m  [["question_id", 13], ["LIMIT", 1]]
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (0.86ms)
Completed 200 OK in 11ms (Views: 1.4ms | ActiveRecord: 3.4ms)


Started PATCH "/api/v1/answers/14" for ::1 at 2016-06-20 17:44:42 -0400
Processing by Api::V1::AnswersController#update as JSON
  Parameters: {"data"=>{"id"=>"14", "attributes"=>{"content"=>"asDSAd", "vote-count"=>4, "vote-score"=>1}, "question"=>{"data"=>{"id"=>"13", "attributes"=>{"content"=>"Where would you like to be in your career five years from now?"}, "type"=>"questions"}}, "type"=>"answers"}, "id"=>"14", "answer"=>{}}
  [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."id" = $1 LIMIT $2[0m  [["id", 14], ["LIMIT", 1]]
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 13], ["LIMIT", 1]]
  [1m[35mSQL (0.4ms)[0m  [1m[33mUPDATE "answers" SET "vote_count" = $1, "vote_score" = $2, "updated_at" = $3 WHERE "answers"."id" = $4[0m  [["vote_count", 4], ["vote_score", 1], ["updated_at", 2016-06-20 21:44:42 UTC], ["id", 14]]
  [1m[35m (2.4ms)[0m  [1m[35mCOMMIT[0m
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (0.89ms)
Completed 200 OK in 11ms (Views: 1.4ms | ActiveRecord: 3.5ms)


Started GET "/api/v1/questions/13" for ::1 at 2016-06-20 17:44:58 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"13"}
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 13], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.4ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 13]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (13.33ms)
Completed 200 OK in 15ms (Views: 13.4ms | ActiveRecord: 0.6ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-20 17:45:00 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"sdfads", "vote-count"=>0, "vote-score"=>0}, "question"=>{"data"=>{"id"=>"13", "attributes"=>{"content"=>"Where would you like to be in your career five years from now?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 13], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "sdfads"], ["question_id", 13], ["created_at", 2016-06-20 21:45:00 UTC], ["updated_at", 2016-06-20 21:45:00 UTC]]
  [1m[35m (0.7ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mAnswer Load (0.3ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."question_id" = $1 ORDER BY "answers"."id" DESC LIMIT $2[0m  [["question_id", 13], ["LIMIT", 1]]
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (0.74ms)
Completed 200 OK in 8ms (Views: 1.2ms | ActiveRecord: 1.7ms)


Started PATCH "/api/v1/answers/53" for ::1 at 2016-06-20 17:45:02 -0400
Processing by Api::V1::AnswersController#update as JSON
  Parameters: {"data"=>{"id"=>"53", "attributes"=>{"content"=>"sadfdsa", "vote-count"=>3, "vote-score"=>1}, "question"=>{"data"=>{"id"=>"13", "attributes"=>{"content"=>"Where would you like to be in your career five years from now?"}, "type"=>"questions"}}, "type"=>"answers"}, "id"=>"53", "answer"=>{}}
  [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."id" = $1 LIMIT $2[0m  [["id", 53], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 13], ["LIMIT", 1]]
  [1m[35mSQL (0.4ms)[0m  [1m[33mUPDATE "answers" SET "vote_count" = $1, "vote_score" = $2, "updated_at" = $3 WHERE "answers"."id" = $4[0m  [["vote_count", 3], ["vote_score", 1], ["updated_at", 2016-06-20 21:45:02 UTC], ["id", 53]]
  [1m[35m (2.3ms)[0m  [1m[35mCOMMIT[0m
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (0.8ms)
Completed 200 OK in 9ms (Views: 1.3ms | ActiveRecord: 3.3ms)


Started PATCH "/api/v1/answers/14" for ::1 at 2016-06-20 17:45:08 -0400
Processing by Api::V1::AnswersController#update as JSON
  Parameters: {"data"=>{"id"=>"14", "attributes"=>{"content"=>"asDSAd", "vote-count"=>5, "vote-score"=>0}, "question"=>{"data"=>{"id"=>"13", "attributes"=>{"content"=>"Where would you like to be in your career five years from now?"}, "type"=>"questions"}}, "type"=>"answers"}, "id"=>"14", "answer"=>{}}
  [1m[36mAnswer Load (0.8ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."id" = $1 LIMIT $2[0m  [["id", 14], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 13], ["LIMIT", 1]]
  [1m[35mSQL (0.4ms)[0m  [1m[33mUPDATE "answers" SET "vote_count" = $1, "vote_score" = $2, "updated_at" = $3 WHERE "answers"."id" = $4[0m  [["vote_count", 5], ["vote_score", 0], ["updated_at", 2016-06-20 21:45:08 UTC], ["id", 14]]
  [1m[35m (2.2ms)[0m  [1m[35mCOMMIT[0m
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (0.87ms)
Completed 200 OK in 10ms (Views: 1.4ms | ActiveRecord: 3.6ms)


Started GET "/api/v1/questions/13" for ::1 at 2016-06-20 17:45:37 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"13"}
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 13], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.4ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 13]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (13.48ms)
Completed 200 OK in 15ms (Views: 13.6ms | ActiveRecord: 0.6ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-20 17:45:39 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"adfsdf", "vote-count"=>0, "vote-score"=>0}, "question"=>{"data"=>{"id"=>"13", "attributes"=>{"content"=>"Where would you like to be in your career five years from now?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 13], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "adfsdf"], ["question_id", 13], ["created_at", 2016-06-20 21:45:39 UTC], ["updated_at", 2016-06-20 21:45:39 UTC]]
  [1m[35m (2.1ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mAnswer Load (0.4ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."question_id" = $1 ORDER BY "answers"."id" DESC LIMIT $2[0m  [["question_id", 13], ["LIMIT", 1]]
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (0.76ms)
Completed 200 OK in 10ms (Views: 1.3ms | ActiveRecord: 3.2ms)


Started GET "/api/v1/questions/13" for ::1 at 2016-06-20 17:45:42 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"13"}
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 13], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.3ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 13]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (13.05ms)
Completed 200 OK in 15ms (Views: 13.4ms | ActiveRecord: 0.5ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-20 17:45:44 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"ffwf", "vote-count"=>0, "vote-score"=>0}, "question"=>{"data"=>{"id"=>"13", "attributes"=>{"content"=>"Where would you like to be in your career five years from now?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 13], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "ffwf"], ["question_id", 13], ["created_at", 2016-06-20 21:45:44 UTC], ["updated_at", 2016-06-20 21:45:44 UTC]]
  [1m[35m (0.8ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mAnswer Load (0.3ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."question_id" = $1 ORDER BY "answers"."id" DESC LIMIT $2[0m  [["question_id", 13], ["LIMIT", 1]]
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (0.79ms)
Completed 200 OK in 8ms (Views: 1.3ms | ActiveRecord: 1.7ms)


Started GET "/api/v1/random" for ::1 at 2016-06-20 17:45:50 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
[active_model_serializers] Rendered ActiveModel::Serializer::Null with Hash (0.07ms)
Completed 200 OK in 1ms (Views: 0.5ms | ActiveRecord: 0.0ms)


Started GET "/api/v1/questions/27" for ::1 at 2016-06-20 17:45:50 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"27"}
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 27], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.3ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 27]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (5.44ms)
Completed 200 OK in 7ms (Views: 5.6ms | ActiveRecord: 0.5ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-20 17:45:51 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"asfasfsa", "vote-count"=>0, "vote-score"=>0}, "question"=>{"data"=>{"id"=>"27", "attributes"=>{"content"=>"How would you declare and use a constructor in Ruby?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 27], ["LIMIT", 1]]
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "asfasfsa"], ["question_id", 27], ["created_at", 2016-06-20 21:45:51 UTC], ["updated_at", 2016-06-20 21:45:51 UTC]]
  [1m[35m (1.0ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mAnswer Load (0.5ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."question_id" = $1 ORDER BY "answers"."id" DESC LIMIT $2[0m  [["question_id", 27], ["LIMIT", 1]]
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (0.72ms)
Completed 200 OK in 10ms (Views: 1.2ms | ActiveRecord: 2.3ms)


Started GET "/api/v1/questions/27" for ::1 at 2016-06-20 17:46:21 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"27"}
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 27], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 27]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (7.7ms)
Completed 200 OK in 9ms (Views: 8.0ms | ActiveRecord: 0.4ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-20 17:46:23 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"asfsasf", "vote-count"=>0, "vote-score"=>0}, "question"=>{"data"=>{"id"=>"27", "attributes"=>{"content"=>"How would you declare and use a constructor in Ruby?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 27], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "asfsasf"], ["question_id", 27], ["created_at", 2016-06-20 21:46:23 UTC], ["updated_at", 2016-06-20 21:46:23 UTC]]
  [1m[35m (2.2ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mAnswer Load (0.4ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."question_id" = $1 ORDER BY "answers"."id" DESC LIMIT $2[0m  [["question_id", 27], ["LIMIT", 1]]
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (0.83ms)
Completed 200 OK in 10ms (Views: 1.4ms | ActiveRecord: 3.2ms)


Started GET "/api/v1/questions/27" for ::1 at 2016-06-20 17:46:36 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"27"}
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 27], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 27]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (5.27ms)
Completed 200 OK in 7ms (Views: 5.5ms | ActiveRecord: 0.4ms)


Started GET "/api/v1/questions/27" for ::1 at 2016-06-20 17:46:39 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"27"}
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 27], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 27]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (7.08ms)
Completed 200 OK in 9ms (Views: 7.5ms | ActiveRecord: 0.4ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-20 17:46:46 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"asfadf", "vote-count"=>0, "vote-score"=>0}, "question"=>{"data"=>{"id"=>"27", "attributes"=>{"content"=>"How would you declare and use a constructor in Ruby?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 27], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "asfadf"], ["question_id", 27], ["created_at", 2016-06-20 21:46:46 UTC], ["updated_at", 2016-06-20 21:46:46 UTC]]
  [1m[35m (2.2ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mAnswer Load (0.4ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."question_id" = $1 ORDER BY "answers"."id" DESC LIMIT $2[0m  [["question_id", 27], ["LIMIT", 1]]
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (0.75ms)
Completed 200 OK in 10ms (Views: 1.2ms | ActiveRecord: 3.2ms)


Started GET "/api/v1/questions/27" for ::1 at 2016-06-20 17:47:43 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"27"}
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 27], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.5ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 27]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (7.49ms)
Completed 200 OK in 10ms (Views: 7.8ms | ActiveRecord: 0.8ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-20 17:47:46 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"wdfwdf", "vote-count"=>0, "vote-score"=>0}, "question"=>{"data"=>{"id"=>"27", "attributes"=>{"content"=>"How would you declare and use a constructor in Ruby?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 27], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "wdfwdf"], ["question_id", 27], ["created_at", 2016-06-20 21:47:46 UTC], ["updated_at", 2016-06-20 21:47:46 UTC]]
  [1m[35m (2.2ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mAnswer Load (0.4ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."question_id" = $1 ORDER BY "answers"."id" DESC LIMIT $2[0m  [["question_id", 27], ["LIMIT", 1]]
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (0.8ms)
Completed 200 OK in 10ms (Views: 1.3ms | ActiveRecord: 3.2ms)


Started GET "/api/v1/questions/27" for ::1 at 2016-06-20 17:48:24 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"27"}
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 27], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 27]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (6.97ms)
Completed 200 OK in 8ms (Views: 7.2ms | ActiveRecord: 0.4ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-20 17:49:48 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"asdfasdf", "vote-count"=>0, "vote-score"=>0}, "question"=>{"data"=>{"id"=>"27", "attributes"=>{"content"=>"How would you declare and use a constructor in Ruby?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 27], ["LIMIT", 1]]
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.5ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "asdfasdf"], ["question_id", 27], ["created_at", 2016-06-20 21:49:48 UTC], ["updated_at", 2016-06-20 21:49:48 UTC]]
  [1m[35m (1.1ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mAnswer Load (0.4ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."question_id" = $1 ORDER BY "answers"."id" DESC LIMIT $2[0m  [["question_id", 27], ["LIMIT", 1]]
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (0.75ms)
Completed 200 OK in 11ms (Views: 1.3ms | ActiveRecord: 2.5ms)


Started PATCH "/api/v1/answers/18" for ::1 at 2016-06-20 17:49:50 -0400
Processing by Api::V1::AnswersController#update as JSON
  Parameters: {"data"=>{"id"=>"18", "attributes"=>{"content"=>"Dsgasgdsga", "vote-count"=>1, "vote-score"=>1}, "question"=>{"data"=>{"id"=>"27", "attributes"=>{"content"=>"How would you declare and use a constructor in Ruby?"}, "type"=>"questions"}}, "type"=>"answers"}, "id"=>"18", "answer"=>{}}
  [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."id" = $1 LIMIT $2[0m  [["id", 18], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 27], ["LIMIT", 1]]
  [1m[35mSQL (0.4ms)[0m  [1m[33mUPDATE "answers" SET "vote_count" = $1, "vote_score" = $2, "updated_at" = $3 WHERE "answers"."id" = $4[0m  [["vote_count", 1], ["vote_score", 1], ["updated_at", 2016-06-20 21:49:50 UTC], ["id", 18]]
  [1m[35m (0.7ms)[0m  [1m[35mCOMMIT[0m
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (0.75ms)
Completed 200 OK in 8ms (Views: 1.2ms | ActiveRecord: 1.8ms)


Started GET "/api/v1/questions/27" for ::1 at 2016-06-20 17:50:17 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"27"}
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 27], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.3ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 27]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (7.31ms)
Completed 200 OK in 9ms (Views: 7.5ms | ActiveRecord: 0.5ms)


Started GET "/api/v1/questions/27" for ::1 at 2016-06-20 17:50:20 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"27"}
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 27], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 27]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (7.4ms)
Completed 200 OK in 9ms (Views: 7.7ms | ActiveRecord: 0.4ms)


Started GET "/api/v1/questions/27" for ::1 at 2016-06-20 17:50:30 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"27"}
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 27], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.3ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 27]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (7.68ms)
Completed 200 OK in 9ms (Views: 7.8ms | ActiveRecord: 0.6ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-20 17:50:32 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"afadf", "vote-count"=>0, "vote-score"=>0}, "question"=>{"data"=>{"id"=>"27", "attributes"=>{"content"=>"How would you declare and use a constructor in Ruby?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 27], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "afadf"], ["question_id", 27], ["created_at", 2016-06-20 21:50:32 UTC], ["updated_at", 2016-06-20 21:50:32 UTC]]
  [1m[35m (2.1ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mAnswer Load (0.4ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."question_id" = $1 ORDER BY "answers"."id" DESC LIMIT $2[0m  [["question_id", 27], ["LIMIT", 1]]
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (0.79ms)
Completed 200 OK in 10ms (Views: 1.3ms | ActiveRecord: 3.1ms)


Started PATCH "/api/v1/answers/18" for ::1 at 2016-06-20 17:50:33 -0400
Processing by Api::V1::AnswersController#update as JSON
  Parameters: {"data"=>{"id"=>"18", "attributes"=>{"content"=>"Dsgasgdsga", "vote-count"=>2, "vote-score"=>0}, "question"=>{"data"=>{"id"=>"27", "attributes"=>{"content"=>"How would you declare and use a constructor in Ruby?"}, "type"=>"questions"}}, "type"=>"answers"}, "id"=>"18", "answer"=>{}}
  [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."id" = $1 LIMIT $2[0m  [["id", 18], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 27], ["LIMIT", 1]]
  [1m[35mSQL (0.5ms)[0m  [1m[33mUPDATE "answers" SET "vote_count" = $1, "vote_score" = $2, "updated_at" = $3 WHERE "answers"."id" = $4[0m  [["vote_count", 2], ["vote_score", 0], ["updated_at", 2016-06-20 21:50:33 UTC], ["id", 18]]
  [1m[35m (2.1ms)[0m  [1m[35mCOMMIT[0m
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (0.89ms)
Completed 200 OK in 10ms (Views: 1.4ms | ActiveRecord: 3.0ms)


Started GET "/api/v1/random" for ::1 at 2016-06-20 17:50:38 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
[active_model_serializers] Rendered ActiveModel::Serializer::Null with Hash (0.09ms)
Completed 200 OK in 1ms (Views: 0.6ms | ActiveRecord: 0.0ms)


Started GET "/api/v1/questions/14" for ::1 at 2016-06-20 17:50:38 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"14"}
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 14], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 14]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (6.81ms)
Completed 200 OK in 8ms (Views: 7.0ms | ActiveRecord: 0.4ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-20 17:50:40 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"afasf", "vote-count"=>0, "vote-score"=>0}, "question"=>{"data"=>{"id"=>"14", "attributes"=>{"content"=>"Why do you want to work with us?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 14], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "afasf"], ["question_id", 14], ["created_at", 2016-06-20 21:50:40 UTC], ["updated_at", 2016-06-20 21:50:40 UTC]]
  [1m[35m (6.5ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mAnswer Load (0.4ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."question_id" = $1 ORDER BY "answers"."id" DESC LIMIT $2[0m  [["question_id", 14], ["LIMIT", 1]]
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (0.82ms)
Completed 200 OK in 15ms (Views: 1.4ms | ActiveRecord: 7.7ms)


Started GET "/api/v1/questions/14" for ::1 at 2016-06-20 17:50:51 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"14"}
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 14], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.3ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 14]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (7.74ms)
Completed 200 OK in 10ms (Views: 8.0ms | ActiveRecord: 0.5ms)


Started GET "/api/v1/questions/14" for ::1 at 2016-06-20 17:50:58 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"14"}
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 14], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.3ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 14]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (8.55ms)
Completed 200 OK in 11ms (Views: 8.8ms | ActiveRecord: 0.8ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-20 17:51:01 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"asfasf", "vote-count"=>0, "vote-score"=>0}, "question"=>{"data"=>{"id"=>"14", "attributes"=>{"content"=>"Why do you want to work with us?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 14], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "asfasf"], ["question_id", 14], ["created_at", 2016-06-20 21:51:01 UTC], ["updated_at", 2016-06-20 21:51:01 UTC]]
  [1m[35m (2.4ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mAnswer Load (0.4ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."question_id" = $1 ORDER BY "answers"."id" DESC LIMIT $2[0m  [["question_id", 14], ["LIMIT", 1]]
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (0.77ms)
Completed 200 OK in 10ms (Views: 1.4ms | ActiveRecord: 3.4ms)


Started PATCH "/api/v1/answers/41" for ::1 at 2016-06-20 17:51:02 -0400
Processing by Api::V1::AnswersController#update as JSON
  Parameters: {"data"=>{"id"=>"41", "attributes"=>{"content"=>"sadfdsf", "vote-count"=>1, "vote-score"=>1}, "question"=>{"data"=>{"id"=>"14", "attributes"=>{"content"=>"Why do you want to work with us?"}, "type"=>"questions"}}, "type"=>"answers"}, "id"=>"41", "answer"=>{}}
  [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."id" = $1 LIMIT $2[0m  [["id", 41], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 14], ["LIMIT", 1]]
  [1m[35mSQL (0.4ms)[0m  [1m[33mUPDATE "answers" SET "vote_count" = $1, "vote_score" = $2, "updated_at" = $3 WHERE "answers"."id" = $4[0m  [["vote_count", 1], ["vote_score", 1], ["updated_at", 2016-06-20 21:51:02 UTC], ["id", 41]]
  [1m[35m (46.6ms)[0m  [1m[35mCOMMIT[0m
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (1.09ms)
Completed 200 OK in 54ms (Views: 1.7ms | ActiveRecord: 47.4ms)


Started GET "/api/v1/questions/14" for ::1 at 2016-06-20 17:51:08 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"14"}
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 14], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.4ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 14]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (8.96ms)
Completed 200 OK in 11ms (Views: 9.2ms | ActiveRecord: 0.6ms)


Started GET "/api/v1/questions/14" for ::1 at 2016-06-20 17:51:17 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"14"}
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 14], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 14]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (7.7ms)
Completed 200 OK in 9ms (Views: 8.0ms | ActiveRecord: 0.4ms)


Started GET "/api/v1/questions/14" for ::1 at 2016-06-20 17:51:25 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"14"}
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 14], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.3ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 14]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (7.82ms)
Completed 200 OK in 9ms (Views: 8.0ms | ActiveRecord: 0.5ms)


Started GET "/api/v1/questions/14" for ::1 at 2016-06-20 17:51:35 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"14"}
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 14], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 14]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (8.24ms)
Completed 200 OK in 10ms (Views: 8.7ms | ActiveRecord: 0.4ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-20 17:51:38 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"sadadsg", "vote-count"=>0, "vote-score"=>0}, "question"=>{"data"=>{"id"=>"14", "attributes"=>{"content"=>"Why do you want to work with us?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 14], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "sadadsg"], ["question_id", 14], ["created_at", 2016-06-20 21:51:38 UTC], ["updated_at", 2016-06-20 21:51:38 UTC]]
  [1m[35m (2.2ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mAnswer Load (0.4ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."question_id" = $1 ORDER BY "answers"."id" DESC LIMIT $2[0m  [["question_id", 14], ["LIMIT", 1]]
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (0.79ms)
Completed 200 OK in 10ms (Views: 1.3ms | ActiveRecord: 3.2ms)


Started PATCH "/api/v1/answers/67" for ::1 at 2016-06-20 17:51:40 -0400
Processing by Api::V1::AnswersController#update as JSON
  Parameters: {"data"=>{"id"=>"67", "attributes"=>{"content"=>"sadfdasf", "vote-count"=>1, "vote-score"=>1}, "question"=>{"data"=>{"id"=>"14", "attributes"=>{"content"=>"Why do you want to work with us?"}, "type"=>"questions"}}, "type"=>"answers"}, "id"=>"67", "answer"=>{}}
  [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."id" = $1 LIMIT $2[0m  [["id", 67], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 14], ["LIMIT", 1]]
  [1m[35mSQL (0.4ms)[0m  [1m[33mUPDATE "answers" SET "vote_count" = $1, "vote_score" = $2, "updated_at" = $3 WHERE "answers"."id" = $4[0m  [["vote_count", 1], ["vote_score", 1], ["updated_at", 2016-06-20 21:51:40 UTC], ["id", 67]]
  [1m[35m (2.3ms)[0m  [1m[35mCOMMIT[0m
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (0.77ms)
Completed 200 OK in 9ms (Views: 1.2ms | ActiveRecord: 3.3ms)


Started GET "/api/v1/questions/14" for ::1 at 2016-06-20 17:52:00 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"14"}
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 14], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.3ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 14]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (8.56ms)
Completed 200 OK in 10ms (Views: 8.8ms | ActiveRecord: 0.5ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-20 17:52:03 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"asdfadsf", "vote-count"=>0, "vote-score"=>0}, "question"=>{"data"=>{"id"=>"14", "attributes"=>{"content"=>"Why do you want to work with us?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 14], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "asdfadsf"], ["question_id", 14], ["created_at", 2016-06-20 21:52:03 UTC], ["updated_at", 2016-06-20 21:52:03 UTC]]
  [1m[35m (2.1ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mAnswer Load (0.3ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."question_id" = $1 ORDER BY "answers"."id" DESC LIMIT $2[0m  [["question_id", 14], ["LIMIT", 1]]
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (1.1ms)
Completed 200 OK in 10ms (Views: 1.7ms | ActiveRecord: 3.1ms)


Started PATCH "/api/v1/answers/41" for ::1 at 2016-06-20 17:52:04 -0400
Processing by Api::V1::AnswersController#update as JSON
  Parameters: {"data"=>{"id"=>"41", "attributes"=>{"content"=>"sadfdsf", "vote-count"=>2, "vote-score"=>2}, "question"=>{"data"=>{"id"=>"14", "attributes"=>{"content"=>"Why do you want to work with us?"}, "type"=>"questions"}}, "type"=>"answers"}, "id"=>"41", "answer"=>{}}
  [1m[36mAnswer Load (0.3ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."id" = $1 LIMIT $2[0m  [["id", 41], ["LIMIT", 1]]
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 14], ["LIMIT", 1]]
  [1m[35mSQL (0.3ms)[0m  [1m[33mUPDATE "answers" SET "vote_count" = $1, "vote_score" = $2, "updated_at" = $3 WHERE "answers"."id" = $4[0m  [["vote_count", 2], ["vote_score", 2], ["updated_at", 2016-06-20 21:52:04 UTC], ["id", 41]]
  [1m[35m (2.2ms)[0m  [1m[35mCOMMIT[0m
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (0.8ms)
Completed 200 OK in 9ms (Views: 1.3ms | ActiveRecord: 3.1ms)


Started PATCH "/api/v1/answers/67" for ::1 at 2016-06-20 17:52:06 -0400
Processing by Api::V1::AnswersController#update as JSON
  Parameters: {"data"=>{"id"=>"67", "attributes"=>{"content"=>"sadfdasf", "vote-count"=>2, "vote-score"=>2}, "question"=>{"data"=>{"id"=>"14", "attributes"=>{"content"=>"Why do you want to work with us?"}, "type"=>"questions"}}, "type"=>"answers"}, "id"=>"67", "answer"=>{}}
  [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."id" = $1 LIMIT $2[0m  [["id", 67], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 14], ["LIMIT", 1]]
  [1m[35mSQL (0.4ms)[0m  [1m[33mUPDATE "answers" SET "vote_count" = $1, "vote_score" = $2, "updated_at" = $3 WHERE "answers"."id" = $4[0m  [["vote_count", 2], ["vote_score", 2], ["updated_at", 2016-06-20 21:52:06 UTC], ["id", 67]]
  [1m[35m (0.7ms)[0m  [1m[35mCOMMIT[0m
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (0.82ms)
Completed 200 OK in 8ms (Views: 1.3ms | ActiveRecord: 1.6ms)


Started PATCH "/api/v1/answers/102" for ::1 at 2016-06-20 17:52:07 -0400
Processing by Api::V1::AnswersController#update as JSON
  Parameters: {"data"=>{"id"=>"102", "attributes"=>{"content"=>"asddasdfas", "vote-count"=>1, "vote-score"=>1}, "question"=>{"data"=>{"id"=>"14", "attributes"=>{"content"=>"Why do you want to work with us?"}, "type"=>"questions"}}, "type"=>"answers"}, "id"=>"102", "answer"=>{}}
  [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."id" = $1 LIMIT $2[0m  [["id", 102], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[36mQuestion Load (0.1ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 14], ["LIMIT", 1]]
  [1m[35mSQL (0.4ms)[0m  [1m[33mUPDATE "answers" SET "vote_count" = $1, "vote_score" = $2, "updated_at" = $3 WHERE "answers"."id" = $4[0m  [["vote_count", 1], ["vote_score", 1], ["updated_at", 2016-06-20 21:52:07 UTC], ["id", 102]]
  [1m[35m (2.3ms)[0m  [1m[35mCOMMIT[0m
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (0.78ms)
Completed 200 OK in 9ms (Views: 1.2ms | ActiveRecord: 3.2ms)


Started PATCH "/api/v1/answers/41" for ::1 at 2016-06-20 17:52:13 -0400
Processing by Api::V1::AnswersController#update as JSON
  Parameters: {"data"=>{"id"=>"41", "attributes"=>{"content"=>"sadfdsf", "vote-count"=>3, "vote-score"=>1}, "question"=>{"data"=>{"id"=>"14", "attributes"=>{"content"=>"Why do you want to work with us?"}, "type"=>"questions"}}, "type"=>"answers"}, "id"=>"41", "answer"=>{}}
  [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."id" = $1 LIMIT $2[0m  [["id", 41], ["LIMIT", 1]]
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 14], ["LIMIT", 1]]
  [1m[35mSQL (0.4ms)[0m  [1m[33mUPDATE "answers" SET "vote_count" = $1, "vote_score" = $2, "updated_at" = $3 WHERE "answers"."id" = $4[0m  [["vote_count", 3], ["vote_score", 1], ["updated_at", 2016-06-20 21:52:13 UTC], ["id", 41]]
  [1m[35m (0.8ms)[0m  [1m[35mCOMMIT[0m
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (0.88ms)
Completed 200 OK in 9ms (Views: 1.4ms | ActiveRecord: 1.8ms)


Started GET "/api/v1/questions/14" for ::1 at 2016-06-20 17:52:44 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"14"}
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 14], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.3ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 14]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (10.13ms)
Completed 200 OK in 12ms (Views: 10.4ms | ActiveRecord: 0.5ms)


Started GET "/api/v1/questions/14" for ::1 at 2016-06-20 17:52:53 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"14"}
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 14], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.3ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 14]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (12.69ms)
Completed 200 OK in 14ms (Views: 12.9ms | ActiveRecord: 0.4ms)


Started GET "/api/v1/questions/14" for ::1 at 2016-06-20 17:53:41 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"14"}
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 14], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.3ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 14]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (10.26ms)
Completed 200 OK in 13ms (Views: 10.9ms | ActiveRecord: 0.5ms)


Started GET "/api/v1/questions/14" for ::1 at 2016-06-20 17:53:47 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"14"}
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 14], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 14]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (10.45ms)
Completed 200 OK in 12ms (Views: 10.7ms | ActiveRecord: 0.4ms)


Started GET "/api/v1/questions/14" for ::1 at 2016-06-20 17:53:52 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"14"}
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 14], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.3ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 14]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (13.67ms)
Completed 200 OK in 15ms (Views: 13.9ms | ActiveRecord: 0.5ms)


Started GET "/api/v1/questions/14" for ::1 at 2016-06-20 17:53:59 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"14"}
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 14], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.4ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 14]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (11.01ms)
Completed 200 OK in 13ms (Views: 11.2ms | ActiveRecord: 0.7ms)


Started GET "/api/v1/questions/14" for ::1 at 2016-06-20 17:54:01 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"14"}
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 14], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.3ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 14]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (11.44ms)
Completed 200 OK in 13ms (Views: 11.8ms | ActiveRecord: 0.4ms)


Started GET "/api/v1/questions/14" for ::1 at 2016-06-20 17:54:05 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"14"}
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 14], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.3ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 14]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (11.4ms)
Completed 200 OK in 13ms (Views: 11.7ms | ActiveRecord: 0.5ms)


Started GET "/api/v1/questions/14" for ::1 at 2016-06-20 17:54:27 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"14"}
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 14], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.5ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 14]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (14.46ms)
Completed 200 OK in 17ms (Views: 14.8ms | ActiveRecord: 0.9ms)


Started GET "/api/v1/questions/14" for ::1 at 2016-06-20 17:54:34 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"14"}
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 14], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 14]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (10.37ms)
Completed 200 OK in 12ms (Views: 10.7ms | ActiveRecord: 0.4ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-20 17:54:36 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>nil, "vote-count"=>0, "vote-score"=>0}, "question"=>{"data"=>{"id"=>"14", "attributes"=>{"content"=>"Why do you want to work with us?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 14], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "answers" ("question_id", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["question_id", 14], ["created_at", 2016-06-20 21:54:36 UTC], ["updated_at", 2016-06-20 21:54:36 UTC]]
  [1m[35m (0.9ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mAnswer Load (0.4ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."question_id" = $1 ORDER BY "answers"."id" DESC LIMIT $2[0m  [["question_id", 14], ["LIMIT", 1]]
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (0.76ms)
Completed 200 OK in 9ms (Views: 1.2ms | ActiveRecord: 1.9ms)


Started PATCH "/api/v1/answers/67" for ::1 at 2016-06-20 17:54:38 -0400
Processing by Api::V1::AnswersController#update as JSON
  Parameters: {"data"=>{"id"=>"67", "attributes"=>{"content"=>"sadfdasf", "vote-count"=>3, "vote-score"=>3}, "question"=>{"data"=>{"id"=>"14", "attributes"=>{"content"=>"Why do you want to work with us?"}, "type"=>"questions"}}, "type"=>"answers"}, "id"=>"67", "answer"=>{}}
  [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."id" = $1 LIMIT $2[0m  [["id", 67], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 14], ["LIMIT", 1]]
  [1m[35mSQL (0.4ms)[0m  [1m[33mUPDATE "answers" SET "vote_count" = $1, "vote_score" = $2, "updated_at" = $3 WHERE "answers"."id" = $4[0m  [["vote_count", 3], ["vote_score", 3], ["updated_at", 2016-06-20 21:54:38 UTC], ["id", 67]]
  [1m[35m (2.3ms)[0m  [1m[35mCOMMIT[0m
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (0.81ms)
Completed 200 OK in 10ms (Views: 1.4ms | ActiveRecord: 3.2ms)


Started PATCH "/api/v1/answers/67" for ::1 at 2016-06-20 17:54:39 -0400
Processing by Api::V1::AnswersController#update as JSON
  Parameters: {"data"=>{"id"=>"67", "attributes"=>{"content"=>"sadfdasf", "vote-count"=>4, "vote-score"=>2}, "question"=>{"data"=>{"id"=>"14", "attributes"=>{"content"=>"Why do you want to work with us?"}, "type"=>"questions"}}, "type"=>"answers"}, "id"=>"67", "answer"=>{}}
  [1m[36mAnswer Load (0.3ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."id" = $1 LIMIT $2[0m  [["id", 67], ["LIMIT", 1]]
  [1m[35m (0.3ms)[0m  [1m[35mBEGIN[0m
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 14], ["LIMIT", 1]]
  [1m[35mSQL (0.4ms)[0m  [1m[33mUPDATE "answers" SET "vote_count" = $1, "vote_score" = $2, "updated_at" = $3 WHERE "answers"."id" = $4[0m  [["vote_count", 4], ["vote_score", 2], ["updated_at", 2016-06-20 21:54:39 UTC], ["id", 67]]
  [1m[35m (44.2ms)[0m  [1m[35mCOMMIT[0m
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (0.76ms)
Completed 200 OK in 51ms (Views: 1.2ms | ActiveRecord: 45.3ms)


Started GET "/api/v1/questions/14" for ::1 at 2016-06-20 17:54:53 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"14"}
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 14], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.3ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 14]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (10.09ms)
Completed 200 OK in 12ms (Views: 10.4ms | ActiveRecord: 0.5ms)


Started GET "/api/v1/questions/14" for ::1 at 2016-06-20 17:54:59 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"14"}
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 14], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.3ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 14]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (11.07ms)
Completed 200 OK in 13ms (Views: 11.3ms | ActiveRecord: 0.5ms)


Started GET "/api/v1/questions/14" for ::1 at 2016-06-20 17:55:00 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"14"}
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 14], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.4ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 14]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (13.02ms)
Completed 200 OK in 15ms (Views: 13.6ms | ActiveRecord: 0.7ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-20 17:55:02 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"asdfds", "vote-count"=>0, "vote-score"=>0}, "question"=>{"data"=>{"id"=>"14", "attributes"=>{"content"=>"Why do you want to work with us?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 14], ["LIMIT", 1]]
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "asdfds"], ["question_id", 14], ["created_at", 2016-06-20 21:55:02 UTC], ["updated_at", 2016-06-20 21:55:02 UTC]]
  [1m[35m (1.7ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mAnswer Load (0.4ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."question_id" = $1 ORDER BY "answers"."id" DESC LIMIT $2[0m  [["question_id", 14], ["LIMIT", 1]]
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (0.91ms)
Completed 200 OK in 12ms (Views: 1.4ms | ActiveRecord: 2.9ms)


Started PATCH "/api/v1/answers/67" for ::1 at 2016-06-20 17:55:03 -0400
Processing by Api::V1::AnswersController#update as JSON
  Parameters: {"data"=>{"id"=>"67", "attributes"=>{"content"=>"sadfdasf", "vote-count"=>5, "vote-score"=>3}, "question"=>{"data"=>{"id"=>"14", "attributes"=>{"content"=>"Why do you want to work with us?"}, "type"=>"questions"}}, "type"=>"answers"}, "id"=>"67", "answer"=>{}}
  [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."id" = $1 LIMIT $2[0m  [["id", 67], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 14], ["LIMIT", 1]]
  [1m[35mSQL (0.3ms)[0m  [1m[33mUPDATE "answers" SET "vote_count" = $1, "vote_score" = $2, "updated_at" = $3 WHERE "answers"."id" = $4[0m  [["vote_count", 5], ["vote_score", 3], ["updated_at", 2016-06-20 21:55:03 UTC], ["id", 67]]
  [1m[35m (0.7ms)[0m  [1m[35mCOMMIT[0m
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (0.86ms)
Completed 200 OK in 8ms (Views: 1.5ms | ActiveRecord: 1.6ms)


Started PATCH "/api/v1/answers/67" for ::1 at 2016-06-20 17:55:04 -0400
Processing by Api::V1::AnswersController#update as JSON
  Parameters: {"data"=>{"id"=>"67", "attributes"=>{"content"=>"sadfdasf", "vote-count"=>6, "vote-score"=>2}, "question"=>{"data"=>{"id"=>"14", "attributes"=>{"content"=>"Why do you want to work with us?"}, "type"=>"questions"}}, "type"=>"answers"}, "id"=>"67", "answer"=>{}}
  [1m[36mAnswer Load (0.3ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."id" = $1 LIMIT $2[0m  [["id", 67], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 14], ["LIMIT", 1]]
  [1m[35mSQL (0.3ms)[0m  [1m[33mUPDATE "answers" SET "vote_count" = $1, "vote_score" = $2, "updated_at" = $3 WHERE "answers"."id" = $4[0m  [["vote_count", 6], ["vote_score", 2], ["updated_at", 2016-06-20 21:55:04 UTC], ["id", 67]]
  [1m[35m (0.6ms)[0m  [1m[35mCOMMIT[0m
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (0.75ms)
Completed 200 OK in 7ms (Views: 1.2ms | ActiveRecord: 1.6ms)


Started PATCH "/api/v1/answers/67" for ::1 at 2016-06-20 17:55:05 -0400
Processing by Api::V1::AnswersController#update as JSON
  Parameters: {"data"=>{"id"=>"67", "attributes"=>{"content"=>"sadfdasf", "vote-count"=>7, "vote-score"=>3}, "question"=>{"data"=>{"id"=>"14", "attributes"=>{"content"=>"Why do you want to work with us?"}, "type"=>"questions"}}, "type"=>"answers"}, "id"=>"67", "answer"=>{}}
  [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."id" = $1 LIMIT $2[0m  [["id", 67], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 14], ["LIMIT", 1]]
  [1m[35mSQL (0.4ms)[0m  [1m[33mUPDATE "answers" SET "vote_count" = $1, "vote_score" = $2, "updated_at" = $3 WHERE "answers"."id" = $4[0m  [["vote_count", 7], ["vote_score", 3], ["updated_at", 2016-06-20 21:55:05 UTC], ["id", 67]]
  [1m[35m (2.1ms)[0m  [1m[35mCOMMIT[0m
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (0.96ms)
Completed 200 OK in 9ms (Views: 1.5ms | ActiveRecord: 3.0ms)


Started PATCH "/api/v1/answers/67" for ::1 at 2016-06-20 17:55:05 -0400
Processing by Api::V1::AnswersController#update as JSON
  Parameters: {"data"=>{"id"=>"67", "attributes"=>{"content"=>"sadfdasf", "vote-count"=>8, "vote-score"=>2}, "question"=>{"data"=>{"id"=>"14", "attributes"=>{"content"=>"Why do you want to work with us?"}, "type"=>"questions"}}, "type"=>"answers"}, "id"=>"67", "answer"=>{}}
  [1m[36mAnswer Load (0.3ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."id" = $1 LIMIT $2[0m  [["id", 67], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 14], ["LIMIT", 1]]
  [1m[35mSQL (0.3ms)[0m  [1m[33mUPDATE "answers" SET "vote_count" = $1, "vote_score" = $2, "updated_at" = $3 WHERE "answers"."id" = $4[0m  [["vote_count", 8], ["vote_score", 2], ["updated_at", 2016-06-20 21:55:05 UTC], ["id", 67]]
  [1m[35m (0.9ms)[0m  [1m[35mCOMMIT[0m
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (1.04ms)
Completed 200 OK in 8ms (Views: 1.5ms | ActiveRecord: 1.8ms)


Started PATCH "/api/v1/answers/67" for ::1 at 2016-06-20 17:55:06 -0400
Processing by Api::V1::AnswersController#update as JSON
  Parameters: {"data"=>{"id"=>"67", "attributes"=>{"content"=>"sadfdasf", "vote-count"=>9, "vote-score"=>3}, "question"=>{"data"=>{"id"=>"14", "attributes"=>{"content"=>"Why do you want to work with us?"}, "type"=>"questions"}}, "type"=>"answers"}, "id"=>"67", "answer"=>{}}
  [1m[36mAnswer Load (0.3ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."id" = $1 LIMIT $2[0m  [["id", 67], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 14], ["LIMIT", 1]]
  [1m[35mSQL (0.5ms)[0m  [1m[33mUPDATE "answers" SET "vote_count" = $1, "vote_score" = $2, "updated_at" = $3 WHERE "answers"."id" = $4[0m  [["vote_count", 9], ["vote_score", 3], ["updated_at", 2016-06-20 21:55:06 UTC], ["id", 67]]
  [1m[35m (2.3ms)[0m  [1m[35mCOMMIT[0m
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (0.78ms)
Completed 200 OK in 10ms (Views: 1.3ms | ActiveRecord: 3.3ms)


Started PATCH "/api/v1/answers/67" for ::1 at 2016-06-20 17:55:08 -0400
Processing by Api::V1::AnswersController#update as JSON
  Parameters: {"data"=>{"id"=>"67", "attributes"=>{"content"=>"sadfdasf", "vote-count"=>10, "vote-score"=>2}, "question"=>{"data"=>{"id"=>"14", "attributes"=>{"content"=>"Why do you want to work with us?"}, "type"=>"questions"}}, "type"=>"answers"}, "id"=>"67", "answer"=>{}}
  [1m[36mAnswer Load (0.3ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."id" = $1 LIMIT $2[0m  [["id", 67], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 14], ["LIMIT", 1]]
  [1m[35mSQL (0.4ms)[0m  [1m[33mUPDATE "answers" SET "vote_count" = $1, "vote_score" = $2, "updated_at" = $3 WHERE "answers"."id" = $4[0m  [["vote_count", 10], ["vote_score", 2], ["updated_at", 2016-06-20 21:55:08 UTC], ["id", 67]]
  [1m[35m (7.7ms)[0m  [1m[35mCOMMIT[0m
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (0.85ms)
Completed 200 OK in 15ms (Views: 1.3ms | ActiveRecord: 8.7ms)


Started PATCH "/api/v1/answers/67" for ::1 at 2016-06-20 17:55:08 -0400
Processing by Api::V1::AnswersController#update as JSON
  Parameters: {"data"=>{"id"=>"67", "attributes"=>{"content"=>"sadfdasf", "vote-count"=>11, "vote-score"=>3}, "question"=>{"data"=>{"id"=>"14", "attributes"=>{"content"=>"Why do you want to work with us?"}, "type"=>"questions"}}, "type"=>"answers"}, "id"=>"67", "answer"=>{}}
  [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."id" = $1 LIMIT $2[0m  [["id", 67], ["LIMIT", 1]]
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 14], ["LIMIT", 1]]
  [1m[35mSQL (0.3ms)[0m  [1m[33mUPDATE "answers" SET "vote_count" = $1, "vote_score" = $2, "updated_at" = $3 WHERE "answers"."id" = $4[0m  [["vote_count", 11], ["vote_score", 3], ["updated_at", 2016-06-20 21:55:08 UTC], ["id", 67]]
  [1m[35m (2.1ms)[0m  [1m[35mCOMMIT[0m
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (0.79ms)
Completed 200 OK in 9ms (Views: 1.3ms | ActiveRecord: 3.1ms)


Started PATCH "/api/v1/answers/67" for ::1 at 2016-06-20 17:55:09 -0400
Processing by Api::V1::AnswersController#update as JSON
  Parameters: {"data"=>{"id"=>"67", "attributes"=>{"content"=>"sadfdasf", "vote-count"=>12, "vote-score"=>2}, "question"=>{"data"=>{"id"=>"14", "attributes"=>{"content"=>"Why do you want to work with us?"}, "type"=>"questions"}}, "type"=>"answers"}, "id"=>"67", "answer"=>{}}
  [1m[36mAnswer Load (0.3ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."id" = $1 LIMIT $2[0m  [["id", 67], ["LIMIT", 1]]
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 14], ["LIMIT", 1]]
  [1m[35mSQL (0.3ms)[0m  [1m[33mUPDATE "answers" SET "vote_count" = $1, "vote_score" = $2, "updated_at" = $3 WHERE "answers"."id" = $4[0m  [["vote_count", 12], ["vote_score", 2], ["updated_at", 2016-06-20 21:55:09 UTC], ["id", 67]]
  [1m[35m (2.4ms)[0m  [1m[35mCOMMIT[0m
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (0.82ms)
Completed 200 OK in 10ms (Views: 1.3ms | ActiveRecord: 3.3ms)


Started PATCH "/api/v1/answers/67" for ::1 at 2016-06-20 17:55:10 -0400
Processing by Api::V1::AnswersController#update as JSON
  Parameters: {"data"=>{"id"=>"67", "attributes"=>{"content"=>"sadfdasf", "vote-count"=>13, "vote-score"=>3}, "question"=>{"data"=>{"id"=>"14", "attributes"=>{"content"=>"Why do you want to work with us?"}, "type"=>"questions"}}, "type"=>"answers"}, "id"=>"67", "answer"=>{}}
  [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."id" = $1 LIMIT $2[0m  [["id", 67], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 14], ["LIMIT", 1]]
  [1m[35mSQL (0.3ms)[0m  [1m[33mUPDATE "answers" SET "vote_count" = $1, "vote_score" = $2, "updated_at" = $3 WHERE "answers"."id" = $4[0m  [["vote_count", 13], ["vote_score", 3], ["updated_at", 2016-06-20 21:55:10 UTC], ["id", 67]]
  [1m[35m (2.3ms)[0m  [1m[35mCOMMIT[0m
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (0.83ms)
Completed 200 OK in 10ms (Views: 1.4ms | ActiveRecord: 3.2ms)


Started PATCH "/api/v1/answers/67" for ::1 at 2016-06-20 17:55:11 -0400
Processing by Api::V1::AnswersController#update as JSON
  Parameters: {"data"=>{"id"=>"67", "attributes"=>{"content"=>"sadfdasf", "vote-count"=>14, "vote-score"=>2}, "question"=>{"data"=>{"id"=>"14", "attributes"=>{"content"=>"Why do you want to work with us?"}, "type"=>"questions"}}, "type"=>"answers"}, "id"=>"67", "answer"=>{}}
  [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."id" = $1 LIMIT $2[0m  [["id", 67], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 14], ["LIMIT", 1]]
  [1m[35mSQL (0.4ms)[0m  [1m[33mUPDATE "answers" SET "vote_count" = $1, "vote_score" = $2, "updated_at" = $3 WHERE "answers"."id" = $4[0m  [["vote_count", 14], ["vote_score", 2], ["updated_at", 2016-06-20 21:55:11 UTC], ["id", 67]]
  [1m[35m (2.3ms)[0m  [1m[35mCOMMIT[0m
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (1.72ms)
Completed 200 OK in 11ms (Views: 2.3ms | ActiveRecord: 3.3ms)


Started PATCH "/api/v1/answers/67" for ::1 at 2016-06-20 17:55:12 -0400
Processing by Api::V1::AnswersController#update as JSON
  Parameters: {"data"=>{"id"=>"67", "attributes"=>{"content"=>"sadfdasf", "vote-count"=>15, "vote-score"=>3}, "question"=>{"data"=>{"id"=>"14", "attributes"=>{"content"=>"Why do you want to work with us?"}, "type"=>"questions"}}, "type"=>"answers"}, "id"=>"67", "answer"=>{}}
  [1m[36mAnswer Load (0.3ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."id" = $1 LIMIT $2[0m  [["id", 67], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 14], ["LIMIT", 1]]
  [1m[35mSQL (0.4ms)[0m  [1m[33mUPDATE "answers" SET "vote_count" = $1, "vote_score" = $2, "updated_at" = $3 WHERE "answers"."id" = $4[0m  [["vote_count", 15], ["vote_score", 3], ["updated_at", 2016-06-20 21:55:12 UTC], ["id", 67]]
  [1m[35m (2.1ms)[0m  [1m[35mCOMMIT[0m
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (0.75ms)
Completed 200 OK in 10ms (Views: 1.4ms | ActiveRecord: 3.1ms)


Started PATCH "/api/v1/answers/67" for ::1 at 2016-06-20 17:55:13 -0400
Processing by Api::V1::AnswersController#update as JSON
  Parameters: {"data"=>{"id"=>"67", "attributes"=>{"content"=>"sadfdasf", "vote-count"=>16, "vote-score"=>2}, "question"=>{"data"=>{"id"=>"14", "attributes"=>{"content"=>"Why do you want to work with us?"}, "type"=>"questions"}}, "type"=>"answers"}, "id"=>"67", "answer"=>{}}
  [1m[36mAnswer Load (0.3ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."id" = $1 LIMIT $2[0m  [["id", 67], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 14], ["LIMIT", 1]]
  [1m[35mSQL (0.5ms)[0m  [1m[33mUPDATE "answers" SET "vote_count" = $1, "vote_score" = $2, "updated_at" = $3 WHERE "answers"."id" = $4[0m  [["vote_count", 16], ["vote_score", 2], ["updated_at", 2016-06-20 21:55:13 UTC], ["id", 67]]
  [1m[35m (2.2ms)[0m  [1m[35mCOMMIT[0m
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (0.82ms)
Completed 200 OK in 10ms (Views: 1.3ms | ActiveRecord: 3.2ms)


Started PATCH "/api/v1/answers/67" for ::1 at 2016-06-20 17:55:14 -0400
Processing by Api::V1::AnswersController#update as JSON
  Parameters: {"data"=>{"id"=>"67", "attributes"=>{"content"=>"sadfdasf", "vote-count"=>17, "vote-score"=>3}, "question"=>{"data"=>{"id"=>"14", "attributes"=>{"content"=>"Why do you want to work with us?"}, "type"=>"questions"}}, "type"=>"answers"}, "id"=>"67", "answer"=>{}}
  [1m[36mAnswer Load (0.3ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."id" = $1 LIMIT $2[0m  [["id", 67], ["LIMIT", 1]]
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 14], ["LIMIT", 1]]
  [1m[35mSQL (0.5ms)[0m  [1m[33mUPDATE "answers" SET "vote_count" = $1, "vote_score" = $2, "updated_at" = $3 WHERE "answers"."id" = $4[0m  [["vote_count", 17], ["vote_score", 3], ["updated_at", 2016-06-20 21:55:14 UTC], ["id", 67]]
  [1m[35m (42.0ms)[0m  [1m[35mCOMMIT[0m
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (0.78ms)
Completed 200 OK in 50ms (Views: 1.3ms | ActiveRecord: 43.2ms)


Started PATCH "/api/v1/answers/67" for ::1 at 2016-06-20 17:55:15 -0400
Processing by Api::V1::AnswersController#update as JSON
  Parameters: {"data"=>{"id"=>"67", "attributes"=>{"content"=>"sadfdasf", "vote-count"=>18, "vote-score"=>2}, "question"=>{"data"=>{"id"=>"14", "attributes"=>{"content"=>"Why do you want to work with us?"}, "type"=>"questions"}}, "type"=>"answers"}, "id"=>"67", "answer"=>{}}
  [1m[36mAnswer Load (0.3ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."id" = $1 LIMIT $2[0m  [["id", 67], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 14], ["LIMIT", 1]]
  [1m[35mSQL (0.4ms)[0m  [1m[33mUPDATE "answers" SET "vote_count" = $1, "vote_score" = $2, "updated_at" = $3 WHERE "answers"."id" = $4[0m  [["vote_count", 18], ["vote_score", 2], ["updated_at", 2016-06-20 21:55:15 UTC], ["id", 67]]
  [1m[35m (2.3ms)[0m  [1m[35mCOMMIT[0m
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (0.83ms)
Completed 200 OK in 10ms (Views: 1.4ms | ActiveRecord: 3.2ms)


Started PATCH "/api/v1/answers/67" for ::1 at 2016-06-20 17:55:16 -0400
Processing by Api::V1::AnswersController#update as JSON
  Parameters: {"data"=>{"id"=>"67", "attributes"=>{"content"=>"sadfdasf", "vote-count"=>19, "vote-score"=>3}, "question"=>{"data"=>{"id"=>"14", "attributes"=>{"content"=>"Why do you want to work with us?"}, "type"=>"questions"}}, "type"=>"answers"}, "id"=>"67", "answer"=>{}}
  [1m[36mAnswer Load (0.3ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."id" = $1 LIMIT $2[0m  [["id", 67], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 14], ["LIMIT", 1]]
  [1m[35mSQL (0.4ms)[0m  [1m[33mUPDATE "answers" SET "vote_count" = $1, "vote_score" = $2, "updated_at" = $3 WHERE "answers"."id" = $4[0m  [["vote_count", 19], ["vote_score", 3], ["updated_at", 2016-06-20 21:55:16 UTC], ["id", 67]]
  [1m[35m (2.4ms)[0m  [1m[35mCOMMIT[0m
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (0.81ms)
Completed 200 OK in 11ms (Views: 1.4ms | ActiveRecord: 3.5ms)


Started PATCH "/api/v1/answers/67" for ::1 at 2016-06-20 17:55:16 -0400
Processing by Api::V1::AnswersController#update as JSON
  Parameters: {"data"=>{"id"=>"67", "attributes"=>{"content"=>"sadfdasf", "vote-count"=>20, "vote-score"=>2}, "question"=>{"data"=>{"id"=>"14", "attributes"=>{"content"=>"Why do you want to work with us?"}, "type"=>"questions"}}, "type"=>"answers"}, "id"=>"67", "answer"=>{}}
  [1m[36mAnswer Load (0.3ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."id" = $1 LIMIT $2[0m  [["id", 67], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 14], ["LIMIT", 1]]
  [1m[35mSQL (0.3ms)[0m  [1m[33mUPDATE "answers" SET "vote_count" = $1, "vote_score" = $2, "updated_at" = $3 WHERE "answers"."id" = $4[0m  [["vote_count", 20], ["vote_score", 2], ["updated_at", 2016-06-20 21:55:16 UTC], ["id", 67]]
  [1m[35m (0.9ms)[0m  [1m[35mCOMMIT[0m
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (0.74ms)
Completed 200 OK in 7ms (Views: 1.2ms | ActiveRecord: 1.8ms)


Started PATCH "/api/v1/answers/67" for ::1 at 2016-06-20 17:55:16 -0400
Processing by Api::V1::AnswersController#update as JSON
  Parameters: {"data"=>{"id"=>"67", "attributes"=>{"content"=>"sadfdasf", "vote-count"=>21, "vote-score"=>3}, "question"=>{"data"=>{"id"=>"14", "attributes"=>{"content"=>"Why do you want to work with us?"}, "type"=>"questions"}}, "type"=>"answers"}, "id"=>"67", "answer"=>{}}
  [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."id" = $1 LIMIT $2[0m  [["id", 67], ["LIMIT", 1]]
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 14], ["LIMIT", 1]]
  [1m[35mSQL (0.4ms)[0m  [1m[33mUPDATE "answers" SET "vote_count" = $1, "vote_score" = $2, "updated_at" = $3 WHERE "answers"."id" = $4[0m  [["vote_count", 21], ["vote_score", 3], ["updated_at", 2016-06-20 21:55:16 UTC], ["id", 67]]
  [1m[35m (0.6ms)[0m  [1m[35mCOMMIT[0m
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (1.05ms)
Completed 200 OK in 8ms (Views: 1.7ms | ActiveRecord: 1.5ms)


Started PATCH "/api/v1/answers/67" for ::1 at 2016-06-20 17:55:16 -0400
Processing by Api::V1::AnswersController#update as JSON
  Parameters: {"data"=>{"id"=>"67", "attributes"=>{"content"=>"sadfdasf", "vote-count"=>22, "vote-score"=>2}, "question"=>{"data"=>{"id"=>"14", "attributes"=>{"content"=>"Why do you want to work with us?"}, "type"=>"questions"}}, "type"=>"answers"}, "id"=>"67", "answer"=>{}}
  [1m[36mAnswer Load (0.3ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."id" = $1 LIMIT $2[0m  [["id", 67], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 14], ["LIMIT", 1]]
  [1m[35mSQL (0.3ms)[0m  [1m[33mUPDATE "answers" SET "vote_count" = $1, "vote_score" = $2, "updated_at" = $3 WHERE "answers"."id" = $4[0m  [["vote_count", 22], ["vote_score", 2], ["updated_at", 2016-06-20 21:55:16 UTC], ["id", 67]]
  [1m[35m (0.8ms)[0m  [1m[35mCOMMIT[0m
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (1.38ms)
Completed 200 OK in 9ms (Views: 1.9ms | ActiveRecord: 1.7ms)


Started PATCH "/api/v1/answers/67" for ::1 at 2016-06-20 17:55:17 -0400
Processing by Api::V1::AnswersController#update as JSON
  Parameters: {"data"=>{"id"=>"67", "attributes"=>{"content"=>"sadfdasf", "vote-count"=>23, "vote-score"=>3}, "question"=>{"data"=>{"id"=>"14", "attributes"=>{"content"=>"Why do you want to work with us?"}, "type"=>"questions"}}, "type"=>"answers"}, "id"=>"67", "answer"=>{}}
  [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."id" = $1 LIMIT $2[0m  [["id", 67], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 14], ["LIMIT", 1]]
  [1m[35mSQL (0.4ms)[0m  [1m[33mUPDATE "answers" SET "vote_count" = $1, "vote_score" = $2, "updated_at" = $3 WHERE "answers"."id" = $4[0m  [["vote_count", 23], ["vote_score", 3], ["updated_at", 2016-06-20 21:55:17 UTC], ["id", 67]]
  [1m[35m (1.0ms)[0m  [1m[35mCOMMIT[0m
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (0.84ms)
Completed 200 OK in 8ms (Views: 1.4ms | ActiveRecord: 1.9ms)


Started PATCH "/api/v1/answers/67" for ::1 at 2016-06-20 17:55:17 -0400
Processing by Api::V1::AnswersController#update as JSON
  Parameters: {"data"=>{"id"=>"67", "attributes"=>{"content"=>"sadfdasf", "vote-count"=>24, "vote-score"=>2}, "question"=>{"data"=>{"id"=>"14", "attributes"=>{"content"=>"Why do you want to work with us?"}, "type"=>"questions"}}, "type"=>"answers"}, "id"=>"67", "answer"=>{}}
  [1m[36mAnswer Load (0.3ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."id" = $1 LIMIT $2[0m  [["id", 67], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 14], ["LIMIT", 1]]
  [1m[35mSQL (0.3ms)[0m  [1m[33mUPDATE "answers" SET "vote_count" = $1, "vote_score" = $2, "updated_at" = $3 WHERE "answers"."id" = $4[0m  [["vote_count", 24], ["vote_score", 2], ["updated_at", 2016-06-20 21:55:17 UTC], ["id", 67]]
  [1m[35m (0.9ms)[0m  [1m[35mCOMMIT[0m
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (0.72ms)
Completed 200 OK in 11ms (Views: 1.1ms | ActiveRecord: 1.8ms)


Started PATCH "/api/v1/answers/67" for ::1 at 2016-06-20 17:55:17 -0400
Processing by Api::V1::AnswersController#update as JSON
  Parameters: {"data"=>{"id"=>"67", "attributes"=>{"content"=>"sadfdasf", "vote-count"=>25, "vote-score"=>3}, "question"=>{"data"=>{"id"=>"14", "attributes"=>{"content"=>"Why do you want to work with us?"}, "type"=>"questions"}}, "type"=>"answers"}, "id"=>"67", "answer"=>{}}
  [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."id" = $1 LIMIT $2[0m  [["id", 67], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 14], ["LIMIT", 1]]
  [1m[35mSQL (0.4ms)[0m  [1m[33mUPDATE "answers" SET "vote_count" = $1, "vote_score" = $2, "updated_at" = $3 WHERE "answers"."id" = $4[0m  [["vote_count", 25], ["vote_score", 3], ["updated_at", 2016-06-20 21:55:17 UTC], ["id", 67]]
  [1m[35m (0.8ms)[0m  [1m[35mCOMMIT[0m
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (0.83ms)
Completed 200 OK in 8ms (Views: 1.3ms | ActiveRecord: 1.7ms)


Started PATCH "/api/v1/answers/67" for ::1 at 2016-06-20 17:55:17 -0400
Processing by Api::V1::AnswersController#update as JSON
  Parameters: {"data"=>{"id"=>"67", "attributes"=>{"content"=>"sadfdasf", "vote-count"=>26, "vote-score"=>2}, "question"=>{"data"=>{"id"=>"14", "attributes"=>{"content"=>"Why do you want to work with us?"}, "type"=>"questions"}}, "type"=>"answers"}, "id"=>"67", "answer"=>{}}
  [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."id" = $1 LIMIT $2[0m  [["id", 67], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 14], ["LIMIT", 1]]
  [1m[35mSQL (0.4ms)[0m  [1m[33mUPDATE "answers" SET "vote_count" = $1, "vote_score" = $2, "updated_at" = $3 WHERE "answers"."id" = $4[0m  [["vote_count", 26], ["vote_score", 2], ["updated_at", 2016-06-20 21:55:17 UTC], ["id", 67]]
  [1m[35m (1.0ms)[0m  [1m[35mCOMMIT[0m
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (0.77ms)
Completed 200 OK in 8ms (Views: 1.2ms | ActiveRecord: 1.9ms)


Started PATCH "/api/v1/answers/67" for ::1 at 2016-06-20 17:55:17 -0400
Processing by Api::V1::AnswersController#update as JSON
  Parameters: {"data"=>{"id"=>"67", "attributes"=>{"content"=>"sadfdasf", "vote-count"=>27, "vote-score"=>3}, "question"=>{"data"=>{"id"=>"14", "attributes"=>{"content"=>"Why do you want to work with us?"}, "type"=>"questions"}}, "type"=>"answers"}, "id"=>"67", "answer"=>{}}
  [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."id" = $1 LIMIT $2[0m  [["id", 67], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 14], ["LIMIT", 1]]
  [1m[35mSQL (0.3ms)[0m  [1m[33mUPDATE "answers" SET "vote_count" = $1, "vote_score" = $2, "updated_at" = $3 WHERE "answers"."id" = $4[0m  [["vote_count", 27], ["vote_score", 3], ["updated_at", 2016-06-20 21:55:17 UTC], ["id", 67]]
  [1m[35m (0.9ms)[0m  [1m[35mCOMMIT[0m
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (0.91ms)
Completed 200 OK in 7ms (Views: 1.3ms | ActiveRecord: 1.8ms)


Started PATCH "/api/v1/answers/67" for ::1 at 2016-06-20 17:55:18 -0400
Processing by Api::V1::AnswersController#update as JSON
  Parameters: {"data"=>{"id"=>"67", "attributes"=>{"content"=>"sadfdasf", "vote-count"=>28, "vote-score"=>2}, "question"=>{"data"=>{"id"=>"14", "attributes"=>{"content"=>"Why do you want to work with us?"}, "type"=>"questions"}}, "type"=>"answers"}, "id"=>"67", "answer"=>{}}
  [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."id" = $1 LIMIT $2[0m  [["id", 67], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 14], ["LIMIT", 1]]
  [1m[35mSQL (0.3ms)[0m  [1m[33mUPDATE "answers" SET "vote_count" = $1, "vote_score" = $2, "updated_at" = $3 WHERE "answers"."id" = $4[0m  [["vote_count", 28], ["vote_score", 2], ["updated_at", 2016-06-20 21:55:18 UTC], ["id", 67]]
  [1m[35m (0.8ms)[0m  [1m[35mCOMMIT[0m
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (0.81ms)
Completed 200 OK in 7ms (Views: 1.2ms | ActiveRecord: 1.7ms)


Started PATCH "/api/v1/answers/67" for ::1 at 2016-06-20 17:55:18 -0400
Processing by Api::V1::AnswersController#update as JSON
  Parameters: {"data"=>{"id"=>"67", "attributes"=>{"content"=>"sadfdasf", "vote-count"=>29, "vote-score"=>3}, "question"=>{"data"=>{"id"=>"14", "attributes"=>{"content"=>"Why do you want to work with us?"}, "type"=>"questions"}}, "type"=>"answers"}, "id"=>"67", "answer"=>{}}
  [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."id" = $1 LIMIT $2[0m  [["id", 67], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 14], ["LIMIT", 1]]
  [1m[35mSQL (0.3ms)[0m  [1m[33mUPDATE "answers" SET "vote_count" = $1, "vote_score" = $2, "updated_at" = $3 WHERE "answers"."id" = $4[0m  [["vote_count", 29], ["vote_score", 3], ["updated_at", 2016-06-20 21:55:18 UTC], ["id", 67]]
  [1m[35m (0.7ms)[0m  [1m[35mCOMMIT[0m
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (0.85ms)
Completed 200 OK in 7ms (Views: 1.4ms | ActiveRecord: 1.6ms)


Started PATCH "/api/v1/answers/67" for ::1 at 2016-06-20 17:55:18 -0400
Processing by Api::V1::AnswersController#update as JSON
  Parameters: {"data"=>{"id"=>"67", "attributes"=>{"content"=>"sadfdasf", "vote-count"=>30, "vote-score"=>2}, "question"=>{"data"=>{"id"=>"14", "attributes"=>{"content"=>"Why do you want to work with us?"}, "type"=>"questions"}}, "type"=>"answers"}, "id"=>"67", "answer"=>{}}
  [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."id" = $1 LIMIT $2[0m  [["id", 67], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[36mQuestion Load (0.1ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 14], ["LIMIT", 1]]
  [1m[35mSQL (0.3ms)[0m  [1m[33mUPDATE "answers" SET "vote_count" = $1, "vote_score" = $2, "updated_at" = $3 WHERE "answers"."id" = $4[0m  [["vote_count", 30], ["vote_score", 2], ["updated_at", 2016-06-20 21:55:18 UTC], ["id", 67]]
  [1m[35m (0.9ms)[0m  [1m[35mCOMMIT[0m
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (0.81ms)
Completed 200 OK in 7ms (Views: 1.2ms | ActiveRecord: 1.6ms)


Started PATCH "/api/v1/answers/67" for ::1 at 2016-06-20 17:55:18 -0400
Processing by Api::V1::AnswersController#update as JSON
  Parameters: {"data"=>{"id"=>"67", "attributes"=>{"content"=>"sadfdasf", "vote-count"=>31, "vote-score"=>3}, "question"=>{"data"=>{"id"=>"14", "attributes"=>{"content"=>"Why do you want to work with us?"}, "type"=>"questions"}}, "type"=>"answers"}, "id"=>"67", "answer"=>{}}
  [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."id" = $1 LIMIT $2[0m  [["id", 67], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 14], ["LIMIT", 1]]
  [1m[35mSQL (0.4ms)[0m  [1m[33mUPDATE "answers" SET "vote_count" = $1, "vote_score" = $2, "updated_at" = $3 WHERE "answers"."id" = $4[0m  [["vote_count", 31], ["vote_score", 3], ["updated_at", 2016-06-20 21:55:18 UTC], ["id", 67]]
  [1m[35m (0.8ms)[0m  [1m[35mCOMMIT[0m
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (0.81ms)
Completed 200 OK in 8ms (Views: 1.4ms | ActiveRecord: 1.7ms)


Started PATCH "/api/v1/answers/67" for ::1 at 2016-06-20 17:55:19 -0400
Processing by Api::V1::AnswersController#update as JSON
  Parameters: {"data"=>{"id"=>"67", "attributes"=>{"content"=>"sadfdasf", "vote-count"=>32, "vote-score"=>2}, "question"=>{"data"=>{"id"=>"14", "attributes"=>{"content"=>"Why do you want to work with us?"}, "type"=>"questions"}}, "type"=>"answers"}, "id"=>"67", "answer"=>{}}
  [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."id" = $1 LIMIT $2[0m  [["id", 67], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 14], ["LIMIT", 1]]
  [1m[35mSQL (0.3ms)[0m  [1m[33mUPDATE "answers" SET "vote_count" = $1, "vote_score" = $2, "updated_at" = $3 WHERE "answers"."id" = $4[0m  [["vote_count", 32], ["vote_score", 2], ["updated_at", 2016-06-20 21:55:19 UTC], ["id", 67]]
  [1m[35m (0.8ms)[0m  [1m[35mCOMMIT[0m
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (0.74ms)
Completed 200 OK in 7ms (Views: 1.1ms | ActiveRecord: 1.7ms)


Started PATCH "/api/v1/answers/67" for ::1 at 2016-06-20 17:55:19 -0400
Processing by Api::V1::AnswersController#update as JSON
  Parameters: {"data"=>{"id"=>"67", "attributes"=>{"content"=>"sadfdasf", "vote-count"=>33, "vote-score"=>3}, "question"=>{"data"=>{"id"=>"14", "attributes"=>{"content"=>"Why do you want to work with us?"}, "type"=>"questions"}}, "type"=>"answers"}, "id"=>"67", "answer"=>{}}
  [1m[36mAnswer Load (0.3ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."id" = $1 LIMIT $2[0m  [["id", 67], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 14], ["LIMIT", 1]]
  [1m[35mSQL (0.4ms)[0m  [1m[33mUPDATE "answers" SET "vote_count" = $1, "vote_score" = $2, "updated_at" = $3 WHERE "answers"."id" = $4[0m  [["vote_count", 33], ["vote_score", 3], ["updated_at", 2016-06-20 21:55:19 UTC], ["id", 67]]
  [1m[35m (0.7ms)[0m  [1m[35mCOMMIT[0m
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (0.75ms)
Completed 200 OK in 8ms (Views: 1.2ms | ActiveRecord: 1.7ms)


Started GET "/api/v1/questions/14" for ::1 at 2016-06-20 18:01:02 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"14"}
  [1m[36mQuestion Load (1.5ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 14], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.8ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 14]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (37.46ms)
Completed 200 OK in 70ms (Views: 41.0ms | ActiveRecord: 2.3ms)


Started GET "/api/v1/questions/14" for ::1 at 2016-06-20 18:01:05 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"14"}
  [1m[36mQuestion Load (1.8ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 14], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.7ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 14]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (25.82ms)
Completed 200 OK in 34ms (Views: 25.9ms | ActiveRecord: 2.4ms)


Started GET "/api/v1/questions/14" for ::1 at 2016-06-20 18:01:09 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"14"}
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 14], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.4ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 14]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (14.01ms)
Completed 200 OK in 17ms (Views: 14.8ms | ActiveRecord: 0.7ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-20 18:01:11 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"asdfadsfdsaf", "vote-count"=>0, "vote-score"=>0}, "question"=>{"data"=>{"id"=>"14", "attributes"=>{"content"=>"Why do you want to work with us?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 14], ["LIMIT", 1]]
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.6ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "asdfadsfdsaf"], ["question_id", 14], ["created_at", 2016-06-20 22:01:11 UTC], ["updated_at", 2016-06-20 22:01:11 UTC]]
  [1m[35m (1.0ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mAnswer Load (0.5ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."question_id" = $1 ORDER BY "answers"."id" DESC LIMIT $2[0m  [["question_id", 14], ["LIMIT", 1]]
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (0.97ms)
Completed 200 OK in 87ms (Views: 1.6ms | ActiveRecord: 2.6ms)


Started PATCH "/api/v1/answers/41" for ::1 at 2016-06-20 18:01:13 -0400
Processing by Api::V1::AnswersController#update as JSON
  Parameters: {"data"=>{"id"=>"41", "attributes"=>{"content"=>"sadfdsf", "vote-count"=>4, "vote-score"=>0}, "question"=>{"data"=>{"id"=>"14", "attributes"=>{"content"=>"Why do you want to work with us?"}, "type"=>"questions"}}, "type"=>"answers"}, "id"=>"41", "answer"=>{}}
  [1m[36mAnswer Load (0.3ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."id" = $1 LIMIT $2[0m  [["id", 41], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 14], ["LIMIT", 1]]
  [1m[35mSQL (0.4ms)[0m  [1m[33mUPDATE "answers" SET "vote_count" = $1, "vote_score" = $2, "updated_at" = $3 WHERE "answers"."id" = $4[0m  [["vote_count", 4], ["vote_score", 0], ["updated_at", 2016-06-20 22:01:13 UTC], ["id", 41]]
  [1m[35m (2.3ms)[0m  [1m[35mCOMMIT[0m
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (1.13ms)
Completed 200 OK in 12ms (Views: 1.6ms | ActiveRecord: 3.3ms)


Started PATCH "/api/v1/answers/67" for ::1 at 2016-06-20 18:01:15 -0400
Processing by Api::V1::AnswersController#update as JSON
  Parameters: {"data"=>{"id"=>"67", "attributes"=>{"content"=>"sadfdasf", "vote-count"=>34, "vote-score"=>4}, "question"=>{"data"=>{"id"=>"14", "attributes"=>{"content"=>"Why do you want to work with us?"}, "type"=>"questions"}}, "type"=>"answers"}, "id"=>"67", "answer"=>{}}
  [1m[36mAnswer Load (0.4ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."id" = $1 LIMIT $2[0m  [["id", 67], ["LIMIT", 1]]
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 14], ["LIMIT", 1]]
  [1m[35mSQL (0.4ms)[0m  [1m[33mUPDATE "answers" SET "vote_count" = $1, "vote_score" = $2, "updated_at" = $3 WHERE "answers"."id" = $4[0m  [["vote_count", 34], ["vote_score", 4], ["updated_at", 2016-06-20 22:01:15 UTC], ["id", 67]]
  [1m[35m (0.9ms)[0m  [1m[35mCOMMIT[0m
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (1.01ms)
Completed 200 OK in 11ms (Views: 1.5ms | ActiveRecord: 2.1ms)


Started PATCH "/api/v1/answers/102" for ::1 at 2016-06-20 18:01:16 -0400
Processing by Api::V1::AnswersController#update as JSON
  Parameters: {"data"=>{"id"=>"102", "attributes"=>{"content"=>"asddasdfas", "vote-count"=>2, "vote-score"=>0}, "question"=>{"data"=>{"id"=>"14", "attributes"=>{"content"=>"Why do you want to work with us?"}, "type"=>"questions"}}, "type"=>"answers"}, "id"=>"102", "answer"=>{}}
  [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."id" = $1 LIMIT $2[0m  [["id", 102], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 14], ["LIMIT", 1]]
  [1m[35mSQL (0.4ms)[0m  [1m[33mUPDATE "answers" SET "vote_count" = $1, "vote_score" = $2, "updated_at" = $3 WHERE "answers"."id" = $4[0m  [["vote_count", 2], ["vote_score", 0], ["updated_at", 2016-06-20 22:01:16 UTC], ["id", 102]]
  [1m[35m (0.8ms)[0m  [1m[35mCOMMIT[0m
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (0.88ms)
Completed 200 OK in 9ms (Views: 1.3ms | ActiveRecord: 1.7ms)


Started PATCH "/api/v1/answers/187" for ::1 at 2016-06-20 18:01:19 -0400
Processing by Api::V1::AnswersController#update as JSON
  Parameters: {"data"=>{"id"=>"187", "attributes"=>{"content"=>"ssdsds", "vote-count"=>1, "vote-score"=>1}, "question"=>{"data"=>{"id"=>"14", "attributes"=>{"content"=>"Why do you want to work with us?"}, "type"=>"questions"}}, "type"=>"answers"}, "id"=>"187", "answer"=>{}}
  [1m[36mAnswer Load (0.4ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."id" = $1 LIMIT $2[0m  [["id", 187], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 14], ["LIMIT", 1]]
  [1m[35mSQL (0.5ms)[0m  [1m[33mUPDATE "answers" SET "vote_count" = $1, "vote_score" = $2, "updated_at" = $3 WHERE "answers"."id" = $4[0m  [["vote_count", 1], ["vote_score", 1], ["updated_at", 2016-06-20 22:01:19 UTC], ["id", 187]]
  [1m[35m (2.3ms)[0m  [1m[35mCOMMIT[0m
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (0.92ms)
Completed 200 OK in 12ms (Views: 1.7ms | ActiveRecord: 3.4ms)


Started PATCH "/api/v1/answers/191" for ::1 at 2016-06-20 18:01:21 -0400
Processing by Api::V1::AnswersController#update as JSON
  Parameters: {"data"=>{"id"=>"191", "attributes"=>{"content"=>"safdaf", "vote-count"=>1, "vote-score"=>-1}, "question"=>{"data"=>{"id"=>"14", "attributes"=>{"content"=>"Why do you want to work with us?"}, "type"=>"questions"}}, "type"=>"answers"}, "id"=>"191", "answer"=>{}}
  [1m[36mAnswer Load (0.3ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."id" = $1 LIMIT $2[0m  [["id", 191], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 14], ["LIMIT", 1]]
  [1m[35mSQL (0.3ms)[0m  [1m[33mUPDATE "answers" SET "vote_count" = $1, "vote_score" = $2, "updated_at" = $3 WHERE "answers"."id" = $4[0m  [["vote_count", 1], ["vote_score", -1], ["updated_at", 2016-06-20 22:01:21 UTC], ["id", 191]]
  [1m[35m (48.7ms)[0m  [1m[35mCOMMIT[0m
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (1.27ms)
Completed 200 OK in 57ms (Views: 1.9ms | ActiveRecord: 49.7ms)


Started PATCH "/api/v1/answers/195" for ::1 at 2016-06-20 18:01:22 -0400
Processing by Api::V1::AnswersController#update as JSON
  Parameters: {"data"=>{"id"=>"195", "attributes"=>{"content"=>"fdssdg", "vote-count"=>1, "vote-score"=>1}, "question"=>{"data"=>{"id"=>"14", "attributes"=>{"content"=>"Why do you want to work with us?"}, "type"=>"questions"}}, "type"=>"answers"}, "id"=>"195", "answer"=>{}}
  [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."id" = $1 LIMIT $2[0m  [["id", 195], ["LIMIT", 1]]
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 14], ["LIMIT", 1]]
  [1m[35mSQL (0.3ms)[0m  [1m[33mUPDATE "answers" SET "vote_count" = $1, "vote_score" = $2, "updated_at" = $3 WHERE "answers"."id" = $4[0m  [["vote_count", 1], ["vote_score", 1], ["updated_at", 2016-06-20 22:01:22 UTC], ["id", 195]]
  [1m[35m (0.6ms)[0m  [1m[35mCOMMIT[0m
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (0.91ms)
Completed 200 OK in 8ms (Views: 1.5ms | ActiveRecord: 1.5ms)


Started PATCH "/api/v1/answers/222" for ::1 at 2016-06-20 18:01:24 -0400
Processing by Api::V1::AnswersController#update as JSON
  Parameters: {"data"=>{"id"=>"222", "attributes"=>{"content"=>"afasf", "vote-count"=>1, "vote-score"=>1}, "question"=>{"data"=>{"id"=>"14", "attributes"=>{"content"=>"Why do you want to work with us?"}, "type"=>"questions"}}, "type"=>"answers"}, "id"=>"222", "answer"=>{}}
  [1m[36mAnswer Load (0.4ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."id" = $1 LIMIT $2[0m  [["id", 222], ["LIMIT", 1]]
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 14], ["LIMIT", 1]]
  [1m[35mSQL (0.4ms)[0m  [1m[33mUPDATE "answers" SET "vote_count" = $1, "vote_score" = $2, "updated_at" = $3 WHERE "answers"."id" = $4[0m  [["vote_count", 1], ["vote_score", 1], ["updated_at", 2016-06-20 22:01:24 UTC], ["id", 222]]
  [1m[35m (51.6ms)[0m  [1m[35mCOMMIT[0m
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (2.15ms)
Completed 200 OK in 62ms (Views: 2.9ms | ActiveRecord: 52.8ms)


Started PATCH "/api/v1/answers/223" for ::1 at 2016-06-20 18:01:25 -0400
Processing by Api::V1::AnswersController#update as JSON
  Parameters: {"data"=>{"id"=>"223", "attributes"=>{"content"=>"asfasf", "vote-count"=>1, "vote-score"=>-1}, "question"=>{"data"=>{"id"=>"14", "attributes"=>{"content"=>"Why do you want to work with us?"}, "type"=>"questions"}}, "type"=>"answers"}, "id"=>"223", "answer"=>{}}
  [1m[36mAnswer Load (0.3ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."id" = $1 LIMIT $2[0m  [["id", 223], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 14], ["LIMIT", 1]]
  [1m[35mSQL (0.4ms)[0m  [1m[33mUPDATE "answers" SET "vote_count" = $1, "vote_score" = $2, "updated_at" = $3 WHERE "answers"."id" = $4[0m  [["vote_count", 1], ["vote_score", -1], ["updated_at", 2016-06-20 22:01:25 UTC], ["id", 223]]
  [1m[35m (192.9ms)[0m  [1m[35mCOMMIT[0m
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (1.07ms)
Completed 200 OK in 201ms (Views: 1.7ms | ActiveRecord: 194.0ms)


Started GET "/api/v1/questions/14" for ::1 at 2016-06-20 18:02:03 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"14"}
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 14], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.3ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 14]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (14.76ms)
Completed 200 OK in 17ms (Views: 15.2ms | ActiveRecord: 0.6ms)


Started GET "/api/v1/random" for ::1 at 2016-06-20 18:02:56 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
[active_model_serializers] Rendered ActiveModel::Serializer::Null with Hash (0.1ms)
Completed 200 OK in 1ms (Views: 0.5ms | ActiveRecord: 0.0ms)


Started GET "/api/v1/questions/20" for ::1 at 2016-06-20 18:02:56 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"20"}
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 20], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.3ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 20]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (11.33ms)
Completed 200 OK in 13ms (Views: 11.7ms | ActiveRecord: 0.5ms)


Started GET "/api/v1/questions/20" for ::1 at 2016-06-20 18:04:16 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"20"}
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 20], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.4ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 20]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (12.74ms)
Completed 200 OK in 245ms (Views: 242.7ms | ActiveRecord: 0.7ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-20 18:04:20 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"asfasf", "vote-count"=>0, "vote-score"=>0}, "question"=>{"data"=>{"id"=>"20", "attributes"=>{"content"=>"Please walk me through one of the projects on your resume."}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 20], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "asfasf"], ["question_id", 20], ["created_at", 2016-06-20 22:04:20 UTC], ["updated_at", 2016-06-20 22:04:20 UTC]]
  [1m[35m (93.6ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mAnswer Load (0.5ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."question_id" = $1 ORDER BY "answers"."id" DESC LIMIT $2[0m  [["question_id", 20], ["LIMIT", 1]]
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (1.55ms)
Completed 200 OK in 104ms (Views: 2.4ms | ActiveRecord: 95.0ms)


Started GET "/api/v1/questions/20" for ::1 at 2016-06-20 18:04:41 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"20"}
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 20], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.3ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 20]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (13.66ms)
Completed 200 OK in 16ms (Views: 14.1ms | ActiveRecord: 0.7ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-20 18:04:45 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>nil, "vote-count"=>0, "vote-score"=>0}, "question"=>{"data"=>{"id"=>"20", "attributes"=>{"content"=>"Please walk me through one of the projects on your resume."}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 20], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "answers" ("question_id", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["question_id", 20], ["created_at", 2016-06-20 22:04:45 UTC], ["updated_at", 2016-06-20 22:04:45 UTC]]
  [1m[35m (2.2ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mAnswer Load (0.5ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."question_id" = $1 ORDER BY "answers"."id" DESC LIMIT $2[0m  [["question_id", 20], ["LIMIT", 1]]
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (0.8ms)
Completed 200 OK in 12ms (Views: 1.5ms | ActiveRecord: 3.4ms)


Started GET "/api/v1/questions/20" for ::1 at 2016-06-20 18:05:32 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"20"}
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 20], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.3ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 20]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (13.48ms)
Completed 200 OK in 15ms (Views: 14.0ms | ActiveRecord: 0.5ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-20 18:06:08 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>nil, "vote-count"=>0, "vote-score"=>0}, "question"=>{"data"=>{"id"=>"20", "attributes"=>{"content"=>"Please walk me through one of the projects on your resume."}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 20], ["LIMIT", 1]]
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.5ms)[0m  [1m[32mINSERT INTO "answers" ("question_id", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["question_id", 20], ["created_at", 2016-06-20 22:06:08 UTC], ["updated_at", 2016-06-20 22:06:08 UTC]]
  [1m[35m (0.7ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mAnswer Load (0.3ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."question_id" = $1 ORDER BY "answers"."id" DESC LIMIT $2[0m  [["question_id", 20], ["LIMIT", 1]]
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (0.84ms)
Completed 200 OK in 9ms (Views: 1.3ms | ActiveRecord: 1.9ms)


Started GET "/api/v1/questions/20" for ::1 at 2016-06-20 18:07:51 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"20"}
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 20], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.3ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 20]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (17.84ms)
Completed 200 OK in 20ms (Views: 18.4ms | ActiveRecord: 0.6ms)


Started GET "/api/v1/questions/20" for ::1 at 2016-06-20 18:08:33 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"20"}
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 20], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.3ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 20]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (15.74ms)
Completed 200 OK in 18ms (Views: 16.2ms | ActiveRecord: 0.5ms)


Started GET "/api/v1/questions/20" for ::1 at 2016-06-20 18:09:17 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"20"}
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 20], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.5ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 20]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (41.69ms)
Completed 200 OK in 45ms (Views: 42.0ms | ActiveRecord: 0.9ms)


Started GET "/api/v1/questions/20" for ::1 at 2016-06-20 18:10:27 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"20"}
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 20], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 20]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (13.47ms)
Completed 200 OK in 15ms (Views: 13.8ms | ActiveRecord: 0.4ms)


Started GET "/api/v1/questions/20" for ::1 at 2016-06-20 18:11:18 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"20"}
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 20], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.3ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 20]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (13.27ms)
Completed 200 OK in 15ms (Views: 13.6ms | ActiveRecord: 0.5ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-20 18:11:20 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"asffasfsa", "vote-count"=>0, "vote-score"=>0}, "question"=>{"data"=>{"id"=>"20", "attributes"=>{"content"=>"Please walk me through one of the projects on your resume."}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 20], ["LIMIT", 1]]
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "asffasfsa"], ["question_id", 20], ["created_at", 2016-06-20 22:11:20 UTC], ["updated_at", 2016-06-20 22:11:20 UTC]]
  [1m[35m (123.2ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mAnswer Load (0.4ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."question_id" = $1 ORDER BY "answers"."id" DESC LIMIT $2[0m  [["question_id", 20], ["LIMIT", 1]]
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (0.86ms)
Completed 200 OK in 133ms (Views: 1.4ms | ActiveRecord: 124.4ms)


Started GET "/api/v1/questions/20" for ::1 at 2016-06-20 18:11:49 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"20"}
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 20], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.4ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 20]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (13.5ms)
Completed 200 OK in 15ms (Views: 13.7ms | ActiveRecord: 0.6ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-20 18:11:50 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"afasdf", "vote-count"=>0, "vote-score"=>0}, "question"=>{"data"=>{"id"=>"20", "attributes"=>{"content"=>"Please walk me through one of the projects on your resume."}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 20], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "afasdf"], ["question_id", 20], ["created_at", 2016-06-20 22:11:50 UTC], ["updated_at", 2016-06-20 22:11:50 UTC]]
  [1m[35m (0.9ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mAnswer Load (0.3ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."question_id" = $1 ORDER BY "answers"."id" DESC LIMIT $2[0m  [["question_id", 20], ["LIMIT", 1]]
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (0.73ms)
Completed 200 OK in 9ms (Views: 1.2ms | ActiveRecord: 1.9ms)


Started GET "/api/v1/questions/20" for ::1 at 2016-06-20 18:12:32 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"20"}
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 20], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.3ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 20]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (14.71ms)
Completed 200 OK in 17ms (Views: 15.2ms | ActiveRecord: 0.6ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-20 18:12:34 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"asfas", "vote-count"=>0, "vote-score"=>0}, "question"=>{"data"=>{"id"=>"20", "attributes"=>{"content"=>"Please walk me through one of the projects on your resume."}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 20], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "asfas"], ["question_id", 20], ["created_at", 2016-06-20 22:12:34 UTC], ["updated_at", 2016-06-20 22:12:34 UTC]]
  [1m[35m (89.9ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mAnswer Load (0.6ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."question_id" = $1 ORDER BY "answers"."id" DESC LIMIT $2[0m  [["question_id", 20], ["LIMIT", 1]]
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (0.77ms)
Completed 200 OK in 99ms (Views: 1.3ms | ActiveRecord: 91.2ms)


Started GET "/api/v1/questions/2" for ::1 at 2016-06-20 18:12:48 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"2"}
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.3ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 2]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (5.73ms)
Completed 200 OK in 7ms (Views: 6.0ms | ActiveRecord: 0.5ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-20 18:12:50 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"dfadsg", "vote-count"=>0, "vote-score"=>0}, "question"=>{"data"=>{"id"=>"2", "attributes"=>{"content"=>"How many ways can you center a div?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "dfadsg"], ["question_id", 2], ["created_at", 2016-06-20 22:12:50 UTC], ["updated_at", 2016-06-20 22:12:50 UTC]]
  [1m[35m (2.2ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mAnswer Load (0.4ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."question_id" = $1 ORDER BY "answers"."id" DESC LIMIT $2[0m  [["question_id", 2], ["LIMIT", 1]]
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (0.79ms)
Completed 200 OK in 10ms (Views: 1.2ms | ActiveRecord: 3.2ms)


Started GET "/api/v1/questions/2" for ::1 at 2016-06-20 18:13:30 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"2"}
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.5ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 2]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (11.31ms)
Completed 200 OK in 13ms (Views: 11.5ms | ActiveRecord: 0.7ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-20 18:13:32 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"sdagadsg", "vote-count"=>0, "vote-score"=>0}, "question"=>{"data"=>{"id"=>"2", "attributes"=>{"content"=>"How many ways can you center a div?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "sdagadsg"], ["question_id", 2], ["created_at", 2016-06-20 22:13:32 UTC], ["updated_at", 2016-06-20 22:13:32 UTC]]
  [1m[35m (108.5ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mAnswer Load (0.6ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."question_id" = $1 ORDER BY "answers"."id" DESC LIMIT $2[0m  [["question_id", 2], ["LIMIT", 1]]
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (1.11ms)
Completed 200 OK in 118ms (Views: 1.8ms | ActiveRecord: 109.7ms)


Started GET "/api/v1/questions/2" for ::1 at 2016-06-20 18:13:58 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"2"}
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.3ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 2]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (8.5ms)
Completed 200 OK in 11ms (Views: 8.8ms | ActiveRecord: 0.6ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-20 18:14:00 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"adsgadsg", "vote-count"=>0, "vote-score"=>0}, "question"=>{"data"=>{"id"=>"2", "attributes"=>{"content"=>"How many ways can you center a div?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "adsgadsg"], ["question_id", 2], ["created_at", 2016-06-20 22:14:00 UTC], ["updated_at", 2016-06-20 22:14:00 UTC]]
  [1m[35m (1.6ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mAnswer Load (0.4ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."question_id" = $1 ORDER BY "answers"."id" DESC LIMIT $2[0m  [["question_id", 2], ["LIMIT", 1]]
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (0.85ms)
Completed 200 OK in 10ms (Views: 1.3ms | ActiveRecord: 2.8ms)


Started GET "/api/v1/questions/2" for ::1 at 2016-06-20 18:15:21 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"2"}
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (1.0ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 2]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (9.65ms)
Completed 200 OK in 12ms (Views: 9.3ms | ActiveRecord: 1.3ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-20 18:15:23 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"afdaf", "vote-count"=>0, "vote-score"=>0}, "question"=>{"data"=>{"id"=>"2", "attributes"=>{"content"=>"How many ways can you center a div?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "afdaf"], ["question_id", 2], ["created_at", 2016-06-20 22:15:23 UTC], ["updated_at", 2016-06-20 22:15:23 UTC]]
  [1m[35m (1.0ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mAnswer Load (0.3ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."question_id" = $1 ORDER BY "answers"."id" DESC LIMIT $2[0m  [["question_id", 2], ["LIMIT", 1]]
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (0.95ms)
Completed 200 OK in 9ms (Views: 1.4ms | ActiveRecord: 2.0ms)


Started GET "/api/v1/questions/2" for ::1 at 2016-06-20 18:18:01 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"2"}
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.3ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 2]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (13.2ms)
Completed 200 OK in 15ms (Views: 13.6ms | ActiveRecord: 0.6ms)


Started GET "/api/v1/questions/2" for ::1 at 2016-06-20 18:18:02 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"2"}
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.3ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 2]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (11.8ms)
Completed 200 OK in 14ms (Views: 12.2ms | ActiveRecord: 0.5ms)


Started GET "/api/v1/questions/2" for ::1 at 2016-06-20 18:19:10 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"2"}
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 2]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (10.38ms)
Completed 200 OK in 12ms (Views: 10.6ms | ActiveRecord: 0.5ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-20 18:19:12 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"asdasdas", "vote-count"=>0, "vote-score"=>0}, "question"=>{"data"=>{"id"=>"2", "attributes"=>{"content"=>"How many ways can you center a div?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "asdasdas"], ["question_id", 2], ["created_at", 2016-06-20 22:19:12 UTC], ["updated_at", 2016-06-20 22:19:12 UTC]]
  [1m[35m (319.7ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mAnswer Load (0.6ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."question_id" = $1 ORDER BY "answers"."id" DESC LIMIT $2[0m  [["question_id", 2], ["LIMIT", 1]]
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (0.82ms)
Completed 200 OK in 342ms (Views: 1.3ms | ActiveRecord: 320.9ms)


Started GET "/api/v1/questions/2" for ::1 at 2016-06-20 18:19:58 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"2"}
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.3ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 2]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (9.45ms)
Completed 200 OK in 11ms (Views: 9.7ms | ActiveRecord: 0.5ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-20 18:20:09 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"fuck Einar and lamine never hire them!", "vote-count"=>0, "vote-score"=>0}, "question"=>{"data"=>{"id"=>"2", "attributes"=>{"content"=>"How many ways can you center a div?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "fuck Einar and lamine never hire them!"], ["question_id", 2], ["created_at", 2016-06-20 22:20:09 UTC], ["updated_at", 2016-06-20 22:20:09 UTC]]
  [1m[35m (15.4ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mAnswer Load (0.5ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."question_id" = $1 ORDER BY "answers"."id" DESC LIMIT $2[0m  [["question_id", 2], ["LIMIT", 1]]
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (0.89ms)
Completed 200 OK in 24ms (Views: 1.5ms | ActiveRecord: 16.5ms)


Started GET "/api/v1/random" for ::1 at 2016-06-20 18:21:49 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
[active_model_serializers] Rendered ActiveModel::Serializer::Null with Hash (0.13ms)
Completed 200 OK in 1ms (Views: 0.6ms | ActiveRecord: 0.0ms)


Started GET "/api/v1/questions/6" for ::1 at 2016-06-20 18:21:49 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"6"}
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 6], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.3ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 6]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (5.58ms)
Completed 200 OK in 7ms (Views: 5.7ms | ActiveRecord: 0.5ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-20 18:21:59 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"dsgagfdasg", "vote-count"=>0, "vote-score"=>0}, "question"=>{"data"=>{"id"=>"6", "attributes"=>{"content"=>"How does the web work?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 6], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.5ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "dsgagfdasg"], ["question_id", 6], ["created_at", 2016-06-20 22:21:59 UTC], ["updated_at", 2016-06-20 22:21:59 UTC]]
  [1m[35m (2.4ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mAnswer Load (0.4ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."question_id" = $1 ORDER BY "answers"."id" DESC LIMIT $2[0m  [["question_id", 6], ["LIMIT", 1]]
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (0.8ms)
Completed 200 OK in 11ms (Views: 1.3ms | ActiveRecord: 3.6ms)


Started GET "/api/v1/random" for ::1 at 2016-06-20 18:28:27 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
[active_model_serializers] Rendered ActiveModel::Serializer::Null with Hash (0.15ms)
Completed 200 OK in 1ms (Views: 0.6ms | ActiveRecord: 0.0ms)


Started GET "/api/v1/questions/9" for ::1 at 2016-06-20 18:28:27 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"9"}
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 9], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 9]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (10.3ms)
Completed 200 OK in 12ms (Views: 10.6ms | ActiveRecord: 0.5ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-20 18:28:29 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"wqeqewg", "vote-count"=>0, "vote-score"=>0}, "question"=>{"data"=>{"id"=>"9", "attributes"=>{"content"=>"What is a closure?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 9], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "wqeqewg"], ["question_id", 9], ["created_at", 2016-06-20 22:28:29 UTC], ["updated_at", 2016-06-20 22:28:29 UTC]]
  [1m[35m (2.2ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mAnswer Load (0.4ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."question_id" = $1 ORDER BY "answers"."id" DESC LIMIT $2[0m  [["question_id", 9], ["LIMIT", 1]]
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (0.91ms)
Completed 200 OK in 10ms (Views: 1.4ms | ActiveRecord: 3.2ms)


Started PATCH "/api/v1/answers/19" for ::1 at 2016-06-20 18:29:21 -0400
Processing by Api::V1::AnswersController#update as JSON
  Parameters: {"data"=>{"id"=>"19", "attributes"=>{"content"=>"sdgsdggasd", "vote-count"=>2, "vote-score"=>-1}, "question"=>{"data"=>{"id"=>"9", "attributes"=>{"content"=>"What is a closure?"}, "type"=>"questions"}}, "type"=>"answers"}, "id"=>"19", "answer"=>{}}
  [1m[36mAnswer Load (0.3ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."id" = $1 LIMIT $2[0m  [["id", 19], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 9], ["LIMIT", 1]]
  [1m[35mSQL (0.4ms)[0m  [1m[33mUPDATE "answers" SET "vote_count" = $1, "vote_score" = $2, "updated_at" = $3 WHERE "answers"."id" = $4[0m  [["vote_count", 2], ["vote_score", -1], ["updated_at", 2016-06-20 22:29:21 UTC], ["id", 19]]
  [1m[35m (2.5ms)[0m  [1m[35mCOMMIT[0m
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (0.82ms)
Completed 200 OK in 10ms (Views: 1.4ms | ActiveRecord: 3.5ms)


Started PATCH "/api/v1/answers/158" for ::1 at 2016-06-20 18:29:23 -0400
Processing by Api::V1::AnswersController#update as JSON
  Parameters: {"data"=>{"id"=>"158", "attributes"=>{"content"=>"sss", "vote-count"=>1, "vote-score"=>1}, "question"=>{"data"=>{"id"=>"9", "attributes"=>{"content"=>"What is a closure?"}, "type"=>"questions"}}, "type"=>"answers"}, "id"=>"158", "answer"=>{}}
  [1m[36mAnswer Load (0.3ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."id" = $1 LIMIT $2[0m  [["id", 158], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 9], ["LIMIT", 1]]
  [1m[35mSQL (0.3ms)[0m  [1m[33mUPDATE "answers" SET "vote_count" = $1, "vote_score" = $2, "updated_at" = $3 WHERE "answers"."id" = $4[0m  [["vote_count", 1], ["vote_score", 1], ["updated_at", 2016-06-20 22:29:23 UTC], ["id", 158]]
  [1m[35m (17.6ms)[0m  [1m[35mCOMMIT[0m
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (0.87ms)
Completed 200 OK in 24ms (Views: 1.4ms | ActiveRecord: 18.5ms)


Started PATCH "/api/v1/answers/114" for ::1 at 2016-06-20 18:29:24 -0400
Processing by Api::V1::AnswersController#update as JSON
  Parameters: {"data"=>{"id"=>"114", "attributes"=>{"content"=>"sdgsdggasd", "vote-count"=>1, "vote-score"=>-1}, "question"=>{"data"=>{"id"=>"9", "attributes"=>{"content"=>"What is a closure?"}, "type"=>"questions"}}, "type"=>"answers"}, "id"=>"114", "answer"=>{}}
  [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."id" = $1 LIMIT $2[0m  [["id", 114], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[36mQuestion Load (0.1ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 9], ["LIMIT", 1]]
  [1m[35mSQL (0.4ms)[0m  [1m[33mUPDATE "answers" SET "vote_count" = $1, "vote_score" = $2, "updated_at" = $3 WHERE "answers"."id" = $4[0m  [["vote_count", 1], ["vote_score", -1], ["updated_at", 2016-06-20 22:29:24 UTC], ["id", 114]]
  [1m[35m (14.7ms)[0m  [1m[35mCOMMIT[0m
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (0.77ms)
Completed 200 OK in 21ms (Views: 1.3ms | ActiveRecord: 15.5ms)


Started PATCH "/api/v1/answers/113" for ::1 at 2016-06-20 18:29:25 -0400
Processing by Api::V1::AnswersController#update as JSON
  Parameters: {"data"=>{"id"=>"113", "attributes"=>{"content"=>"asdfdsaf", "vote-count"=>1, "vote-score"=>1}, "question"=>{"data"=>{"id"=>"9", "attributes"=>{"content"=>"What is a closure?"}, "type"=>"questions"}}, "type"=>"answers"}, "id"=>"113", "answer"=>{}}
  [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."id" = $1 LIMIT $2[0m  [["id", 113], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 9], ["LIMIT", 1]]
  [1m[35mSQL (0.3ms)[0m  [1m[33mUPDATE "answers" SET "vote_count" = $1, "vote_score" = $2, "updated_at" = $3 WHERE "answers"."id" = $4[0m  [["vote_count", 1], ["vote_score", 1], ["updated_at", 2016-06-20 22:29:25 UTC], ["id", 113]]
  [1m[35m (1.5ms)[0m  [1m[35mCOMMIT[0m
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (0.8ms)
Completed 200 OK in 9ms (Views: 1.2ms | ActiveRecord: 2.3ms)


Started PATCH "/api/v1/answers/101" for ::1 at 2016-06-20 18:29:27 -0400
Processing by Api::V1::AnswersController#update as JSON
  Parameters: {"data"=>{"id"=>"101", "attributes"=>{"content"=>"sdgsdggasd", "vote-count"=>1, "vote-score"=>1}, "question"=>{"data"=>{"id"=>"9", "attributes"=>{"content"=>"What is a closure?"}, "type"=>"questions"}}, "type"=>"answers"}, "id"=>"101", "answer"=>{}}
  [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."id" = $1 LIMIT $2[0m  [["id", 101], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[36mQuestion Load (0.1ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 9], ["LIMIT", 1]]
  [1m[35mSQL (0.3ms)[0m  [1m[33mUPDATE "answers" SET "vote_count" = $1, "vote_score" = $2, "updated_at" = $3 WHERE "answers"."id" = $4[0m  [["vote_count", 1], ["vote_score", 1], ["updated_at", 2016-06-20 22:29:27 UTC], ["id", 101]]
  [1m[35m (2.3ms)[0m  [1m[35mCOMMIT[0m
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (0.76ms)
Completed 200 OK in 9ms (Views: 1.2ms | ActiveRecord: 3.1ms)


Started PATCH "/api/v1/answers/100" for ::1 at 2016-06-20 18:29:29 -0400
Processing by Api::V1::AnswersController#update as JSON
  Parameters: {"data"=>{"id"=>"100", "attributes"=>{"content"=>"asdfadsf", "vote-count"=>1, "vote-score"=>-1}, "question"=>{"data"=>{"id"=>"9", "attributes"=>{"content"=>"What is a closure?"}, "type"=>"questions"}}, "type"=>"answers"}, "id"=>"100", "answer"=>{}}
  [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."id" = $1 LIMIT $2[0m  [["id", 100], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 9], ["LIMIT", 1]]
  [1m[35mSQL (0.3ms)[0m  [1m[33mUPDATE "answers" SET "vote_count" = $1, "vote_score" = $2, "updated_at" = $3 WHERE "answers"."id" = $4[0m  [["vote_count", 1], ["vote_score", -1], ["updated_at", 2016-06-20 22:29:29 UTC], ["id", 100]]
  [1m[35m (2.5ms)[0m  [1m[35mCOMMIT[0m
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (1.85ms)
Completed 200 OK in 11ms (Views: 2.9ms | ActiveRecord: 3.4ms)


Started PATCH "/api/v1/answers/63" for ::1 at 2016-06-20 18:29:30 -0400
Processing by Api::V1::AnswersController#update as JSON
  Parameters: {"data"=>{"id"=>"63", "attributes"=>{"content"=>"dsfadsasdf", "vote-count"=>1, "vote-score"=>1}, "question"=>{"data"=>{"id"=>"9", "attributes"=>{"content"=>"What is a closure?"}, "type"=>"questions"}}, "type"=>"answers"}, "id"=>"63", "answer"=>{}}
  [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."id" = $1 LIMIT $2[0m  [["id", 63], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 9], ["LIMIT", 1]]
  [1m[35mSQL (0.3ms)[0m  [1m[33mUPDATE "answers" SET "vote_count" = $1, "vote_score" = $2, "updated_at" = $3 WHERE "answers"."id" = $4[0m  [["vote_count", 1], ["vote_score", 1], ["updated_at", 2016-06-20 22:29:30 UTC], ["id", 63]]
  [1m[35m (16.2ms)[0m  [1m[35mCOMMIT[0m
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (1.37ms)
Completed 200 OK in 23ms (Views: 2.1ms | ActiveRecord: 17.0ms)


Started PATCH "/api/v1/answers/52" for ::1 at 2016-06-20 18:29:32 -0400
Processing by Api::V1::AnswersController#update as JSON
  Parameters: {"data"=>{"id"=>"52", "attributes"=>{"content"=>"sdgsdggasd", "vote-count"=>1, "vote-score"=>1}, "question"=>{"data"=>{"id"=>"9", "attributes"=>{"content"=>"What is a closure?"}, "type"=>"questions"}}, "type"=>"answers"}, "id"=>"52", "answer"=>{}}
  [1m[36mAnswer Load (0.3ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."id" = $1 LIMIT $2[0m  [["id", 52], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 9], ["LIMIT", 1]]
  [1m[35mSQL (0.3ms)[0m  [1m[33mUPDATE "answers" SET "vote_count" = $1, "vote_score" = $2, "updated_at" = $3 WHERE "answers"."id" = $4[0m  [["vote_count", 1], ["vote_score", 1], ["updated_at", 2016-06-20 22:29:32 UTC], ["id", 52]]
  [1m[35m (2.0ms)[0m  [1m[35mCOMMIT[0m
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (0.81ms)
Completed 200 OK in 9ms (Views: 1.4ms | ActiveRecord: 2.9ms)


Started PATCH "/api/v1/answers/51" for ::1 at 2016-06-20 18:29:33 -0400
Processing by Api::V1::AnswersController#update as JSON
  Parameters: {"data"=>{"id"=>"51", "attributes"=>{"content"=>"sdafdsa", "vote-count"=>1, "vote-score"=>1}, "question"=>{"data"=>{"id"=>"9", "attributes"=>{"content"=>"What is a closure?"}, "type"=>"questions"}}, "type"=>"answers"}, "id"=>"51", "answer"=>{}}
  [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."id" = $1 LIMIT $2[0m  [["id", 51], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 9], ["LIMIT", 1]]
  [1m[35mSQL (0.3ms)[0m  [1m[33mUPDATE "answers" SET "vote_count" = $1, "vote_score" = $2, "updated_at" = $3 WHERE "answers"."id" = $4[0m  [["vote_count", 1], ["vote_score", 1], ["updated_at", 2016-06-20 22:29:33 UTC], ["id", 51]]
  [1m[35m (43.6ms)[0m  [1m[35mCOMMIT[0m
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (1.64ms)
Completed 200 OK in 52ms (Views: 2.6ms | ActiveRecord: 44.5ms)


Started GET "/api/v1/questions/9" for ::1 at 2016-06-20 18:29:35 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"9"}
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 9], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.3ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 9]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (9.83ms)
Completed 200 OK in 11ms (Views: 10.1ms | ActiveRecord: 0.5ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-20 18:29:38 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"asfasf", "vote-count"=>0, "vote-score"=>0}, "question"=>{"data"=>{"id"=>"9", "attributes"=>{"content"=>"What is a closure?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 9], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "asfasf"], ["question_id", 9], ["created_at", 2016-06-20 22:29:38 UTC], ["updated_at", 2016-06-20 22:29:38 UTC]]
  [1m[35m (2.1ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mAnswer Load (0.3ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."question_id" = $1 ORDER BY "answers"."id" DESC LIMIT $2[0m  [["question_id", 9], ["LIMIT", 1]]
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (0.77ms)
Completed 200 OK in 10ms (Views: 1.2ms | ActiveRecord: 3.1ms)


Started GET "/api/v1/questions/9" for ::1 at 2016-06-20 18:31:14 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"9"}
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 9], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 9]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (9.23ms)
Completed 200 OK in 11ms (Views: 9.5ms | ActiveRecord: 0.4ms)


Started GET "/api/v1/questions/9" for ::1 at 2016-06-20 18:31:48 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"9"}
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 9], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.8ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 9]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (40.82ms)
Completed 200 OK in 46ms (Views: 41.4ms | ActiveRecord: 1.4ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-20 18:31:51 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"asdsadg", "vote-count"=>0, "vote-score"=>0}, "question"=>{"data"=>{"id"=>"9", "attributes"=>{"content"=>"What is a closure?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 9], ["LIMIT", 1]]
  [1m[35m (0.4ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.9ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "asdsadg"], ["question_id", 9], ["created_at", 2016-06-20 22:31:51 UTC], ["updated_at", 2016-06-20 22:31:51 UTC]]
  [1m[35m (1.5ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mAnswer Load (1.1ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."question_id" = $1 ORDER BY "answers"."id" DESC LIMIT $2[0m  [["question_id", 9], ["LIMIT", 1]]
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (3.28ms)
Completed 200 OK in 27ms (Views: 4.9ms | ActiveRecord: 4.5ms)


Started PATCH "/api/v1/answers/19" for ::1 at 2016-06-20 18:31:55 -0400
Processing by Api::V1::AnswersController#update as JSON
  Parameters: {"data"=>{"id"=>"19", "attributes"=>{"content"=>"sdgsdggasd", "vote-count"=>3, "vote-score"=>-2}, "question"=>{"data"=>{"id"=>"9", "attributes"=>{"content"=>"What is a closure?"}, "type"=>"questions"}}, "type"=>"answers"}, "id"=>"19", "answer"=>{}}
  [1m[36mAnswer Load (0.7ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."id" = $1 LIMIT $2[0m  [["id", 19], ["LIMIT", 1]]
  [1m[35m (0.3ms)[0m  [1m[35mBEGIN[0m
  [1m[36mQuestion Load (0.5ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 9], ["LIMIT", 1]]
  [1m[35mSQL (1.1ms)[0m  [1m[33mUPDATE "answers" SET "vote_count" = $1, "vote_score" = $2, "updated_at" = $3 WHERE "answers"."id" = $4[0m  [["vote_count", 3], ["vote_score", -2], ["updated_at", 2016-06-20 22:31:55 UTC], ["id", 19]]
  [1m[35m (163.3ms)[0m  [1m[35mCOMMIT[0m
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (3.36ms)
Completed 200 OK in 188ms (Views: 4.8ms | ActiveRecord: 166.0ms)


Started GET "/api/v1/questions/9" for ::1 at 2016-06-20 18:32:00 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"9"}
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 9], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (1.0ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 9]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (38.37ms)
Completed 200 OK in 43ms (Views: 39.2ms | ActiveRecord: 1.6ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-20 18:32:03 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"safsdf", "vote-count"=>0, "vote-score"=>0}, "question"=>{"data"=>{"id"=>"9", "attributes"=>{"content"=>"What is a closure?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 9], ["LIMIT", 1]]
  [1m[35m (0.5ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (1.3ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "safsdf"], ["question_id", 9], ["created_at", 2016-06-20 22:32:03 UTC], ["updated_at", 2016-06-20 22:32:03 UTC]]
  [1m[35m (2.9ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mAnswer Load (1.6ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."question_id" = $1 ORDER BY "answers"."id" DESC LIMIT $2[0m  [["question_id", 9], ["LIMIT", 1]]
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (4.44ms)
Completed 200 OK in 41ms (Views: 6.4ms | ActiveRecord: 6.9ms)


Started PATCH "/api/v1/answers/19" for ::1 at 2016-06-20 18:32:05 -0400
Processing by Api::V1::AnswersController#update as JSON
  Parameters: {"data"=>{"id"=>"19", "attributes"=>{"content"=>"sdgsdggasd", "vote-count"=>4, "vote-score"=>-3}, "question"=>{"data"=>{"id"=>"9", "attributes"=>{"content"=>"What is a closure?"}, "type"=>"questions"}}, "type"=>"answers"}, "id"=>"19", "answer"=>{}}
  [1m[36mAnswer Load (0.7ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."id" = $1 LIMIT $2[0m  [["id", 19], ["LIMIT", 1]]
  [1m[35m (0.4ms)[0m  [1m[35mBEGIN[0m
  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 9], ["LIMIT", 1]]
  [1m[35mSQL (1.1ms)[0m  [1m[33mUPDATE "answers" SET "vote_count" = $1, "vote_score" = $2, "updated_at" = $3 WHERE "answers"."id" = $4[0m  [["vote_count", 4], ["vote_score", -3], ["updated_at", 2016-06-20 22:32:05 UTC], ["id", 19]]
  [1m[35m (1.3ms)[0m  [1m[35mCOMMIT[0m
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (2.37ms)
Completed 200 OK in 24ms (Views: 3.8ms | ActiveRecord: 4.2ms)


Started GET "/api/v1/questions/9" for ::1 at 2016-06-20 18:32:10 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"9"}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 9], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (1.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 9]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (43.04ms)
Completed 200 OK in 49ms (Views: 43.7ms | ActiveRecord: 2.1ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-20 18:32:12 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"asFsdaf", "vote-count"=>0, "vote-score"=>0}, "question"=>{"data"=>{"id"=>"9", "attributes"=>{"content"=>"What is a closure?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 9], ["LIMIT", 1]]
  [1m[35m (0.4ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (1.1ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "asFsdaf"], ["question_id", 9], ["created_at", 2016-06-20 22:32:12 UTC], ["updated_at", 2016-06-20 22:32:12 UTC]]
  [1m[35m (15.8ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mAnswer Load (1.0ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."question_id" = $1 ORDER BY "answers"."id" DESC LIMIT $2[0m  [["question_id", 9], ["LIMIT", 1]]
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (2.45ms)
Completed 200 OK in 40ms (Views: 4.0ms | ActiveRecord: 18.9ms)


Started GET "/api/v1/questions/9" for ::1 at 2016-06-20 18:33:49 -0400
  [1m[36mActiveRecord::SchemaMigration Load (1.4ms)[0m  [1m[34mSELECT "schema_migrations".* FROM "schema_migrations"[0m
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"9"}
  [1m[36mQuestion Load (1.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 9], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (1.3ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 9]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (163.38ms)
Completed 200 OK in 334ms (Views: 219.7ms | ActiveRecord: 23.0ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-20 18:33:58 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"adfsaf", "vote-count"=>0, "vote-score"=>0}, "question"=>{"data"=>{"id"=>"9", "attributes"=>{"content"=>"What is a closure?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 9], ["LIMIT", 1]]
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.5ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "adfsaf"], ["question_id", 9], ["created_at", 2016-06-20 22:33:58 UTC], ["updated_at", 2016-06-20 22:33:58 UTC]]
  [1m[35m (170.7ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mAnswer Load (0.5ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."question_id" = $1 ORDER BY "answers"."id" DESC LIMIT $2[0m  [["question_id", 9], ["LIMIT", 1]]
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (0.81ms)
Completed 200 OK in 181ms (Views: 1.4ms | ActiveRecord: 172.2ms)


Started GET "/api/v1/questions/9" for ::1 at 2016-06-20 18:34:09 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"9"}
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 9], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.4ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 9]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (12.58ms)
Completed 200 OK in 14ms (Views: 12.7ms | ActiveRecord: 0.7ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-20 18:34:11 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"wqdgqweg", "vote-count"=>0, "vote-score"=>0}, "question"=>{"data"=>{"id"=>"9", "attributes"=>{"content"=>"What is a closure?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 9], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "wqdgqweg"], ["question_id", 9], ["created_at", 2016-06-20 22:34:11 UTC], ["updated_at", 2016-06-20 22:34:11 UTC]]
  [1m[35m (38.8ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mAnswer Load (0.6ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."question_id" = $1 ORDER BY "answers"."id" DESC LIMIT $2[0m  [["question_id", 9], ["LIMIT", 1]]
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (0.85ms)
Completed 200 OK in 48ms (Views: 1.4ms | ActiveRecord: 40.1ms)


Started GET "/api/v1/questions/9" for ::1 at 2016-06-20 18:35:07 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"9"}
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 9], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.3ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 9]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (12.72ms)
Completed 200 OK in 14ms (Views: 12.9ms | ActiveRecord: 0.6ms)


Started GET "/api/v1/questions/9" for ::1 at 2016-06-20 18:35:16 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"9"}
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 9], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.3ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 9]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (13.04ms)
Completed 200 OK in 15ms (Views: 13.2ms | ActiveRecord: 0.6ms)


Started GET "/api/v1/questions/9" for ::1 at 2016-06-20 18:35:29 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"9"}
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 9], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.4ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 9]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (15.76ms)
Completed 200 OK in 19ms (Views: 16.8ms | ActiveRecord: 0.6ms)


Started GET "/api/v1/questions/9" for ::1 at 2016-06-20 18:35:43 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"9"}
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 9], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.6ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 9]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (17.52ms)
Completed 200 OK in 20ms (Views: 17.8ms | ActiveRecord: 0.8ms)


Started GET "/api/v1/questions/9" for ::1 at 2016-06-20 18:35:44 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"9"}
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 9], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.4ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 9]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (14.9ms)
Completed 200 OK in 17ms (Views: 15.1ms | ActiveRecord: 0.6ms)


Started GET "/api/v1/questions/9" for ::1 at 2016-06-20 18:35:50 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"9"}
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 9], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.3ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 9]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (18.59ms)
Completed 200 OK in 20ms (Views: 18.8ms | ActiveRecord: 0.5ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-20 18:35:52 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"saggsgd", "vote-count"=>0, "vote-score"=>0}, "question"=>{"data"=>{"id"=>"9", "attributes"=>{"content"=>"What is a closure?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 9], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "saggsgd"], ["question_id", 9], ["created_at", 2016-06-20 22:35:52 UTC], ["updated_at", 2016-06-20 22:35:52 UTC]]
  [1m[35m (57.4ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mAnswer Load (0.5ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."question_id" = $1 ORDER BY "answers"."id" DESC LIMIT $2[0m  [["question_id", 9], ["LIMIT", 1]]
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (0.95ms)
Completed 200 OK in 67ms (Views: 1.5ms | ActiveRecord: 58.6ms)


Started PATCH "/api/v1/answers/19" for ::1 at 2016-06-20 18:35:53 -0400
Processing by Api::V1::AnswersController#update as JSON
  Parameters: {"data"=>{"id"=>"19", "attributes"=>{"content"=>"sdgsdggasd", "vote-count"=>5, "vote-score"=>-4}, "question"=>{"data"=>{"id"=>"9", "attributes"=>{"content"=>"What is a closure?"}, "type"=>"questions"}}, "type"=>"answers"}, "id"=>"19", "answer"=>{}}
  [1m[36mAnswer Load (0.3ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."id" = $1 LIMIT $2[0m  [["id", 19], ["LIMIT", 1]]
  [1m[35m (1.3ms)[0m  [1m[35mBEGIN[0m
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 9], ["LIMIT", 1]]
  [1m[35mSQL (0.5ms)[0m  [1m[33mUPDATE "answers" SET "vote_count" = $1, "vote_score" = $2, "updated_at" = $3 WHERE "answers"."id" = $4[0m  [["vote_count", 5], ["vote_score", -4], ["updated_at", 2016-06-20 22:35:53 UTC], ["id", 19]]
  [1m[35m (1.5ms)[0m  [1m[35mCOMMIT[0m
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (0.85ms)
Completed 200 OK in 15ms (Views: 1.4ms | ActiveRecord: 4.0ms)


Started GET "/api/v1/answers/19" for ::1 at 2016-06-20 18:35:53 -0400
Processing by Api::V1::AnswersController#show as JSON
  Parameters: {"id"=>"19"}
  [1m[36mAnswer Load (1.0ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."id" = $1 LIMIT $2[0m  [["id", 19], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 9], ["LIMIT", 1]]
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (2.5ms)
Completed 200 OK in 5ms (Views: 2.4ms | ActiveRecord: 1.6ms)


Started GET "/api/v1/questions/9" for ::1 at 2016-06-20 18:36:27 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"9"}
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 9], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.3ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 9]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (15.19ms)
Completed 200 OK in 17ms (Views: 15.5ms | ActiveRecord: 0.5ms)


Started GET "/api/v1/questions/9" for ::1 at 2016-06-20 18:36:44 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"9"}
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 9], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.5ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 9]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (18.45ms)
Completed 200 OK in 20ms (Views: 18.6ms | ActiveRecord: 0.8ms)


Started GET "/api/v1/questions/9" for ::1 at 2016-06-20 18:36:49 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"9"}
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 9], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.3ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 9]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (14.39ms)
Completed 200 OK in 16ms (Views: 14.7ms | ActiveRecord: 0.5ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-20 18:36:51 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"asdfadsf", "vote-count"=>0, "vote-score"=>0}, "question"=>{"data"=>{"id"=>"9", "attributes"=>{"content"=>"What is a closure?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 9], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.6ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "asdfadsf"], ["question_id", 9], ["created_at", 2016-06-20 22:36:51 UTC], ["updated_at", 2016-06-20 22:36:51 UTC]]
  [1m[35m (2.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mAnswer Load (0.6ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."question_id" = $1 ORDER BY "answers"."id" DESC LIMIT $2[0m  [["question_id", 9], ["LIMIT", 1]]
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (0.75ms)
Completed 200 OK in 11ms (Views: 1.2ms | ActiveRecord: 4.0ms)


Started PATCH "/api/v1/answers/19" for ::1 at 2016-06-20 18:38:51 -0400
Processing by Api::V1::AnswersController#update as JSON
  Parameters: {"data"=>{"id"=>"19", "attributes"=>{"content"=>"sdgsdggasd", "vote-count"=>6, "vote-score"=>-5}, "question"=>{"data"=>{"id"=>"9", "attributes"=>{"content"=>"What is a closure?"}, "type"=>"questions"}}, "type"=>"answers"}, "id"=>"19", "answer"=>{}}
  [1m[36mAnswer Load (0.3ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."id" = $1 LIMIT $2[0m  [["id", 19], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 9], ["LIMIT", 1]]
  [1m[35mSQL (0.4ms)[0m  [1m[33mUPDATE "answers" SET "vote_count" = $1, "vote_score" = $2, "updated_at" = $3 WHERE "answers"."id" = $4[0m  [["vote_count", 6], ["vote_score", -5], ["updated_at", 2016-06-20 22:38:51 UTC], ["id", 19]]
  [1m[35m (1.0ms)[0m  [1m[35mCOMMIT[0m
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (0.78ms)
Completed 200 OK in 7ms (Views: 1.2ms | ActiveRecord: 1.9ms)


Started GET "/api/v1/answers/19" for ::1 at 2016-06-20 18:38:51 -0400
Processing by Api::V1::AnswersController#show as JSON
  Parameters: {"id"=>"19"}
  [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."id" = $1 LIMIT $2[0m  [["id", 19], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 9], ["LIMIT", 1]]
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (2.69ms)
Completed 200 OK in 5ms (Views: 3.0ms | ActiveRecord: 0.7ms)


Started GET "/api/v1/answers/19" for ::1 at 2016-06-20 18:38:51 -0400
Processing by Api::V1::AnswersController#show as JSON
  Parameters: {"id"=>"19"}
  [1m[36mAnswer Load (0.3ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."id" = $1 LIMIT $2[0m  [["id", 19], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 9], ["LIMIT", 1]]
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (2.13ms)
Completed 200 OK in 4ms (Views: 2.4ms | ActiveRecord: 0.5ms)


Started GET "/api/v1/answers/19" for ::1 at 2016-06-20 18:38:51 -0400
Processing by Api::V1::AnswersController#show as JSON
  Parameters: {"id"=>"19"}
  [1m[36mAnswer Load (0.4ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."id" = $1 LIMIT $2[0m  [["id", 19], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mQuestion Load (0.5ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 9], ["LIMIT", 1]]
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (4.18ms)
Completed 200 OK in 6ms (Views: 4.4ms | ActiveRecord: 0.9ms)


Started GET "/api/v1/questions/9" for ::1 at 2016-06-20 18:38:52 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"9"}
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 9], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.5ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 9]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (15.69ms)
Completed 200 OK in 17ms (Views: 15.8ms | ActiveRecord: 0.7ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-20 18:38:53 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"sadfdas", "vote-count"=>0, "vote-score"=>0}, "question"=>{"data"=>{"id"=>"9", "attributes"=>{"content"=>"What is a closure?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 9], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "sadfdas"], ["question_id", 9], ["created_at", 2016-06-20 22:38:53 UTC], ["updated_at", 2016-06-20 22:38:53 UTC]]
  [1m[35m (2.1ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mAnswer Load (0.4ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."question_id" = $1 ORDER BY "answers"."id" DESC LIMIT $2[0m  [["question_id", 9], ["LIMIT", 1]]
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (0.75ms)
Completed 200 OK in 10ms (Views: 1.3ms | ActiveRecord: 3.2ms)


Started OPTIONS "/api/v1/answers/19" for ::1 at 2016-06-20 18:39:12 -0400
  
ActionController::RoutingError (No route matches [OPTIONS] "/api/v1/answers/19"):
  
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/debug_exceptions.rb:53:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/show_exceptions.rb:31:in `call'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:36:in `call_app'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:24:in `block in call'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:70:in `block in tagged'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:26:in `tagged'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:70:in `tagged'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:24:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/request_id.rb:24:in `call'
rack (2.0.0.rc1) lib/rack/runtime.rb:22:in `call'
activesupport (5.0.0.rc1) lib/active_support/cache/strategy/local_cache_middleware.rb:28:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/static.rb:136:in `call'
rack (2.0.0.rc1) lib/rack/sendfile.rb:111:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
railties (5.0.0.rc1) lib/rails/engine.rb:522:in `call'
puma (3.4.0) lib/puma/configuration.rb:224:in `call'
puma (3.4.0) lib/puma/server.rb:569:in `handle_request'
puma (3.4.0) lib/puma/server.rb:406:in `process_client'
puma (3.4.0) lib/puma/server.rb:271:in `block in run'
puma (3.4.0) lib/puma/thread_pool.rb:114:in `call'
puma (3.4.0) lib/puma/thread_pool.rb:114:in `block in spawn_thread'
Started GET "/api/v1/questions/9" for ::1 at 2016-06-20 18:39:45 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"9"}
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 9], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.3ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 9]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (18.58ms)
Completed 200 OK in 20ms (Views: 19.0ms | ActiveRecord: 0.5ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-20 18:39:47 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>nil, "vote-count"=>0, "vote-score"=>0}, "question"=>{"data"=>{"id"=>"9", "attributes"=>{"content"=>"What is a closure?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 9], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "answers" ("question_id", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["question_id", 9], ["created_at", 2016-06-20 22:39:47 UTC], ["updated_at", 2016-06-20 22:39:47 UTC]]
  [1m[35m (2.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mAnswer Load (0.4ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."question_id" = $1 ORDER BY "answers"."id" DESC LIMIT $2[0m  [["question_id", 9], ["LIMIT", 1]]
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (0.8ms)
Completed 200 OK in 11ms (Views: 1.3ms | ActiveRecord: 3.4ms)


Started OPTIONS "/api/v1/answers/19" for ::1 at 2016-06-20 18:39:48 -0400
  
ActionController::RoutingError (No route matches [OPTIONS] "/api/v1/answers/19"):
  
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/debug_exceptions.rb:53:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/show_exceptions.rb:31:in `call'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:36:in `call_app'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:24:in `block in call'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:70:in `block in tagged'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:26:in `tagged'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:70:in `tagged'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:24:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/request_id.rb:24:in `call'
rack (2.0.0.rc1) lib/rack/runtime.rb:22:in `call'
activesupport (5.0.0.rc1) lib/active_support/cache/strategy/local_cache_middleware.rb:28:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/static.rb:136:in `call'
rack (2.0.0.rc1) lib/rack/sendfile.rb:111:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
railties (5.0.0.rc1) lib/rails/engine.rb:522:in `call'
puma (3.4.0) lib/puma/configuration.rb:224:in `call'
puma (3.4.0) lib/puma/server.rb:569:in `handle_request'
puma (3.4.0) lib/puma/server.rb:406:in `process_client'
puma (3.4.0) lib/puma/server.rb:271:in `block in run'
puma (3.4.0) lib/puma/thread_pool.rb:114:in `call'
puma (3.4.0) lib/puma/thread_pool.rb:114:in `block in spawn_thread'
Started GET "/api/v1/questions/9" for ::1 at 2016-06-20 18:40:53 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"9"}
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 9], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.4ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 9]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (33.8ms)
Completed 200 OK in 47ms (Views: 31.9ms | ActiveRecord: 6.3ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-20 18:40:54 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"asdfads", "vote-count"=>0, "vote-score"=>0}, "question"=>{"data"=>{"id"=>"9", "attributes"=>{"content"=>"What is a closure?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 9], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "asdfads"], ["question_id", 9], ["created_at", 2016-06-20 22:40:54 UTC], ["updated_at", 2016-06-20 22:40:54 UTC]]
  [1m[35m (15.5ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mAnswer Load (0.4ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."question_id" = $1 ORDER BY "answers"."id" DESC LIMIT $2[0m  [["question_id", 9], ["LIMIT", 1]]
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (0.77ms)
Completed 200 OK in 24ms (Views: 1.4ms | ActiveRecord: 16.8ms)


Started OPTIONS "/api/v1/answers/19" for ::1 at 2016-06-20 18:40:56 -0400
  
ActionController::RoutingError (No route matches [OPTIONS] "/api/v1/answers/19"):
  
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/debug_exceptions.rb:53:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/show_exceptions.rb:31:in `call'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:36:in `call_app'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:24:in `block in call'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:70:in `block in tagged'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:26:in `tagged'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:70:in `tagged'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:24:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/request_id.rb:24:in `call'
rack (2.0.0.rc1) lib/rack/runtime.rb:22:in `call'
activesupport (5.0.0.rc1) lib/active_support/cache/strategy/local_cache_middleware.rb:28:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/static.rb:136:in `call'
rack (2.0.0.rc1) lib/rack/sendfile.rb:111:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
railties (5.0.0.rc1) lib/rails/engine.rb:522:in `call'
puma (3.4.0) lib/puma/configuration.rb:224:in `call'
puma (3.4.0) lib/puma/server.rb:569:in `handle_request'
puma (3.4.0) lib/puma/server.rb:406:in `process_client'
puma (3.4.0) lib/puma/server.rb:271:in `block in run'
puma (3.4.0) lib/puma/thread_pool.rb:114:in `call'
puma (3.4.0) lib/puma/thread_pool.rb:114:in `block in spawn_thread'
Started GET "/api/v1/questions/9" for ::1 at 2016-06-20 18:43:44 -0400
  [1m[36mActiveRecord::SchemaMigration Load (0.5ms)[0m  [1m[34mSELECT "schema_migrations".* FROM "schema_migrations"[0m
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"9"}
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 9], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.4ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 9]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (43.7ms)
Completed 200 OK in 72ms (Views: 50.1ms | ActiveRecord: 6.8ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-20 18:43:46 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"asdfads", "vote-count"=>0, "vote-score"=>0}, "question"=>{"data"=>{"id"=>"9", "attributes"=>{"content"=>"What is a closure?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 9], ["LIMIT", 1]]
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.6ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "asdfads"], ["question_id", 9], ["created_at", 2016-06-20 22:43:46 UTC], ["updated_at", 2016-06-20 22:43:46 UTC]]
  [1m[35m (2.4ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mAnswer Load (0.7ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."question_id" = $1 ORDER BY "answers"."id" DESC LIMIT $2[0m  [["question_id", 9], ["LIMIT", 1]]
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (0.78ms)
Completed 200 OK in 13ms (Views: 1.3ms | ActiveRecord: 4.2ms)


Started OPTIONS "/api/v1/answers/19" for ::1 at 2016-06-20 18:43:47 -0400
  
ActionController::RoutingError (No route matches [OPTIONS] "/api/v1/answers/19"):
  
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/debug_exceptions.rb:53:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/show_exceptions.rb:31:in `call'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:36:in `call_app'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:24:in `block in call'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:70:in `block in tagged'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:26:in `tagged'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:70:in `tagged'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:24:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/request_id.rb:24:in `call'
rack (2.0.0.rc1) lib/rack/runtime.rb:22:in `call'
activesupport (5.0.0.rc1) lib/active_support/cache/strategy/local_cache_middleware.rb:28:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/static.rb:136:in `call'
rack (2.0.0.rc1) lib/rack/sendfile.rb:111:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
railties (5.0.0.rc1) lib/rails/engine.rb:522:in `call'
puma (3.4.0) lib/puma/configuration.rb:224:in `call'
puma (3.4.0) lib/puma/server.rb:569:in `handle_request'
puma (3.4.0) lib/puma/server.rb:406:in `process_client'
puma (3.4.0) lib/puma/server.rb:271:in `block in run'
puma (3.4.0) lib/puma/thread_pool.rb:114:in `call'
puma (3.4.0) lib/puma/thread_pool.rb:114:in `block in spawn_thread'
Started GET "/api/v1/questions/9" for ::1 at 2016-06-20 18:44:31 -0400
  [1m[36mActiveRecord::SchemaMigration Load (0.4ms)[0m  [1m[34mSELECT "schema_migrations".* FROM "schema_migrations"[0m
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"9"}
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 9], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.5ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 9]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (48.37ms)
Completed 200 OK in 77ms (Views: 54.5ms | ActiveRecord: 7.3ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-20 18:44:33 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"asdfasdf", "vote-count"=>0, "vote-score"=>0}, "question"=>{"data"=>{"id"=>"9", "attributes"=>{"content"=>"What is a closure?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 9], ["LIMIT", 1]]
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.8ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "asdfasdf"], ["question_id", 9], ["created_at", 2016-06-20 22:44:33 UTC], ["updated_at", 2016-06-20 22:44:33 UTC]]
  [1m[35m (2.5ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mAnswer Load (0.6ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."question_id" = $1 ORDER BY "answers"."id" DESC LIMIT $2[0m  [["question_id", 9], ["LIMIT", 1]]
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (0.81ms)
Completed 200 OK in 15ms (Views: 1.3ms | ActiveRecord: 4.4ms)


Started OPTIONS "/api/v1/answers/19" for ::1 at 2016-06-20 18:44:34 -0400
  
ActionController::RoutingError (No route matches [OPTIONS] "/api/v1/answers/19"):
  
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/debug_exceptions.rb:53:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/show_exceptions.rb:31:in `call'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:36:in `call_app'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:24:in `block in call'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:70:in `block in tagged'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:26:in `tagged'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:70:in `tagged'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:24:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/request_id.rb:24:in `call'
rack (2.0.0.rc1) lib/rack/runtime.rb:22:in `call'
activesupport (5.0.0.rc1) lib/active_support/cache/strategy/local_cache_middleware.rb:28:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/static.rb:136:in `call'
rack (2.0.0.rc1) lib/rack/sendfile.rb:111:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
railties (5.0.0.rc1) lib/rails/engine.rb:522:in `call'
puma (3.4.0) lib/puma/configuration.rb:224:in `call'
puma (3.4.0) lib/puma/server.rb:569:in `handle_request'
puma (3.4.0) lib/puma/server.rb:406:in `process_client'
puma (3.4.0) lib/puma/server.rb:271:in `block in run'
puma (3.4.0) lib/puma/thread_pool.rb:114:in `call'
puma (3.4.0) lib/puma/thread_pool.rb:114:in `block in spawn_thread'
Started GET "/api/v1/questions/9" for ::1 at 2016-06-20 18:45:55 -0400
  [1m[36mActiveRecord::SchemaMigration Load (0.5ms)[0m  [1m[34mSELECT "schema_migrations".* FROM "schema_migrations"[0m
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"9"}
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 9], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.4ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 9]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (46.34ms)
Completed 200 OK in 73ms (Views: 52.7ms | ActiveRecord: 6.9ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-20 18:45:58 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"asfasf", "vote-count"=>0, "vote-score"=>0}, "question"=>{"data"=>{"id"=>"9", "attributes"=>{"content"=>"What is a closure?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 9], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.5ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "asfasf"], ["question_id", 9], ["created_at", 2016-06-20 22:45:58 UTC], ["updated_at", 2016-06-20 22:45:58 UTC]]
  [1m[35m (0.8ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mAnswer Load (0.5ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."question_id" = $1 ORDER BY "answers"."id" DESC LIMIT $2[0m  [["question_id", 9], ["LIMIT", 1]]
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (0.78ms)
Completed 200 OK in 10ms (Views: 1.3ms | ActiveRecord: 2.2ms)


Started OPTIONS "/api/v1/answers/19" for ::1 at 2016-06-20 18:45:59 -0400
  
ActionController::RoutingError (No route matches [OPTIONS] "/api/v1/answers/19"):
  
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/debug_exceptions.rb:53:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/show_exceptions.rb:31:in `call'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:36:in `call_app'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:24:in `block in call'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:70:in `block in tagged'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:26:in `tagged'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:70:in `tagged'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:24:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/request_id.rb:24:in `call'
rack (2.0.0.rc1) lib/rack/runtime.rb:22:in `call'
activesupport (5.0.0.rc1) lib/active_support/cache/strategy/local_cache_middleware.rb:28:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/static.rb:136:in `call'
rack (2.0.0.rc1) lib/rack/sendfile.rb:111:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
railties (5.0.0.rc1) lib/rails/engine.rb:522:in `call'
puma (3.4.0) lib/puma/configuration.rb:224:in `call'
puma (3.4.0) lib/puma/server.rb:569:in `handle_request'
puma (3.4.0) lib/puma/server.rb:406:in `process_client'
puma (3.4.0) lib/puma/server.rb:271:in `block in run'
puma (3.4.0) lib/puma/thread_pool.rb:114:in `call'
puma (3.4.0) lib/puma/thread_pool.rb:114:in `block in spawn_thread'
Started GET "/api/v1/questions/9" for ::1 at 2016-06-20 18:48:36 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"9"}
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 9], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.6ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 9]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (44.17ms)
Completed 200 OK in 61ms (Views: 42.2ms | ActiveRecord: 8.8ms)


Started GET "/api/v1/questions/9" for ::1 at 2016-06-20 18:49:38 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"9"}
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 9], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.4ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 9]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (19.3ms)
Completed 200 OK in 21ms (Views: 19.5ms | ActiveRecord: 0.6ms)


Started GET "/api/v1/questions/9" for ::1 at 2016-06-20 18:51:54 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"9"}
  [1m[36mQuestion Load (0.5ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 9], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.5ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 9]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (23.06ms)
Completed 200 OK in 25ms (Views: 23.3ms | ActiveRecord: 1.0ms)


Started GET "/api/v1/questions/9" for ::1 at 2016-06-20 18:52:40 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"9"}
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 9], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.3ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 9]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (19.02ms)
Completed 200 OK in 21ms (Views: 19.2ms | ActiveRecord: 0.6ms)


Started GET "/api/v1/questions/9" for ::1 at 2016-06-20 18:53:03 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"9"}
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 9], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.6ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 9]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (22.46ms)
Completed 200 OK in 25ms (Views: 22.5ms | ActiveRecord: 1.0ms)


Started GET "/api/v1/questions/9" for ::1 at 2016-06-20 18:53:08 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"9"}
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 9], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.3ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 9]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (18.76ms)
Completed 200 OK in 21ms (Views: 19.0ms | ActiveRecord: 0.6ms)


Started GET "/api/v1/questions/9" for ::1 at 2016-06-20 18:53:10 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"9"}
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 9], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.3ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 9]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (18.29ms)
Completed 200 OK in 20ms (Views: 18.5ms | ActiveRecord: 0.5ms)


Started GET "/api/v1/questions/9" for ::1 at 2016-06-20 18:53:13 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"9"}
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 9], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.3ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 9]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (18.59ms)
Completed 200 OK in 20ms (Views: 18.8ms | ActiveRecord: 0.6ms)


Started GET "/api/v1/questions/9" for ::1 at 2016-06-20 18:54:24 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"9"}
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 9], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.3ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 9]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (21.95ms)
Completed 200 OK in 24ms (Views: 22.2ms | ActiveRecord: 0.5ms)


  [1m[35m (63.9ms)[0m  [1m[34mSELECT pg_try_advisory_lock(7064053580037655320);[0m
  [1m[36mActiveRecord::SchemaMigration Load (0.4ms)[0m  [1m[34mSELECT "schema_migrations".* FROM "schema_migrations"[0m
Migrating to AddApprovedColumnToAnswer (20160620225649)
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35m (105.4ms)[0m  [1m[35mALTER TABLE "answer" ADD "approved" boolean DEFAULT 't'[0m
  [1m[35m (0.2ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.4ms)[0m  [1m[34mSELECT pg_advisory_unlock(7064053580037655320)[0m
  [1m[35m (0.6ms)[0m  [1m[34mSELECT pg_try_advisory_lock(7064053580037655320);[0m
  [1m[36mActiveRecord::SchemaMigration Load (0.3ms)[0m  [1m[34mSELECT "schema_migrations".* FROM "schema_migrations"[0m
Migrating to AddApprovedColumnToAnswer (20160620225649)
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35m (547.1ms)[0m  [1m[35mALTER TABLE "answers" ADD "approved" boolean DEFAULT 't'[0m
  [1m[35mSQL (11.2ms)[0m  [1m[32mINSERT INTO "schema_migrations" ("version") VALUES ($1) RETURNING "version"[0m  [["version", "20160620225649"]]
  [1m[35m (40.1ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mActiveRecord::InternalMetadata Load (25.2ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" ORDER BY "ar_internal_metadata"."key" ASC LIMIT $1[0m  [["LIMIT", 1]]
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35m (0.1ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.2ms)[0m  [1m[34mSELECT pg_advisory_unlock(7064053580037655320)[0m
  [1m[36mActiveRecord::SchemaMigration Load (0.3ms)[0m  [1m[34mSELECT "schema_migrations".* FROM "schema_migrations"[0m
  [1m[35m (40.2ms)[0m  [1m[34mSELECT t2.oid::regclass::text AS to_table, a1.attname AS column, a2.attname AS primary_key, c.conname AS name, c.confupdtype AS on_update, c.confdeltype AS on_delete
FROM pg_constraint c
JOIN pg_class t1 ON c.conrelid = t1.oid
JOIN pg_class t2 ON c.confrelid = t2.oid
JOIN pg_attribute a1 ON a1.attnum = c.conkey[1] AND a1.attrelid = t1.oid
JOIN pg_attribute a2 ON a2.attnum = c.confkey[1] AND a2.attrelid = t2.oid
JOIN pg_namespace t3 ON c.connamespace = t3.oid
WHERE c.contype = 'f'
  AND t1.relname = 'answers'
  AND t3.nspname = ANY (current_schemas(false))
ORDER BY c.conname
[0m
  [1m[35m (3.1ms)[0m  [1m[34mSELECT t2.oid::regclass::text AS to_table, a1.attname AS column, a2.attname AS primary_key, c.conname AS name, c.confupdtype AS on_update, c.confdeltype AS on_delete
FROM pg_constraint c
JOIN pg_class t1 ON c.conrelid = t1.oid
JOIN pg_class t2 ON c.confrelid = t2.oid
JOIN pg_attribute a1 ON a1.attnum = c.conkey[1] AND a1.attrelid = t1.oid
JOIN pg_attribute a2 ON a2.attnum = c.confkey[1] AND a2.attrelid = t2.oid
JOIN pg_namespace t3 ON c.connamespace = t3.oid
WHERE c.contype = 'f'
  AND t1.relname = 'questions'
  AND t3.nspname = ANY (current_schemas(false))
ORDER BY c.conname
[0m
Started GET "/api/v1/questions/9" for ::1 at 2016-06-20 18:58:58 -0400
  [1m[36mActiveRecord::SchemaMigration Load (0.5ms)[0m  [1m[34mSELECT "schema_migrations".* FROM "schema_migrations"[0m
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"9"}
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 9], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (13.7ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 9]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (76.03ms)
Completed 200 OK in 183ms (Views: 105.1ms | ActiveRecord: 20.4ms)


Started GET "/api/v1/questions/9" for ::1 at 2016-06-20 18:59:50 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"9"}
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 9], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.3ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 9]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (22.5ms)
Completed 200 OK in 25ms (Views: 22.9ms | ActiveRecord: 0.7ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-20 18:59:52 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"asdfasdf", "vote-count"=>0, "vote-score"=>0, "approved"=>false}, "question"=>{"data"=>{"id"=>"9", "attributes"=>{"content"=>"What is a closure?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameter: approved
Unpermitted parameter: approved
Unpermitted parameter: approved
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 9], ["LIMIT", 1]]
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (88.9ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "asdfasdf"], ["question_id", 9], ["created_at", 2016-06-20 22:59:52 UTC], ["updated_at", 2016-06-20 22:59:52 UTC]]
  [1m[35m (1.0ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mAnswer Load (0.6ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."question_id" = $1 ORDER BY "answers"."id" DESC LIMIT $2[0m  [["question_id", 9], ["LIMIT", 1]]
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (1.05ms)
Completed 200 OK in 102ms (Views: 1.6ms | ActiveRecord: 91.0ms)


Started PATCH "/api/v1/answers/19" for ::1 at 2016-06-20 18:59:54 -0400
Processing by Api::V1::AnswersController#update as JSON
  Parameters: {"data"=>{"id"=>"19", "attributes"=>{"content"=>"sdgsdggasd", "vote-count"=>7, "vote-score"=>-6, "approved"=>true}, "question"=>{"data"=>{"id"=>"9", "attributes"=>{"content"=>"What is a closure?"}, "type"=>"questions"}}, "type"=>"answers"}, "id"=>"19", "answer"=>{}}
  [1m[36mAnswer Load (0.3ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."id" = $1 LIMIT $2[0m  [["id", 19], ["LIMIT", 1]]
Unpermitted parameter: approved
Unpermitted parameter: approved
Unpermitted parameter: approved
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 9], ["LIMIT", 1]]
  [1m[35mSQL (0.4ms)[0m  [1m[33mUPDATE "answers" SET "vote_count" = $1, "vote_score" = $2, "updated_at" = $3 WHERE "answers"."id" = $4[0m  [["vote_count", 7], ["vote_score", -6], ["updated_at", 2016-06-20 22:59:54 UTC], ["id", 19]]
  [1m[35m (2.4ms)[0m  [1m[35mCOMMIT[0m
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (0.82ms)
Completed 200 OK in 12ms (Views: 1.4ms | ActiveRecord: 3.4ms)


Started GET "/api/v1/questions/9" for ::1 at 2016-06-20 19:00:09 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"9"}
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 9], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.5ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 9]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (19.63ms)
Completed 200 OK in 22ms (Views: 19.8ms | ActiveRecord: 0.9ms)


Started GET "/api/v1/questions/9" for ::1 at 2016-06-20 19:00:11 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"9"}
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 9], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.5ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 9]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (23.57ms)
Completed 200 OK in 26ms (Views: 24.1ms | ActiveRecord: 0.7ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-20 19:00:13 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"adfsd", "vote-count"=>0, "vote-score"=>0, "approved"=>false}, "question"=>{"data"=>{"id"=>"9", "attributes"=>{"content"=>"What is a closure?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameter: approved
Unpermitted parameter: approved
Unpermitted parameter: approved
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 9], ["LIMIT", 1]]
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.5ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "adfsd"], ["question_id", 9], ["created_at", 2016-06-20 23:00:13 UTC], ["updated_at", 2016-06-20 23:00:13 UTC]]
  [1m[35m (1.1ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mAnswer Load (0.4ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."question_id" = $1 ORDER BY "answers"."id" DESC LIMIT $2[0m  [["question_id", 9], ["LIMIT", 1]]
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (0.86ms)
Completed 200 OK in 11ms (Views: 1.5ms | ActiveRecord: 2.3ms)


Started GET "/api/v1/questions/9" for ::1 at 2016-06-20 19:00:59 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"9"}
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 9], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.5ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 9]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (29.36ms)
Completed 200 OK in 31ms (Views: 29.5ms | ActiveRecord: 0.8ms)


Started GET "/api/v1/questions/9" for ::1 at 2016-06-20 19:01:19 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"9"}
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 9], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.4ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 9]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (22.33ms)
Completed 200 OK in 24ms (Views: 22.5ms | ActiveRecord: 0.6ms)


Started GET "/api/v1/questions/9" for ::1 at 2016-06-20 19:01:23 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"9"}
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 9], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.3ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 9]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (25.24ms)
Completed 200 OK in 27ms (Views: 25.5ms | ActiveRecord: 0.5ms)


Started GET "/api/v1/questions/9" for ::1 at 2016-06-20 19:01:28 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"9"}
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 9], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.5ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 9]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (27.73ms)
Completed 200 OK in 30ms (Views: 27.9ms | ActiveRecord: 0.8ms)


Started GET "/api/v1/questions/9" for ::1 at 2016-06-20 19:01:30 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"9"}
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 9], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.4ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 9]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (21.51ms)
Completed 200 OK in 23ms (Views: 21.7ms | ActiveRecord: 0.6ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-20 19:01:32 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"sdsdgsd", "vote-count"=>0, "vote-score"=>0, "approved"=>false}, "question"=>{"data"=>{"id"=>"9", "attributes"=>{"content"=>"What is a closure?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameter: approved
Unpermitted parameter: approved
Unpermitted parameter: approved
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 9], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "sdsdgsd"], ["question_id", 9], ["created_at", 2016-06-20 23:01:32 UTC], ["updated_at", 2016-06-20 23:01:32 UTC]]
  [1m[35m (1.0ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mAnswer Load (0.4ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."question_id" = $1 ORDER BY "answers"."id" DESC LIMIT $2[0m  [["question_id", 9], ["LIMIT", 1]]
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (0.87ms)
Completed 200 OK in 10ms (Views: 1.4ms | ActiveRecord: 2.1ms)


Started PATCH "/api/v1/answers/19" for ::1 at 2016-06-20 19:01:36 -0400
Processing by Api::V1::AnswersController#update as JSON
  Parameters: {"data"=>{"id"=>"19", "attributes"=>{"content"=>"sdgsdggasd", "vote-count"=>8, "vote-score"=>-7, "approved"=>true}, "question"=>{"data"=>{"id"=>"9", "attributes"=>{"content"=>"What is a closure?"}, "type"=>"questions"}}, "type"=>"answers"}, "id"=>"19", "answer"=>{}}
  [1m[36mAnswer Load (0.3ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."id" = $1 LIMIT $2[0m  [["id", 19], ["LIMIT", 1]]
Unpermitted parameter: approved
Unpermitted parameter: approved
Unpermitted parameter: approved
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 9], ["LIMIT", 1]]
  [1m[35mSQL (0.4ms)[0m  [1m[33mUPDATE "answers" SET "vote_count" = $1, "vote_score" = $2, "updated_at" = $3 WHERE "answers"."id" = $4[0m  [["vote_count", 8], ["vote_score", -7], ["updated_at", 2016-06-20 23:01:36 UTC], ["id", 19]]
  [1m[35m (2.4ms)[0m  [1m[35mCOMMIT[0m
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (0.82ms)
Completed 200 OK in 10ms (Views: 1.4ms | ActiveRecord: 3.5ms)


Started GET "/api/v1/questions/9" for ::1 at 2016-06-20 19:01:38 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"9"}
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 9], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.3ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 9]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (20.85ms)
Completed 200 OK in 23ms (Views: 21.2ms | ActiveRecord: 0.5ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-20 19:01:40 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"asfas", "vote-count"=>0, "vote-score"=>0, "approved"=>false}, "question"=>{"data"=>{"id"=>"9", "attributes"=>{"content"=>"What is a closure?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameter: approved
Unpermitted parameter: approved
Unpermitted parameter: approved
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 9], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "asfas"], ["question_id", 9], ["created_at", 2016-06-20 23:01:40 UTC], ["updated_at", 2016-06-20 23:01:40 UTC]]
  [1m[35m (15.5ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mAnswer Load (0.6ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."question_id" = $1 ORDER BY "answers"."id" DESC LIMIT $2[0m  [["question_id", 9], ["LIMIT", 1]]
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (0.84ms)
Completed 200 OK in 25ms (Views: 1.4ms | ActiveRecord: 16.8ms)


Started GET "/api/v1/questions/9" for ::1 at 2016-06-20 19:02:15 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"9"}
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 9], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.3ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 9]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (23.83ms)
Completed 200 OK in 26ms (Views: 24.4ms | ActiveRecord: 0.6ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-20 19:02:40 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"qweteqwr", "vote-count"=>0, "vote-score"=>0, "approved"=>false}, "question"=>{"data"=>{"id"=>"9", "attributes"=>{"content"=>"What is a closure?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameter: approved
Unpermitted parameter: approved
Unpermitted parameter: approved
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 9], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "qweteqwr"], ["question_id", 9], ["created_at", 2016-06-20 23:02:40 UTC], ["updated_at", 2016-06-20 23:02:40 UTC]]
  [1m[35m (2.1ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mAnswer Load (0.3ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."question_id" = $1 ORDER BY "answers"."id" DESC LIMIT $2[0m  [["question_id", 9], ["LIMIT", 1]]
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (0.81ms)
Completed 200 OK in 10ms (Views: 1.3ms | ActiveRecord: 3.1ms)


Started PATCH "/api/v1/answers/19" for ::1 at 2016-06-20 19:02:45 -0400
Processing by Api::V1::AnswersController#update as JSON
  Parameters: {"data"=>{"id"=>"19", "attributes"=>{"content"=>"sdgsdggasd", "vote-count"=>9, "vote-score"=>-8, "approved"=>true}, "question"=>{"data"=>{"id"=>"9", "attributes"=>{"content"=>"What is a closure?"}, "type"=>"questions"}}, "type"=>"answers"}, "id"=>"19", "answer"=>{}}
  [1m[36mAnswer Load (0.3ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."id" = $1 LIMIT $2[0m  [["id", 19], ["LIMIT", 1]]
Unpermitted parameter: approved
Unpermitted parameter: approved
Unpermitted parameter: approved
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 9], ["LIMIT", 1]]
  [1m[35mSQL (0.4ms)[0m  [1m[33mUPDATE "answers" SET "vote_count" = $1, "vote_score" = $2, "updated_at" = $3 WHERE "answers"."id" = $4[0m  [["vote_count", 9], ["vote_score", -8], ["updated_at", 2016-06-20 23:02:45 UTC], ["id", 19]]
  [1m[35m (2.1ms)[0m  [1m[35mCOMMIT[0m
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (0.84ms)
Completed 200 OK in 9ms (Views: 1.4ms | ActiveRecord: 3.1ms)


Started GET "/api/v1/questions/9" for ::1 at 2016-06-20 19:03:00 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"9"}
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 9], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.6ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 9]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (33.61ms)
Completed 200 OK in 36ms (Views: 33.8ms | ActiveRecord: 0.8ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-20 19:03:02 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"aFASF", "vote-count"=>0, "vote-score"=>0, "approved"=>false}, "question"=>{"data"=>{"id"=>"9", "attributes"=>{"content"=>"What is a closure?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameter: approved
Unpermitted parameter: approved
Unpermitted parameter: approved
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 9], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "aFASF"], ["question_id", 9], ["created_at", 2016-06-20 23:03:02 UTC], ["updated_at", 2016-06-20 23:03:02 UTC]]
  [1m[35m (1.0ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mAnswer Load (0.4ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."question_id" = $1 ORDER BY "answers"."id" DESC LIMIT $2[0m  [["question_id", 9], ["LIMIT", 1]]
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (1.13ms)
Completed 200 OK in 10ms (Views: 1.8ms | ActiveRecord: 2.0ms)


Started GET "/api/v1/questions/9" for ::1 at 2016-06-20 19:03:38 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"9"}
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 9], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.5ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 9]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (22.48ms)
Completed 200 OK in 24ms (Views: 22.7ms | ActiveRecord: 0.7ms)


Started GET "/api/v1/questions/9" for ::1 at 2016-06-20 19:04:54 -0400
  [1m[36mActiveRecord::SchemaMigration Load (0.2ms)[0m  [1m[34mSELECT "schema_migrations".* FROM "schema_migrations"[0m
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"9"}
  [1m[36mQuestion Load (0.1ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 9], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.3ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 9]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (40.16ms)
Completed 200 OK in 94ms (Views: 55.4ms | ActiveRecord: 5.9ms)


Started PATCH "/api/v1/answers/19" for ::1 at 2016-06-20 19:05:11 -0400
  [1m[36mActiveRecord::SchemaMigration Load (0.5ms)[0m  [1m[34mSELECT "schema_migrations".* FROM "schema_migrations"[0m
Processing by Api::V1::AnswersController#update as JSON
  Parameters: {"data"=>{"id"=>"19", "attributes"=>{"content"=>"sdgsdggasd", "vote-count"=>10, "vote-score"=>-9, "approved"=>true}, "question"=>{"data"=>{"id"=>"9", "attributes"=>{"content"=>"What is a closure?"}, "type"=>"questions"}}, "type"=>"answers"}, "id"=>"19", "answer"=>{}}
  [1m[36mAnswer Load (0.9ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."id" = $1 LIMIT $2[0m  [["id", 19], ["LIMIT", 1]]
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 9], ["LIMIT", 1]]
  [1m[35mSQL (0.5ms)[0m  [1m[33mUPDATE "answers" SET "vote_count" = $1, "vote_score" = $2, "updated_at" = $3 WHERE "answers"."id" = $4[0m  [["vote_count", 10], ["vote_score", -9], ["updated_at", 2016-06-20 23:05:12 UTC], ["id", 19]]
  [1m[35m (16.4ms)[0m  [1m[35mCOMMIT[0m
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (10.51ms)
Completed 200 OK in 151ms (Views: 74.7ms | ActiveRecord: 24.1ms)


Started GET "/api/v1/questions/9" for ::1 at 2016-06-20 19:06:21 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"9"}
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 9], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.4ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 9]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (52.56ms)
Completed 200 OK in 108ms (Views: 66.6ms | ActiveRecord: 6.4ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-20 19:06:23 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"asfasf", "vote-count"=>0, "vote-score"=>0, "approved"=>false}, "question"=>{"data"=>{"id"=>"9", "attributes"=>{"content"=>"What is a closure?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 9], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.5ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at", "approved") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["content", "asfasf"], ["question_id", 9], ["created_at", 2016-06-20 23:06:23 UTC], ["updated_at", 2016-06-20 23:06:23 UTC], ["approved", false]]
  [1m[35m (0.9ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mAnswer Load (0.5ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."question_id" = $1 ORDER BY "answers"."id" DESC LIMIT $2[0m  [["question_id", 9], ["LIMIT", 1]]
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (0.83ms)
Completed 200 OK in 11ms (Views: 1.5ms | ActiveRecord: 2.3ms)


Started PATCH "/api/v1/answers/19" for ::1 at 2016-06-20 19:06:25 -0400
Processing by Api::V1::AnswersController#update as JSON
  Parameters: {"data"=>{"id"=>"19", "attributes"=>{"content"=>"sdgsdggasd", "vote-count"=>11, "vote-score"=>-10, "approved"=>true}, "question"=>{"data"=>{"id"=>"9", "attributes"=>{"content"=>"What is a closure?"}, "type"=>"questions"}}, "type"=>"answers"}, "id"=>"19", "answer"=>{}}
  [1m[36mAnswer Load (0.3ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."id" = $1 LIMIT $2[0m  [["id", 19], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 9], ["LIMIT", 1]]
  [1m[35mSQL (0.4ms)[0m  [1m[33mUPDATE "answers" SET "vote_count" = $1, "vote_score" = $2, "updated_at" = $3 WHERE "answers"."id" = $4[0m  [["vote_count", 11], ["vote_score", -10], ["updated_at", 2016-06-20 23:06:25 UTC], ["id", 19]]
  [1m[35m (2.1ms)[0m  [1m[35mCOMMIT[0m
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (0.82ms)
Completed 200 OK in 11ms (Views: 1.3ms | ActiveRecord: 3.2ms)


Started GET "/api/v1/questions/9" for ::1 at 2016-06-20 19:07:24 -0400
  [1m[36mActiveRecord::SchemaMigration Load (0.5ms)[0m  [1m[34mSELECT "schema_migrations".* FROM "schema_migrations"[0m
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"9"}
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 9], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.6ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 9]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (64.45ms)
Completed 200 OK in 171ms (Views: 104.8ms | ActiveRecord: 7.6ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-20 19:07:27 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"sdfadsfdsf", "vote-count"=>0, "vote-score"=>0, "approved"=>false}, "question"=>{"data"=>{"id"=>"9", "attributes"=>{"content"=>"What is a closure?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 9], ["LIMIT", 1]]
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.5ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at", "approved") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["content", "sdfadsfdsf"], ["question_id", 9], ["created_at", 2016-06-20 23:07:27 UTC], ["updated_at", 2016-06-20 23:07:27 UTC], ["approved", false]]
  [1m[35m (980.9ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mAnswer Load (0.6ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."question_id" = $1 ORDER BY "answers"."id" DESC LIMIT $2[0m  [["question_id", 9], ["LIMIT", 1]]
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (0.83ms)
Completed 200 OK in 991ms (Views: 1.3ms | ActiveRecord: 982.4ms)


Started PATCH "/api/v1/answers/19" for ::1 at 2016-06-20 19:07:29 -0400
Processing by Api::V1::AnswersController#update as JSON
  Parameters: {"data"=>{"id"=>"19", "attributes"=>{"content"=>"sdgsdggasd", "vote-count"=>12, "vote-score"=>-11, "approved"=>true}, "question"=>{"data"=>{"id"=>"9", "attributes"=>{"content"=>"What is a closure?"}, "type"=>"questions"}}, "type"=>"answers"}, "id"=>"19", "answer"=>{}}
  [1m[36mAnswer Load (0.3ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."id" = $1 LIMIT $2[0m  [["id", 19], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 9], ["LIMIT", 1]]
  [1m[35mSQL (0.4ms)[0m  [1m[33mUPDATE "answers" SET "vote_count" = $1, "vote_score" = $2, "updated_at" = $3 WHERE "answers"."id" = $4[0m  [["vote_count", 12], ["vote_score", -11], ["updated_at", 2016-06-20 23:07:29 UTC], ["id", 19]]
  [1m[35m (105.2ms)[0m  [1m[35mCOMMIT[0m
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (1.41ms)
Completed 200 OK in 115ms (Views: 2.1ms | ActiveRecord: 106.1ms)


Started GET "/api/v1/questions/9" for ::1 at 2016-06-20 19:08:24 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"9"}
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 9], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.4ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 9]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (22.77ms)
Completed 200 OK in 24ms (Views: 22.9ms | ActiveRecord: 0.7ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-20 19:08:34 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"asfasf", "vote-count"=>0, "vote-score"=>0, "approved"=>false}, "question"=>{"data"=>{"id"=>"9", "attributes"=>{"content"=>"What is a closure?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 9], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at", "approved") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["content", "asfasf"], ["question_id", 9], ["created_at", 2016-06-20 23:08:34 UTC], ["updated_at", 2016-06-20 23:08:34 UTC], ["approved", false]]
  [1m[35m (2.2ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mAnswer Load (0.4ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."question_id" = $1 ORDER BY "answers"."id" DESC LIMIT $2[0m  [["question_id", 9], ["LIMIT", 1]]
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (0.8ms)
Completed 200 OK in 10ms (Views: 1.3ms | ActiveRecord: 3.3ms)


Started PATCH "/api/v1/answers/19" for ::1 at 2016-06-20 19:08:36 -0400
Processing by Api::V1::AnswersController#update as JSON
  Parameters: {"data"=>{"id"=>"19", "attributes"=>{"content"=>"sdgsdggasd", "vote-count"=>13, "vote-score"=>-12, "approved"=>true}, "question"=>{"data"=>{"id"=>"9", "attributes"=>{"content"=>"What is a closure?"}, "type"=>"questions"}}, "type"=>"answers"}, "id"=>"19", "answer"=>{}}
  [1m[36mAnswer Load (0.3ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."id" = $1 LIMIT $2[0m  [["id", 19], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 9], ["LIMIT", 1]]
  [1m[35mSQL (0.4ms)[0m  [1m[33mUPDATE "answers" SET "vote_count" = $1, "vote_score" = $2, "updated_at" = $3 WHERE "answers"."id" = $4[0m  [["vote_count", 13], ["vote_score", -12], ["updated_at", 2016-06-20 23:08:36 UTC], ["id", 19]]
  [1m[35m (1.1ms)[0m  [1m[35mCOMMIT[0m
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (0.78ms)
Completed 200 OK in 9ms (Views: 1.3ms | ActiveRecord: 2.2ms)


Started GET "/api/v1/questions/9" for ::1 at 2016-06-20 19:08:53 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"9"}
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 9], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (1.7ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 9]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (29.97ms)
Completed 200 OK in 32ms (Views: 28.8ms | ActiveRecord: 1.9ms)


Started GET "/api/v1/questions/9" for ::1 at 2016-06-20 19:08:54 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"9"}
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 9], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.5ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 9]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (35.96ms)
Completed 200 OK in 38ms (Views: 36.1ms | ActiveRecord: 0.7ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-20 19:08:56 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"asfasf", "vote-count"=>0, "vote-score"=>0, "approved"=>false}, "question"=>{"data"=>{"id"=>"9", "attributes"=>{"content"=>"What is a closure?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 9], ["LIMIT", 1]]
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at", "approved") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["content", "asfasf"], ["question_id", 9], ["created_at", 2016-06-20 23:08:56 UTC], ["updated_at", 2016-06-20 23:08:56 UTC], ["approved", false]]
  [1m[35m (12.6ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mAnswer Load (0.4ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."question_id" = $1 ORDER BY "answers"."id" DESC LIMIT $2[0m  [["question_id", 9], ["LIMIT", 1]]
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (0.95ms)
Completed 200 OK in 22ms (Views: 1.5ms | ActiveRecord: 13.7ms)


Started PATCH "/api/v1/answers/19" for ::1 at 2016-06-20 19:08:57 -0400
Processing by Api::V1::AnswersController#update as JSON
  Parameters: {"data"=>{"id"=>"19", "attributes"=>{"content"=>"sdgsdggasd", "vote-count"=>14, "vote-score"=>-13, "approved"=>true}, "question"=>{"data"=>{"id"=>"9", "attributes"=>{"content"=>"What is a closure?"}, "type"=>"questions"}}, "type"=>"answers"}, "id"=>"19", "answer"=>{}}
  [1m[36mAnswer Load (0.4ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."id" = $1 LIMIT $2[0m  [["id", 19], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 9], ["LIMIT", 1]]
  [1m[35mSQL (0.4ms)[0m  [1m[33mUPDATE "answers" SET "vote_count" = $1, "vote_score" = $2, "updated_at" = $3 WHERE "answers"."id" = $4[0m  [["vote_count", 14], ["vote_score", -13], ["updated_at", 2016-06-20 23:08:57 UTC], ["id", 19]]
  [1m[35m (156.7ms)[0m  [1m[35mCOMMIT[0m
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (1.4ms)
Completed 200 OK in 165ms (Views: 2.1ms | ActiveRecord: 157.8ms)


Started GET "/api/v1/questions/9" for ::1 at 2016-06-20 19:09:15 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"9"}
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 9], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.7ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 9]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (39.53ms)
Completed 200 OK in 41ms (Views: 39.5ms | ActiveRecord: 0.9ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-20 19:09:16 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"asdasd", "vote-count"=>0, "vote-score"=>0, "approved"=>false}, "question"=>{"data"=>{"id"=>"9", "attributes"=>{"content"=>"What is a closure?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 9], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at", "approved") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["content", "asdasd"], ["question_id", 9], ["created_at", 2016-06-20 23:09:16 UTC], ["updated_at", 2016-06-20 23:09:16 UTC], ["approved", false]]
  [1m[35m (321.8ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mAnswer Load (0.4ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."question_id" = $1 ORDER BY "answers"."id" DESC LIMIT $2[0m  [["question_id", 9], ["LIMIT", 1]]
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (1.11ms)
Completed 200 OK in 332ms (Views: 1.8ms | ActiveRecord: 322.9ms)


Started PATCH "/api/v1/answers/19" for ::1 at 2016-06-20 19:10:02 -0400
Processing by Api::V1::AnswersController#update as JSON
  Parameters: {"data"=>{"id"=>"19", "attributes"=>{"content"=>"sdgsdggasd", "vote-count"=>15, "vote-score"=>-14, "approved"=>false}, "question"=>{"data"=>{"id"=>"9", "attributes"=>{"content"=>"What is a closure?"}, "type"=>"questions"}}, "type"=>"answers"}, "id"=>"19", "answer"=>{}}
  [1m[36mAnswer Load (0.3ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."id" = $1 LIMIT $2[0m  [["id", 19], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 9], ["LIMIT", 1]]
  [1m[35mSQL (0.4ms)[0m  [1m[33mUPDATE "answers" SET "vote_count" = $1, "vote_score" = $2, "approved" = $3, "updated_at" = $4 WHERE "answers"."id" = $5[0m  [["vote_count", 15], ["vote_score", -14], ["approved", false], ["updated_at", 2016-06-20 23:10:02 UTC], ["id", 19]]
  [1m[35m (0.9ms)[0m  [1m[35mCOMMIT[0m
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (0.79ms)
Completed 200 OK in 8ms (Views: 1.2ms | ActiveRecord: 1.8ms)


Started GET "/api/v1/questions/9" for ::1 at 2016-06-20 19:10:19 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"9"}
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 9], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.5ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 9]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (28.37ms)
Completed 200 OK in 30ms (Views: 28.5ms | ActiveRecord: 0.7ms)


Started GET "/api/v1/questions/9" for ::1 at 2016-06-20 19:10:23 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"9"}
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 9], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.3ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 9]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (28.32ms)
Completed 200 OK in 30ms (Views: 28.5ms | ActiveRecord: 0.5ms)


Started GET "/api/v1/questions/9" for ::1 at 2016-06-20 19:10:30 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"9"}
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 9], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.3ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 9]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (27.08ms)
Completed 200 OK in 29ms (Views: 27.4ms | ActiveRecord: 0.5ms)


Started GET "/api/v1/questions/9" for ::1 at 2016-06-20 19:10:38 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"9"}
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 9], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.3ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 9]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (26.34ms)
Completed 200 OK in 28ms (Views: 26.7ms | ActiveRecord: 0.5ms)


Started GET "/api/v1/questions/9" for ::1 at 2016-06-20 19:10:40 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"9"}
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 9], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.6ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 9]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (32.6ms)
Completed 200 OK in 35ms (Views: 32.7ms | ActiveRecord: 1.0ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-20 19:10:41 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"afasf", "vote-count"=>0, "vote-score"=>0, "approved"=>false}, "question"=>{"data"=>{"id"=>"9", "attributes"=>{"content"=>"What is a closure?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 9], ["LIMIT", 1]]
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.5ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at", "approved") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["content", "afasf"], ["question_id", 9], ["created_at", 2016-06-20 23:10:41 UTC], ["updated_at", 2016-06-20 23:10:41 UTC], ["approved", false]]
  [1m[35m (2.4ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mAnswer Load (0.4ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."question_id" = $1 ORDER BY "answers"."id" DESC LIMIT $2[0m  [["question_id", 9], ["LIMIT", 1]]
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (0.96ms)
Completed 200 OK in 14ms (Views: 1.8ms | ActiveRecord: 3.8ms)


Started PATCH "/api/v1/answers/52" for ::1 at 2016-06-20 19:10:43 -0400
Processing by Api::V1::AnswersController#update as JSON
  Parameters: {"data"=>{"id"=>"52", "attributes"=>{"content"=>"sdgsdggasd", "vote-count"=>2, "vote-score"=>0, "approved"=>true}, "question"=>{"data"=>{"id"=>"9", "attributes"=>{"content"=>"What is a closure?"}, "type"=>"questions"}}, "type"=>"answers"}, "id"=>"52", "answer"=>{}}
  [1m[36mAnswer Load (0.3ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."id" = $1 LIMIT $2[0m  [["id", 52], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[36mQuestion Load (0.1ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 9], ["LIMIT", 1]]
  [1m[35mSQL (0.3ms)[0m  [1m[33mUPDATE "answers" SET "vote_count" = $1, "vote_score" = $2, "updated_at" = $3 WHERE "answers"."id" = $4[0m  [["vote_count", 2], ["vote_score", 0], ["updated_at", 2016-06-20 23:10:43 UTC], ["id", 52]]
  [1m[35m (2.4ms)[0m  [1m[35mCOMMIT[0m
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (0.73ms)
Completed 200 OK in 9ms (Views: 1.2ms | ActiveRecord: 3.3ms)


Started GET "/api/v1/questions/9" for ::1 at 2016-06-20 19:10:51 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"9"}
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 9], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.5ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 9]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (31.23ms)
Completed 200 OK in 33ms (Views: 31.3ms | ActiveRecord: 0.7ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-20 19:10:54 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"asfasf", "vote-count"=>0, "vote-score"=>0, "approved"=>false}, "question"=>{"data"=>{"id"=>"9", "attributes"=>{"content"=>"What is a closure?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 9], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at", "approved") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["content", "asfasf"], ["question_id", 9], ["created_at", 2016-06-20 23:10:54 UTC], ["updated_at", 2016-06-20 23:10:54 UTC], ["approved", false]]
  [1m[35m (2.1ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mAnswer Load (0.4ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."question_id" = $1 ORDER BY "answers"."id" DESC LIMIT $2[0m  [["question_id", 9], ["LIMIT", 1]]
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (0.78ms)
Completed 200 OK in 10ms (Views: 1.3ms | ActiveRecord: 3.3ms)


Started PATCH "/api/v1/answers/52" for ::1 at 2016-06-20 19:10:55 -0400
Processing by Api::V1::AnswersController#update as JSON
  Parameters: {"data"=>{"id"=>"52", "attributes"=>{"content"=>"sdgsdggasd", "vote-count"=>3, "vote-score"=>-1, "approved"=>true}, "question"=>{"data"=>{"id"=>"9", "attributes"=>{"content"=>"What is a closure?"}, "type"=>"questions"}}, "type"=>"answers"}, "id"=>"52", "answer"=>{}}
  [1m[36mAnswer Load (0.3ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."id" = $1 LIMIT $2[0m  [["id", 52], ["LIMIT", 1]]
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 9], ["LIMIT", 1]]
  [1m[35mSQL (0.5ms)[0m  [1m[33mUPDATE "answers" SET "vote_count" = $1, "vote_score" = $2, "updated_at" = $3 WHERE "answers"."id" = $4[0m  [["vote_count", 3], ["vote_score", -1], ["updated_at", 2016-06-20 23:10:55 UTC], ["id", 52]]
  [1m[35m (10.5ms)[0m  [1m[35mCOMMIT[0m
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (0.76ms)
Completed 200 OK in 19ms (Views: 1.3ms | ActiveRecord: 11.8ms)


Started GET "/api/v1/questions/9" for ::1 at 2016-06-20 19:10:57 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"9"}
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 9], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.5ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 9]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (31.74ms)
Completed 200 OK in 34ms (Views: 31.9ms | ActiveRecord: 0.7ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-20 19:10:59 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"asdfadsf", "vote-count"=>0, "vote-score"=>0, "approved"=>false}, "question"=>{"data"=>{"id"=>"9", "attributes"=>{"content"=>"What is a closure?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 9], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at", "approved") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["content", "asdfadsf"], ["question_id", 9], ["created_at", 2016-06-20 23:10:59 UTC], ["updated_at", 2016-06-20 23:10:59 UTC], ["approved", false]]
  [1m[35m (2.6ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mAnswer Load (0.4ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."question_id" = $1 ORDER BY "answers"."id" DESC LIMIT $2[0m  [["question_id", 9], ["LIMIT", 1]]
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (0.78ms)
Completed 200 OK in 15ms (Views: 1.4ms | ActiveRecord: 3.8ms)


Started PATCH "/api/v1/answers/52" for ::1 at 2016-06-20 19:11:00 -0400
Processing by Api::V1::AnswersController#update as JSON
  Parameters: {"data"=>{"id"=>"52", "attributes"=>{"content"=>"sdgsdggasd", "vote-count"=>4, "vote-score"=>-2, "approved"=>true}, "question"=>{"data"=>{"id"=>"9", "attributes"=>{"content"=>"What is a closure?"}, "type"=>"questions"}}, "type"=>"answers"}, "id"=>"52", "answer"=>{}}
  [1m[36mAnswer Load (0.3ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."id" = $1 LIMIT $2[0m  [["id", 52], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 9], ["LIMIT", 1]]
  [1m[35mSQL (54.7ms)[0m  [1m[33mUPDATE "answers" SET "vote_count" = $1, "vote_score" = $2, "updated_at" = $3 WHERE "answers"."id" = $4[0m  [["vote_count", 4], ["vote_score", -2], ["updated_at", 2016-06-20 23:11:00 UTC], ["id", 52]]
  [1m[35m (0.9ms)[0m  [1m[35mCOMMIT[0m
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (0.72ms)
Completed 200 OK in 63ms (Views: 1.2ms | ActiveRecord: 56.3ms)


Started GET "/api/v1/questions/9" for ::1 at 2016-06-20 19:11:02 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"9"}
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 9], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.4ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 9]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (29.75ms)
Completed 200 OK in 32ms (Views: 30.0ms | ActiveRecord: 0.6ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-20 19:11:04 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"sadasdf", "vote-count"=>0, "vote-score"=>0, "approved"=>false}, "question"=>{"data"=>{"id"=>"9", "attributes"=>{"content"=>"What is a closure?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 9], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at", "approved") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["content", "sadasdf"], ["question_id", 9], ["created_at", 2016-06-20 23:11:04 UTC], ["updated_at", 2016-06-20 23:11:04 UTC], ["approved", false]]
  [1m[35m (2.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mAnswer Load (0.4ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."question_id" = $1 ORDER BY "answers"."id" DESC LIMIT $2[0m  [["question_id", 9], ["LIMIT", 1]]
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (0.75ms)
Completed 200 OK in 11ms (Views: 1.3ms | ActiveRecord: 3.4ms)


Started PATCH "/api/v1/answers/52" for ::1 at 2016-06-20 19:11:06 -0400
Processing by Api::V1::AnswersController#update as JSON
  Parameters: {"data"=>{"id"=>"52", "attributes"=>{"content"=>"sdgsdggasd", "vote-count"=>5, "vote-score"=>-3, "approved"=>true}, "question"=>{"data"=>{"id"=>"9", "attributes"=>{"content"=>"What is a closure?"}, "type"=>"questions"}}, "type"=>"answers"}, "id"=>"52", "answer"=>{}}
  [1m[36mAnswer Load (0.3ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."id" = $1 LIMIT $2[0m  [["id", 52], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 9], ["LIMIT", 1]]
  [1m[35mSQL (0.4ms)[0m  [1m[33mUPDATE "answers" SET "vote_count" = $1, "vote_score" = $2, "updated_at" = $3 WHERE "answers"."id" = $4[0m  [["vote_count", 5], ["vote_score", -3], ["updated_at", 2016-06-20 23:11:06 UTC], ["id", 52]]
  [1m[35m (2.1ms)[0m  [1m[35mCOMMIT[0m
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (0.74ms)
Completed 200 OK in 10ms (Views: 1.2ms | ActiveRecord: 3.1ms)


Started GET "/api/v1/questions/9" for ::1 at 2016-06-20 19:11:07 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"9"}
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 9], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.4ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 9]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (31.14ms)
Completed 200 OK in 33ms (Views: 31.4ms | ActiveRecord: 0.6ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-20 19:11:09 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"sadffdas", "vote-count"=>0, "vote-score"=>0, "approved"=>false}, "question"=>{"data"=>{"id"=>"9", "attributes"=>{"content"=>"What is a closure?"}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 9], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at", "approved") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["content", "sadffdas"], ["question_id", 9], ["created_at", 2016-06-20 23:11:09 UTC], ["updated_at", 2016-06-20 23:11:09 UTC], ["approved", false]]
  [1m[35m (15.8ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mAnswer Load (0.4ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."question_id" = $1 ORDER BY "answers"."id" DESC LIMIT $2[0m  [["question_id", 9], ["LIMIT", 1]]
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (0.75ms)
Completed 200 OK in 24ms (Views: 1.2ms | ActiveRecord: 16.9ms)


Started PATCH "/api/v1/answers/52" for ::1 at 2016-06-20 19:11:11 -0400
Processing by Api::V1::AnswersController#update as JSON
  Parameters: {"data"=>{"id"=>"52", "attributes"=>{"content"=>"sdgsdggasd", "vote-count"=>6, "vote-score"=>-4, "approved"=>false}, "question"=>{"data"=>{"id"=>"9", "attributes"=>{"content"=>"What is a closure?"}, "type"=>"questions"}}, "type"=>"answers"}, "id"=>"52", "answer"=>{}}
  [1m[36mAnswer Load (0.3ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."id" = $1 LIMIT $2[0m  [["id", 52], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 9], ["LIMIT", 1]]
  [1m[35mSQL (0.6ms)[0m  [1m[33mUPDATE "answers" SET "vote_count" = $1, "vote_score" = $2, "approved" = $3, "updated_at" = $4 WHERE "answers"."id" = $5[0m  [["vote_count", 6], ["vote_score", -4], ["approved", false], ["updated_at", 2016-06-20 23:11:11 UTC], ["id", 52]]
  [1m[35m (65.4ms)[0m  [1m[35mCOMMIT[0m
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (1.32ms)
Completed 200 OK in 74ms (Views: 2.2ms | ActiveRecord: 66.5ms)


Started PATCH "/api/v1/answers/52" for ::1 at 2016-06-20 19:11:11 -0400
Processing by Api::V1::AnswersController#update as JSON
  Parameters: {"data"=>{"id"=>"52", "attributes"=>{"content"=>"sdgsdggasd", "vote-count"=>6, "vote-score"=>-4, "approved"=>false}, "question"=>{"data"=>{"id"=>"9", "attributes"=>{"content"=>"What is a closure?"}, "type"=>"questions"}}, "type"=>"answers"}, "id"=>"52", "answer"=>{}}
  [1m[36mAnswer Load (1.0ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."id" = $1 LIMIT $2[0m  [["id", 52], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[36mQuestion Load (0.5ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 9], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mCOMMIT[0m
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (0.75ms)
Completed 200 OK in 7ms (Views: 1.2ms | ActiveRecord: 1.7ms)


  [1m[35m (0.4ms)[0m  [1m[34mSELECT pg_try_advisory_lock(7064053580037655320);[0m
  [1m[36mActiveRecord::SchemaMigration Load (28.0ms)[0m  [1m[34mSELECT "schema_migrations".* FROM "schema_migrations"[0m
  [1m[36mActiveRecord::InternalMetadata Load (0.9ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" ORDER BY "ar_internal_metadata"."key" ASC LIMIT $1[0m  [["LIMIT", 1]]
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35m (0.2ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.3ms)[0m  [1m[34mSELECT pg_advisory_unlock(7064053580037655320)[0m
  [1m[36mActiveRecord::SchemaMigration Load (0.2ms)[0m  [1m[34mSELECT "schema_migrations".* FROM "schema_migrations"[0m
  [1m[35m (2.2ms)[0m  [1m[34mSELECT t2.oid::regclass::text AS to_table, a1.attname AS column, a2.attname AS primary_key, c.conname AS name, c.confupdtype AS on_update, c.confdeltype AS on_delete
FROM pg_constraint c
JOIN pg_class t1 ON c.conrelid = t1.oid
JOIN pg_class t2 ON c.confrelid = t2.oid
JOIN pg_attribute a1 ON a1.attnum = c.conkey[1] AND a1.attrelid = t1.oid
JOIN pg_attribute a2 ON a2.attnum = c.confkey[1] AND a2.attrelid = t2.oid
JOIN pg_namespace t3 ON c.connamespace = t3.oid
WHERE c.contype = 'f'
  AND t1.relname = 'answers'
  AND t3.nspname = ANY (current_schemas(false))
ORDER BY c.conname
[0m
  [1m[35m (1.7ms)[0m  [1m[34mSELECT t2.oid::regclass::text AS to_table, a1.attname AS column, a2.attname AS primary_key, c.conname AS name, c.confupdtype AS on_update, c.confdeltype AS on_delete
FROM pg_constraint c
JOIN pg_class t1 ON c.conrelid = t1.oid
JOIN pg_class t2 ON c.confrelid = t2.oid
JOIN pg_attribute a1 ON a1.attnum = c.conkey[1] AND a1.attrelid = t1.oid
JOIN pg_attribute a2 ON a2.attnum = c.confkey[1] AND a2.attrelid = t2.oid
JOIN pg_namespace t3 ON c.connamespace = t3.oid
WHERE c.contype = 'f'
  AND t1.relname = 'questions'
  AND t3.nspname = ANY (current_schemas(false))
ORDER BY c.conname
[0m
  [1m[35m (0.7ms)[0m  [1m[34mSELECT pg_try_advisory_lock(7064053580037655320);[0m
  [1m[36mActiveRecord::SchemaMigration Load (32.1ms)[0m  [1m[34mSELECT "schema_migrations".* FROM "schema_migrations"[0m
Migrating to AddReceivedCountToQuestions (20160621014846)
  [1m[35m (0.3ms)[0m  [1m[35mBEGIN[0m
  [1m[35m (199.8ms)[0m  [1m[35mALTER TABLE "questions" ADD "received_count" integer DEFAULT 0[0m
  [1m[35mSQL (0.6ms)[0m  [1m[32mINSERT INTO "schema_migrations" ("version") VALUES ($1) RETURNING "version"[0m  [["version", "20160621014846"]]
  [1m[35m (251.1ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mActiveRecord::InternalMetadata Load (0.7ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" ORDER BY "ar_internal_metadata"."key" ASC LIMIT $1[0m  [["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35m (0.1ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.2ms)[0m  [1m[34mSELECT pg_advisory_unlock(7064053580037655320)[0m
  [1m[36mActiveRecord::SchemaMigration Load (0.2ms)[0m  [1m[34mSELECT "schema_migrations".* FROM "schema_migrations"[0m
  [1m[35m (2.4ms)[0m  [1m[34mSELECT t2.oid::regclass::text AS to_table, a1.attname AS column, a2.attname AS primary_key, c.conname AS name, c.confupdtype AS on_update, c.confdeltype AS on_delete
FROM pg_constraint c
JOIN pg_class t1 ON c.conrelid = t1.oid
JOIN pg_class t2 ON c.confrelid = t2.oid
JOIN pg_attribute a1 ON a1.attnum = c.conkey[1] AND a1.attrelid = t1.oid
JOIN pg_attribute a2 ON a2.attnum = c.confkey[1] AND a2.attrelid = t2.oid
JOIN pg_namespace t3 ON c.connamespace = t3.oid
WHERE c.contype = 'f'
  AND t1.relname = 'answers'
  AND t3.nspname = ANY (current_schemas(false))
ORDER BY c.conname
[0m
  [1m[35m (2.0ms)[0m  [1m[34mSELECT t2.oid::regclass::text AS to_table, a1.attname AS column, a2.attname AS primary_key, c.conname AS name, c.confupdtype AS on_update, c.confdeltype AS on_delete
FROM pg_constraint c
JOIN pg_class t1 ON c.conrelid = t1.oid
JOIN pg_class t2 ON c.confrelid = t2.oid
JOIN pg_attribute a1 ON a1.attnum = c.conkey[1] AND a1.attrelid = t1.oid
JOIN pg_attribute a2 ON a2.attnum = c.confkey[1] AND a2.attrelid = t2.oid
JOIN pg_namespace t3 ON c.connamespace = t3.oid
WHERE c.contype = 'f'
  AND t1.relname = 'questions'
  AND t3.nspname = ANY (current_schemas(false))
ORDER BY c.conname
[0m
  [1m[36mActiveRecord::SchemaMigration Load (0.5ms)[0m  [1m[34mSELECT "schema_migrations".* FROM "schema_migrations"[0m
  [1m[35m (0.6ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1[0m  [["key", :environment]]
  [1m[36mActiveRecord::SchemaMigration Load (0.2ms)[0m  [1m[34mSELECT "schema_migrations".* FROM "schema_migrations"[0m
  [1m[35m (0.2ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1[0m  [["key", :environment]]
  [1m[36mActiveRecord::SchemaMigration Load (0.2ms)[0m  [1m[34mSELECT "schema_migrations".* FROM "schema_migrations"[0m
  [1m[35m (0.2ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1[0m  [["key", :environment]]
  [1m[35m (1092.5ms)[0m  [1m[35mDROP DATABASE IF EXISTS "QIQAPI_development"[0m
  [1m[35m (687.7ms)[0m  [1m[35mDROP DATABASE IF EXISTS "QIQAPI_test"[0m
  [1m[35m (12386.2ms)[0m  [1m[35mCREATE DATABASE "QIQAPI_development" ENCODING = 'unicode'[0m
  [1m[35m (13087.1ms)[0m  [1m[35mCREATE DATABASE "QIQAPI_test" ENCODING = 'unicode'[0m
  [1m[35mSQL (250.8ms)[0m  [1m[35mCREATE EXTENSION IF NOT EXISTS "plpgsql"[0m
  [1m[35m (2274.6ms)[0m  [1m[35mCREATE TABLE "answers" ("id" serial primary key, "vote_score" integer DEFAULT 0, "vote_count" integer DEFAULT 0, "content" character varying, "question_id" integer, "created_at" timestamp, "updated_at" timestamp, "approved" boolean DEFAULT 't')[0m
  [1m[35m (52.1ms)[0m  [1m[35mCREATE TABLE "questions" ("id" serial primary key, "content" character varying, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL, "received_count" integer DEFAULT 0)[0m
  [1m[35m (124.4ms)[0m  [1m[35mCREATE TABLE "schema_migrations" ("version" character varying PRIMARY KEY)[0m
  [1m[35m (0.4ms)[0m  [1m[34mSELECT version FROM "schema_migrations"[0m
  [1m[35m (12.0ms)[0m  [1m[32mINSERT INTO "schema_migrations" (version) VALUES ('20160621014846')[0m
  [1m[35m (17.8ms)[0m  [1m[32mINSERT INTO schema_migrations (version) VALUES ('20160615195122'), ('20160615195241'), ('20160615195717'), ('20160617182704'), ('20160620225649');

[0m
  [1m[35m (156.2ms)[0m  [1m[35mCREATE TABLE "ar_internal_metadata" ("key" character varying PRIMARY KEY, "value" character varying, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  [1m[36mActiveRecord::InternalMetadata Load (15.7ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" ORDER BY "ar_internal_metadata"."key" ASC LIMIT $1[0m  [["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (27.2ms)[0m  [1m[32mINSERT INTO "ar_internal_metadata" ("key", "value", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "key"[0m  [["key", "environment"], ["value", "development"], ["created_at", 2016-06-21 01:51:17 UTC], ["updated_at", 2016-06-21 01:51:17 UTC]]
  [1m[35m (30.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mActiveRecord::InternalMetadata Load (0.3ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" ORDER BY "ar_internal_metadata"."key" ASC LIMIT $1[0m  [["LIMIT", 1]]
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35m (0.2ms)[0m  [1m[35mCOMMIT[0m
  [1m[35mSQL (157.8ms)[0m  [1m[35mCREATE EXTENSION IF NOT EXISTS "plpgsql"[0m
  [1m[35m (1624.1ms)[0m  [1m[35mCREATE TABLE "answers" ("id" serial primary key, "vote_score" integer DEFAULT 0, "vote_count" integer DEFAULT 0, "content" character varying, "question_id" integer, "created_at" timestamp, "updated_at" timestamp, "approved" boolean DEFAULT 't')[0m
  [1m[35m (75.0ms)[0m  [1m[35mCREATE TABLE "questions" ("id" serial primary key, "content" character varying, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL, "received_count" integer DEFAULT 0)[0m
  [1m[35m (84.7ms)[0m  [1m[35mCREATE TABLE "schema_migrations" ("version" character varying PRIMARY KEY)[0m
  [1m[35m (0.5ms)[0m  [1m[34mSELECT version FROM "schema_migrations"[0m
  [1m[35m (16.2ms)[0m  [1m[32mINSERT INTO "schema_migrations" (version) VALUES ('20160621014846')[0m
  [1m[35m (16.2ms)[0m  [1m[32mINSERT INTO schema_migrations (version) VALUES ('20160615195122'), ('20160615195241'), ('20160615195717'), ('20160617182704'), ('20160620225649');

[0m
  [1m[35m (69.6ms)[0m  [1m[35mCREATE TABLE "ar_internal_metadata" ("key" character varying PRIMARY KEY, "value" character varying, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  [1m[36mActiveRecord::InternalMetadata Load (20.4ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" ORDER BY "ar_internal_metadata"."key" ASC LIMIT $1[0m  [["LIMIT", 1]]
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.5ms)[0m  [1m[32mINSERT INTO "ar_internal_metadata" ("key", "value", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "key"[0m  [["key", "environment"], ["value", "development"], ["created_at", 2016-06-21 01:51:23 UTC], ["updated_at", 2016-06-21 01:51:23 UTC]]
  [1m[35m (15.7ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mActiveRecord::InternalMetadata Load (0.3ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" ORDER BY "ar_internal_metadata"."key" ASC LIMIT $1[0m  [["LIMIT", 1]]
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35m (0.2ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mActiveRecord::SchemaMigration Load (0.3ms)[0m  [1m[34mSELECT "schema_migrations".* FROM "schema_migrations"[0m
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (13.0ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "What are you looking for in terms of career development?"], ["created_at", 2016-06-21 01:51:25 UTC], ["updated_at", 2016-06-21 01:51:25 UTC]]
  [1m[35m (19.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "How many ways can you center a div?"], ["created_at", 2016-06-21 01:51:25 UTC], ["updated_at", 2016-06-21 01:51:25 UTC]]
  [1m[35m (40.7ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.3ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.5ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "What are your strengths and weaknesses?"], ["created_at", 2016-06-21 01:51:25 UTC], ["updated_at", 2016-06-21 01:51:25 UTC]]
  [1m[35m (26.9ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "Explain the process of web development to a middle school kid."], ["created_at", 2016-06-21 01:51:25 UTC], ["updated_at", 2016-06-21 01:51:25 UTC]]
  [1m[35m (31.0ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.5ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "What did you like least about your last job?"], ["created_at", 2016-06-21 01:51:25 UTC], ["updated_at", 2016-06-21 01:51:25 UTC]]
  [1m[35m (16.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.5ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "How does the web work?"], ["created_at", 2016-06-21 01:51:25 UTC], ["updated_at", 2016-06-21 01:51:25 UTC]]
  [1m[35m (15.8ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "What is function hoisting in JavaScript?"], ["created_at", 2016-06-21 01:51:25 UTC], ["updated_at", 2016-06-21 01:51:25 UTC]]
  [1m[35m (16.0ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "How did you learn programming?"], ["created_at", 2016-06-21 01:51:25 UTC], ["updated_at", 2016-06-21 01:51:25 UTC]]
  [1m[35m (16.5ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.3ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.5ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "What is a closure?"], ["created_at", 2016-06-21 01:51:25 UTC], ["updated_at", 2016-06-21 01:51:25 UTC]]
  [1m[35m (56.1ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "How did you learn web development?"], ["created_at", 2016-06-21 01:51:25 UTC], ["updated_at", 2016-06-21 01:51:25 UTC]]
  [1m[35m (93.9ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.5ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "Describe a time when you were able to improve upon the design that was originally suggested?"], ["created_at", 2016-06-21 01:51:25 UTC], ["updated_at", 2016-06-21 01:51:25 UTC]]
  [1m[35m (22.8ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.5ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "So tell me about yourself."], ["created_at", 2016-06-21 01:51:25 UTC], ["updated_at", 2016-06-21 01:51:25 UTC]]
  [1m[35m (16.1ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.5ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "Where would you like to be in your career five years from now?"], ["created_at", 2016-06-21 01:51:25 UTC], ["updated_at", 2016-06-21 01:51:25 UTC]]
  [1m[35m (15.7ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.3ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.5ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "Why do you want to work with us?"], ["created_at", 2016-06-21 01:51:25 UTC], ["updated_at", 2016-06-21 01:51:25 UTC]]
  [1m[35m (15.7ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "Can you name two programming paradigms important for JavaScript app developers?"], ["created_at", 2016-06-21 01:51:25 UTC], ["updated_at", 2016-06-21 01:51:25 UTC]]
  [1m[35m (37.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "Tell me about your long-term goals."], ["created_at", 2016-06-21 01:51:25 UTC], ["updated_at", 2016-06-21 01:51:25 UTC]]
  [1m[35m (17.8ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "Tell me about the most recent project you worked on. What were your responsibilities?"], ["created_at", 2016-06-21 01:51:25 UTC], ["updated_at", 2016-06-21 01:51:25 UTC]]
  [1m[35m (16.4ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.3ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.5ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "What are your short-term goals."], ["created_at", 2016-06-21 01:51:25 UTC], ["updated_at", 2016-06-21 01:51:25 UTC]]
  [1m[35m (16.4ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.5ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "Do you have any questions for me?"], ["created_at", 2016-06-21 01:51:25 UTC], ["updated_at", 2016-06-21 01:51:25 UTC]]
  [1m[35m (22.2ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.3ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.5ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "Please walk me through one of the projects on your resume."], ["created_at", 2016-06-21 01:51:25 UTC], ["updated_at", 2016-06-21 01:51:25 UTC]]
  [1m[35m (25.6ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.3ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.5ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "What is the difference between classical inheritance and prototypal inheritance? "], ["created_at", 2016-06-21 01:51:25 UTC], ["updated_at", 2016-06-21 01:51:25 UTC]]
  [1m[35m (68.2ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.5ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "Can you tell me about a challenge you've faced at work and how you got through it?"], ["created_at", 2016-06-21 01:51:25 UTC], ["updated_at", 2016-06-21 01:51:25 UTC]]
  [1m[35m (16.5ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.3ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "Explain a polymorphic association?"], ["created_at", 2016-06-21 01:51:25 UTC], ["updated_at", 2016-06-21 01:51:25 UTC]]
  [1m[35m (16.5ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.5ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "Why do you want to be a web developer?"], ["created_at", 2016-06-21 01:51:25 UTC], ["updated_at", 2016-06-21 01:51:25 UTC]]
  [1m[35m (15.4ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.5ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "Describe your production deployment process?"], ["created_at", 2016-06-21 01:51:26 UTC], ["updated_at", 2016-06-21 01:51:26 UTC]]
  [1m[35m (16.9ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.5ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "Why do you want to work for us?"], ["created_at", 2016-06-21 01:51:26 UTC], ["updated_at", 2016-06-21 01:51:26 UTC]]
  [1m[35m (15.4ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "How would you declare and use a constructor in Ruby?"], ["created_at", 2016-06-21 01:51:26 UTC], ["updated_at", 2016-06-21 01:51:26 UTC]]
  [1m[35m (16.0ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.6ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "Do you have any questions for me?"], ["created_at", 2016-06-21 01:51:26 UTC], ["updated_at", 2016-06-21 01:51:26 UTC]]
  [1m[35m (23.2ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "How do you evaluate success?"], ["created_at", 2016-06-21 01:51:26 UTC], ["updated_at", 2016-06-21 01:51:26 UTC]]
  [1m[35m (19.5ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.5ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "How would you describe your work style?"], ["created_at", 2016-06-21 01:51:26 UTC], ["updated_at", 2016-06-21 01:51:26 UTC]]
  [1m[35m (0.9ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.7ms)[0m  [1m[32mINSERT INTO "answers" ("vote_score", "vote_count", "content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["vote_score", 15], ["vote_count", 20], ["content", "Three, and more than you'd expect!\n  <br>\n  You could center a div horizontally, vertically, or both and there are\n  a ton of ways to do them each. It also depends on what you're trying to\n  center. The most common way I do it is using the margins. If you set\n    a div's margin to 0 auto, to will automatically get the width of the\n    client's screen and use that information to center the div.\n  <br>\n  If I had text within a div, I wold use the text-align: center css\n  attribute on the div."], ["question_id", 2], ["created_at", 2016-06-21 01:51:26 UTC], ["updated_at", 2016-06-21 01:51:26 UTC]]
  [1m[35m (35.7ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.5ms)[0m  [1m[32mINSERT INTO "answers" ("vote_score", "vote_count", "content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["vote_score", -5], ["vote_count", 7], ["content", "<p>Just use margin dude.</p>"], ["question_id", 2], ["created_at", 2016-06-21 01:51:26 UTC], ["updated_at", 2016-06-21 01:51:26 UTC]]
  [1m[35m (216.2ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.5ms)[0m  [1m[32mINSERT INTO "answers" ("vote_score", "vote_count", "content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["vote_score", 2], ["vote_count", 2], ["content", "You know when you write notes and pass them to Suzie from\n  down the street? That's kind of what I do. Websites are like notes\n  you want your friends to read. For them to read your notes, you\n  need to also give them the note right? Well that is what the Internet\n  does for you. It sends the websites to the people who want to read\n  them.\n  <br>\n  The best part is, you know how you don't want Ms. Robinson to see\n  you pass that note? It's like that with the Internet too. There's\n  ways of keeping the visits to your website secret!"], ["question_id", 4], ["created_at", 2016-06-21 01:51:26 UTC], ["updated_at", 2016-06-21 01:51:26 UTC]]
  [1m[35m (16.6ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.3ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.5ms)[0m  [1m[32mINSERT INTO "answers" ("vote_score", "vote_count", "content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["vote_score", -7], ["vote_count", 12], ["content", "Web development is like, you know, creating front end\n  presentations of backend APIs using asynchronious requests."], ["question_id", 4], ["created_at", 2016-06-21 01:51:26 UTC], ["updated_at", 2016-06-21 01:51:26 UTC]]
  [1m[35m (24.5ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "How does the web work?"], ["created_at", 2016-06-21 01:51:26 UTC], ["updated_at", 2016-06-21 01:51:26 UTC]]
  [1m[35m (23.4ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.5ms)[0m  [1m[32mINSERT INTO "answers" ("vote_score", "vote_count", "content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["vote_score", -20], ["vote_count", 22], ["content", "It's a series of tubes."], ["question_id", 31], ["created_at", 2016-06-21 01:51:26 UTC], ["updated_at", 2016-06-21 01:51:26 UTC]]
  [1m[35m (20.1ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.5ms)[0m  [1m[32mINSERT INTO "answers" ("vote_score", "vote_count", "content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["vote_score", 5], ["vote_count", 7], ["content", "The Internet has a technical side and a social side. There's the\n  infrastructure, like routers, cables, satelites, ISPs, servers,\n  and website code, and there are the users who participate in the\n  Internet by creating content for it's applications and browsing\n  the sites.\n  <br>\n  I imagine you guys are interested in the technical side though\n  right? (Yes)\n  <br>\n  In short, I'd say it's a communication network designed\n  to deliver messages between computers. One of the most interesting\n  things about it, I think, is that in the end, it really is a\n  bunch of cables! Some run under the oceans, others go through\n  mountains and under forests. Some signals travel through space! All\n  the code we write goes through those cables, I think that's pretty\n  amazing!"], ["question_id", 31], ["created_at", 2016-06-21 01:51:26 UTC], ["updated_at", 2016-06-21 01:51:26 UTC]]
  [1m[35m (16.4ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "How did you learn programming?"], ["created_at", 2016-06-21 01:51:26 UTC], ["updated_at", 2016-06-21 01:51:26 UTC]]
  [1m[35m (24.0ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.5ms)[0m  [1m[32mINSERT INTO "answers" ("vote_score", "vote_count", "content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["vote_score", -3], ["vote_count", 4], ["content", "I just started Googling it you know, and I liked doing it so\n  I ended up trying to do it professionally."], ["question_id", 32], ["created_at", 2016-06-21 01:51:26 UTC], ["updated_at", 2016-06-21 01:51:26 UTC]]
  [1m[35m (31.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.5ms)[0m  [1m[32mINSERT INTO "answers" ("vote_score", "vote_count", "content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["vote_score", -3], ["vote_count", 4], ["content", "For me, it started back in 2011 when I was doing social science\n  at Stockholm University. The creation of communities had become a\n  passion of mine so I was exploring ways of finding data on\n  social networks. The Internet was the obvious place to look so I\n  found myself writing Python scripts to build simple web scrapers and\n  spiders.\n  <br>\n  It was exciting, I discovered coding makes me happy not just for\n  the results it creates but because I like the way it looks. Solving\n  problems is interesting."], ["question_id", 32], ["created_at", 2016-06-21 01:51:26 UTC], ["updated_at", 2016-06-21 01:51:26 UTC]]
  [1m[35m (22.6ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.7ms)[0m  [1m[32mINSERT INTO "answers" ("vote_score", "vote_count", "content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["vote_score", -3], ["vote_count", 6], ["content", "for the best possible opportunity"], ["question_id", 1], ["created_at", 2016-06-21 01:51:27 UTC], ["updated_at", 2016-06-21 01:51:27 UTC]]
  [1m[35m (15.5ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.5ms)[0m  [1m[32mINSERT INTO "answers" ("vote_score", "vote_count", "content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["vote_score", 5], ["vote_count", 12], ["content", "Working with a big group of people, as a programmer I can usually figure out the problem if I keep hacking it on my own but it becomes a burden for me when multiple people join in with me."], ["question_id", 3], ["created_at", 2016-06-21 01:51:27 UTC], ["updated_at", 2016-06-21 01:51:27 UTC]]
  [1m[35m (16.1ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.5ms)[0m  [1m[32mINSERT INTO "answers" ("vote_score", "vote_count", "content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["vote_score", 5], ["vote_count", 7], ["content", "The energy of the people around me. I did not feel any real passion in their work which affected me deeply and prompted me to change courses."], ["question_id", 5], ["created_at", 2016-06-21 01:51:27 UTC], ["updated_at", 2016-06-21 01:51:27 UTC]]
  [1m[35m (16.2ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.3ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.5ms)[0m  [1m[32mINSERT INTO "answers" ("vote_score", "vote_count", "content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["vote_score", 6], ["vote_count", 7], ["content", "Hoisting is JavaScript's default behavior of moving all declarations to the top of the current scope (to the top of the current script or the current function)."], ["question_id", 7], ["created_at", 2016-06-21 01:51:27 UTC], ["updated_at", 2016-06-21 01:51:27 UTC]]
  [1m[35m (15.5ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "answers" ("vote_score", "vote_count", "content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["vote_score", 7], ["vote_count", 8], ["content", "When functions in JavaScript execute, they use the same scope chain that was in effect when they were created. This means that even after the outer function has returned, the inner function still has access to the outer function's variables."], ["question_id", 9], ["created_at", 2016-06-21 01:51:27 UTC], ["updated_at", 2016-06-21 01:51:27 UTC]]
  [1m[35m (18.2ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "answers" ("vote_score", "vote_count", "content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["vote_score", 4], ["vote_count", 7], ["content", "Refactoring the code that we had previously written for our app using service and adapters."], ["question_id", 11], ["created_at", 2016-06-21 01:51:27 UTC], ["updated_at", 2016-06-21 01:51:27 UTC]]
  [1m[35m (18.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "answers" ("vote_score", "vote_count", "content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["vote_score", 8], ["vote_count", 10], ["content", "I would love to be implementing what I have learned in those previous five years by giving back to my company in a senior position"], ["question_id", 13], ["created_at", 2016-06-21 01:51:27 UTC], ["updated_at", 2016-06-21 01:51:27 UTC]]
  [1m[35m (16.1ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "answers" ("vote_score", "vote_count", "content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["vote_score", 3], ["vote_count", 7], ["content", "Prototypal inheritance (also: prototypes, OLOO). Functional programm (also: closures, first class functions, lambdas)."], ["question_id", 15], ["created_at", 2016-06-21 01:51:27 UTC], ["updated_at", 2016-06-21 01:51:27 UTC]]
  [1m[35m (16.1ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "answers" ("vote_score", "vote_count", "content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["vote_score", -5], ["vote_count", 7], ["content", "Is that a new syntax part of ES7"], ["question_id", 15], ["created_at", 2016-06-21 01:51:27 UTC], ["updated_at", 2016-06-21 01:51:27 UTC]]
  [1m[35m (15.9ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "answers" ("vote_score", "vote_count", "content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["vote_score", 7], ["vote_count", 7], ["content", "JavaScript is a multi-paradigm language, supporting imperative/procedural programming along with OOP (Object-Oriented Programming) and functional programming. JavaScript supports OOP with prototypal inheritance."], ["question_id", 15], ["created_at", 2016-06-21 01:51:27 UTC], ["updated_at", 2016-06-21 01:51:27 UTC]]
  [1m[35m (15.6ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.5ms)[0m  [1m[32mINSERT INTO "answers" ("vote_score", "vote_count", "content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["vote_score", -7], ["vote_count", 10], ["content", "I worked on three recent rails project I basically wrote all the code for the project so lead architect I would say"], ["question_id", 17], ["created_at", 2016-06-21 01:51:27 UTC], ["updated_at", 2016-06-21 01:51:27 UTC]]
  [1m[35m (15.5ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "answers" ("vote_score", "vote_count", "content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["vote_score", 7], ["vote_count", 10], ["content", "Had a recent rails project where we focused on refactoring using services and getting 100% test coverage we had 98 but learned how to test controllers, features and models it was an awesome experience"], ["question_id", 17], ["created_at", 2016-06-21 01:51:27 UTC], ["updated_at", 2016-06-21 01:51:27 UTC]]
  [1m[35m (182.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.5ms)[0m  [1m[32mINSERT INTO "answers" ("vote_score", "vote_count", "content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["vote_score", 3], ["vote_count", 11], ["content", "No, Thank you for your time"], ["question_id", 19], ["created_at", 2016-06-21 01:51:27 UTC], ["updated_at", 2016-06-21 01:51:27 UTC]]
  [1m[35m (15.7ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "answers" ("vote_score", "vote_count", "content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["vote_score", 3], ["vote_count", 11], ["content", "Yes, How do you implement your mission statement "], ["question_id", 19], ["created_at", 2016-06-21 01:51:27 UTC], ["updated_at", 2016-06-21 01:51:27 UTC]]
  [1m[35m (18.1ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.5ms)[0m  [1m[32mINSERT INTO "answers" ("vote_score", "vote_count", "content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["vote_score", 11], ["vote_count", 13], ["content", "instances inherit from classes (like a blueprint — a description of the class), and create sub-class relationships: hierarchical class taxonomies. instances inherit directly from other objects. Instances are typically instantiated via factory functions or `Object.create()"], ["question_id", 21], ["created_at", 2016-06-21 01:51:27 UTC], ["updated_at", 2016-06-21 01:51:27 UTC]]
  [1m[35m (15.7ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.3ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.5ms)[0m  [1m[32mINSERT INTO "answers" ("vote_score", "vote_count", "content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["vote_score", -7], ["vote_count", 13], ["content", "No preference for prototypal inheritance & composition over class inheritance."], ["question_id", 21], ["created_at", 2016-06-21 01:51:27 UTC], ["updated_at", 2016-06-21 01:51:27 UTC]]
  [1m[35m (20.0ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.5ms)[0m  [1m[32mINSERT INTO "answers" ("vote_score", "vote_count", "content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["vote_score", 7], ["vote_count", 13], ["content", "Polymorphic association is a term used in discussions of Object-Relational Mapping with respect to the problem of representing in the relational database domain, a relationship from one class to multiple classes"], ["question_id", 23], ["created_at", 2016-06-21 01:51:27 UTC], ["updated_at", 2016-06-21 01:51:27 UTC]]
  [1m[35m (16.0ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.5ms)[0m  [1m[32mINSERT INTO "answers" ("vote_score", "vote_count", "content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["vote_score", -7], ["vote_count", 7], ["content", "What’s that?"], ["question_id", 25], ["created_at", 2016-06-21 01:51:27 UTC], ["updated_at", 2016-06-21 01:51:27 UTC]]
  [1m[35m (20.0ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.5ms)[0m  [1m[32mINSERT INTO "answers" ("vote_score", "vote_count", "content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["vote_score", -3], ["vote_count", 3], ["content", "how about using the initialize method?"], ["question_id", 27], ["created_at", 2016-06-21 01:51:27 UTC], ["updated_at", 2016-06-21 01:51:27 UTC]]
  [1m[35m (16.2ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.3ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.5ms)[0m  [1m[32mINSERT INTO "answers" ("vote_score", "vote_count", "content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["vote_score", 2], ["vote_count", 4], ["content", "Success is the march towards the realization of a worthy ideal?"], ["question_id", 27], ["created_at", 2016-06-21 01:51:27 UTC], ["updated_at", 2016-06-21 01:51:27 UTC]]
  [1m[35m (139.7ms)[0m  [1m[35mCOMMIT[0m
Started GET "/" for ::1 at 2016-06-20 21:54:44 -0400
  [1m[36mActiveRecord::SchemaMigration Load (0.5ms)[0m  [1m[34mSELECT "schema_migrations".* FROM "schema_migrations"[0m
Processing by Rails::WelcomeController#index as HTML
  Parameters: {"internal"=>true}
  Rendering /Users/hlpolivy/.rvm/gems/ruby-2.2.2/gems/railties-5.0.0.rc1/lib/rails/templates/rails/welcome/index.html.erb
  Rendered /Users/hlpolivy/.rvm/gems/ruby-2.2.2/gems/railties-5.0.0.rc1/lib/rails/templates/rails/welcome/index.html.erb (4.9ms)
Completed 200 OK in 75ms (Views: 32.0ms | ActiveRecord: 0.0ms)


Started GET "//api/v1/questions/11" for ::1 at 2016-06-20 21:54:58 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"11"}
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 11], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.4ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 11]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (47.32ms)
Completed 200 OK in 272ms (Views: 106.7ms | ActiveRecord: 7.9ms)


Started GET "//api/v1/questions/11" for ::1 at 2016-06-20 21:55:41 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"11"}
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 11], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.4ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 11]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (5.19ms)
Completed 200 OK in 8ms (Views: 5.5ms | ActiveRecord: 0.7ms)


Started GET "//api/v1/questions/11" for ::1 at 2016-06-20 21:55:50 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"11"}
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 11], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.3ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 11]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (3.44ms)
Completed 200 OK in 5ms (Views: 3.7ms | ActiveRecord: 0.5ms)


Started GET "//api/v1/questions/11" for ::1 at 2016-06-20 21:56:17 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"11"}
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 11], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.3ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 11]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (3.67ms)
Completed 200 OK in 6ms (Views: 4.0ms | ActiveRecord: 0.7ms)


Started GET "//api/v1/questions/11" for ::1 at 2016-06-20 21:56:37 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"11"}
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 11], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.3ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 11]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (3.44ms)
Completed 200 OK in 5ms (Views: 3.6ms | ActiveRecord: 0.7ms)


Started GET "//api/v1/questions/11" for ::1 at 2016-06-20 21:56:56 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"11"}
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 11], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.3ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 11]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (4.08ms)
Completed 200 OK in 6ms (Views: 4.3ms | ActiveRecord: 0.6ms)


Started GET "//api/v1/questions/11" for ::1 at 2016-06-20 21:57:02 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"11"}
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 11], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 11]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (4.4ms)
Completed 200 OK in 7ms (Views: 5.0ms | ActiveRecord: 0.6ms)


Started GET "//api/v1/questions/11" for ::1 at 2016-06-20 21:57:19 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"11"}
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 11], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 11]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (4.05ms)
Completed 200 OK in 6ms (Views: 4.4ms | ActiveRecord: 0.5ms)


Started GET "//api/v1/questions/11" for ::1 at 2016-06-20 21:58:04 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"11"}
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 11], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 11]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (3.77ms)
Completed 200 OK in 5ms (Views: 4.2ms | ActiveRecord: 0.4ms)


Started GET "//api/v1/questions/11" for ::1 at 2016-06-20 21:58:41 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"11"}
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 11], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 11]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (3.46ms)
Completed 200 OK in 5ms (Views: 3.8ms | ActiveRecord: 0.4ms)


Started GET "//api/v1/questions/11" for ::1 at 2016-06-20 21:58:44 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"11"}
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 11], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.4ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 11]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (3.97ms)
Completed 200 OK in 5ms (Views: 4.1ms | ActiveRecord: 0.6ms)


Started GET "//api/v1/questions/11" for ::1 at 2016-06-20 21:58:56 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"11"}
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 11], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.3ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 11]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (4.67ms)
Completed 200 OK in 6ms (Views: 4.9ms | ActiveRecord: 0.5ms)


Started GET "//api/v1/questions/11" for ::1 at 2016-06-20 22:00:34 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"11"}
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 11], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 11]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (20.49ms)
Completed 200 OK in 61ms (Views: 19.6ms | ActiveRecord: 6.5ms)


Started GET "//api/v1/questions/11" for ::1 at 2016-06-20 22:00:48 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"11"}
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 11], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.3ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 11]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (3.79ms)
Completed 200 OK in 6ms (Views: 4.0ms | ActiveRecord: 0.9ms)


Started GET "//api/v1/questions/11" for ::1 at 2016-06-20 22:01:10 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"11"}
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 11], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.4ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 11]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (42.33ms)
Completed 200 OK in 44ms (Views: 42.7ms | ActiveRecord: 0.6ms)


Started GET "//api/v1/questions/11" for ::1 at 2016-06-20 22:01:13 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"11"}
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 11], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.3ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 11]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (5.89ms)
Completed 200 OK in 8ms (Views: 6.3ms | ActiveRecord: 0.6ms)


Started GET "//api/v1/questions/11" for ::1 at 2016-06-20 22:01:17 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"11"}
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 11], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 11]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (4.41ms)
Completed 200 OK in 6ms (Views: 4.7ms | ActiveRecord: 0.5ms)


Started GET "//api/v1/questions/11" for ::1 at 2016-06-20 22:01:56 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"11"}
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 11], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 11]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (3.32ms)
Completed 200 OK in 5ms (Views: 3.6ms | ActiveRecord: 0.4ms)


Started GET "//api/v1/questions/11" for ::1 at 2016-06-20 22:02:24 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"11"}
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 11], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 11]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (3.87ms)
Completed 200 OK in 6ms (Views: 4.3ms | ActiveRecord: 0.5ms)


Started GET "//api/v1/questions/11" for ::1 at 2016-06-20 22:03:25 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"11"}
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 11], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.4ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 11]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (8.08ms)
Completed 200 OK in 10ms (Views: 8.3ms | ActiveRecord: 0.7ms)


Started GET "//api/v1/questions/11" for ::1 at 2016-06-20 22:04:44 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"11"}
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 11], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 11]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (4.78ms)
Completed 200 OK in 7ms (Views: 5.3ms | ActiveRecord: 0.6ms)


Started GET "//api/v1/questions/11" for ::1 at 2016-06-20 22:05:00 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"11"}
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 11], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.3ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 11]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (5.52ms)
Completed 200 OK in 8ms (Views: 6.1ms | ActiveRecord: 0.6ms)


Started GET "//api/v1/questions/11" for ::1 at 2016-06-20 22:05:15 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"11"}
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 11], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.3ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 11]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (6.57ms)
Completed 200 OK in 9ms (Views: 7.2ms | ActiveRecord: 0.5ms)


Started GET "//api/v1/questions/11" for ::1 at 2016-06-20 22:05:28 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"11"}
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 11], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 11]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (5.39ms)
Completed 200 OK in 8ms (Views: 5.7ms | ActiveRecord: 0.6ms)


Started GET "//api/v1/questions/11" for ::1 at 2016-06-20 22:06:02 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"11"}
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 11], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 11]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (6.65ms)
Completed 200 OK in 9ms (Views: 7.0ms | ActiveRecord: 0.4ms)


Started GET "/api/v1/random" for ::1 at 2016-06-20 22:06:10 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
[active_model_serializers] Rendered ActiveModel::Serializer::Null with Hash (0.41ms)
Completed 200 OK in 99ms (Views: 97.8ms | ActiveRecord: 0.0ms)


Started GET "//api/v1/questions/1" for ::1 at 2016-06-20 22:06:10 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"1"}
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 1]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (5.98ms)
Completed 200 OK in 10ms (Views: 6.6ms | ActiveRecord: 0.5ms)


Started GET "//api/v1/questions/1" for ::1 at 2016-06-20 22:06:30 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"1"}
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 1]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (4.55ms)
Completed 200 OK in 6ms (Views: 4.8ms | ActiveRecord: 0.4ms)


Started GET "/api/v1/questions/1" for ::1 at 2016-06-20 22:07:09 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"1"}
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.3ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 1]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (5.89ms)
Completed 200 OK in 9ms (Views: 6.6ms | ActiveRecord: 0.7ms)


Started GET "/api/v1/questions/1" for ::1 at 2016-06-20 22:07:38 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"1"}
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 1]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (5.58ms)
Completed 200 OK in 8ms (Views: 6.0ms | ActiveRecord: 0.6ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-20 22:07:40 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"sadfasd", "vote-count"=>0, "vote-score"=>0, "approved"=>false}, "question"=>{"data"=>{"id"=>"1", "attributes"=>{"content"=>"What are you looking for in terms of career development?", "received-count"=>0}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (1.1ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at", "approved") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["content", "sadfasd"], ["question_id", 1], ["created_at", 2016-06-21 02:07:40 UTC], ["updated_at", 2016-06-21 02:07:40 UTC], ["approved", false]]
  [1m[35m (76.5ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mAnswer Load (1.1ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."question_id" = $1 ORDER BY "answers"."id" DESC LIMIT $2[0m  [["question_id", 1], ["LIMIT", 1]]
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (0.9ms)
Completed 200 OK in 98ms (Views: 1.6ms | ActiveRecord: 79.4ms)


Started GET "/api/v1/questions/1" for ::1 at 2016-06-20 22:08:12 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"1"}
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 1]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (6.2ms)
Completed 200 OK in 9ms (Views: 6.6ms | ActiveRecord: 0.5ms)


Started GET "/api/v1/questions/1" for ::1 at 2016-06-20 22:08:23 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"1"}
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.3ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 1]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (7.88ms)
Completed 200 OK in 10ms (Views: 8.4ms | ActiveRecord: 0.6ms)


Started GET "/api/v1/questions/1" for ::1 at 2016-06-20 22:08:24 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"1"}
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.3ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 1]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (5.92ms)
Completed 200 OK in 9ms (Views: 6.6ms | ActiveRecord: 0.6ms)


Started GET "/api/v1/questions/1" for ::1 at 2016-06-20 22:08:45 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"1"}
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.3ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 1]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (5.22ms)
Completed 200 OK in 7ms (Views: 5.6ms | ActiveRecord: 0.5ms)


Started GET "/api/v1/questions/1" for ::1 at 2016-06-20 22:09:04 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"1"}
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 1]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (5.26ms)
Completed 200 OK in 7ms (Views: 5.6ms | ActiveRecord: 0.5ms)


Started GET "/api/v1/questions/1" for ::1 at 2016-06-20 22:09:53 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"1"}
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 1]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (5.39ms)
Completed 200 OK in 7ms (Views: 5.7ms | ActiveRecord: 0.5ms)


Started GET "/api/v1/questions/1" for ::1 at 2016-06-20 22:10:19 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"1"}
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 1]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (5.37ms)
Completed 200 OK in 7ms (Views: 5.7ms | ActiveRecord: 0.5ms)


Started GET "/api/v1/questions/1" for ::1 at 2016-06-20 22:10:35 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"1"}
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.3ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 1]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (6.05ms)
Completed 200 OK in 8ms (Views: 6.3ms | ActiveRecord: 0.6ms)


Started PATCH "/api/v1/questions/1" for ::1 at 2016-06-20 22:10:37 -0400
Processing by Api::V1::QuestionsController#update as JSON
  Parameters: {"data"=>{"id"=>"1", "attributes"=>{"content"=>"What are you looking for in terms of career development?", "received-count"=>1}, "type"=>"questions"}, "id"=>"1", "question"=>{}}
Completed 500 Internal Server Error in 147000ms (ActiveRecord: 0.0ms)


  
SystemExit (exit):
  
app/controllers/api/v1/questions_controller.rb:12:in `update'
Started GET "/api/v1/questions/1" for ::1 at 2016-06-20 22:13:07 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"1"}
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.8ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 1]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (234.63ms)
Completed 200 OK in 373ms (Views: 242.0ms | ActiveRecord: 14.6ms)


Started PATCH "/api/v1/questions/1" for ::1 at 2016-06-20 22:13:10 -0400
Processing by Api::V1::QuestionsController#update as JSON
  Parameters: {"data"=>{"id"=>"1", "attributes"=>{"content"=>"What are you looking for in terms of career development?", "received-count"=>1}, "type"=>"questions"}, "id"=>"1", "question"=>{}}
Unpermitted parameters: content, received-count
Unpermitted parameters: content, received-count
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", nil], ["LIMIT", 1]]
Completed 404 Not Found in 29ms (ActiveRecord: 0.6ms)


  
ActiveRecord::RecordNotFound (Couldn't find Question with 'id'=):
  
app/controllers/api/v1/questions_controller.rb:13:in `update'
Started GET "/api/v1/questions/1" for ::1 at 2016-06-20 22:13:12 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"1"}
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.5ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 1]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (139.97ms)
Completed 200 OK in 171ms (Views: 153.0ms | ActiveRecord: 1.1ms)


Started GET "/api/v1/questions/1" for ::1 at 2016-06-20 22:13:53 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"1"}
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.7ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 1]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (341.31ms)
Completed 200 OK in 523ms (Views: 355.0ms | ActiveRecord: 10.2ms)


Started PATCH "/api/v1/questions/1" for ::1 at 2016-06-20 22:13:57 -0400
Processing by Api::V1::QuestionsController#update as JSON
  Parameters: {"data"=>{"id"=>"1", "attributes"=>{"content"=>"What are you looking for in terms of career development?", "received-count"=>1}, "type"=>"questions"}, "id"=>"1", "question"=>{}}
Unpermitted parameter: content
Unpermitted parameter: content
  [1m[36mQuestion Load (0.5ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", nil], ["LIMIT", 1]]
Completed 404 Not Found in 31ms (ActiveRecord: 0.5ms)


  
ActiveRecord::RecordNotFound (Couldn't find Question with 'id'=):
  
app/controllers/api/v1/questions_controller.rb:13:in `update'
Started GET "/api/v1/questions/1" for ::1 at 2016-06-20 22:14:21 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"1"}
  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.7ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 1]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (349.09ms)
Completed 200 OK in 538ms (Views: 360.2ms | ActiveRecord: 13.2ms)


Started PATCH "/api/v1/questions/1" for ::1 at 2016-06-20 22:14:24 -0400
Processing by Api::V1::QuestionsController#update as JSON
  Parameters: {"data"=>{"id"=>"1", "attributes"=>{"content"=>"What are you looking for in terms of career development?", "received-count"=>1}, "type"=>"questions"}, "id"=>"1", "question"=>{}}
Unpermitted parameter: content
Unpermitted parameter: content
Completed 500 Internal Server Error in 17ms (ActiveRecord: 0.0ms)


  
NoMethodError (undefined method `[]' for nil:NilClass):
  
app/controllers/api/v1/questions_controller.rb:12:in `update'
Started GET "/api/v1/questions/1" for ::1 at 2016-06-20 22:14:43 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"1"}
  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.6ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 1]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (345.83ms)
Completed 200 OK in 515ms (Views: 360.2ms | ActiveRecord: 9.1ms)


Started PATCH "/api/v1/questions/1" for ::1 at 2016-06-20 22:14:46 -0400
Processing by Api::V1::QuestionsController#update as JSON
  Parameters: {"data"=>{"id"=>"1", "attributes"=>{"content"=>"What are you looking for in terms of career development?", "received-count"=>1}, "type"=>"questions"}, "id"=>"1", "question"=>{}}
Unpermitted parameter: content
  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  [1m[35m (0.9ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (1.0ms)[0m  [1m[33mUPDATE "questions" SET "received_count" = $1, "updated_at" = $2 WHERE "questions"."id" = $3[0m  [["received_count", 1], ["updated_at", 2016-06-21 02:14:46 UTC], ["id", 1]]
  [1m[35m (133.7ms)[0m  [1m[35mCOMMIT[0m
[active_model_serializers]   [1m[36mAnswer Load (0.7ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 1]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (83.88ms)
Completed 200 OK in 328ms (Views: 95.3ms | ActiveRecord: 136.9ms)


Started GET "/api/v1/questions/1" for ::1 at 2016-06-20 22:14:48 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"1"}
  [1m[36mQuestion Load (1.1ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.6ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 1]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (160.66ms)
Completed 200 OK in 199ms (Views: 174.6ms | ActiveRecord: 1.8ms)


Started GET "/api/v1/questions/1" for ::1 at 2016-06-20 22:16:21 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"1"}
  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.6ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 1]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (333.33ms)
Completed 200 OK in 510ms (Views: 346.3ms | ActiveRecord: 10.7ms)


Started GET "/api/v1/questions/1" for ::1 at 2016-06-20 22:16:34 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"1"}
  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.7ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 1]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (139.61ms)
Completed 200 OK in 166ms (Views: 151.0ms | ActiveRecord: 1.3ms)


Started GET "/api/v1/questions/1" for ::1 at 2016-06-20 22:16:49 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"1"}
  [1m[36mQuestion Load (1.1ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.6ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 1]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (173.41ms)
Completed 200 OK in 205ms (Views: 185.0ms | ActiveRecord: 1.7ms)


Started GET "/api/v1/questions/1" for ::1 at 2016-06-20 22:16:54 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"1"}
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.7ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 1]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (173.87ms)
Completed 200 OK in 207ms (Views: 182.6ms | ActiveRecord: 1.3ms)


Started GET "/api/v1/questions/1" for ::1 at 2016-06-20 22:17:35 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"1"}
  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.9ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 1]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (171.64ms)
Completed 200 OK in 209ms (Views: 186.7ms | ActiveRecord: 1.6ms)


Started GET "/api/v1/questions/1" for ::1 at 2016-06-20 22:17:52 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"1"}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.6ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 1]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (168.2ms)
Completed 200 OK in 202ms (Views: 178.2ms | ActiveRecord: 1.4ms)


Started GET "/api/v1/questions/1" for ::1 at 2016-06-20 22:17:59 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"1"}
  [1m[36mQuestion Load (1.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (1.0ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 1]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (180.05ms)
Completed 200 OK in 224ms (Views: 196.5ms | ActiveRecord: 2.2ms)


Started GET "/api/v1/questions/1" for ::1 at 2016-06-20 22:18:00 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"1"}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.6ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 1]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (155.12ms)
Completed 200 OK in 191ms (Views: 165.6ms | ActiveRecord: 1.5ms)


Started GET "/api/v1/questions/1" for ::1 at 2016-06-20 22:18:08 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"1"}
  [1m[36mQuestion Load (1.1ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.8ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 1]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (156.47ms)
Completed 200 OK in 190ms (Views: 170.1ms | ActiveRecord: 1.9ms)


Started GET "/api/v1/questions/1" for ::1 at 2016-06-20 22:18:22 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"1"}
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.6ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 1]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (144.77ms)
Completed 200 OK in 171ms (Views: 152.1ms | ActiveRecord: 1.3ms)


Started GET "/api/v1/questions/1" for ::1 at 2016-06-20 22:19:08 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"1"}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (4.8ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 1]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (139.59ms)
Completed 200 OK in 171ms (Views: 152.4ms | ActiveRecord: 5.6ms)


Started GET "/api/v1/questions/1" for ::1 at 2016-06-20 22:19:20 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"1"}
  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (1.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 1]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (177.03ms)
Completed 200 OK in 215ms (Views: 192.2ms | ActiveRecord: 1.9ms)


Started GET "/api/v1/questions/1" for ::1 at 2016-06-20 22:19:32 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"1"}
  [1m[36mQuestion Load (1.0ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.6ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 1]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (154.88ms)
Completed 200 OK in 191ms (Views: 163.5ms | ActiveRecord: 1.6ms)


Started GET "/api/v1/questions/1" for ::1 at 2016-06-20 22:19:37 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"1"}
  [1m[36mQuestion Load (1.1ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.6ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 1]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (165.58ms)
Completed 200 OK in 202ms (Views: 174.9ms | ActiveRecord: 1.7ms)


Started GET "/api/v1/questions/1" for ::1 at 2016-06-20 22:19:41 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"1"}
  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (5.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 1]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (151.04ms)
Completed 200 OK in 183ms (Views: 159.3ms | ActiveRecord: 5.8ms)


Started PATCH "/api/v1/questions/1" for ::1 at 2016-06-20 22:19:44 -0400
Processing by Api::V1::QuestionsController#update as JSON
  Parameters: {"data"=>{"id"=>"1", "attributes"=>{"content"=>"What are you looking for in terms of career development?", "received-count"=>2}, "type"=>"questions"}, "id"=>"1", "question"=>{}}
Unpermitted parameter: content
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  [1m[35m (1.0ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (83.8ms)[0m  [1m[33mUPDATE "questions" SET "received_count" = $1, "updated_at" = $2 WHERE "questions"."id" = $3[0m  [["received_count", 2], ["updated_at", 2016-06-21 02:19:44 UTC], ["id", 1]]
  [1m[35m (67.1ms)[0m  [1m[35mCOMMIT[0m
[active_model_serializers]   [1m[36mAnswer Load (0.9ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 1]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (88.55ms)
Completed 200 OK in 351ms (Views: 100.0ms | ActiveRecord: 153.3ms)


Started GET "/api/v1/questions/1" for ::1 at 2016-06-20 22:19:51 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"1"}
  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (1.0ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 1]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (175.15ms)
Completed 200 OK in 221ms (Views: 194.9ms | ActiveRecord: 1.7ms)


Started GET "/api/v1/questions/1" for ::1 at 2016-06-20 22:20:14 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"1"}
  [1m[36mQuestion Load (0.9ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.7ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 1]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (179.72ms)
Completed 200 OK in 215ms (Views: 190.0ms | ActiveRecord: 1.6ms)


Started GET "/api/v1/questions/1" for ::1 at 2016-06-20 22:20:19 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"1"}
  [1m[36mQuestion Load (1.1ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.7ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 1]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (184.4ms)
Completed 200 OK in 215ms (Views: 191.4ms | ActiveRecord: 1.8ms)


Started GET "/api/v1/questions/1" for ::1 at 2016-06-20 22:20:20 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"1"}
  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.8ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 1]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (163.05ms)
Completed 200 OK in 201ms (Views: 182.0ms | ActiveRecord: 1.5ms)


Started PATCH "/api/v1/questions/1" for ::1 at 2016-06-20 22:21:52 -0400
Processing by Api::V1::QuestionsController#update as JSON
  Parameters: {"data"=>{"id"=>"1", "attributes"=>{"content"=>"What are you looking for in terms of career development?", "received-count"=>3}, "type"=>"questions"}, "id"=>"1", "question"=>{}}
Unpermitted parameter: content
  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  [1m[35m (0.5ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.8ms)[0m  [1m[33mUPDATE "questions" SET "received_count" = $1, "updated_at" = $2 WHERE "questions"."id" = $3[0m  [["received_count", 3], ["updated_at", 2016-06-21 02:21:52 UTC], ["id", 1]]
  [1m[35m (62.0ms)[0m  [1m[35mCOMMIT[0m
[active_model_serializers]   [1m[36mAnswer Load (1.3ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 1]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (82.43ms)
Completed 200 OK in 241ms (Views: 93.9ms | ActiveRecord: 65.3ms)


Started GET "/api/v1/questions/1" for ::1 at 2016-06-20 22:22:51 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"1"}
  [1m[36mQuestion Load (0.9ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.6ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 1]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (138.43ms)
Completed 200 OK in 173ms (Views: 156.2ms | ActiveRecord: 1.6ms)


Started GET "/api/v1/questions/1" for ::1 at 2016-06-20 22:23:21 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"1"}
  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.6ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 1]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (147.3ms)
Completed 200 OK in 173ms (Views: 154.0ms | ActiveRecord: 1.3ms)


Started GET "/api/v1/questions/1" for ::1 at 2016-06-20 22:23:41 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"1"}
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.7ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 1]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (140.65ms)
Completed 200 OK in 179ms (Views: 156.7ms | ActiveRecord: 1.4ms)


Started GET "/api/v1/questions/1" for ::1 at 2016-06-20 22:23:43 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"1"}
  [1m[36mQuestion Load (1.1ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.9ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 1]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (187.7ms)
Completed 200 OK in 226ms (Views: 203.3ms | ActiveRecord: 2.0ms)


Started GET "/api/v1/questions/1" for ::1 at 2016-06-20 22:23:45 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"1"}
  [1m[36mQuestion Load (1.3ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (1.0ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 1]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (205.41ms)
Completed 200 OK in 241ms (Views: 213.4ms | ActiveRecord: 2.3ms)


Started GET "/api/v1/questions/1" for ::1 at 2016-06-20 22:24:00 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"1"}
  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.6ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 1]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (157.35ms)
Completed 200 OK in 191ms (Views: 170.6ms | ActiveRecord: 1.3ms)


Started GET "/api/v1/questions/1" for ::1 at 2016-06-20 22:24:51 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"1"}
  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.8ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 1]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (155.58ms)
Completed 200 OK in 186ms (Views: 167.6ms | ActiveRecord: 1.5ms)


Started GET "/api/v1/questions/1" for ::1 at 2016-06-20 22:25:33 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"1"}
  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.7ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 1]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (158.06ms)
Completed 200 OK in 190ms (Views: 170.4ms | ActiveRecord: 1.4ms)


Started GET "/api/v1/questions/1" for ::1 at 2016-06-20 22:26:33 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"1"}
  [1m[36mQuestion Load (1.9ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.7ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 1]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (165.35ms)
Completed 200 OK in 201ms (Views: 172.6ms | ActiveRecord: 2.5ms)


Started GET "/api/v1/questions/1" for ::1 at 2016-06-20 22:26:42 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"1"}
  [1m[36mQuestion Load (0.9ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.6ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 1]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (153.03ms)
Completed 200 OK in 189ms (Views: 167.2ms | ActiveRecord: 1.5ms)


Started GET "/api/v1/questions/1" for ::1 at 2016-06-20 22:27:38 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"1"}
  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.7ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 1]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (153.31ms)
Completed 200 OK in 184ms (Views: 165.1ms | ActiveRecord: 1.4ms)


Started GET "/api/v1/questions/1" for ::1 at 2016-06-20 22:28:01 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"1"}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.7ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 1]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (160.91ms)
Completed 200 OK in 194ms (Views: 172.9ms | ActiveRecord: 1.5ms)


Started GET "/api/v1/questions/1" for ::1 at 2016-06-20 22:28:21 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"1"}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.6ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 1]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (158.79ms)
Completed 200 OK in 189ms (Views: 167.7ms | ActiveRecord: 1.5ms)


Started GET "/api/v1/questions/1" for ::1 at 2016-06-20 22:28:31 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"1"}
  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.6ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 1]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (156.38ms)
Completed 200 OK in 183ms (Views: 168.9ms | ActiveRecord: 1.3ms)


Started GET "/api/v1/questions/1" for ::1 at 2016-06-20 22:28:53 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"1"}
  [1m[36mQuestion Load (1.0ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.6ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 1]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (174.46ms)
Completed 200 OK in 209ms (Views: 187.3ms | ActiveRecord: 1.7ms)


Started GET "/api/v1/questions/1" for ::1 at 2016-06-20 22:29:06 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"1"}
  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (1.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 1]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (189.29ms)
Completed 200 OK in 232ms (Views: 204.2ms | ActiveRecord: 2.0ms)


Started GET "/api/v1/questions/1" for ::1 at 2016-06-20 22:29:14 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"1"}
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.7ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 1]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (166.33ms)
Completed 200 OK in 198ms (Views: 179.3ms | ActiveRecord: 1.3ms)


Started GET "/api/v1/questions/2" for ::1 at 2016-06-20 22:29:24 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"2"}
  [1m[36mQuestion Load (1.0ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.7ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 2]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (164.29ms)
Completed 200 OK in 196ms (Views: 171.9ms | ActiveRecord: 1.7ms)


Started GET "/api/v1/questions/2" for ::1 at 2016-06-20 22:30:03 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"2"}
  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.6ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 2]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (148.51ms)
Completed 200 OK in 179ms (Views: 160.2ms | ActiveRecord: 1.3ms)


Started GET "/api/v1/questions/2" for ::1 at 2016-06-20 22:30:12 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"2"}
  [1m[36mQuestion Load (1.1ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.6ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 2]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (171.63ms)
Completed 200 OK in 208ms (Views: 183.5ms | ActiveRecord: 1.7ms)


Started GET "/api/v1/questions/2" for ::1 at 2016-06-20 22:31:36 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"2"}
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.6ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 2]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (161.75ms)
Completed 200 OK in 195ms (Views: 174.3ms | ActiveRecord: 1.3ms)


Started GET "/api/v1/questions/2" for ::1 at 2016-06-20 22:31:44 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"2"}
  [1m[36mQuestion Load (1.1ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.7ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 2]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (163.01ms)
Completed 200 OK in 201ms (Views: 176.2ms | ActiveRecord: 1.8ms)


Started GET "/api/v1/questions/2" for ::1 at 2016-06-20 22:31:49 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"2"}
  [1m[36mQuestion Load (1.1ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.6ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 2]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (162.1ms)
Completed 200 OK in 199ms (Views: 176.9ms | ActiveRecord: 1.7ms)


Started GET "/api/v1/questions/2" for ::1 at 2016-06-20 22:31:53 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"2"}
  [1m[36mQuestion Load (1.1ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.7ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 2]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (158.91ms)
Completed 200 OK in 195ms (Views: 171.5ms | ActiveRecord: 1.7ms)


Started GET "/api/v1/questions/2" for ::1 at 2016-06-20 22:32:13 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"2"}
  [1m[36mQuestion Load (7.9ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (1.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 2]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (227.67ms)
Completed 200 OK in 268ms (Views: 235.8ms | ActiveRecord: 9.1ms)


Started GET "/api/v1/questions/2" for ::1 at 2016-06-20 22:32:57 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"2"}
  [1m[36mQuestion Load (1.1ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.7ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 2]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (160.37ms)
Completed 200 OK in 196ms (Views: 169.3ms | ActiveRecord: 1.8ms)


Started GET "/api/v1/questions/2" for ::1 at 2016-06-20 22:33:12 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"2"}
  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.6ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 2]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (159.18ms)
Completed 200 OK in 195ms (Views: 175.4ms | ActiveRecord: 1.3ms)


Started GET "/api/v1/questions/2" for ::1 at 2016-06-20 22:34:37 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"2"}
  [1m[36mQuestion Load (1.1ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.6ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 2]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (168.3ms)
Completed 200 OK in 214ms (Views: 191.1ms | ActiveRecord: 1.8ms)


Started GET "/api/v1/questions/2" for ::1 at 2016-06-20 22:34:43 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"2"}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.8ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 2]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (181.13ms)
Completed 200 OK in 209ms (Views: 188.3ms | ActiveRecord: 1.6ms)


Started GET "/api/v1/questions/2" for ::1 at 2016-06-20 22:34:51 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"2"}
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.7ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 2]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (191.87ms)
Completed 200 OK in 230ms (Views: 209.0ms | ActiveRecord: 1.3ms)


Started GET "/api/v1/questions/2" for ::1 at 2016-06-20 22:35:15 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"2"}
  [1m[36mQuestion Load (1.0ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.7ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 2]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (171.76ms)
Completed 200 OK in 214ms (Views: 191.0ms | ActiveRecord: 1.7ms)


Started GET "/api/v1/questions/2" for ::1 at 2016-06-20 22:35:19 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"2"}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.7ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 2]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (175.06ms)
Completed 200 OK in 205ms (Views: 182.3ms | ActiveRecord: 1.5ms)


Started GET "/api/v1/questions/2" for ::1 at 2016-06-20 22:35:29 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"2"}
  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.9ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 2]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (184.17ms)
Completed 200 OK in 219ms (Views: 196.2ms | ActiveRecord: 1.6ms)


Started GET "/api/v1/questions/2" for ::1 at 2016-06-20 22:36:37 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"2"}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.8ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 2]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (187.3ms)
Completed 200 OK in 230ms (Views: 203.3ms | ActiveRecord: 1.6ms)


Started GET "/api/v1/questions/2" for ::1 at 2016-06-20 22:36:58 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"2"}
  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.6ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 2]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (158.25ms)
Completed 200 OK in 192ms (Views: 169.0ms | ActiveRecord: 1.3ms)


Started GET "/api/v1/questions/2" for ::1 at 2016-06-20 22:37:15 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"2"}
  [1m[36mQuestion Load (1.0ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (1.0ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 2]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (182.89ms)
Completed 200 OK in 212ms (Views: 189.5ms | ActiveRecord: 2.0ms)


Started GET "/api/v1/questions/2" for ::1 at 2016-06-20 22:37:18 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"2"}
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.7ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 2]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (177.98ms)
Completed 200 OK in 211ms (Views: 190.0ms | ActiveRecord: 1.3ms)


Started GET "/api/v1/questions/2" for ::1 at 2016-06-20 22:37:37 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"2"}
  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.8ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 2]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (174.22ms)
Completed 200 OK in 212ms (Views: 187.5ms | ActiveRecord: 1.4ms)


Started GET "/api/v1/questions/2" for ::1 at 2016-06-20 22:37:41 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"2"}
  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.8ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 2]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (176.65ms)
Completed 200 OK in 210ms (Views: 188.4ms | ActiveRecord: 1.5ms)


Started GET "/api/v1/questions/2" for ::1 at 2016-06-20 22:38:09 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"2"}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.7ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 2]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (171.96ms)
Completed 200 OK in 246ms (Views: 181.7ms | ActiveRecord: 1.5ms)


Started GET "/api/v1/questions/2" for ::1 at 2016-06-20 22:39:25 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"2"}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.6ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 2]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (165.6ms)
Completed 200 OK in 203ms (Views: 178.4ms | ActiveRecord: 1.5ms)


Started GET "/api/v1/questions/2" for ::1 at 2016-06-20 22:40:00 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"2"}
  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (1.5ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 2]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (209.35ms)
Completed 200 OK in 240ms (Views: 216.8ms | ActiveRecord: 2.1ms)


Started GET "/api/v1/questions/2" for ::1 at 2016-06-20 22:40:01 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"2"}
  [1m[36mQuestion Load (1.1ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.7ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 2]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (230.06ms)
Completed 200 OK in 269ms (Views: 244.8ms | ActiveRecord: 1.8ms)


Started GET "/api/v1/questions/2" for ::1 at 2016-06-20 22:40:06 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"2"}
  [1m[36mQuestion Load (1.1ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.7ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 2]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (142.37ms)
Completed 200 OK in 169ms (Views: 149.5ms | ActiveRecord: 1.8ms)


Started GET "/api/v1/questions/2" for ::1 at 2016-06-20 22:40:08 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"2"}
  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.7ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 2]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (149.04ms)
Completed 200 OK in 179ms (Views: 157.1ms | ActiveRecord: 1.4ms)


Started GET "/api/v1/questions/2" for ::1 at 2016-06-20 22:40:19 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"2"}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.8ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 2]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (153.17ms)
Completed 200 OK in 182ms (Views: 160.5ms | ActiveRecord: 1.5ms)


Started GET "/api/v1/questions/2" for ::1 at 2016-06-20 22:41:12 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"2"}
  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.6ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 2]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (166.73ms)
Completed 200 OK in 198ms (Views: 174.5ms | ActiveRecord: 1.4ms)


Started GET "/api/v1/questions/2" for ::1 at 2016-06-20 22:41:17 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"2"}
  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.8ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 2]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (151.39ms)
Completed 200 OK in 180ms (Views: 158.7ms | ActiveRecord: 1.5ms)


Started GET "/api/v1/questions/2" for ::1 at 2016-06-20 22:42:06 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"2"}
  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.8ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 2]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (153.97ms)
Completed 200 OK in 181ms (Views: 161.2ms | ActiveRecord: 1.5ms)


Started GET "/api/v1/questions/2" for ::1 at 2016-06-20 22:44:09 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"2"}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.6ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 2]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (134.07ms)
Completed 200 OK in 165ms (Views: 141.9ms | ActiveRecord: 1.4ms)


Started GET "/api/v1/questions/2" for ::1 at 2016-06-20 22:44:21 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"2"}
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.6ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 2]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (146.96ms)
Completed 200 OK in 175ms (Views: 155.3ms | ActiveRecord: 1.3ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-20 22:44:23 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"asdfasd", "vote-count"=>0, "vote-score"=>0, "approved"=>false}, "question"=>{"data"=>{"id"=>"2", "attributes"=>{"content"=>"How many ways can you center a div?", "received-count"=>0}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
  [1m[35m (0.9ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (20.5ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at", "approved") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["content", "asdfasd"], ["question_id", 2], ["created_at", 2016-06-21 02:44:23 UTC], ["updated_at", 2016-06-21 02:44:23 UTC], ["approved", false]]
  [1m[35m (65.8ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mAnswer Load (1.0ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."question_id" = $1 ORDER BY "answers"."id" DESC LIMIT $2[0m  [["question_id", 2], ["LIMIT", 1]]
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (24.57ms)
Completed 200 OK in 311ms (Views: 37.4ms | ActiveRecord: 89.0ms)


Started GET "/api/v1/questions/2" for ::1 at 2016-06-20 22:45:13 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"2"}
  [1m[36mQuestion Load (1.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.8ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 2]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (194.92ms)
Completed 200 OK in 234ms (Views: 205.7ms | ActiveRecord: 2.0ms)


Started GET "/api/v1/questions/2" for ::1 at 2016-06-20 22:45:14 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"2"}
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.8ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 2]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (181.08ms)
Completed 200 OK in 216ms (Views: 187.9ms | ActiveRecord: 1.4ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-20 22:45:16 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"asdsad", "vote-count"=>0, "vote-score"=>0, "approved"=>false}, "question"=>{"data"=>{"id"=>"2", "attributes"=>{"content"=>"How many ways can you center a div?", "received-count"=>0}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
  [1m[35m (0.5ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.8ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at", "approved") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["content", "asdsad"], ["question_id", 2], ["created_at", 2016-06-21 02:45:16 UTC], ["updated_at", 2016-06-21 02:45:16 UTC], ["approved", false]]
  [1m[35m (123.6ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mAnswer Load (0.8ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."question_id" = $1 ORDER BY "answers"."id" DESC LIMIT $2[0m  [["question_id", 2], ["LIMIT", 1]]
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (26.01ms)
Completed 200 OK in 340ms (Views: 40.2ms | ActiveRecord: 126.5ms)


Started GET "/api/v1/questions/2" for ::1 at 2016-06-20 22:45:19 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"2"}
  [1m[36mQuestion Load (1.0ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.6ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 2]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (201.73ms)
Completed 200 OK in 239ms (Views: 214.1ms | ActiveRecord: 1.6ms)


Started GET "/api/v1/questions/2" for ::1 at 2016-06-20 22:46:06 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"2"}
  [1m[36mQuestion Load (0.9ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.6ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 2]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (203.0ms)
Completed 200 OK in 234ms (Views: 215.6ms | ActiveRecord: 1.5ms)


Started GET "/api/v1/questions/2" for ::1 at 2016-06-20 22:46:07 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"2"}
  [1m[36mQuestion Load (1.1ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.6ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 2]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (221.28ms)
Completed 200 OK in 251ms (Views: 228.7ms | ActiveRecord: 1.7ms)


Started GET "/api/v1/questions/2" for ::1 at 2016-06-20 22:46:58 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"2"}
  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.7ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 2]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (207.82ms)
Completed 200 OK in 237ms (Views: 215.4ms | ActiveRecord: 1.3ms)


Started GET "/api/v1/questions/2" for ::1 at 2016-06-20 22:47:07 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"2"}
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.6ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 2]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (189.45ms)
Completed 200 OK in 217ms (Views: 196.7ms | ActiveRecord: 1.3ms)


Started PATCH "/api/v1/questions/2" for ::1 at 2016-06-20 22:47:10 -0400
Processing by Api::V1::QuestionsController#update as JSON
  Parameters: {"data"=>{"id"=>"2", "attributes"=>{"content"=>"How many ways can you center a div?", "received-count"=>1}, "type"=>"questions"}, "id"=>"2", "question"=>{}}
Unpermitted parameter: content
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
  [1m[35m (0.6ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (79.1ms)[0m  [1m[33mUPDATE "questions" SET "received_count" = $1, "updated_at" = $2 WHERE "questions"."id" = $3[0m  [["received_count", 1], ["updated_at", 2016-06-21 02:47:10 UTC], ["id", 2]]
  [1m[35m (62.8ms)[0m  [1m[35mCOMMIT[0m
[active_model_serializers]   [1m[36mAnswer Load (0.7ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 2]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (100.57ms)
Completed 200 OK in 325ms (Views: 107.3ms | ActiveRecord: 143.8ms)


Started GET "/api/v1/questions/2" for ::1 at 2016-06-20 22:47:15 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"2"}
  [1m[36mQuestion Load (0.9ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.8ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 2]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (205.23ms)
Completed 200 OK in 236ms (Views: 216.7ms | ActiveRecord: 1.7ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-20 22:47:26 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"asdasd", "vote-count"=>0, "vote-score"=>0, "approved"=>false}, "question"=>{"data"=>{"id"=>"2", "attributes"=>{"content"=>"How many ways can you center a div?", "received-count"=>1}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
  [1m[35m (0.6ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.9ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at", "approved") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["content", "asdasd"], ["question_id", 2], ["created_at", 2016-06-21 02:47:26 UTC], ["updated_at", 2016-06-21 02:47:26 UTC], ["approved", false]]
  [1m[35m (51.7ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mAnswer Load (1.3ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."question_id" = $1 ORDER BY "answers"."id" DESC LIMIT $2[0m  [["question_id", 2], ["LIMIT", 1]]
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (25.38ms)
Completed 200 OK in 258ms (Views: 36.7ms | ActiveRecord: 55.2ms)


  [1m[35m (14.7ms)[0m  [1m[34mSELECT pg_try_advisory_lock(7064053580037655320);[0m
  [1m[36mActiveRecord::SchemaMigration Load (0.7ms)[0m  [1m[34mSELECT "schema_migrations".* FROM "schema_migrations"[0m
Migrating to CreateCommentsTable (20160621133422)
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35m (114.6ms)[0m  [1m[35mCREATE TABLE "comments" ("id" serial primary key, "answer_id" integer, "content" character varying, "vote_count" integer, "vote_score" integer, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  [1m[35mSQL (0.7ms)[0m  [1m[32mINSERT INTO "schema_migrations" ("version") VALUES ($1) RETURNING "version"[0m  [["version", "20160621133422"]]
  [1m[35m (48.9ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mActiveRecord::InternalMetadata Load (0.8ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" ORDER BY "ar_internal_metadata"."key" ASC LIMIT $1[0m  [["LIMIT", 1]]
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35m (0.1ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.3ms)[0m  [1m[34mSELECT pg_advisory_unlock(7064053580037655320)[0m
  [1m[36mActiveRecord::SchemaMigration Load (0.2ms)[0m  [1m[34mSELECT "schema_migrations".* FROM "schema_migrations"[0m
  [1m[35m (18.3ms)[0m  [1m[34mSELECT t2.oid::regclass::text AS to_table, a1.attname AS column, a2.attname AS primary_key, c.conname AS name, c.confupdtype AS on_update, c.confdeltype AS on_delete
FROM pg_constraint c
JOIN pg_class t1 ON c.conrelid = t1.oid
JOIN pg_class t2 ON c.confrelid = t2.oid
JOIN pg_attribute a1 ON a1.attnum = c.conkey[1] AND a1.attrelid = t1.oid
JOIN pg_attribute a2 ON a2.attnum = c.confkey[1] AND a2.attrelid = t2.oid
JOIN pg_namespace t3 ON c.connamespace = t3.oid
WHERE c.contype = 'f'
  AND t1.relname = 'answers'
  AND t3.nspname = ANY (current_schemas(false))
ORDER BY c.conname
[0m
  [1m[35m (3.8ms)[0m  [1m[34mSELECT t2.oid::regclass::text AS to_table, a1.attname AS column, a2.attname AS primary_key, c.conname AS name, c.confupdtype AS on_update, c.confdeltype AS on_delete
FROM pg_constraint c
JOIN pg_class t1 ON c.conrelid = t1.oid
JOIN pg_class t2 ON c.confrelid = t2.oid
JOIN pg_attribute a1 ON a1.attnum = c.conkey[1] AND a1.attrelid = t1.oid
JOIN pg_attribute a2 ON a2.attnum = c.confkey[1] AND a2.attrelid = t2.oid
JOIN pg_namespace t3 ON c.connamespace = t3.oid
WHERE c.contype = 'f'
  AND t1.relname = 'comments'
  AND t3.nspname = ANY (current_schemas(false))
ORDER BY c.conname
[0m
  [1m[35m (2.7ms)[0m  [1m[34mSELECT t2.oid::regclass::text AS to_table, a1.attname AS column, a2.attname AS primary_key, c.conname AS name, c.confupdtype AS on_update, c.confdeltype AS on_delete
FROM pg_constraint c
JOIN pg_class t1 ON c.conrelid = t1.oid
JOIN pg_class t2 ON c.confrelid = t2.oid
JOIN pg_attribute a1 ON a1.attnum = c.conkey[1] AND a1.attrelid = t1.oid
JOIN pg_attribute a2 ON a2.attnum = c.confkey[1] AND a2.attrelid = t2.oid
JOIN pg_namespace t3 ON c.connamespace = t3.oid
WHERE c.contype = 'f'
  AND t1.relname = 'questions'
  AND t3.nspname = ANY (current_schemas(false))
ORDER BY c.conname
[0m
  [1m[36mActiveRecord::SchemaMigration Load (0.5ms)[0m  [1m[34mSELECT "schema_migrations".* FROM "schema_migrations"[0m
  [1m[35m (0.4ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1[0m  [["key", :environment]]
  [1m[36mActiveRecord::SchemaMigration Load (0.2ms)[0m  [1m[34mSELECT "schema_migrations".* FROM "schema_migrations"[0m
  [1m[35m (0.2ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1[0m  [["key", :environment]]
  [1m[36mActiveRecord::SchemaMigration Load (0.2ms)[0m  [1m[34mSELECT "schema_migrations".* FROM "schema_migrations"[0m
  [1m[35m (0.2ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1[0m  [["key", :environment]]
  [1m[35m (161.1ms)[0m  [1m[35mDROP DATABASE IF EXISTS "QIQAPI_development"[0m
  [1m[35m (202.1ms)[0m  [1m[35mDROP DATABASE IF EXISTS "QIQAPI_test"[0m
  [1m[35m (2663.1ms)[0m  [1m[35mCREATE DATABASE "QIQAPI_development" ENCODING = 'unicode'[0m
  [1m[35m (545.3ms)[0m  [1m[35mCREATE DATABASE "QIQAPI_test" ENCODING = 'unicode'[0m
  [1m[35mSQL (0.4ms)[0m  [1m[35mCREATE EXTENSION IF NOT EXISTS "plpgsql"[0m
  [1m[35m (25.9ms)[0m  [1m[35mCREATE TABLE "answers" ("id" serial primary key, "vote_score" integer DEFAULT 0, "vote_count" integer DEFAULT 0, "content" character varying, "question_id" integer, "created_at" timestamp, "updated_at" timestamp, "approved" boolean DEFAULT 't')[0m
  [1m[35m (4.9ms)[0m  [1m[35mCREATE TABLE "comments" ("id" serial primary key, "answer_id" integer, "content" character varying, "vote_count" integer, "vote_score" integer, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  [1m[35m (3.9ms)[0m  [1m[35mCREATE TABLE "questions" ("id" serial primary key, "content" character varying, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL, "received_count" integer DEFAULT 0)[0m
  [1m[35m (3.2ms)[0m  [1m[35mCREATE TABLE "schema_migrations" ("version" character varying PRIMARY KEY)[0m
  [1m[35m (0.3ms)[0m  [1m[34mSELECT version FROM "schema_migrations"[0m
  [1m[35m (0.8ms)[0m  [1m[32mINSERT INTO "schema_migrations" (version) VALUES ('20160621133422')[0m
  [1m[35m (0.7ms)[0m  [1m[32mINSERT INTO schema_migrations (version) VALUES ('20160615195122'), ('20160615195241'), ('20160615195717'), ('20160617182704'), ('20160620225649'), ('20160621014846');

[0m
  [1m[35m (3.1ms)[0m  [1m[35mCREATE TABLE "ar_internal_metadata" ("key" character varying PRIMARY KEY, "value" character varying, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  [1m[36mActiveRecord::InternalMetadata Load (0.4ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" ORDER BY "ar_internal_metadata"."key" ASC LIMIT $1[0m  [["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "ar_internal_metadata" ("key", "value", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "key"[0m  [["key", "environment"], ["value", "development"], ["created_at", 2016-06-21 13:41:55 UTC], ["updated_at", 2016-06-21 13:41:55 UTC]]
  [1m[35m (0.6ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mActiveRecord::InternalMetadata Load (0.2ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" ORDER BY "ar_internal_metadata"."key" ASC LIMIT $1[0m  [["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35m (0.1ms)[0m  [1m[35mCOMMIT[0m
  [1m[35mSQL (0.4ms)[0m  [1m[35mCREATE EXTENSION IF NOT EXISTS "plpgsql"[0m
  [1m[35m (7.4ms)[0m  [1m[35mCREATE TABLE "answers" ("id" serial primary key, "vote_score" integer DEFAULT 0, "vote_count" integer DEFAULT 0, "content" character varying, "question_id" integer, "created_at" timestamp, "updated_at" timestamp, "approved" boolean DEFAULT 't')[0m
  [1m[35m (4.1ms)[0m  [1m[35mCREATE TABLE "comments" ("id" serial primary key, "answer_id" integer, "content" character varying, "vote_count" integer, "vote_score" integer, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  [1m[35m (4.7ms)[0m  [1m[35mCREATE TABLE "questions" ("id" serial primary key, "content" character varying, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL, "received_count" integer DEFAULT 0)[0m
  [1m[35m (3.9ms)[0m  [1m[35mCREATE TABLE "schema_migrations" ("version" character varying PRIMARY KEY)[0m
  [1m[35m (0.3ms)[0m  [1m[34mSELECT version FROM "schema_migrations"[0m
  [1m[35m (0.8ms)[0m  [1m[32mINSERT INTO "schema_migrations" (version) VALUES ('20160621133422')[0m
  [1m[35m (0.7ms)[0m  [1m[32mINSERT INTO schema_migrations (version) VALUES ('20160615195122'), ('20160615195241'), ('20160615195717'), ('20160617182704'), ('20160620225649'), ('20160621014846');

[0m
  [1m[35m (3.6ms)[0m  [1m[35mCREATE TABLE "ar_internal_metadata" ("key" character varying PRIMARY KEY, "value" character varying, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  [1m[36mActiveRecord::InternalMetadata Load (0.3ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" ORDER BY "ar_internal_metadata"."key" ASC LIMIT $1[0m  [["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "ar_internal_metadata" ("key", "value", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "key"[0m  [["key", "environment"], ["value", "development"], ["created_at", 2016-06-21 13:41:55 UTC], ["updated_at", 2016-06-21 13:41:55 UTC]]
  [1m[35m (0.6ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mActiveRecord::InternalMetadata Load (0.2ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" ORDER BY "ar_internal_metadata"."key" ASC LIMIT $1[0m  [["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35m (0.1ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mActiveRecord::SchemaMigration Load (0.3ms)[0m  [1m[34mSELECT "schema_migrations".* FROM "schema_migrations"[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.7ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "What are you looking for in terms of career development?"], ["created_at", 2016-06-21 13:41:55 UTC], ["updated_at", 2016-06-21 13:41:55 UTC]]
  [1m[35m (4.5ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "How many ways can you center a div?"], ["created_at", 2016-06-21 13:41:55 UTC], ["updated_at", 2016-06-21 13:41:55 UTC]]
  [1m[35m (1.0ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "What are your strengths and weaknesses?"], ["created_at", 2016-06-21 13:41:55 UTC], ["updated_at", 2016-06-21 13:41:55 UTC]]
  [1m[35m (0.7ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "Explain the process of web development to a middle school kid."], ["created_at", 2016-06-21 13:41:55 UTC], ["updated_at", 2016-06-21 13:41:55 UTC]]
  [1m[35m (0.6ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "What did you like least about your last job?"], ["created_at", 2016-06-21 13:41:55 UTC], ["updated_at", 2016-06-21 13:41:55 UTC]]
  [1m[35m (0.7ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "How does the web work?"], ["created_at", 2016-06-21 13:41:55 UTC], ["updated_at", 2016-06-21 13:41:55 UTC]]
  [1m[35m (0.7ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "What is function hoisting in JavaScript?"], ["created_at", 2016-06-21 13:41:55 UTC], ["updated_at", 2016-06-21 13:41:55 UTC]]
  [1m[35m (0.9ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "How did you learn programming?"], ["created_at", 2016-06-21 13:41:55 UTC], ["updated_at", 2016-06-21 13:41:55 UTC]]
  [1m[35m (0.9ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "What is a closure?"], ["created_at", 2016-06-21 13:41:55 UTC], ["updated_at", 2016-06-21 13:41:55 UTC]]
  [1m[35m (1.0ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "How did you learn web development?"], ["created_at", 2016-06-21 13:41:55 UTC], ["updated_at", 2016-06-21 13:41:55 UTC]]
  [1m[35m (0.9ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "Describe a time when you were able to improve upon the design that was originally suggested?"], ["created_at", 2016-06-21 13:41:55 UTC], ["updated_at", 2016-06-21 13:41:55 UTC]]
  [1m[35m (2.6ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "So tell me about yourself."], ["created_at", 2016-06-21 13:41:55 UTC], ["updated_at", 2016-06-21 13:41:55 UTC]]
  [1m[35m (0.7ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "Where would you like to be in your career five years from now?"], ["created_at", 2016-06-21 13:41:55 UTC], ["updated_at", 2016-06-21 13:41:55 UTC]]
  [1m[35m (0.7ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "Why do you want to work with us?"], ["created_at", 2016-06-21 13:41:55 UTC], ["updated_at", 2016-06-21 13:41:55 UTC]]
  [1m[35m (0.7ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "Can you name two programming paradigms important for JavaScript app developers?"], ["created_at", 2016-06-21 13:41:55 UTC], ["updated_at", 2016-06-21 13:41:55 UTC]]
  [1m[35m (2.9ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "Tell me about your long-term goals."], ["created_at", 2016-06-21 13:41:55 UTC], ["updated_at", 2016-06-21 13:41:55 UTC]]
  [1m[35m (0.7ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "Tell me about the most recent project you worked on. What were your responsibilities?"], ["created_at", 2016-06-21 13:41:55 UTC], ["updated_at", 2016-06-21 13:41:55 UTC]]
  [1m[35m (0.7ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "What are your short-term goals."], ["created_at", 2016-06-21 13:41:55 UTC], ["updated_at", 2016-06-21 13:41:55 UTC]]
  [1m[35m (0.8ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "Do you have any questions for me?"], ["created_at", 2016-06-21 13:41:55 UTC], ["updated_at", 2016-06-21 13:41:55 UTC]]
  [1m[35m (1.0ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "Please walk me through one of the projects on your resume."], ["created_at", 2016-06-21 13:41:55 UTC], ["updated_at", 2016-06-21 13:41:55 UTC]]
  [1m[35m (0.8ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "What is the difference between classical inheritance and prototypal inheritance? "], ["created_at", 2016-06-21 13:41:55 UTC], ["updated_at", 2016-06-21 13:41:55 UTC]]
  [1m[35m (1.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "Can you tell me about a challenge you've faced at work and how you got through it?"], ["created_at", 2016-06-21 13:41:55 UTC], ["updated_at", 2016-06-21 13:41:55 UTC]]
  [1m[35m (0.9ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "Explain a polymorphic association?"], ["created_at", 2016-06-21 13:41:55 UTC], ["updated_at", 2016-06-21 13:41:55 UTC]]
  [1m[35m (0.8ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "Why do you want to be a web developer?"], ["created_at", 2016-06-21 13:41:55 UTC], ["updated_at", 2016-06-21 13:41:55 UTC]]
  [1m[35m (0.8ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "Describe your production deployment process?"], ["created_at", 2016-06-21 13:41:55 UTC], ["updated_at", 2016-06-21 13:41:55 UTC]]
  [1m[35m (2.2ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "Why do you want to work for us?"], ["created_at", 2016-06-21 13:41:55 UTC], ["updated_at", 2016-06-21 13:41:55 UTC]]
  [1m[35m (0.9ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "How would you declare and use a constructor in Ruby?"], ["created_at", 2016-06-21 13:41:55 UTC], ["updated_at", 2016-06-21 13:41:55 UTC]]
  [1m[35m (0.7ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "Do you have any questions for me?"], ["created_at", 2016-06-21 13:41:55 UTC], ["updated_at", 2016-06-21 13:41:55 UTC]]
  [1m[35m (0.7ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "How do you evaluate success?"], ["created_at", 2016-06-21 13:41:55 UTC], ["updated_at", 2016-06-21 13:41:55 UTC]]
  [1m[35m (0.6ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "How would you describe your work style?"], ["created_at", 2016-06-21 13:41:55 UTC], ["updated_at", 2016-06-21 13:41:55 UTC]]
  [1m[35m (0.6ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.6ms)[0m  [1m[32mINSERT INTO "answers" ("vote_score", "vote_count", "content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["vote_score", 15], ["vote_count", 20], ["content", "Three, and more than you'd expect!\n  <br>\n  You could center a div horizontally, vertically, or both and there are\n  a ton of ways to do them each. It also depends on what you're trying to\n  center. The most common way I do it is using the margins. If you set\n    a div's margin to 0 auto, to will automatically get the width of the\n    client's screen and use that information to center the div.\n  <br>\n  If I had text within a div, I wold use the text-align: center css\n  attribute on the div."], ["question_id", 2], ["created_at", 2016-06-21 13:41:55 UTC], ["updated_at", 2016-06-21 13:41:55 UTC]]
  [1m[35m (16.4ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.5ms)[0m  [1m[32mINSERT INTO "answers" ("vote_score", "vote_count", "content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["vote_score", -1], ["vote_count", 7], ["content", "<p>Just use margin dude.</p>"], ["question_id", 2], ["created_at", 2016-06-21 13:41:55 UTC], ["updated_at", 2016-06-21 13:41:55 UTC]]
  [1m[35m (1.0ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "answers" ("vote_score", "vote_count", "content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["vote_score", 2], ["vote_count", 2], ["content", "You know when you write notes and pass them to Suzie from\n  down the street? That's kind of what I do. Websites are like notes\n  you want your friends to read. For them to read your notes, you\n  need to also give them the note right? Well that is what the Internet\n  does for you. It sends the websites to the people who want to read\n  them.\n  <br>\n  The best part is, you know how you don't want Ms. Robinson to see\n  you pass that note? It's like that with the Internet too. There's\n  ways of keeping the visits to your website secret!"], ["question_id", 4], ["created_at", 2016-06-21 13:41:55 UTC], ["updated_at", 2016-06-21 13:41:55 UTC]]
  [1m[35m (0.9ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.5ms)[0m  [1m[32mINSERT INTO "answers" ("vote_score", "vote_count", "content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["vote_score", -2], ["vote_count", 4], ["content", "Web development is like, you know, creating front end\n  presentations of backend APIs using asynchronious requests."], ["question_id", 4], ["created_at", 2016-06-21 13:41:55 UTC], ["updated_at", 2016-06-21 13:41:55 UTC]]
  [1m[35m (0.7ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "How does the web work?"], ["created_at", 2016-06-21 13:41:55 UTC], ["updated_at", 2016-06-21 13:41:55 UTC]]
  [1m[35m (0.7ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "answers" ("vote_score", "vote_count", "content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["vote_score", -2], ["vote_count", 3], ["content", "It's a series of tubes."], ["question_id", 31], ["created_at", 2016-06-21 13:41:55 UTC], ["updated_at", 2016-06-21 13:41:55 UTC]]
  [1m[35m (0.6ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "answers" ("vote_score", "vote_count", "content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["vote_score", 5], ["vote_count", 7], ["content", "The Internet has a technical side and a social side. There's the\n  infrastructure, like routers, cables, satelites, ISPs, servers,\n  and website code, and there are the users who participate in the\n  Internet by creating content for it's applications and browsing\n  the sites.\n  <br>\n  I imagine you guys are interested in the technical side though\n  right? (Yes)\n  <br>\n  In short, I'd say it's a communication network designed\n  to deliver messages between computers. One of the most interesting\n  things about it, I think, is that in the end, it really is a\n  bunch of cables! Some run under the oceans, others go through\n  mountains and under forests. Some signals travel through space! All\n  the code we write goes through those cables, I think that's pretty\n  amazing!"], ["question_id", 31], ["created_at", 2016-06-21 13:41:55 UTC], ["updated_at", 2016-06-21 13:41:55 UTC]]
  [1m[35m (0.8ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "How did you learn programming?"], ["created_at", 2016-06-21 13:41:55 UTC], ["updated_at", 2016-06-21 13:41:55 UTC]]
  [1m[35m (0.9ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "answers" ("vote_score", "vote_count", "content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["vote_score", -3], ["vote_count", 4], ["content", "I just started Googling it you know, and I liked doing it so\n  I ended up trying to do it professionally."], ["question_id", 32], ["created_at", 2016-06-21 13:41:55 UTC], ["updated_at", 2016-06-21 13:41:55 UTC]]
  [1m[35m (0.6ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "answers" ("vote_score", "vote_count", "content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["vote_score", -3], ["vote_count", 4], ["content", "For me, it started back in 2011 when I was doing social science\n  at Stockholm University. The creation of communities had become a\n  passion of mine so I was exploring ways of finding data on\n  social networks. The Internet was the obvious place to look so I\n  found myself writing Python scripts to build simple web scrapers and\n  spiders.\n  <br>\n  It was exciting, I discovered coding makes me happy not just for\n  the results it creates but because I like the way it looks. Solving\n  problems is interesting."], ["question_id", 32], ["created_at", 2016-06-21 13:41:55 UTC], ["updated_at", 2016-06-21 13:41:55 UTC]]
  [1m[35m (0.6ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mActiveRecord::SchemaMigration Load (0.5ms)[0m  [1m[34mSELECT "schema_migrations".* FROM "schema_migrations"[0m
  [1m[35m (0.8ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1[0m  [["key", :environment]]
  [1m[36mActiveRecord::SchemaMigration Load (0.3ms)[0m  [1m[34mSELECT "schema_migrations".* FROM "schema_migrations"[0m
  [1m[35m (0.3ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1[0m  [["key", :environment]]
  [1m[36mActiveRecord::SchemaMigration Load (0.2ms)[0m  [1m[34mSELECT "schema_migrations".* FROM "schema_migrations"[0m
  [1m[35m (0.2ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1[0m  [["key", :environment]]
  [1m[35m (117.2ms)[0m  [1m[35mDROP DATABASE IF EXISTS "QIQAPI_development"[0m
  [1m[35m (120.5ms)[0m  [1m[35mDROP DATABASE IF EXISTS "QIQAPI_test"[0m
  [1m[35m (1947.9ms)[0m  [1m[35mCREATE DATABASE "QIQAPI_development" ENCODING = 'unicode'[0m
  [1m[35m (684.4ms)[0m  [1m[35mCREATE DATABASE "QIQAPI_test" ENCODING = 'unicode'[0m
  [1m[35mSQL (0.8ms)[0m  [1m[35mCREATE EXTENSION IF NOT EXISTS "plpgsql"[0m
  [1m[35m (28.0ms)[0m  [1m[35mCREATE TABLE "answers" ("id" serial primary key, "vote_score" integer DEFAULT 0, "vote_count" integer DEFAULT 0, "content" character varying, "question_id" integer, "created_at" timestamp, "updated_at" timestamp, "approved" boolean DEFAULT 't')[0m
  [1m[35m (6.4ms)[0m  [1m[35mCREATE TABLE "comments" ("id" serial primary key, "answer_id" integer, "content" character varying, "vote_count" integer, "vote_score" integer, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  [1m[35m (5.0ms)[0m  [1m[35mCREATE TABLE "questions" ("id" serial primary key, "content" character varying, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL, "received_count" integer DEFAULT 0)[0m
  [1m[35m (4.2ms)[0m  [1m[35mCREATE TABLE "schema_migrations" ("version" character varying PRIMARY KEY)[0m
  [1m[35m (0.4ms)[0m  [1m[34mSELECT version FROM "schema_migrations"[0m
  [1m[35m (0.8ms)[0m  [1m[32mINSERT INTO "schema_migrations" (version) VALUES ('20160621133422')[0m
  [1m[35m (0.7ms)[0m  [1m[32mINSERT INTO schema_migrations (version) VALUES ('20160615195122'), ('20160615195241'), ('20160615195717'), ('20160617182704'), ('20160620225649'), ('20160621014846');

[0m
  [1m[35m (6.3ms)[0m  [1m[35mCREATE TABLE "ar_internal_metadata" ("key" character varying PRIMARY KEY, "value" character varying, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  [1m[36mActiveRecord::InternalMetadata Load (0.3ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" ORDER BY "ar_internal_metadata"."key" ASC LIMIT $1[0m  [["LIMIT", 1]]
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "ar_internal_metadata" ("key", "value", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "key"[0m  [["key", "environment"], ["value", "development"], ["created_at", 2016-06-21 13:43:24 UTC], ["updated_at", 2016-06-21 13:43:24 UTC]]
  [1m[35m (0.7ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mActiveRecord::InternalMetadata Load (0.2ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" ORDER BY "ar_internal_metadata"."key" ASC LIMIT $1[0m  [["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35m (0.1ms)[0m  [1m[35mCOMMIT[0m
  [1m[35mSQL (0.3ms)[0m  [1m[35mCREATE EXTENSION IF NOT EXISTS "plpgsql"[0m
  [1m[35m (7.6ms)[0m  [1m[35mCREATE TABLE "answers" ("id" serial primary key, "vote_score" integer DEFAULT 0, "vote_count" integer DEFAULT 0, "content" character varying, "question_id" integer, "created_at" timestamp, "updated_at" timestamp, "approved" boolean DEFAULT 't')[0m
  [1m[35m (13.0ms)[0m  [1m[35mCREATE TABLE "comments" ("id" serial primary key, "answer_id" integer, "content" character varying, "vote_count" integer, "vote_score" integer, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  [1m[35m (5.7ms)[0m  [1m[35mCREATE TABLE "questions" ("id" serial primary key, "content" character varying, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL, "received_count" integer DEFAULT 0)[0m
  [1m[35m (4.3ms)[0m  [1m[35mCREATE TABLE "schema_migrations" ("version" character varying PRIMARY KEY)[0m
  [1m[35m (0.4ms)[0m  [1m[34mSELECT version FROM "schema_migrations"[0m
  [1m[35m (0.9ms)[0m  [1m[32mINSERT INTO "schema_migrations" (version) VALUES ('20160621133422')[0m
  [1m[35m (0.8ms)[0m  [1m[32mINSERT INTO schema_migrations (version) VALUES ('20160615195122'), ('20160615195241'), ('20160615195717'), ('20160617182704'), ('20160620225649'), ('20160621014846');

[0m
  [1m[35m (3.9ms)[0m  [1m[35mCREATE TABLE "ar_internal_metadata" ("key" character varying PRIMARY KEY, "value" character varying, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  [1m[36mActiveRecord::InternalMetadata Load (0.3ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" ORDER BY "ar_internal_metadata"."key" ASC LIMIT $1[0m  [["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "ar_internal_metadata" ("key", "value", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "key"[0m  [["key", "environment"], ["value", "development"], ["created_at", 2016-06-21 13:43:24 UTC], ["updated_at", 2016-06-21 13:43:24 UTC]]
  [1m[35m (0.7ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mActiveRecord::InternalMetadata Load (0.2ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" ORDER BY "ar_internal_metadata"."key" ASC LIMIT $1[0m  [["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35m (0.1ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mActiveRecord::SchemaMigration Load (0.3ms)[0m  [1m[34mSELECT "schema_migrations".* FROM "schema_migrations"[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.6ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "What are you looking for in terms of career development?"], ["created_at", 2016-06-21 13:43:24 UTC], ["updated_at", 2016-06-21 13:43:24 UTC]]
  [1m[35m (16.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.5ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "How many ways can you center a div?"], ["created_at", 2016-06-21 13:43:24 UTC], ["updated_at", 2016-06-21 13:43:24 UTC]]
  [1m[35m (0.9ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "What are your strengths and weaknesses?"], ["created_at", 2016-06-21 13:43:24 UTC], ["updated_at", 2016-06-21 13:43:24 UTC]]
  [1m[35m (1.0ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.5ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "Explain the process of web development to a middle school kid."], ["created_at", 2016-06-21 13:43:24 UTC], ["updated_at", 2016-06-21 13:43:24 UTC]]
  [1m[35m (0.7ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.3ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.6ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "What did you like least about your last job?"], ["created_at", 2016-06-21 13:43:24 UTC], ["updated_at", 2016-06-21 13:43:24 UTC]]
  [1m[35m (0.9ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "How does the web work?"], ["created_at", 2016-06-21 13:43:24 UTC], ["updated_at", 2016-06-21 13:43:24 UTC]]
  [1m[35m (0.9ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "What is function hoisting in JavaScript?"], ["created_at", 2016-06-21 13:43:24 UTC], ["updated_at", 2016-06-21 13:43:24 UTC]]
  [1m[35m (1.0ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "How did you learn programming?"], ["created_at", 2016-06-21 13:43:24 UTC], ["updated_at", 2016-06-21 13:43:24 UTC]]
  [1m[35m (0.9ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "What is a closure?"], ["created_at", 2016-06-21 13:43:24 UTC], ["updated_at", 2016-06-21 13:43:24 UTC]]
  [1m[35m (0.8ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "How did you learn web development?"], ["created_at", 2016-06-21 13:43:24 UTC], ["updated_at", 2016-06-21 13:43:24 UTC]]
  [1m[35m (1.7ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "Describe a time when you were able to improve upon the design that was originally suggested?"], ["created_at", 2016-06-21 13:43:24 UTC], ["updated_at", 2016-06-21 13:43:24 UTC]]
  [1m[35m (1.0ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "So tell me about yourself."], ["created_at", 2016-06-21 13:43:24 UTC], ["updated_at", 2016-06-21 13:43:24 UTC]]
  [1m[35m (0.9ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "Where would you like to be in your career five years from now?"], ["created_at", 2016-06-21 13:43:24 UTC], ["updated_at", 2016-06-21 13:43:24 UTC]]
  [1m[35m (0.6ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "Why do you want to work with us?"], ["created_at", 2016-06-21 13:43:24 UTC], ["updated_at", 2016-06-21 13:43:24 UTC]]
  [1m[35m (0.6ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "Can you name two programming paradigms important for JavaScript app developers?"], ["created_at", 2016-06-21 13:43:24 UTC], ["updated_at", 2016-06-21 13:43:24 UTC]]
  [1m[35m (2.2ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "Tell me about your long-term goals."], ["created_at", 2016-06-21 13:43:24 UTC], ["updated_at", 2016-06-21 13:43:24 UTC]]
  [1m[35m (0.9ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "Tell me about the most recent project you worked on. What were your responsibilities?"], ["created_at", 2016-06-21 13:43:24 UTC], ["updated_at", 2016-06-21 13:43:24 UTC]]
  [1m[35m (1.7ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "What are your short-term goals."], ["created_at", 2016-06-21 13:43:24 UTC], ["updated_at", 2016-06-21 13:43:24 UTC]]
  [1m[35m (0.8ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "Do you have any questions for me?"], ["created_at", 2016-06-21 13:43:24 UTC], ["updated_at", 2016-06-21 13:43:24 UTC]]
  [1m[35m (0.7ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "Please walk me through one of the projects on your resume."], ["created_at", 2016-06-21 13:43:24 UTC], ["updated_at", 2016-06-21 13:43:24 UTC]]
  [1m[35m (0.7ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "What is the difference between classical inheritance and prototypal inheritance? "], ["created_at", 2016-06-21 13:43:24 UTC], ["updated_at", 2016-06-21 13:43:24 UTC]]
  [1m[35m (2.2ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "Can you tell me about a challenge you've faced at work and how you got through it?"], ["created_at", 2016-06-21 13:43:24 UTC], ["updated_at", 2016-06-21 13:43:24 UTC]]
  [1m[35m (0.7ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "Explain a polymorphic association?"], ["created_at", 2016-06-21 13:43:24 UTC], ["updated_at", 2016-06-21 13:43:24 UTC]]
  [1m[35m (0.8ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "Why do you want to be a web developer?"], ["created_at", 2016-06-21 13:43:24 UTC], ["updated_at", 2016-06-21 13:43:24 UTC]]
  [1m[35m (0.7ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "Describe your production deployment process?"], ["created_at", 2016-06-21 13:43:24 UTC], ["updated_at", 2016-06-21 13:43:24 UTC]]
  [1m[35m (0.7ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "Why do you want to work for us?"], ["created_at", 2016-06-21 13:43:24 UTC], ["updated_at", 2016-06-21 13:43:24 UTC]]
  [1m[35m (2.1ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "How would you declare and use a constructor in Ruby?"], ["created_at", 2016-06-21 13:43:24 UTC], ["updated_at", 2016-06-21 13:43:24 UTC]]
  [1m[35m (0.9ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "Do you have any questions for me?"], ["created_at", 2016-06-21 13:43:24 UTC], ["updated_at", 2016-06-21 13:43:24 UTC]]
  [1m[35m (0.6ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "How do you evaluate success?"], ["created_at", 2016-06-21 13:43:24 UTC], ["updated_at", 2016-06-21 13:43:24 UTC]]
  [1m[35m (0.7ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "How would you describe your work style?"], ["created_at", 2016-06-21 13:43:24 UTC], ["updated_at", 2016-06-21 13:43:24 UTC]]
  [1m[35m (0.7ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.3ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.8ms)[0m  [1m[32mINSERT INTO "answers" ("vote_score", "vote_count", "content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["vote_score", 15], ["vote_count", 20], ["content", "Three, and more than you'd expect!\n  <br>\n  You could center a div horizontally, vertically, or both and there are\n  a ton of ways to do them each. It also depends on what you're trying to\n  center. The most common way I do it is using the margins. If you set\n    a div's margin to 0 auto, to will automatically get the width of the\n    client's screen and use that information to center the div.\n  <br>\n  If I had text within a div, I wold use the text-align: center css\n  attribute on the div."], ["question_id", 2], ["created_at", 2016-06-21 13:43:24 UTC], ["updated_at", 2016-06-21 13:43:24 UTC]]
  [1m[35m (16.2ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.5ms)[0m  [1m[32mINSERT INTO "answers" ("vote_score", "vote_count", "content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["vote_score", -1], ["vote_count", 7], ["content", "<p>Just use margin dude.</p>"], ["question_id", 2], ["created_at", 2016-06-21 13:43:24 UTC], ["updated_at", 2016-06-21 13:43:24 UTC]]
  [1m[35m (0.7ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "answers" ("vote_score", "vote_count", "content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["vote_score", 2], ["vote_count", 2], ["content", "You know when you write notes and pass them to Suzie from\n  down the street? That's kind of what I do. Websites are like notes\n  you want your friends to read. For them to read your notes, you\n  need to also give them the note right? Well that is what the Internet\n  does for you. It sends the websites to the people who want to read\n  them.\n  <br>\n  The best part is, you know how you don't want Ms. Robinson to see\n  you pass that note? It's like that with the Internet too. There's\n  ways of keeping the visits to your website secret!"], ["question_id", 4], ["created_at", 2016-06-21 13:43:24 UTC], ["updated_at", 2016-06-21 13:43:24 UTC]]
  [1m[35m (0.9ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "answers" ("vote_score", "vote_count", "content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["vote_score", -2], ["vote_count", 4], ["content", "Web development is like, you know, creating front end\n  presentations of backend APIs using asynchronious requests."], ["question_id", 4], ["created_at", 2016-06-21 13:43:24 UTC], ["updated_at", 2016-06-21 13:43:24 UTC]]
  [1m[35m (0.8ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "How does the web work?"], ["created_at", 2016-06-21 13:43:24 UTC], ["updated_at", 2016-06-21 13:43:24 UTC]]
  [1m[35m (0.7ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "answers" ("vote_score", "vote_count", "content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["vote_score", -2], ["vote_count", 3], ["content", "It's a series of tubes."], ["question_id", 31], ["created_at", 2016-06-21 13:43:24 UTC], ["updated_at", 2016-06-21 13:43:24 UTC]]
  [1m[35m (0.9ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.6ms)[0m  [1m[32mINSERT INTO "answers" ("vote_score", "vote_count", "content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["vote_score", 5], ["vote_count", 7], ["content", "The Internet has a technical side and a social side. There's the\n  infrastructure, like routers, cables, satelites, ISPs, servers,\n  and website code, and there are the users who participate in the\n  Internet by creating content for it's applications and browsing\n  the sites.\n  <br>\n  I imagine you guys are interested in the technical side though\n  right? (Yes)\n  <br>\n  In short, I'd say it's a communication network designed\n  to deliver messages between computers. One of the most interesting\n  things about it, I think, is that in the end, it really is a\n  bunch of cables! Some run under the oceans, others go through\n  mountains and under forests. Some signals travel through space! All\n  the code we write goes through those cables, I think that's pretty\n  amazing!"], ["question_id", 31], ["created_at", 2016-06-21 13:43:24 UTC], ["updated_at", 2016-06-21 13:43:24 UTC]]
  [1m[35m (0.7ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "How did you learn programming?"], ["created_at", 2016-06-21 13:43:24 UTC], ["updated_at", 2016-06-21 13:43:24 UTC]]
  [1m[35m (0.6ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "answers" ("vote_score", "vote_count", "content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["vote_score", -3], ["vote_count", 4], ["content", "I just started Googling it you know, and I liked doing it so\n  I ended up trying to do it professionally."], ["question_id", 32], ["created_at", 2016-06-21 13:43:24 UTC], ["updated_at", 2016-06-21 13:43:24 UTC]]
  [1m[35m (0.6ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "answers" ("vote_score", "vote_count", "content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["vote_score", -3], ["vote_count", 4], ["content", "For me, it started back in 2011 when I was doing social science\n  at Stockholm University. The creation of communities had become a\n  passion of mine so I was exploring ways of finding data on\n  social networks. The Internet was the obvious place to look so I\n  found myself writing Python scripts to build simple web scrapers and\n  spiders.\n  <br>\n  It was exciting, I discovered coding makes me happy not just for\n  the results it creates but because I like the way it looks. Solving\n  problems is interesting."], ["question_id", 32], ["created_at", 2016-06-21 13:43:24 UTC], ["updated_at", 2016-06-21 13:43:24 UTC]]
  [1m[35m (0.5ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.7ms)[0m  [1m[32mINSERT INTO "comments" ("answer_id", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["answer_id", 8], ["content", "I agree."], ["created_at", 2016-06-21 13:43:24 UTC], ["updated_at", 2016-06-21 13:43:24 UTC]]
  [1m[35m (0.6ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "answers" ("vote_score", "vote_count", "content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["vote_score", -1], ["vote_count", 6], ["content", "For the best possible opportunity"], ["question_id", 1], ["created_at", 2016-06-21 13:43:24 UTC], ["updated_at", 2016-06-21 13:43:24 UTC]]
  [1m[35m (0.9ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "answers" ("vote_score", "vote_count", "content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["vote_score", 7], ["vote_count", 9], ["content", "I am looking to develop my ability to handle production deployments and ability to communicate with a computer program through algorithms and other functions I have learned at school and will learn in my next job"], ["question_id", 1], ["created_at", 2016-06-21 13:43:24 UTC], ["updated_at", 2016-06-21 13:43:24 UTC]]
  [1m[35m (0.9ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "answers" ("vote_score", "vote_count", "content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["vote_score", 5], ["vote_count", 12], ["content", "Working with a big group of people, as a programmer I can usually figure out the problem if I keep hacking it on my own but it becomes a burden for me when multiple people join in with me."], ["question_id", 3], ["created_at", 2016-06-21 13:43:24 UTC], ["updated_at", 2016-06-21 13:43:24 UTC]]
  [1m[35m (0.9ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "answers" ("vote_score", "vote_count", "content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["vote_score", 3], ["vote_count", 5], ["content", "I would definitely say that my strength would be sitting in front of my computer and weakness in front of an interviewer."], ["question_id", 3], ["created_at", 2016-06-21 13:43:24 UTC], ["updated_at", 2016-06-21 13:43:24 UTC]]
  [1m[35m (0.7ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "answers" ("vote_score", "vote_count", "content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["vote_score", 5], ["vote_count", 7], ["content", "The energy of the people around me. I did not feel any real passion in their work which affected me deeply and prompted me to change courses."], ["question_id", 5], ["created_at", 2016-06-21 13:43:24 UTC], ["updated_at", 2016-06-21 13:43:24 UTC]]
  [1m[35m (0.6ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "answers" ("vote_score", "vote_count", "content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["vote_score", 8], ["vote_count", 11], ["content", "I felt that there was a lot of politics and that your voice or position within the company was not reflective of the hard work and level competence I brought to the table."], ["question_id", 5], ["created_at", 2016-06-21 13:43:24 UTC], ["updated_at", 2016-06-21 13:43:24 UTC]]
  [1m[35m (0.7ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "answers" ("vote_score", "vote_count", "content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["vote_score", 6], ["vote_count", 7], ["content", "Hoisting is JavaScript's default behavior of moving all declarations to the top of the current scope (to the top of the current script or the current function)."], ["question_id", 7], ["created_at", 2016-06-21 13:43:24 UTC], ["updated_at", 2016-06-21 13:43:24 UTC]]
  [1m[35m (0.8ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "answers" ("vote_score", "vote_count", "content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["vote_score", -2], ["vote_count", 3], ["content", "I beleive the variables in JavaScript are assigned on a first come first serve basis?"], ["question_id", 7], ["created_at", 2016-06-21 13:43:24 UTC], ["updated_at", 2016-06-21 13:43:24 UTC]]
  [1m[35m (1.0ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "answers" ("vote_score", "vote_count", "content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["vote_score", 7], ["vote_count", 8], ["content", "When functions in JavaScript execute, they use the same scope chain that was in effect when they were created. This means that even after the outer function has returned, the inner function still has access to the outer function's variables."], ["question_id", 9], ["created_at", 2016-06-21 13:43:24 UTC], ["updated_at", 2016-06-21 13:43:24 UTC]]
  [1m[35m (0.9ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "answers" ("vote_score", "vote_count", "content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["vote_score", -2], ["vote_count", 9], ["content", "The end of a project. Usually involves closing the books and the servers after deployment."], ["question_id", 9], ["created_at", 2016-06-21 13:43:24 UTC], ["updated_at", 2016-06-21 13:43:24 UTC]]
  [1m[35m (0.7ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "answers" ("vote_score", "vote_count", "content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["vote_score", 4], ["vote_count", 7], ["content", "Refactoring the code that we had previously written for our app using service and adapters."], ["question_id", 11], ["created_at", 2016-06-21 13:43:24 UTC], ["updated_at", 2016-06-21 13:43:24 UTC]]
  [1m[35m (0.6ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.5ms)[0m  [1m[32mINSERT INTO "answers" ("vote_score", "vote_count", "content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["vote_score", 8], ["vote_count", 10], ["content", "I would love to be implementing what I have learned in those previous five years by giving back to my company in a senior position"], ["question_id", 13], ["created_at", 2016-06-21 13:43:24 UTC], ["updated_at", 2016-06-21 13:43:24 UTC]]
  [1m[35m (1.9ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.3ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.5ms)[0m  [1m[32mINSERT INTO "answers" ("vote_score", "vote_count", "content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["vote_score", 3], ["vote_count", 7], ["content", "Prototypal inheritance (also: prototypes, OLOO). Functional programm (also: closures, first class functions, lambdas)."], ["question_id", 15], ["created_at", 2016-06-21 13:43:24 UTC], ["updated_at", 2016-06-21 13:43:24 UTC]]
  [1m[35m (1.1ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "answers" ("vote_score", "vote_count", "content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["vote_score", -2], ["vote_count", 11], ["content", "Is that a new syntax part of ES7"], ["question_id", 15], ["created_at", 2016-06-21 13:43:24 UTC], ["updated_at", 2016-06-21 13:43:24 UTC]]
  [1m[35m (0.7ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "answers" ("vote_score", "vote_count", "content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["vote_score", 7], ["vote_count", 7], ["content", "JavaScript is a multi-paradigm language, supporting imperative/procedural programming along with OOP (Object-Oriented Programming) and functional programming. JavaScript supports OOP with prototypal inheritance."], ["question_id", 15], ["created_at", 2016-06-21 13:43:24 UTC], ["updated_at", 2016-06-21 13:43:24 UTC]]
  [1m[35m (1.0ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "answers" ("vote_score", "vote_count", "content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["vote_score", -7], ["vote_count", 10], ["content", "I worked on three recent rails project I basically wrote all the code for the project so lead architect I would say"], ["question_id", 17], ["created_at", 2016-06-21 13:43:24 UTC], ["updated_at", 2016-06-21 13:43:24 UTC]]
  [1m[35m (0.8ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.6ms)[0m  [1m[32mINSERT INTO "answers" ("vote_score", "vote_count", "content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["vote_score", 7], ["vote_count", 10], ["content", "Had a recent rails project where we focused on refactoring using services and getting 100% test coverage we had 98 but learned how to test controllers, features and models it was an awesome experience"], ["question_id", 17], ["created_at", 2016-06-21 13:43:24 UTC], ["updated_at", 2016-06-21 13:43:24 UTC]]
  [1m[35m (1.0ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "answers" ("vote_score", "vote_count", "content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["vote_score", 3], ["vote_count", 11], ["content", "No, Thank you for your time"], ["question_id", 19], ["created_at", 2016-06-21 13:43:24 UTC], ["updated_at", 2016-06-21 13:43:24 UTC]]
  [1m[35m (0.9ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "answers" ("vote_score", "vote_count", "content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["vote_score", 3], ["vote_count", 11], ["content", "Yes, How do you implement your mission statement "], ["question_id", 19], ["created_at", 2016-06-21 13:43:24 UTC], ["updated_at", 2016-06-21 13:43:24 UTC]]
  [1m[35m (0.7ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "answers" ("vote_score", "vote_count", "content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["vote_score", 11], ["vote_count", 13], ["content", "instances inherit from classes (like a blueprint — a description of the class), and create sub-class relationships: hierarchical class taxonomies. instances inherit directly from other objects. Instances are typically instantiated via factory functions or `Object.create()"], ["question_id", 21], ["created_at", 2016-06-21 13:43:24 UTC], ["updated_at", 2016-06-21 13:43:24 UTC]]
  [1m[35m (0.6ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "answers" ("vote_score", "vote_count", "content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["vote_score", -2], ["vote_count", 13], ["content", "No preference for prototypal inheritance & composition over class inheritance."], ["question_id", 21], ["created_at", 2016-06-21 13:43:24 UTC], ["updated_at", 2016-06-21 13:43:24 UTC]]
  [1m[35m (1.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "answers" ("vote_score", "vote_count", "content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["vote_score", 7], ["vote_count", 13], ["content", "Polymorphic association is a term used in discussions of Object-Relational Mapping with respect to the problem of representing in the relational database domain, a relationship from one class to multiple classes"], ["question_id", 23], ["created_at", 2016-06-21 13:43:24 UTC], ["updated_at", 2016-06-21 13:43:24 UTC]]
  [1m[35m (0.9ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "answers" ("vote_score", "vote_count", "content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["vote_score", -1], ["vote_count", 1], ["content", "What’s that?"], ["question_id", 25], ["created_at", 2016-06-21 13:43:24 UTC], ["updated_at", 2016-06-21 13:43:24 UTC]]
  [1m[35m (0.9ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "answers" ("vote_score", "vote_count", "content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["vote_score", -2], ["vote_count", 3], ["content", "how about using the initialize method?"], ["question_id", 27], ["created_at", 2016-06-21 13:43:24 UTC], ["updated_at", 2016-06-21 13:43:24 UTC]]
  [1m[35m (0.9ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "answers" ("vote_score", "vote_count", "content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["vote_score", 2], ["vote_count", 4], ["content", "Success is the march towards the realization of a worthy ideal?"], ["question_id", 27], ["created_at", 2016-06-21 13:43:24 UTC], ["updated_at", 2016-06-21 13:43:24 UTC]]
  [1m[35m (1.0ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.6ms)[0m  [1m[32mINSERT INTO "answers" ("vote_score", "vote_count", "content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["vote_score", 4], ["vote_count", 9], ["content", "I learned web-development by taking classes at the flatiron school"], ["question_id", 10], ["created_at", 2016-06-21 13:43:24 UTC], ["updated_at", 2016-06-21 13:43:24 UTC]]
  [1m[35m (0.7ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "answers" ("vote_score", "vote_count", "content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["vote_score", 8], ["vote_count", 10], ["content", "I took some classes online which included code academy and code school. At first I didn't think too much about it but I couldn't stop looking for classes. This is when I realized I’d be interested in making it a career for me"], ["question_id", 10], ["created_at", 2016-06-21 13:43:24 UTC], ["updated_at", 2016-06-21 13:43:24 UTC]]
  [1m[35m (0.9ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "answers" ("vote_score", "vote_count", "content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["vote_score", -1], ["vote_count", 10], ["content", "I’m born Sydney and live 15 years in the U.S"], ["question_id", 12], ["created_at", 2016-06-21 13:43:24 UTC], ["updated_at", 2016-06-21 13:43:24 UTC]]
  [1m[35m (1.6ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "answers" ("vote_score", "vote_count", "content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["vote_score", 6], ["vote_count", 10], ["content", "I am an engineer who quickly became in love with coding at a young age. I am striving to become the best programmer I could be and I hope that with time I will be able to accomplish that goal"], ["question_id", 12], ["created_at", 2016-06-21 13:43:24 UTC], ["updated_at", 2016-06-21 13:43:24 UTC]]
  [1m[35m (1.1ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "answers" ("vote_score", "vote_count", "content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["vote_score", 4], ["vote_count", 7], ["content", "Because I align with your mission and how you help the community on a daily basis"], ["question_id", 14], ["created_at", 2016-06-21 13:43:24 UTC], ["updated_at", 2016-06-21 13:43:24 UTC]]
  [1m[35m (0.9ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "answers" ("vote_score", "vote_count", "content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["vote_score", -2], ["vote_count", 7], ["content", "You're a big corporation with a lot of opportunities."], ["question_id", 14], ["created_at", 2016-06-21 13:43:24 UTC], ["updated_at", 2016-06-21 13:43:24 UTC]]
  [1m[35m (0.8ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "answers" ("vote_score", "vote_count", "content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["vote_score", -2], ["vote_count", 4], ["content", "I plan to be the best programmer in the world"], ["question_id", 16], ["created_at", 2016-06-21 13:43:24 UTC], ["updated_at", 2016-06-21 13:43:24 UTC]]
  [1m[35m (0.7ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "answers" ("vote_score", "vote_count", "content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["vote_score", 6], ["vote_count", 9], ["content", "To put myself in a situation of learning where I can always give back to my community."], ["question_id", 16], ["created_at", 2016-06-21 13:43:24 UTC], ["updated_at", 2016-06-21 13:43:24 UTC]]
  [1m[35m (0.7ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "answers" ("vote_score", "vote_count", "content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["vote_score", -2], ["vote_count", 6], ["content", "To learn as much as I can so I can advance in my career."], ["question_id", 18], ["created_at", 2016-06-21 13:43:24 UTC], ["updated_at", 2016-06-21 13:43:24 UTC]]
  [1m[35m (2.1ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "answers" ("vote_score", "vote_count", "content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["vote_score", 6], ["vote_count", 9], ["content", "To join a company that will allow me to grow both personally and professionally"], ["question_id", 18], ["created_at", 2016-06-21 13:43:24 UTC], ["updated_at", 2016-06-21 13:43:24 UTC]]
  [1m[35m (0.9ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "answers" ("vote_score", "vote_count", "content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["vote_score", 6], ["vote_count", 9], ["content", "I hope to put myself in a situation of learning where I can always give back to my community."], ["question_id", 20], ["created_at", 2016-06-21 13:43:24 UTC], ["updated_at", 2016-06-21 13:43:24 UTC]]
  [1m[35m (0.9ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "answers" ("vote_score", "vote_count", "content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["vote_score", 1], ["vote_count", 5], ["content", "I’ve always had problem making deadlines so the way I went about it is through creating calendars that would help me achieve my objectives."], ["question_id", 22], ["created_at", 2016-06-21 13:43:24 UTC], ["updated_at", 2016-06-21 13:43:24 UTC]]
  [1m[35m (1.1ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.6ms)[0m  [1m[32mINSERT INTO "answers" ("vote_score", "vote_count", "content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["vote_score", -1], ["vote_count", 7], ["content", "Because of the opportunity and lifestyle it will give me."], ["question_id", 24], ["created_at", 2016-06-21 13:43:24 UTC], ["updated_at", 2016-06-21 13:43:24 UTC]]
  [1m[35m (1.1ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "answers" ("vote_score", "vote_count", "content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["vote_score", 3], ["vote_count", 4], ["content", "Because of the constant sense of creativity and joy that it gives me. Being a web developer would allow me to put myself in a position of learning from a great community of people who are always open to give."], ["question_id", 24], ["created_at", 2016-06-21 13:43:24 UTC], ["updated_at", 2016-06-21 13:43:24 UTC]]
  [1m[35m (0.9ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "answers" ("vote_score", "vote_count", "content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["vote_score", 4], ["vote_count", 6], ["content", "Because of the mission and sense of community this company instills in the workplace."], ["question_id", 26], ["created_at", 2016-06-21 13:43:24 UTC], ["updated_at", 2016-06-21 13:43:24 UTC]]
  [1m[35m (0.8ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "answers" ("vote_score", "vote_count", "content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["vote_score", -1], ["vote_count", 7], ["content", "I love the perks you have at your office. I can definitely utilize some free lunches"], ["question_id", 26], ["created_at", 2016-06-21 13:43:24 UTC], ["updated_at", 2016-06-21 13:43:24 UTC]]
  [1m[35m (0.6ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "answers" ("vote_score", "vote_count", "content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["vote_score", -1], ["vote_count", 3], ["content", "I do not thank you for your time."], ["question_id", 28], ["created_at", 2016-06-21 13:43:24 UTC], ["updated_at", 2016-06-21 13:43:24 UTC]]
  [1m[35m (0.9ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "answers" ("vote_score", "vote_count", "content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["vote_score", 1], ["vote_count", 2], ["content", "What reservations our question about myself that you feel I haven't answered."], ["question_id", 28], ["created_at", 2016-06-21 13:43:24 UTC], ["updated_at", 2016-06-21 13:43:24 UTC]]
  [1m[35m (0.9ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "answers" ("vote_score", "vote_count", "content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["vote_score", -2], ["vote_count", 10], ["content", "Laidback"], ["question_id", 30], ["created_at", 2016-06-21 13:43:24 UTC], ["updated_at", 2016-06-21 13:43:24 UTC]]
  [1m[35m (0.9ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "answers" ("vote_score", "vote_count", "content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["vote_score", -2], ["vote_count", 3], ["content", "I am a deadline onlooker I strive towards the goal and ravage anything or anybody thats on my way"], ["question_id", 30], ["created_at", 2016-06-21 13:43:24 UTC], ["updated_at", 2016-06-21 13:43:24 UTC]]
  [1m[35m (0.7ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "answers" ("vote_score", "vote_count", "content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["vote_score", 6], ["vote_count", 9], ["content", "I am open to the workload and task assigned by my superior. The more informed the better but I have no problem improvising and getting assignments done before the dealines"], ["question_id", 30], ["created_at", 2016-06-21 13:43:24 UTC], ["updated_at", 2016-06-21 13:43:24 UTC]]
  [1m[35m (0.7ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mComment Load (0.4ms)[0m  [1m[34mSELECT "comments".* FROM "comments"[0m
  [1m[36mComment Load (0.4ms)[0m  [1m[34mSELECT  "comments".* FROM "comments" ORDER BY "comments"."id" ASC LIMIT $1[0m  [["LIMIT", 1]]
  [1m[36mAnswer Load (0.5ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."id" = $1 LIMIT $2[0m  [["id", 8], ["LIMIT", 1]]
Started GET "/" for ::1 at 2016-06-21 09:51:56 -0400
  [1m[36mActiveRecord::SchemaMigration Load (0.7ms)[0m  [1m[34mSELECT "schema_migrations".* FROM "schema_migrations"[0m
Processing by Rails::WelcomeController#index as HTML
  Parameters: {"internal"=>true}
  Rendering /Users/hlpolivy/.rvm/gems/ruby-2.2.2/gems/railties-5.0.0.rc1/lib/rails/templates/rails/welcome/index.html.erb
  Rendered /Users/hlpolivy/.rvm/gems/ruby-2.2.2/gems/railties-5.0.0.rc1/lib/rails/templates/rails/welcome/index.html.erb (9.1ms)
Completed 200 OK in 174ms (Views: 102.6ms | ActiveRecord: 0.0ms)


Started GET "/api/v1/comments" for ::1 at 2016-06-21 09:52:15 -0400
  
ActionController::RoutingError (No route matches [GET] "/api/v1/comments"):
  
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/debug_exceptions.rb:53:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/show_exceptions.rb:31:in `call'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:36:in `call_app'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:24:in `block in call'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:70:in `block in tagged'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:26:in `tagged'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:70:in `tagged'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:24:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/request_id.rb:24:in `call'
rack (2.0.0.rc1) lib/rack/runtime.rb:22:in `call'
activesupport (5.0.0.rc1) lib/active_support/cache/strategy/local_cache_middleware.rb:28:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/static.rb:136:in `call'
rack (2.0.0.rc1) lib/rack/sendfile.rb:111:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
railties (5.0.0.rc1) lib/rails/engine.rb:522:in `call'
puma (3.4.0) lib/puma/configuration.rb:224:in `call'
puma (3.4.0) lib/puma/server.rb:569:in `handle_request'
puma (3.4.0) lib/puma/server.rb:406:in `process_client'
puma (3.4.0) lib/puma/server.rb:271:in `block in run'
puma (3.4.0) lib/puma/thread_pool.rb:114:in `call'
puma (3.4.0) lib/puma/thread_pool.rb:114:in `block in spawn_thread'
Started GET "/api/v1/answers" for ::1 at 2016-06-21 09:52:25 -0400
  
AbstractController::ActionNotFound (The action 'index' could not be found for Api::V1::AnswersController):
  
actionpack (5.0.0.rc1) lib/abstract_controller/base.rb:121:in `process'
actionpack (5.0.0.rc1) lib/action_controller/metal.rb:190:in `dispatch'
actionpack (5.0.0.rc1) lib/action_controller/metal.rb:262:in `dispatch'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:50:in `dispatch'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:32:in `serve'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:39:in `block in serve'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:26:in `each'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:26:in `serve'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:725:in `call'
actionview (5.0.0.rc1) lib/action_view/digestor.rb:12:in `call'
rack (2.0.0.rc1) lib/rack/etag.rb:25:in `call'
rack (2.0.0.rc1) lib/rack/conditional_get.rb:25:in `call'
rack (2.0.0.rc1) lib/rack/head.rb:12:in `call'
activerecord (5.0.0.rc1) lib/active_record/migration.rb:552:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/callbacks.rb:38:in `block in call'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:97:in `__run_callbacks__'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:750:in `_run_call_callbacks'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:90:in `run_callbacks'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/callbacks.rb:36:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/remote_ip.rb:79:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/debug_exceptions.rb:49:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/show_exceptions.rb:31:in `call'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:36:in `call_app'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:24:in `block in call'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:70:in `block in tagged'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:26:in `tagged'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:70:in `tagged'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:24:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/request_id.rb:24:in `call'
rack (2.0.0.rc1) lib/rack/runtime.rb:22:in `call'
activesupport (5.0.0.rc1) lib/active_support/cache/strategy/local_cache_middleware.rb:28:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/static.rb:136:in `call'
rack (2.0.0.rc1) lib/rack/sendfile.rb:111:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
railties (5.0.0.rc1) lib/rails/engine.rb:522:in `call'
puma (3.4.0) lib/puma/configuration.rb:224:in `call'
puma (3.4.0) lib/puma/server.rb:569:in `handle_request'
puma (3.4.0) lib/puma/server.rb:406:in `process_client'
puma (3.4.0) lib/puma/server.rb:271:in `block in run'
puma (3.4.0) lib/puma/thread_pool.rb:114:in `call'
puma (3.4.0) lib/puma/thread_pool.rb:114:in `block in spawn_thread'
Started GET "/api/v1/answers/1" for ::1 at 2016-06-21 09:52:33 -0400
Processing by Api::V1::AnswersController#show as HTML
  Parameters: {"id"=>"1"}
  [1m[36mAnswer Load (1.1ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mComment Load (0.3ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 1]]
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (158.46ms)
Completed 200 OK in 1731ms (Views: 393.8ms | ActiveRecord: 11.4ms)


Started GET "/api/v1/answers/8" for ::1 at 2016-06-21 09:52:36 -0400
Processing by Api::V1::AnswersController#show as HTML
  Parameters: {"id"=>"8"}
  [1m[36mAnswer Load (0.5ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."id" = $1 LIMIT $2[0m  [["id", 8], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 32], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mComment Load (0.3ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 8]]
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (61.17ms)
Completed 200 OK in 64ms (Views: 59.6ms | ActiveRecord: 2.7ms)


Started GET "/api/v1/comments/1" for ::1 at 2016-06-21 09:53:33 -0400
  
ActionController::RoutingError (No route matches [GET] "/api/v1/comments/1"):
  
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/debug_exceptions.rb:53:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/show_exceptions.rb:31:in `call'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:36:in `call_app'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:24:in `block in call'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:70:in `block in tagged'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:26:in `tagged'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:70:in `tagged'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:24:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/request_id.rb:24:in `call'
rack (2.0.0.rc1) lib/rack/runtime.rb:22:in `call'
activesupport (5.0.0.rc1) lib/active_support/cache/strategy/local_cache_middleware.rb:28:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/static.rb:136:in `call'
rack (2.0.0.rc1) lib/rack/sendfile.rb:111:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
railties (5.0.0.rc1) lib/rails/engine.rb:522:in `call'
puma (3.4.0) lib/puma/configuration.rb:224:in `call'
puma (3.4.0) lib/puma/server.rb:569:in `handle_request'
puma (3.4.0) lib/puma/server.rb:406:in `process_client'
puma (3.4.0) lib/puma/server.rb:271:in `block in run'
puma (3.4.0) lib/puma/thread_pool.rb:114:in `call'
puma (3.4.0) lib/puma/thread_pool.rb:114:in `block in spawn_thread'
Started GET "/api/v1/comments/1" for ::1 at 2016-06-21 09:56:08 -0400
  [1m[36mActiveRecord::SchemaMigration Load (0.5ms)[0m  [1m[34mSELECT "schema_migrations".* FROM "schema_migrations"[0m
  
ActionController::RoutingError (No route matches [GET] "/api/v1/comments/1"):
  
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/debug_exceptions.rb:53:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/show_exceptions.rb:31:in `call'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:36:in `call_app'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:24:in `block in call'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:70:in `block in tagged'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:26:in `tagged'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:70:in `tagged'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:24:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/request_id.rb:24:in `call'
rack (2.0.0.rc1) lib/rack/runtime.rb:22:in `call'
activesupport (5.0.0.rc1) lib/active_support/cache/strategy/local_cache_middleware.rb:28:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/static.rb:136:in `call'
rack (2.0.0.rc1) lib/rack/sendfile.rb:111:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
railties (5.0.0.rc1) lib/rails/engine.rb:522:in `call'
puma (3.4.0) lib/puma/configuration.rb:224:in `call'
puma (3.4.0) lib/puma/server.rb:569:in `handle_request'
puma (3.4.0) lib/puma/server.rb:406:in `process_client'
puma (3.4.0) lib/puma/server.rb:271:in `block in run'
puma (3.4.0) lib/puma/thread_pool.rb:114:in `call'
puma (3.4.0) lib/puma/thread_pool.rb:114:in `block in spawn_thread'
Started GET "/api/v1/comments/1" for ::1 at 2016-06-21 09:56:10 -0400
  
ActionController::RoutingError (No route matches [GET] "/api/v1/comments/1"):
  
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/debug_exceptions.rb:53:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/show_exceptions.rb:31:in `call'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:36:in `call_app'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:24:in `block in call'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:70:in `block in tagged'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:26:in `tagged'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:70:in `tagged'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:24:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/request_id.rb:24:in `call'
rack (2.0.0.rc1) lib/rack/runtime.rb:22:in `call'
activesupport (5.0.0.rc1) lib/active_support/cache/strategy/local_cache_middleware.rb:28:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/static.rb:136:in `call'
rack (2.0.0.rc1) lib/rack/sendfile.rb:111:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
railties (5.0.0.rc1) lib/rails/engine.rb:522:in `call'
puma (3.4.0) lib/puma/configuration.rb:224:in `call'
puma (3.4.0) lib/puma/server.rb:569:in `handle_request'
puma (3.4.0) lib/puma/server.rb:406:in `process_client'
puma (3.4.0) lib/puma/server.rb:271:in `block in run'
puma (3.4.0) lib/puma/thread_pool.rb:114:in `call'
puma (3.4.0) lib/puma/thread_pool.rb:114:in `block in spawn_thread'
Started GET "/api/v1/comments/1" for ::1 at 2016-06-21 09:56:12 -0400
  
ActionController::RoutingError (No route matches [GET] "/api/v1/comments/1"):
  
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/debug_exceptions.rb:53:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/show_exceptions.rb:31:in `call'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:36:in `call_app'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:24:in `block in call'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:70:in `block in tagged'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:26:in `tagged'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:70:in `tagged'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:24:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/request_id.rb:24:in `call'
rack (2.0.0.rc1) lib/rack/runtime.rb:22:in `call'
activesupport (5.0.0.rc1) lib/active_support/cache/strategy/local_cache_middleware.rb:28:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/static.rb:136:in `call'
rack (2.0.0.rc1) lib/rack/sendfile.rb:111:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
railties (5.0.0.rc1) lib/rails/engine.rb:522:in `call'
puma (3.4.0) lib/puma/configuration.rb:224:in `call'
puma (3.4.0) lib/puma/server.rb:569:in `handle_request'
puma (3.4.0) lib/puma/server.rb:406:in `process_client'
puma (3.4.0) lib/puma/server.rb:271:in `block in run'
puma (3.4.0) lib/puma/thread_pool.rb:114:in `call'
puma (3.4.0) lib/puma/thread_pool.rb:114:in `block in spawn_thread'
Started GET "/api/v1/comments/1" for ::1 at 2016-06-21 09:56:13 -0400
  
ActionController::RoutingError (No route matches [GET] "/api/v1/comments/1"):
  
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/debug_exceptions.rb:53:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/show_exceptions.rb:31:in `call'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:36:in `call_app'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:24:in `block in call'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:70:in `block in tagged'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:26:in `tagged'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:70:in `tagged'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:24:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/request_id.rb:24:in `call'
rack (2.0.0.rc1) lib/rack/runtime.rb:22:in `call'
activesupport (5.0.0.rc1) lib/active_support/cache/strategy/local_cache_middleware.rb:28:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/static.rb:136:in `call'
rack (2.0.0.rc1) lib/rack/sendfile.rb:111:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
railties (5.0.0.rc1) lib/rails/engine.rb:522:in `call'
puma (3.4.0) lib/puma/configuration.rb:224:in `call'
puma (3.4.0) lib/puma/server.rb:569:in `handle_request'
puma (3.4.0) lib/puma/server.rb:406:in `process_client'
puma (3.4.0) lib/puma/server.rb:271:in `block in run'
puma (3.4.0) lib/puma/thread_pool.rb:114:in `call'
puma (3.4.0) lib/puma/thread_pool.rb:114:in `block in spawn_thread'
Started GET "/api/v1/comments/1" for ::1 at 2016-06-21 09:56:52 -0400
  [1m[36mActiveRecord::SchemaMigration Load (0.5ms)[0m  [1m[34mSELECT "schema_migrations".* FROM "schema_migrations"[0m
  
LoadError (Unable to autoload constant Api::V1::CommentsController, expected /Users/hlpolivy/Development/code/final-project/QIQAPI/app/controllers/api/v1/comments_controller.rb to define it):
  
activesupport (5.0.0.rc1) lib/active_support/dependencies.rb:512:in `load_missing_constant'
activesupport (5.0.0.rc1) lib/active_support/dependencies.rb:203:in `const_missing'
activesupport (5.0.0.rc1) lib/active_support/inflector/methods.rb:270:in `const_get'
activesupport (5.0.0.rc1) lib/active_support/inflector/methods.rb:270:in `block in constantize'
activesupport (5.0.0.rc1) lib/active_support/inflector/methods.rb:266:in `each'
activesupport (5.0.0.rc1) lib/active_support/inflector/methods.rb:266:in `inject'
activesupport (5.0.0.rc1) lib/active_support/inflector/methods.rb:266:in `constantize'
activesupport (5.0.0.rc1) lib/active_support/dependencies.rb:583:in `get'
activesupport (5.0.0.rc1) lib/active_support/dependencies.rb:614:in `constantize'
actionpack (5.0.0.rc1) lib/action_dispatch/http/request.rb:93:in `controller_class'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:44:in `controller'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:30:in `serve'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:39:in `block in serve'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:26:in `each'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:26:in `serve'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:725:in `call'
actionview (5.0.0.rc1) lib/action_view/digestor.rb:12:in `call'
rack (2.0.0.rc1) lib/rack/etag.rb:25:in `call'
rack (2.0.0.rc1) lib/rack/conditional_get.rb:25:in `call'
rack (2.0.0.rc1) lib/rack/head.rb:12:in `call'
activerecord (5.0.0.rc1) lib/active_record/migration.rb:552:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/callbacks.rb:38:in `block in call'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:97:in `__run_callbacks__'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:750:in `_run_call_callbacks'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:90:in `run_callbacks'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/callbacks.rb:36:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/remote_ip.rb:79:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/debug_exceptions.rb:49:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/show_exceptions.rb:31:in `call'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:36:in `call_app'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:24:in `block in call'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:70:in `block in tagged'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:26:in `tagged'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:70:in `tagged'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:24:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/request_id.rb:24:in `call'
rack (2.0.0.rc1) lib/rack/runtime.rb:22:in `call'
activesupport (5.0.0.rc1) lib/active_support/cache/strategy/local_cache_middleware.rb:28:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/static.rb:136:in `call'
rack (2.0.0.rc1) lib/rack/sendfile.rb:111:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
railties (5.0.0.rc1) lib/rails/engine.rb:522:in `call'
puma (3.4.0) lib/puma/configuration.rb:224:in `call'
puma (3.4.0) lib/puma/server.rb:569:in `handle_request'
puma (3.4.0) lib/puma/server.rb:406:in `process_client'
puma (3.4.0) lib/puma/server.rb:271:in `block in run'
puma (3.4.0) lib/puma/thread_pool.rb:114:in `call'
puma (3.4.0) lib/puma/thread_pool.rb:114:in `block in spawn_thread'
Started GET "/api/v1/comments/1" for ::1 at 2016-06-21 09:57:14 -0400
  
LoadError (Unable to autoload constant Api::V1::CommentsController, expected /Users/hlpolivy/Development/code/final-project/QIQAPI/app/controllers/api/v1/comments_controller.rb to define it):
  
activesupport (5.0.0.rc1) lib/active_support/dependencies.rb:512:in `load_missing_constant'
activesupport (5.0.0.rc1) lib/active_support/dependencies.rb:203:in `const_missing'
activesupport (5.0.0.rc1) lib/active_support/inflector/methods.rb:270:in `const_get'
activesupport (5.0.0.rc1) lib/active_support/inflector/methods.rb:270:in `block in constantize'
activesupport (5.0.0.rc1) lib/active_support/inflector/methods.rb:266:in `each'
activesupport (5.0.0.rc1) lib/active_support/inflector/methods.rb:266:in `inject'
activesupport (5.0.0.rc1) lib/active_support/inflector/methods.rb:266:in `constantize'
activesupport (5.0.0.rc1) lib/active_support/dependencies.rb:583:in `get'
activesupport (5.0.0.rc1) lib/active_support/dependencies.rb:614:in `constantize'
actionpack (5.0.0.rc1) lib/action_dispatch/http/request.rb:93:in `controller_class'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:44:in `controller'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:30:in `serve'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:39:in `block in serve'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:26:in `each'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:26:in `serve'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:725:in `call'
actionview (5.0.0.rc1) lib/action_view/digestor.rb:12:in `call'
rack (2.0.0.rc1) lib/rack/etag.rb:25:in `call'
rack (2.0.0.rc1) lib/rack/conditional_get.rb:25:in `call'
rack (2.0.0.rc1) lib/rack/head.rb:12:in `call'
activerecord (5.0.0.rc1) lib/active_record/migration.rb:552:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/callbacks.rb:38:in `block in call'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:97:in `__run_callbacks__'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:750:in `_run_call_callbacks'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:90:in `run_callbacks'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/callbacks.rb:36:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/remote_ip.rb:79:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/debug_exceptions.rb:49:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/show_exceptions.rb:31:in `call'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:36:in `call_app'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:24:in `block in call'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:70:in `block in tagged'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:26:in `tagged'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:70:in `tagged'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:24:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/request_id.rb:24:in `call'
rack (2.0.0.rc1) lib/rack/runtime.rb:22:in `call'
activesupport (5.0.0.rc1) lib/active_support/cache/strategy/local_cache_middleware.rb:28:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/static.rb:136:in `call'
rack (2.0.0.rc1) lib/rack/sendfile.rb:111:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
railties (5.0.0.rc1) lib/rails/engine.rb:522:in `call'
puma (3.4.0) lib/puma/configuration.rb:224:in `call'
puma (3.4.0) lib/puma/server.rb:569:in `handle_request'
puma (3.4.0) lib/puma/server.rb:406:in `process_client'
puma (3.4.0) lib/puma/server.rb:271:in `block in run'
puma (3.4.0) lib/puma/thread_pool.rb:114:in `call'
puma (3.4.0) lib/puma/thread_pool.rb:114:in `block in spawn_thread'
Started GET "/api/v1/comments/1" for ::1 at 2016-06-21 09:57:44 -0400
  
LoadError (Unable to autoload constant Api::V1::CommentsController, expected /Users/hlpolivy/Development/code/final-project/QIQAPI/app/controllers/api/v1/comments_controller.rb to define it):
  
activesupport (5.0.0.rc1) lib/active_support/dependencies.rb:512:in `load_missing_constant'
activesupport (5.0.0.rc1) lib/active_support/dependencies.rb:203:in `const_missing'
activesupport (5.0.0.rc1) lib/active_support/inflector/methods.rb:270:in `const_get'
activesupport (5.0.0.rc1) lib/active_support/inflector/methods.rb:270:in `block in constantize'
activesupport (5.0.0.rc1) lib/active_support/inflector/methods.rb:266:in `each'
activesupport (5.0.0.rc1) lib/active_support/inflector/methods.rb:266:in `inject'
activesupport (5.0.0.rc1) lib/active_support/inflector/methods.rb:266:in `constantize'
activesupport (5.0.0.rc1) lib/active_support/dependencies.rb:583:in `get'
activesupport (5.0.0.rc1) lib/active_support/dependencies.rb:614:in `constantize'
actionpack (5.0.0.rc1) lib/action_dispatch/http/request.rb:93:in `controller_class'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:44:in `controller'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:30:in `serve'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:39:in `block in serve'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:26:in `each'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:26:in `serve'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:725:in `call'
actionview (5.0.0.rc1) lib/action_view/digestor.rb:12:in `call'
rack (2.0.0.rc1) lib/rack/etag.rb:25:in `call'
rack (2.0.0.rc1) lib/rack/conditional_get.rb:25:in `call'
rack (2.0.0.rc1) lib/rack/head.rb:12:in `call'
activerecord (5.0.0.rc1) lib/active_record/migration.rb:552:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/callbacks.rb:38:in `block in call'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:97:in `__run_callbacks__'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:750:in `_run_call_callbacks'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:90:in `run_callbacks'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/callbacks.rb:36:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/remote_ip.rb:79:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/debug_exceptions.rb:49:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/show_exceptions.rb:31:in `call'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:36:in `call_app'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:24:in `block in call'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:70:in `block in tagged'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:26:in `tagged'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:70:in `tagged'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:24:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/request_id.rb:24:in `call'
rack (2.0.0.rc1) lib/rack/runtime.rb:22:in `call'
activesupport (5.0.0.rc1) lib/active_support/cache/strategy/local_cache_middleware.rb:28:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/static.rb:136:in `call'
rack (2.0.0.rc1) lib/rack/sendfile.rb:111:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
railties (5.0.0.rc1) lib/rails/engine.rb:522:in `call'
puma (3.4.0) lib/puma/configuration.rb:224:in `call'
puma (3.4.0) lib/puma/server.rb:569:in `handle_request'
puma (3.4.0) lib/puma/server.rb:406:in `process_client'
puma (3.4.0) lib/puma/server.rb:271:in `block in run'
puma (3.4.0) lib/puma/thread_pool.rb:114:in `call'
puma (3.4.0) lib/puma/thread_pool.rb:114:in `block in spawn_thread'
Started GET "/api/v1/comments/1" for ::1 at 2016-06-21 09:57:58 -0400
Processing by Api::V1::CommentsController#show as HTML
  Parameters: {"id"=>"1"}
Completed 500 Internal Server Error in 5220ms (ActiveRecord: 0.0ms)


  
SystemExit (exit):
  
app/controllers/api/v1/comments_controller.rb:8:in `show'
Started GET "/api/v1/comments/1" for ::1 at 2016-06-21 09:58:09 -0400
Processing by Api::V1::CommentsController#show as HTML
  Parameters: {"id"=>"1"}
  [1m[36mComment Load (1.3ms)[0m  [1m[34mSELECT  "comments".* FROM "comments" WHERE "comments"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.9ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."id" = $1 LIMIT $2[0m  [["id", 8], ["LIMIT", 1]]
[active_model_serializers] Rendered CommentSerializer with ActiveModelSerializers::Adapter::JsonApi (325.44ms)
Completed 200 OK in 905ms (Views: 451.7ms | ActiveRecord: 12.2ms)


Started GET "/api/v1/answers/89" for ::1 at 2016-06-21 09:58:20 -0400
Processing by Api::V1::AnswersController#show as HTML
  Parameters: {"id"=>"89"}
  [1m[36mAnswer Load (0.7ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."id" = $1 LIMIT $2[0m  [["id", 89], ["LIMIT", 1]]
Completed 404 Not Found in 26ms (ActiveRecord: 0.7ms)


  
ActiveRecord::RecordNotFound (Couldn't find Answer with 'id'=89):
  
app/controllers/api/v1/answers_controller.rb:35:in `show'
Started GET "/api/v1/answers/8" for ::1 at 2016-06-21 09:58:23 -0400
Processing by Api::V1::AnswersController#show as HTML
  Parameters: {"id"=>"8"}
  [1m[36mAnswer Load (0.9ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."id" = $1 LIMIT $2[0m  [["id", 8], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 32], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mComment Load (0.6ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 8]]
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (308.4ms)
Completed 200 OK in 336ms (Views: 312.4ms | ActiveRecord: 5.3ms)


Started GET "/api/v1/answers/8" for ::1 at 2016-06-21 09:59:18 -0400
Processing by Api::V1::AnswersController#show as HTML
  Parameters: {"id"=>"8"}
  [1m[36mAnswer Load (0.8ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."id" = $1 LIMIT $2[0m  [["id", 8], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 32], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mComment Load (0.6ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 8]]
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (476.41ms)
Completed 200 OK in 671ms (Views: 486.1ms | ActiveRecord: 15.2ms)


Started GET "/api/v1/questions/32" for ::1 at 2016-06-21 09:59:39 -0400
Processing by Api::V1::QuestionsController#show as HTML
  Parameters: {"id"=>"32"}
  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 32], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (1.1ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 32]]
[active_model_serializers]   [1m[36mComment Load (0.7ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 7]]
[active_model_serializers]   [1m[36mComment Load (0.6ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 8]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (270.72ms)
Completed 200 OK in 311ms (Views: 284.3ms | ActiveRecord: 3.0ms)


Started GET "/api/v1/questions/32" for ::1 at 2016-06-21 10:00:53 -0400
Processing by Api::V1::QuestionsController#show as HTML
  Parameters: {"id"=>"32"}
  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 32], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.7ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 32]]
[active_model_serializers]   [1m[36mComment Load (1.0ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 7]]
[active_model_serializers]   [1m[36mComment Load (0.7ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 8]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (611.4ms)
Completed 200 OK in 775ms (Views: 615.2ms | ActiveRecord: 16.2ms)


Started GET "/api/v1/questions/32" for ::1 at 2016-06-21 10:02:01 -0400
  [1m[36mActiveRecord::SchemaMigration Load (0.5ms)[0m  [1m[34mSELECT "schema_migrations".* FROM "schema_migrations"[0m
Processing by Api::V1::QuestionsController#show as HTML
  Parameters: {"id"=>"32"}
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 32], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.4ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 32]]
[active_model_serializers]   [1m[36mComment Load (0.4ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 7]]
[active_model_serializers]   [1m[36mComment Load (0.4ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 8]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (121.18ms)
Completed 200 OK in 203ms (Views: 162.6ms | ActiveRecord: 13.1ms)


Started GET "/api/v1/questions/23" for ::1 at 2016-06-21 10:03:42 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"23"}
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 23], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 23]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (67.46ms)
Completed 200 OK in 93ms (Views: 75.6ms | ActiveRecord: 6.1ms)


Started GET "/api/v1/questions/32" for ::1 at 2016-06-21 10:03:47 -0400
Processing by Api::V1::QuestionsController#show as HTML
  Parameters: {"id"=>"32"}
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 32], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.3ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 32]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (2.58ms)
Completed 200 OK in 4ms (Views: 2.8ms | ActiveRecord: 0.5ms)


Started GET "/api/v1/questions/32" for ::1 at 2016-06-21 10:03:56 -0400
Processing by Api::V1::QuestionsController#show as HTML
  Parameters: {"id"=>"32"}
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 32], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.6ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 32]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (5.5ms)
Completed 200 OK in 8ms (Views: 5.7ms | ActiveRecord: 1.0ms)


Started GET "/api/v1/questions/32" for ::1 at 2016-06-21 10:05:57 -0400
Processing by Api::V1::QuestionsController#show as HTML
  Parameters: {"id"=>"32"}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 32], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 32]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (57.23ms)
Completed 200 OK in 87ms (Views: 69.6ms | ActiveRecord: 6.9ms)


Started GET "/api/v1/questions/32" for ::1 at 2016-06-21 10:05:58 -0400
Processing by Api::V1::QuestionsController#show as HTML
  Parameters: {"id"=>"32"}
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 32], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.3ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 32]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (2.96ms)
Completed 200 OK in 5ms (Views: 3.2ms | ActiveRecord: 0.6ms)


Started GET "/api/v1/questions/32" for ::1 at 2016-06-21 10:07:07 -0400
Processing by Api::V1::QuestionsController#show as HTML
  Parameters: {"id"=>"32"}
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 32], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 32]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (46.45ms)
Completed 200 OK in 81ms (Views: 63.9ms | ActiveRecord: 5.4ms)


Started GET "/api/v1/questions/32" for ::1 at 2016-06-21 10:07:09 -0400
Processing by Api::V1::QuestionsController#show as HTML
  Parameters: {"id"=>"32"}
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 32], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 32]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (2.93ms)
Completed 200 OK in 5ms (Views: 3.3ms | ActiveRecord: 0.5ms)


Started GET "/api/v1/questions/32" for ::1 at 2016-06-21 10:10:11 -0400
Processing by Api::V1::QuestionsController#show as HTML
  Parameters: {"id"=>"32"}
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 32], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 32]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (59.77ms)
Completed 200 OK in 168ms (Views: 150.1ms | ActiveRecord: 6.2ms)


Started GET "/api/v1/questions/32" for ::1 at 2016-06-21 10:11:38 -0400
Processing by Api::V1::QuestionsController#show as HTML
  Parameters: {"id"=>"32"}
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 32], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 32]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 7]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 8]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (104.45ms)
Completed 200 OK in 139ms (Views: 117.2ms | ActiveRecord: 9.0ms)


Started GET "/api/v1/questions/32" for ::1 at 2016-06-21 10:15:30 -0400
  
SyntaxError (/Users/hlpolivy/Development/code/final-project/QIQAPI/app/controllers/api/v1/questions_controller.rb:7: syntax error, unexpected '}', expecting =>
        render json: question, include: ['answers' => [{'comments'}] ]
                                                                   ^
/Users/hlpolivy/Development/code/final-project/QIQAPI/app/controllers/api/v1/questions_controller.rb:33: syntax error, unexpected end-of-input, expecting keyword_end):
  
app/controllers/api/v1/questions_controller.rb:7: syntax error, unexpected '}', expecting =>
app/controllers/api/v1/questions_controller.rb:33: syntax error, unexpected end-of-input, expecting keyword_end
Started GET "/api/v1/questions/32" for ::1 at 2016-06-21 10:15:45 -0400
  
SyntaxError (/Users/hlpolivy/Development/code/final-project/QIQAPI/app/controllers/api/v1/questions_controller.rb:7: syntax error, unexpected '}', expecting =>
...ers' => [ include: {'comments'}] ]
...                               ^
/Users/hlpolivy/Development/code/final-project/QIQAPI/app/controllers/api/v1/questions_controller.rb:33: syntax error, unexpected end-of-input, expecting keyword_end):
  
app/controllers/api/v1/questions_controller.rb:7: syntax error, unexpected '}', expecting =>
app/controllers/api/v1/questions_controller.rb:33: syntax error, unexpected end-of-input, expecting keyword_end
Started GET "/api/v1/questions/32" for ::1 at 2016-06-21 10:15:53 -0400
  
SyntaxError (/Users/hlpolivy/Development/code/final-project/QIQAPI/app/controllers/api/v1/questions_controller.rb:7: syntax error, unexpected tLABEL
...include: ['answers' => include: {'comments'} ]
...                               ^
/Users/hlpolivy/Development/code/final-project/QIQAPI/app/controllers/api/v1/questions_controller.rb:7: syntax error, unexpected '}', expecting =>
...swers' => include: {'comments'} ]
...                               ^
/Users/hlpolivy/Development/code/final-project/QIQAPI/app/controllers/api/v1/questions_controller.rb:33: syntax error, unexpected end-of-input, expecting keyword_end):
  
app/controllers/api/v1/questions_controller.rb:7: syntax error, unexpected tLABEL
app/controllers/api/v1/questions_controller.rb:7: syntax error, unexpected '}', expecting =>
app/controllers/api/v1/questions_controller.rb:33: syntax error, unexpected end-of-input, expecting keyword_end
Started GET "/api/v1/questions/32" for ::1 at 2016-06-21 10:17:06 -0400
Processing by Api::V1::QuestionsController#show as HTML
  Parameters: {"id"=>"32"}
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 32], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.3ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 32]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (54.52ms)
Completed 200 OK in 89ms (Views: 69.2ms | ActiveRecord: 6.7ms)


Started GET "/api/v1/questions/32" for ::1 at 2016-06-21 10:17:08 -0400
Processing by Api::V1::QuestionsController#show as HTML
  Parameters: {"id"=>"32"}
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 32], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 32]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (2.95ms)
Completed 200 OK in 5ms (Views: 3.4ms | ActiveRecord: 0.4ms)


Started GET "/api/v1/questions/32" for ::1 at 2016-06-21 10:18:17 -0400
  
SyntaxError (/Users/hlpolivy/Development/code/final-project/QIQAPI/app/controllers/api/v1/questions_controller.rb:7: syntax error, unexpected =>
...ude: ['answers' => {include: => 'comments' } ]
...                               ^
/Users/hlpolivy/Development/code/final-project/QIQAPI/app/controllers/api/v1/questions_controller.rb:7: syntax error, unexpected '}', expecting keyword_end
...s' => {include: => 'comments' } ]
...                               ^
/Users/hlpolivy/Development/code/final-project/QIQAPI/app/controllers/api/v1/questions_controller.rb:33: syntax error, unexpected end-of-input, expecting keyword_end):
  
app/controllers/api/v1/questions_controller.rb:7: syntax error, unexpected =>
app/controllers/api/v1/questions_controller.rb:7: syntax error, unexpected '}', expecting keyword_end
app/controllers/api/v1/questions_controller.rb:33: syntax error, unexpected end-of-input, expecting keyword_end
Started GET "/api/v1/questions/32" for ::1 at 2016-06-21 10:18:32 -0400
Processing by Api::V1::QuestionsController#show as HTML
  Parameters: {"id"=>"32"}
  [1m[36mQuestion Load (0.1ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 32], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 32]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (17.81ms)
Completed 200 OK in 35ms (Views: 17.1ms | ActiveRecord: 6.1ms)


Started GET "/api/v1/questions/32" for ::1 at 2016-06-21 10:20:20 -0400
Processing by Api::V1::QuestionsController#show as HTML
  Parameters: {"id"=>"32"}
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 32], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 32]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 7]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 8]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (70.88ms)
Completed 200 OK in 88ms (Views: 65.8ms | ActiveRecord: 10.4ms)


Started GET "/api/v1/questions/32" for ::1 at 2016-06-21 10:20:45 -0400
Processing by Api::V1::QuestionsController#show as HTML
  Parameters: {"id"=>"32"}
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 32], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 32]]
[active_model_serializers]   [1m[36mComment Load (0.1ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 7]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 8]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (42.15ms)
Completed 200 OK in 61ms (Views: 37.9ms | ActiveRecord: 10.5ms)


Started GET "/api/v1/questions/32" for ::1 at 2016-06-21 10:21:15 -0400
Processing by Api::V1::QuestionsController#show as HTML
  Parameters: {"id"=>"32"}
  [1m[36mQuestion Load (0.1ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 32], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.3ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 32]]
[active_model_serializers]   [1m[36mComment Load (0.1ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 7]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 8]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (52.34ms)
Completed 200 OK in 69ms (Views: 48.6ms | ActiveRecord: 9.9ms)


Started GET "/api/v1/questions/32" for ::1 at 2016-06-21 10:22:10 -0400
Processing by Api::V1::QuestionsController#show as HTML
  Parameters: {"id"=>"32"}
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 32], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.1ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 32]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 7]]
[active_model_serializers]   [1m[36mComment Load (0.3ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 8]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (595.69ms)
Completed 200 OK in 965ms (Views: 910.6ms | ActiveRecord: 10.4ms)


Started GET "/api/v1/questions/23" for ::1 at 2016-06-21 10:23:14 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"23"}
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 23], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 23]]
[active_model_serializers]   [1m[36mComment Load (0.1ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 30]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (73.13ms)
Completed 200 OK in 108ms (Views: 89.6ms | ActiveRecord: 7.9ms)


Started GET "/api/v1/questions/32" for ::1 at 2016-06-21 10:23:50 -0400
Processing by Api::V1::QuestionsController#show as HTML
  Parameters: {"id"=>"32"}
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 32], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 32]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 7]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 8]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (33.76ms)
Completed 200 OK in 36ms (Views: 32.4ms | ActiveRecord: 2.2ms)


Started GET "/api/v1/questions/32" for ::1 at 2016-06-21 10:28:17 -0400
Processing by Api::V1::QuestionsController#show as HTML
  Parameters: {"id"=>"32"}
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 32], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 32]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 7]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 8]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (82.44ms)
Completed 200 OK in 107ms (Views: 85.9ms | ActiveRecord: 9.1ms)


Started GET "/api/v1/questions/32" for ::1 at 2016-06-21 10:29:56 -0400
Processing by Api::V1::QuestionsController#show as HTML
  Parameters: {"id"=>"32"}
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 32], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 32]]
[active_model_serializers]   [1m[36mComment Load (0.1ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 7]]
[active_model_serializers]   [1m[36mComment Load (0.1ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 8]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (82.28ms)
Completed 200 OK in 107ms (Views: 85.4ms | ActiveRecord: 10.9ms)


Started GET "/api/v1/questions/32" for ::1 at 2016-06-21 10:32:36 -0400
Processing by Api::V1::QuestionsController#show as HTML
  Parameters: {"id"=>"32"}
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 32], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 32]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 7]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 8]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (95.29ms)
Completed 200 OK in 129ms (Views: 106.3ms | ActiveRecord: 8.6ms)


Started GET "/api/v1/questions/32" for ::1 at 2016-06-21 10:33:33 -0400
Processing by Api::V1::QuestionsController#show as HTML
  Parameters: {"id"=>"32"}
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 32], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 32]]
[active_model_serializers]   [1m[36mComment Load (0.1ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 7]]
[active_model_serializers]   [1m[36mComment Load (0.1ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 8]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (42.5ms)
Completed 200 OK in 61ms (Views: 38.2ms | ActiveRecord: 10.5ms)


Started GET "/api/v1/random" for ::1 at 2016-06-21 10:36:10 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
[active_model_serializers] Rendered ActiveModel::Serializer::Null with Hash (0.16ms)
Completed 200 OK in 611ms (Views: 610.7ms | ActiveRecord: 2.1ms)


Started GET "/api/v1/questions/12" for ::1 at 2016-06-21 10:36:12 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"12"}
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 12], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.3ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 12]]
[active_model_serializers]   [1m[36mComment Load (0.1ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 36]]
[active_model_serializers]   [1m[36mComment Load (0.1ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 37]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (219.48ms)
Completed 200 OK in 303ms (Views: 289.2ms | ActiveRecord: 8.0ms)


Started GET "/api/v1/questions/32" for ::1 at 2016-06-21 10:38:19 -0400
Processing by Api::V1::QuestionsController#show as HTML
  Parameters: {"id"=>"32"}
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 32], ["LIMIT", 1]]
  [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 32]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 7]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 8]]
[active_model_serializers] Rendered ActiveModel::Serializer::CollectionSerializer with ActiveModelSerializers::Adapter::JsonApi (67.2ms)
Completed 200 OK in 106ms (Views: 74.5ms | ActiveRecord: 7.9ms)


Started GET "/api/v1/questions/32" for ::1 at 2016-06-21 10:38:52 -0400
Processing by Api::V1::QuestionsController#show as HTML
  Parameters: {"id"=>"32"}
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 32], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 32]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (19.57ms)
Completed 200 OK in 34ms (Views: 18.2ms | ActiveRecord: 5.5ms)


Started GET "/api/v1/questions/32" for ::1 at 2016-06-21 10:38:54 -0400
Processing by Api::V1::QuestionsController#show as HTML
  Parameters: {"id"=>"32"}
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 32], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 32]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (2.4ms)
Completed 200 OK in 4ms (Views: 2.7ms | ActiveRecord: 0.3ms)


Started GET "/api/v1/questions/32" for ::1 at 2016-06-21 10:39:04 -0400
Processing by Api::V1::QuestionsController#show as HTML
  Parameters: {"id"=>"32"}
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 32], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 32]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 7]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 8]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (167.01ms)
Completed 200 OK in 183ms (Views: 163.7ms | ActiveRecord: 8.4ms)


Started GET "/api/v1/questions/32" for ::1 at 2016-06-21 10:39:21 -0400
Processing by Api::V1::QuestionsController#show as HTML
  Parameters: {"id"=>"32"}
  [1m[36mQuestion Load (0.1ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 32], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 32]]
[active_model_serializers]   [1m[36mComment Load (0.1ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 7]]
[active_model_serializers]   [1m[36mComment Load (0.1ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 8]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (59.45ms)
Completed 200 OK in 75ms (Views: 56.2ms | ActiveRecord: 7.5ms)


Started GET "/api/v1/questions/32" for ::1 at 2016-06-21 10:39:29 -0400
Processing by Api::V1::QuestionsController#show as HTML
  Parameters: {"id"=>"32"}
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 32], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.3ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 32]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 7]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 8]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (44.33ms)
Completed 200 OK in 58ms (Views: 39.5ms | ActiveRecord: 8.9ms)


Started GET "/api/v1/questions/32" for ::1 at 2016-06-21 10:44:11 -0400
Processing by Api::V1::QuestionsController#show as HTML
  Parameters: {"id"=>"32"}
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 32], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.3ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 32]]
[active_model_serializers]   [1m[36mComment Load (0.3ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 7]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 8]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (113.02ms)
Completed 200 OK in 180ms (Views: 150.5ms | ActiveRecord: 11.3ms)


Started GET "/api/v1/questions/32" for ::1 at 2016-06-21 10:44:49 -0400
Processing by Api::V1::QuestionsController#show as HTML
  Parameters: {"id"=>"32"}
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 32], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 32]]
[active_model_serializers]   [1m[36mComment Load (0.1ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 7]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 8]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (135.34ms)
Completed 200 OK in 152ms (Views: 132.2ms | ActiveRecord: 8.1ms)


Started GET "/api/v1/questions/23" for ::1 at 2016-06-21 10:45:25 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"23"}
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 23], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.3ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 23]]
[active_model_serializers]   [1m[36mComment Load (0.3ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 30]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (11.81ms)
Completed 200 OK in 16ms (Views: 12.2ms | ActiveRecord: 1.0ms)


Started GET "/api/v1/questions/32" for ::1 at 2016-06-21 10:45:33 -0400
Processing by Api::V1::QuestionsController#show as HTML
  Parameters: {"id"=>"32"}
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 32], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.3ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 32]]
[active_model_serializers]   [1m[36mComment Load (0.1ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 7]]
[active_model_serializers]   [1m[36mComment Load (0.1ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 8]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (91.76ms)
Completed 200 OK in 110ms (Views: 88.2ms | ActiveRecord: 8.1ms)


Started GET "/api/v1/questions/32" for ::1 at 2016-06-21 10:45:54 -0400
Processing by Api::V1::QuestionsController#show as HTML
  Parameters: {"id"=>"32"}
  [1m[36mQuestion Load (0.1ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 32], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 32]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 7]]
[active_model_serializers]   [1m[36mComment Load (0.3ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 8]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (43.63ms)
Completed 200 OK in 59ms (Views: 40.2ms | ActiveRecord: 8.3ms)


Started GET "/api/v1/questions/32" for ::1 at 2016-06-21 10:46:20 -0400
Processing by Api::V1::QuestionsController#show as HTML
  Parameters: {"id"=>"32"}
  [1m[36mQuestion Load (0.1ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 32], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 32]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (23.9ms)
Completed 200 OK in 43ms (Views: 22.0ms | ActiveRecord: 8.6ms)


Started GET "/api/v1/questions/32" for ::1 at 2016-06-21 10:46:21 -0400
Processing by Api::V1::QuestionsController#show as HTML
  Parameters: {"id"=>"32"}
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 32], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 32]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (3.6ms)
Completed 200 OK in 6ms (Views: 3.9ms | ActiveRecord: 0.4ms)


Started GET "/api/v1/questions/32" for ::1 at 2016-06-21 10:46:30 -0400
  
SyntaxError (/Users/hlpolivy/Development/code/final-project/QIQAPI/app/controllers/api/v1/questions_controller.rb:7: syntax error, unexpected '}', expecting =>
        render json: question, include: ['answers' => {'comments'}]
                                                                  ^
/Users/hlpolivy/Development/code/final-project/QIQAPI/app/controllers/api/v1/questions_controller.rb:31: syntax error, unexpected end-of-input, expecting keyword_end):
  
app/controllers/api/v1/questions_controller.rb:7: syntax error, unexpected '}', expecting =>
app/controllers/api/v1/questions_controller.rb:31: syntax error, unexpected end-of-input, expecting keyword_end
Started GET "/api/v1/questions/32" for ::1 at 2016-06-21 10:46:31 -0400
  
SyntaxError (/Users/hlpolivy/Development/code/final-project/QIQAPI/app/controllers/api/v1/questions_controller.rb:7: syntax error, unexpected '}', expecting =>
        render json: question, include: ['answers' => {'comments'}]
                                                                  ^
/Users/hlpolivy/Development/code/final-project/QIQAPI/app/controllers/api/v1/questions_controller.rb:31: syntax error, unexpected end-of-input, expecting keyword_end):
  
app/controllers/api/v1/questions_controller.rb:7: syntax error, unexpected '}', expecting =>
app/controllers/api/v1/questions_controller.rb:31: syntax error, unexpected end-of-input, expecting keyword_end
Started GET "/api/v1/questions/32" for ::1 at 2016-06-21 10:48:25 -0400
Processing by Api::V1::QuestionsController#show as HTML
  Parameters: {"id"=>"32"}
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 32], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 32]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (34.75ms)
Completed 200 OK in 52ms (Views: 33.8ms | ActiveRecord: 5.3ms)


Started GET "/api/v1/questions/32" for ::1 at 2016-06-21 10:48:27 -0400
Processing by Api::V1::QuestionsController#show as HTML
  Parameters: {"id"=>"32"}
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 32], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 32]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (2.99ms)
Completed 200 OK in 5ms (Views: 3.3ms | ActiveRecord: 0.4ms)


Started GET "/api/v1/questions/32" for ::1 at 2016-06-21 10:50:11 -0400
Processing by Api::V1::QuestionsController#show as HTML
  Parameters: {"id"=>"32"}
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 32], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 32]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (35.23ms)
Completed 500 Internal Server Error in 52ms (ActiveRecord: 6.3ms)


  
NoMethodError (undefined method `embed' for AnswerSerializer:Class):
  
app/serializers/answer_serializer.rb:3:in `<class:AnswerSerializer>'
app/serializers/answer_serializer.rb:1:in `<top (required)>'
app/controllers/api/v1/questions_controller.rb:7:in `show'
Started GET "/api/v1/questions/32" for ::1 at 2016-06-21 10:52:56 -0400
Processing by Api::V1::QuestionsController#show as HTML
  Parameters: {"id"=>"32"}
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 32], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 32]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (90.61ms)
Completed 200 OK in 158ms (Views: 89.3ms | ActiveRecord: 9.5ms)


Started GET "/api/v1/questions/32" for ::1 at 2016-06-21 10:52:58 -0400
Processing by Api::V1::QuestionsController#show as HTML
  Parameters: {"id"=>"32"}
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 32], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 32]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (2.88ms)
Completed 200 OK in 4ms (Views: 3.2ms | ActiveRecord: 0.4ms)


Started GET "/api/v1/questions/32" for ::1 at 2016-06-21 10:53:35 -0400
Processing by Api::V1::QuestionsController#show as HTML
  Parameters: {"id"=>"32"}
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 32], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.3ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 32]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (184.82ms)
Completed 200 OK in 209ms (Views: 182.5ms | ActiveRecord: 8.0ms)


Started GET "/api/v1/questions/32" for ::1 at 2016-06-21 10:53:37 -0400
Processing by Api::V1::QuestionsController#show as HTML
  Parameters: {"id"=>"32"}
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 32], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.3ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 32]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (4.02ms)
Completed 200 OK in 6ms (Views: 4.5ms | ActiveRecord: 0.5ms)


Started GET "/api/v1/questions/32" for ::1 at 2016-06-21 10:53:45 -0400
Processing by Api::V1::QuestionsController#show as HTML
  Parameters: {"id"=>"32"}
  [1m[36mQuestion Load (0.1ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 32], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 32]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (33.91ms)
Completed 200 OK in 48ms (Views: 32.1ms | ActiveRecord: 5.9ms)


Started GET "/api/v1/questions/32" for ::1 at 2016-06-21 10:53:46 -0400
Processing by Api::V1::QuestionsController#show as HTML
  Parameters: {"id"=>"32"}
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 32], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 32]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (2.99ms)
Completed 200 OK in 5ms (Views: 3.4ms | ActiveRecord: 0.5ms)


Started GET "/api/v1/questions/32" for ::1 at 2016-06-21 10:54:00 -0400
Processing by Api::V1::QuestionsController#show as HTML
  Parameters: {"id"=>"32"}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 32], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 32]]
[active_model_serializers]   [1m[36mComment Load (0.5ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 7]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 8]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (252.07ms)
Completed 200 OK in 269ms (Views: 248.4ms | ActiveRecord: 9.5ms)


Started GET "/api/v1/questions/32" for ::1 at 2016-06-21 10:56:48 -0400
Processing by Api::V1::QuestionsController#show as HTML
  Parameters: {"id"=>"32"}
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 32], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 32]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 7]]
[active_model_serializers]   [1m[36mComment Load (0.1ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 8]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (90.62ms)
Completed 200 OK in 111ms (Views: 85.3ms | ActiveRecord: 11.7ms)


Started GET "/api/v1/questions/32" for ::1 at 2016-06-21 10:58:01 -0400
Processing by Api::V1::QuestionsController#show as HTML
  Parameters: {"id"=>"32"}
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 32], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 32]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 7]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 8]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (82.98ms)
Completed 200 OK in 115ms (Views: 84.3ms | ActiveRecord: 9.5ms)


Started GET "/api/v1/questions/32" for ::1 at 2016-06-21 10:58:15 -0400
Processing by Api::V1::QuestionsController#show as HTML
  Parameters: {"id"=>"32"}
  [1m[36mQuestion Load (0.1ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 32], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 32]]
[active_model_serializers]   [1m[36mComment Load (0.1ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 7]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 8]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (45.38ms)
Completed 200 OK in 63ms (Views: 41.5ms | ActiveRecord: 9.9ms)


Started GET "/api/v1/questions/32" for ::1 at 2016-06-21 10:58:39 -0400
Processing by Api::V1::QuestionsController#show as HTML
  Parameters: {"id"=>"32"}
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 32], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 32]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 7]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 8]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (106.34ms)
Completed 200 OK in 124ms (Views: 103.1ms | ActiveRecord: 8.7ms)


Started GET "/api/v1/questions/23" for ::1 at 2016-06-21 11:00:56 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"23"}
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 23], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 23]]
[active_model_serializers]   [1m[36mComment Load (0.1ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 30]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (9.05ms)
Completed 200 OK in 16ms (Views: 10.1ms | ActiveRecord: 0.7ms)


Started GET "/api/v1/questions/23" for ::1 at 2016-06-21 11:01:26 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"23"}
  [1m[36mQuestion Load (0.5ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 23], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.3ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 23]]
[active_model_serializers]   [1m[36mComment Load (0.4ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 30]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (15.99ms)
Completed 200 OK in 20ms (Views: 16.4ms | ActiveRecord: 1.1ms)


Started GET "/api/v1/questions/23" for ::1 at 2016-06-21 11:01:36 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"23"}
  [1m[36mQuestion Load (0.5ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 23], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 23]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 30]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (10.74ms)
Completed 200 OK in 14ms (Views: 11.4ms | ActiveRecord: 1.0ms)


Started GET "/api/v1/questions/32" for ::1 at 2016-06-21 11:03:44 -0400
  [1m[36mActiveRecord::SchemaMigration Load (0.5ms)[0m  [1m[34mSELECT "schema_migrations".* FROM "schema_migrations"[0m
Processing by Api::V1::QuestionsController#show as HTML
  Parameters: {"id"=>"32"}
  [1m[36mQuestion Load (0.5ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 32], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.4ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 32]]
[active_model_serializers]   [1m[36mComment Load (0.3ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 7]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 8]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (92.1ms)
Completed 200 OK in 165ms (Views: 119.4ms | ActiveRecord: 11.1ms)


Started GET "/api/v1/questions/23" for ::1 at 2016-06-21 11:10:17 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"23"}
  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 23], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.3ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 23]]
[active_model_serializers]   [1m[36mComment Load (0.3ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 30]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (8.51ms)
Completed 200 OK in 15ms (Views: 9.1ms | ActiveRecord: 1.4ms)


Started GET "/api/v1/questions/32" for ::1 at 2016-06-21 11:11:10 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"32"}
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 32], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.4ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 32]]
[active_model_serializers]   [1m[36mComment Load (0.3ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 7]]
[active_model_serializers]   [1m[36mComment Load (0.3ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 8]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (15.65ms)
Completed 200 OK in 19ms (Views: 15.8ms | ActiveRecord: 1.6ms)


Started GET "/api/v1/random" for ::1 at 2016-06-21 11:14:17 -0400
Processing by Api::V1::QuestionsController#getRandomQuestion as HTML
  Parameters: {"question"=>{}}
[active_model_serializers] Rendered ActiveModel::Serializer::Null with Hash (0.21ms)
Completed 200 OK in 229ms (Views: 228.9ms | ActiveRecord: 0.0ms)


Started GET "/api/v1/questions/28" for ::1 at 2016-06-21 11:14:18 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"28"}
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 28], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.4ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 28]]
[active_model_serializers]   [1m[36mComment Load (0.3ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 50]]
[active_model_serializers]   [1m[36mComment Load (0.3ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 51]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (10.67ms)
Completed 200 OK in 13ms (Views: 10.3ms | ActiveRecord: 1.4ms)


Started GET "/api/v1/questions/28" for ::1 at 2016-06-21 11:14:21 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"28"}
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 28], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.3ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 28]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 50]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 51]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (10.08ms)
Completed 200 OK in 13ms (Views: 10.0ms | ActiveRecord: 1.1ms)


Started GET "/api/v1/questions/32" for ::1 at 2016-06-21 11:14:22 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"32"}
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 32], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.4ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 32]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 7]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 8]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (11.58ms)
Completed 200 OK in 14ms (Views: 11.3ms | ActiveRecord: 1.2ms)


Started GET "/api/v1/questions/2" for ::1 at 2016-06-21 11:14:23 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"2"}
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 2]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 1]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 2]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (9.95ms)
Completed 200 OK in 12ms (Views: 9.9ms | ActiveRecord: 0.9ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-21 11:14:26 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"sdfdwfads", "vote-count"=>0, "vote-score"=>0, "approved"=>true}, "question"=>{"data"=>{"id"=>"32", "attributes"=>{"content"=>"How did you learn programming?", "received-count"=>0}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 32], ["LIMIT", 1]]
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (58.8ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "sdfdwfads"], ["question_id", 32], ["created_at", 2016-06-21 15:14:26 UTC], ["updated_at", 2016-06-21 15:14:26 UTC]]
  [1m[35m (107.9ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mAnswer Load (1.2ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."question_id" = $1 ORDER BY "answers"."id" DESC LIMIT $2[0m  [["question_id", 32], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 55]]
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (2.62ms)
Completed 200 OK in 191ms (Views: 3.0ms | ActiveRecord: 168.6ms)


Started GET "/api/v1/questions/32" for ::1 at 2016-06-21 11:15:02 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"32"}
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 32], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.4ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 32]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 7]]
[active_model_serializers]   [1m[36mComment Load (0.3ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 8]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 55]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (16.89ms)
Completed 200 OK in 19ms (Views: 16.5ms | ActiveRecord: 1.5ms)


Started GET "/api/v1/questions/32" for ::1 at 2016-06-21 11:15:07 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"32"}
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 32], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 32]]
[active_model_serializers]   [1m[36mComment Load (0.3ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 7]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 8]]
[active_model_serializers]   [1m[36mComment Load (0.3ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 55]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (21.63ms)
Completed 200 OK in 65ms (Views: 21.4ms | ActiveRecord: 1.3ms)


Started GET "/api/v1/questions/32" for ::1 at 2016-06-21 11:15:14 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"32"}
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 32], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.3ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 32]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 7]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 8]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 55]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (17.09ms)
Completed 200 OK in 19ms (Views: 16.8ms | ActiveRecord: 1.2ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-21 11:15:16 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"asdfasdfads", "vote-count"=>0, "vote-score"=>0, "approved"=>true}, "question"=>{"data"=>{"id"=>"32", "attributes"=>{"content"=>"How did you learn programming?", "received-count"=>0}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 32], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "asdfasdfads"], ["question_id", 32], ["created_at", 2016-06-21 15:15:16 UTC], ["updated_at", 2016-06-21 15:15:16 UTC]]
  [1m[35m (91.5ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mAnswer Load (0.8ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."question_id" = $1 ORDER BY "answers"."id" DESC LIMIT $2[0m  [["question_id", 32], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mComment Load (0.3ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 56]]
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (4.23ms)
Completed 200 OK in 106ms (Views: 4.9ms | ActiveRecord: 93.3ms)


Started GET "/api/v1/questions/32" for ::1 at 2016-06-21 11:15:46 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"32"}
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 32], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 32]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 7]]
[active_model_serializers]   [1m[36mComment Load (0.3ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 8]]
[active_model_serializers]   [1m[36mComment Load (0.3ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 55]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 56]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (22.29ms)
Completed 200 OK in 24ms (Views: 21.9ms | ActiveRecord: 1.5ms)


Started GET "/api/v1/questions/32" for ::1 at 2016-06-21 11:25:45 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"32"}
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 32], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.3ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 32]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (31.55ms)
Completed 200 OK in 65ms (Views: 31.3ms | ActiveRecord: 9.8ms)


Started GET "/api/v1/questions/32" for ::1 at 2016-06-21 11:25:45 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"32"}
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 32], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 32]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (6.35ms)
Completed 200 OK in 8ms (Views: 6.8ms | ActiveRecord: 0.4ms)


Started GET "/api/v1/questions/32" for ::1 at 2016-06-21 11:25:55 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"32"}
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 32], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 32]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (7.83ms)
Completed 200 OK in 33ms (Views: 31.6ms | ActiveRecord: 0.5ms)


Started GET "/api/v1/questions/32" for ::1 at 2016-06-21 11:25:55 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"32"}
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 32], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 32]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (8.93ms)
Completed 200 OK in 11ms (Views: 9.3ms | ActiveRecord: 0.4ms)


Started GET "/api/v1/questions/32" for ::1 at 2016-06-21 11:26:00 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"32"}
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 32], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 32]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (7.17ms)
Completed 200 OK in 9ms (Views: 7.6ms | ActiveRecord: 0.5ms)


Started GET "/api/v1/questions/32" for ::1 at 2016-06-21 11:26:00 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"32"}
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 32], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.5ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 32]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (8.65ms)
Completed 200 OK in 11ms (Views: 8.9ms | ActiveRecord: 0.8ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-21 11:26:16 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"asfadsfsd", "vote-count"=>0, "vote-score"=>0, "approved"=>true}, "question"=>{"data"=>{"id"=>"32", "attributes"=>{"content"=>"How did you learn programming?", "received-count"=>0}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 32], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (27.0ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "asfadsfsd"], ["question_id", 32], ["created_at", 2016-06-21 15:26:17 UTC], ["updated_at", 2016-06-21 15:26:17 UTC]]
  [1m[35m (64.6ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mAnswer Load (0.6ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."question_id" = $1 ORDER BY "answers"."id" DESC LIMIT $2[0m  [["question_id", 32], ["LIMIT", 1]]
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (1.15ms)
Completed 200 OK in 105ms (Views: 1.9ms | ActiveRecord: 92.6ms)


Started GET "/api/v1/questions/32" for ::1 at 2016-06-21 11:26:38 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"32"}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 32], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.3ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 32]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (11.8ms)
Completed 200 OK in 16ms (Views: 12.4ms | ActiveRecord: 1.1ms)


Started GET "/api/v1/questions/32" for ::1 at 2016-06-21 11:26:38 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"32"}
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 32], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.3ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 32]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (10.91ms)
Completed 200 OK in 13ms (Views: 11.2ms | ActiveRecord: 0.6ms)


Started GET "/api/v1/questions/32" for ::1 at 2016-06-21 11:26:42 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"32"}
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 32], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.3ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 32]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (8.71ms)
Completed 200 OK in 11ms (Views: 9.1ms | ActiveRecord: 0.6ms)


Started GET "/api/v1/questions/32" for ::1 at 2016-06-21 11:26:42 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"32"}
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 32], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.3ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 32]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (10.23ms)
Completed 200 OK in 12ms (Views: 10.6ms | ActiveRecord: 0.6ms)


Started GET "/api/v1/questions/32" for ::1 at 2016-06-21 11:26:45 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"32"}
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 32], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.3ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 32]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (11.59ms)
Completed 200 OK in 14ms (Views: 12.1ms | ActiveRecord: 0.8ms)


Started GET "/api/v1/questions/32" for ::1 at 2016-06-21 11:26:45 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"32"}
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 32], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.3ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 32]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (14.92ms)
Completed 200 OK in 17ms (Views: 15.3ms | ActiveRecord: 0.5ms)


Started GET "/api/v1/questions/32" for ::1 at 2016-06-21 11:26:59 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"32"}
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 32], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.4ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 32]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (15.31ms)
Completed 200 OK in 18ms (Views: 15.7ms | ActiveRecord: 0.6ms)


Started GET "/api/v1/questions/32" for ::1 at 2016-06-21 11:26:59 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"32"}
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 32], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.4ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 32]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (11.81ms)
Completed 200 OK in 15ms (Views: 12.4ms | ActiveRecord: 0.8ms)


Started GET "/api/v1/questions/32" for ::1 at 2016-06-21 11:27:05 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"32"}
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 32], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.3ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 32]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (12.0ms)
Completed 200 OK in 14ms (Views: 12.6ms | ActiveRecord: 0.6ms)


Started GET "/api/v1/questions/32" for ::1 at 2016-06-21 11:27:05 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"32"}
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 32], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.3ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 32]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (7.85ms)
Completed 200 OK in 10ms (Views: 8.3ms | ActiveRecord: 0.6ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-21 11:27:07 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"asdfadsf", "vote-count"=>0, "vote-score"=>0, "approved"=>true}, "question"=>{"data"=>{"id"=>"32", "attributes"=>{"content"=>"How did you learn programming?", "received-count"=>0}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 32], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.7ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "asdfadsf"], ["question_id", 32], ["created_at", 2016-06-21 15:27:07 UTC], ["updated_at", 2016-06-21 15:27:07 UTC]]
  [1m[35m (360.9ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mAnswer Load (1.0ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."question_id" = $1 ORDER BY "answers"."id" DESC LIMIT $2[0m  [["question_id", 32], ["LIMIT", 1]]
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (1.18ms)
Completed 200 OK in 377ms (Views: 1.9ms | ActiveRecord: 363.1ms)


  [1m[36mActiveRecord::SchemaMigration Load (0.5ms)[0m  [1m[34mSELECT "schema_migrations".* FROM "schema_migrations"[0m
  [1m[35m (36.7ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1[0m  [["key", :environment]]
  [1m[36mActiveRecord::SchemaMigration Load (0.3ms)[0m  [1m[34mSELECT "schema_migrations".* FROM "schema_migrations"[0m
  [1m[35m (0.2ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1[0m  [["key", :environment]]
  [1m[36mActiveRecord::SchemaMigration Load (0.2ms)[0m  [1m[34mSELECT "schema_migrations".* FROM "schema_migrations"[0m
  [1m[35m (0.3ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1[0m  [["key", :environment]]
  [1m[35m (238.6ms)[0m  [1m[35mDROP DATABASE IF EXISTS "QIQAPI_development"[0m
  [1m[35m (229.2ms)[0m  [1m[35mDROP DATABASE IF EXISTS "QIQAPI_test"[0m
  [1m[35m (2144.3ms)[0m  [1m[35mCREATE DATABASE "QIQAPI_development" ENCODING = 'unicode'[0m
  [1m[35m (930.4ms)[0m  [1m[35mCREATE DATABASE "QIQAPI_test" ENCODING = 'unicode'[0m
  [1m[35mSQL (0.4ms)[0m  [1m[35mCREATE EXTENSION IF NOT EXISTS "plpgsql"[0m
  [1m[35m (39.3ms)[0m  [1m[35mCREATE TABLE "answers" ("id" serial primary key, "vote_score" integer DEFAULT 0, "vote_count" integer DEFAULT 0, "content" character varying, "question_id" integer, "created_at" timestamp, "updated_at" timestamp, "approved" boolean DEFAULT 't')[0m
  [1m[35m (6.0ms)[0m  [1m[35mCREATE TABLE "questions" ("id" serial primary key, "content" character varying, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL, "received_count" integer DEFAULT 0)[0m
  [1m[35m (3.8ms)[0m  [1m[35mCREATE TABLE "schema_migrations" ("version" character varying PRIMARY KEY)[0m
  [1m[35m (0.4ms)[0m  [1m[34mSELECT version FROM "schema_migrations"[0m
  [1m[35m (0.9ms)[0m  [1m[32mINSERT INTO "schema_migrations" (version) VALUES ('20160621014846')[0m
  [1m[35m (0.8ms)[0m  [1m[32mINSERT INTO schema_migrations (version) VALUES ('20160615195122'), ('20160615195241'), ('20160615195717'), ('20160617182704'), ('20160620225649');

[0m
  [1m[35m (4.0ms)[0m  [1m[35mCREATE TABLE "ar_internal_metadata" ("key" character varying PRIMARY KEY, "value" character varying, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  [1m[36mActiveRecord::InternalMetadata Load (0.4ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" ORDER BY "ar_internal_metadata"."key" ASC LIMIT $1[0m  [["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "ar_internal_metadata" ("key", "value", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "key"[0m  [["key", "environment"], ["value", "development"], ["created_at", 2016-06-21 15:28:24 UTC], ["updated_at", 2016-06-21 15:28:24 UTC]]
  [1m[35m (1.8ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mActiveRecord::InternalMetadata Load (0.2ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" ORDER BY "ar_internal_metadata"."key" ASC LIMIT $1[0m  [["LIMIT", 1]]
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35m (0.1ms)[0m  [1m[35mCOMMIT[0m
  [1m[35mSQL (0.3ms)[0m  [1m[35mCREATE EXTENSION IF NOT EXISTS "plpgsql"[0m
  [1m[35m (7.7ms)[0m  [1m[35mCREATE TABLE "answers" ("id" serial primary key, "vote_score" integer DEFAULT 0, "vote_count" integer DEFAULT 0, "content" character varying, "question_id" integer, "created_at" timestamp, "updated_at" timestamp, "approved" boolean DEFAULT 't')[0m
  [1m[35m (4.4ms)[0m  [1m[35mCREATE TABLE "questions" ("id" serial primary key, "content" character varying, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL, "received_count" integer DEFAULT 0)[0m
  [1m[35m (53.4ms)[0m  [1m[35mCREATE TABLE "schema_migrations" ("version" character varying PRIMARY KEY)[0m
  [1m[35m (0.5ms)[0m  [1m[34mSELECT version FROM "schema_migrations"[0m
  [1m[35m (1.0ms)[0m  [1m[32mINSERT INTO "schema_migrations" (version) VALUES ('20160621014846')[0m
  [1m[35m (0.9ms)[0m  [1m[32mINSERT INTO schema_migrations (version) VALUES ('20160615195122'), ('20160615195241'), ('20160615195717'), ('20160617182704'), ('20160620225649');

[0m
  [1m[35m (34.0ms)[0m  [1m[35mCREATE TABLE "ar_internal_metadata" ("key" character varying PRIMARY KEY, "value" character varying, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  [1m[36mActiveRecord::InternalMetadata Load (0.5ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" ORDER BY "ar_internal_metadata"."key" ASC LIMIT $1[0m  [["LIMIT", 1]]
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.5ms)[0m  [1m[32mINSERT INTO "ar_internal_metadata" ("key", "value", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "key"[0m  [["key", "environment"], ["value", "development"], ["created_at", 2016-06-21 15:28:24 UTC], ["updated_at", 2016-06-21 15:28:24 UTC]]
  [1m[35m (0.8ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mActiveRecord::InternalMetadata Load (0.3ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" ORDER BY "ar_internal_metadata"."key" ASC LIMIT $1[0m  [["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35m (0.1ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mActiveRecord::SchemaMigration Load (0.3ms)[0m  [1m[34mSELECT "schema_migrations".* FROM "schema_migrations"[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.6ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "What are you looking for in terms of career development?"], ["created_at", 2016-06-21 15:28:24 UTC], ["updated_at", 2016-06-21 15:28:24 UTC]]
  [1m[35m (8.9ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "How many ways can you center a div?"], ["created_at", 2016-06-21 15:28:24 UTC], ["updated_at", 2016-06-21 15:28:24 UTC]]
  [1m[35m (0.7ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "What are your strengths and weaknesses?"], ["created_at", 2016-06-21 15:28:24 UTC], ["updated_at", 2016-06-21 15:28:24 UTC]]
  [1m[35m (0.7ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "Explain the process of web development to a middle school kid."], ["created_at", 2016-06-21 15:28:24 UTC], ["updated_at", 2016-06-21 15:28:24 UTC]]
  [1m[35m (0.7ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "What did you like least about your last job?"], ["created_at", 2016-06-21 15:28:24 UTC], ["updated_at", 2016-06-21 15:28:24 UTC]]
  [1m[35m (0.7ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "How does the web work?"], ["created_at", 2016-06-21 15:28:24 UTC], ["updated_at", 2016-06-21 15:28:24 UTC]]
  [1m[35m (0.8ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "What is function hoisting in JavaScript?"], ["created_at", 2016-06-21 15:28:24 UTC], ["updated_at", 2016-06-21 15:28:24 UTC]]
  [1m[35m (0.9ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "How did you learn programming?"], ["created_at", 2016-06-21 15:28:24 UTC], ["updated_at", 2016-06-21 15:28:24 UTC]]
  [1m[35m (0.6ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "What is a closure?"], ["created_at", 2016-06-21 15:28:24 UTC], ["updated_at", 2016-06-21 15:28:24 UTC]]
  [1m[35m (0.6ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "How did you learn web development?"], ["created_at", 2016-06-21 15:28:24 UTC], ["updated_at", 2016-06-21 15:28:24 UTC]]
  [1m[35m (0.6ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "Describe a time when you were able to improve upon the design that was originally suggested?"], ["created_at", 2016-06-21 15:28:24 UTC], ["updated_at", 2016-06-21 15:28:24 UTC]]
  [1m[35m (0.6ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "So tell me about yourself."], ["created_at", 2016-06-21 15:28:24 UTC], ["updated_at", 2016-06-21 15:28:24 UTC]]
  [1m[35m (0.6ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "Where would you like to be in your career five years from now?"], ["created_at", 2016-06-21 15:28:24 UTC], ["updated_at", 2016-06-21 15:28:24 UTC]]
  [1m[35m (0.7ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "Why do you want to work with us?"], ["created_at", 2016-06-21 15:28:24 UTC], ["updated_at", 2016-06-21 15:28:24 UTC]]
  [1m[35m (2.9ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.3ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.5ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "Can you name two programming paradigms important for JavaScript app developers?"], ["created_at", 2016-06-21 15:28:24 UTC], ["updated_at", 2016-06-21 15:28:24 UTC]]
  [1m[35m (0.8ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "Tell me about your long-term goals."], ["created_at", 2016-06-21 15:28:24 UTC], ["updated_at", 2016-06-21 15:28:24 UTC]]
  [1m[35m (1.0ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "Tell me about the most recent project you worked on. What were your responsibilities?"], ["created_at", 2016-06-21 15:28:24 UTC], ["updated_at", 2016-06-21 15:28:24 UTC]]
  [1m[35m (1.1ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "What are your short-term goals."], ["created_at", 2016-06-21 15:28:24 UTC], ["updated_at", 2016-06-21 15:28:24 UTC]]
  [1m[35m (0.7ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "Do you have any questions for me?"], ["created_at", 2016-06-21 15:28:24 UTC], ["updated_at", 2016-06-21 15:28:24 UTC]]
  [1m[35m (0.7ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "Please walk me through one of the projects on your resume."], ["created_at", 2016-06-21 15:28:24 UTC], ["updated_at", 2016-06-21 15:28:24 UTC]]
  [1m[35m (0.9ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "What is the difference between classical inheritance and prototypal inheritance? "], ["created_at", 2016-06-21 15:28:24 UTC], ["updated_at", 2016-06-21 15:28:24 UTC]]
  [1m[35m (1.0ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "Can you tell me about a challenge you've faced at work and how you got through it?"], ["created_at", 2016-06-21 15:28:24 UTC], ["updated_at", 2016-06-21 15:28:24 UTC]]
  [1m[35m (0.9ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.5ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "Explain a polymorphic association?"], ["created_at", 2016-06-21 15:28:24 UTC], ["updated_at", 2016-06-21 15:28:24 UTC]]
  [1m[35m (1.1ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "Why do you want to be a web developer?"], ["created_at", 2016-06-21 15:28:24 UTC], ["updated_at", 2016-06-21 15:28:24 UTC]]
  [1m[35m (0.9ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "Describe your production deployment process?"], ["created_at", 2016-06-21 15:28:24 UTC], ["updated_at", 2016-06-21 15:28:24 UTC]]
  [1m[35m (0.9ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "Why do you want to work for us?"], ["created_at", 2016-06-21 15:28:24 UTC], ["updated_at", 2016-06-21 15:28:24 UTC]]
  [1m[35m (1.8ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "How would you declare and use a constructor in Ruby?"], ["created_at", 2016-06-21 15:28:24 UTC], ["updated_at", 2016-06-21 15:28:24 UTC]]
  [1m[35m (1.0ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "Do you have any questions for me?"], ["created_at", 2016-06-21 15:28:24 UTC], ["updated_at", 2016-06-21 15:28:24 UTC]]
  [1m[35m (0.8ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "How do you evaluate success?"], ["created_at", 2016-06-21 15:28:24 UTC], ["updated_at", 2016-06-21 15:28:24 UTC]]
  [1m[35m (1.7ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "How would you describe your work style?"], ["created_at", 2016-06-21 15:28:24 UTC], ["updated_at", 2016-06-21 15:28:24 UTC]]
  [1m[35m (0.8ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (1.0ms)[0m  [1m[32mINSERT INTO "answers" ("vote_score", "vote_count", "content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["vote_score", 15], ["vote_count", 20], ["content", "Three, and more than you'd expect!\n  <br>\n  You could center a div horizontally, vertically, or both and there are\n  a ton of ways to do them each. It also depends on what you're trying to\n  center. The most common way I do it is using the margins. If you set\n    a div's margin to 0 auto, to will automatically get the width of the\n    client's screen and use that information to center the div.\n  <br>\n  If I had text within a div, I wold use the text-align: center css\n  attribute on the div."], ["question_id", 2], ["created_at", 2016-06-21 15:28:25 UTC], ["updated_at", 2016-06-21 15:28:25 UTC]]
  [1m[35m (15.4ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.5ms)[0m  [1m[32mINSERT INTO "answers" ("vote_score", "vote_count", "content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["vote_score", -1], ["vote_count", 7], ["content", "<p>Just use margin dude.</p>"], ["question_id", 2], ["created_at", 2016-06-21 15:28:25 UTC], ["updated_at", 2016-06-21 15:28:25 UTC]]
  [1m[35m (0.8ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.5ms)[0m  [1m[32mINSERT INTO "answers" ("vote_score", "vote_count", "content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["vote_score", 2], ["vote_count", 2], ["content", "You know when you write notes and pass them to Suzie from\n  down the street? That's kind of what I do. Websites are like notes\n  you want your friends to read. For them to read your notes, you\n  need to also give them the note right? Well that is what the Internet\n  does for you. It sends the websites to the people who want to read\n  them.\n  <br>\n  The best part is, you know how you don't want Ms. Robinson to see\n  you pass that note? It's like that with the Internet too. There's\n  ways of keeping the visits to your website secret!"], ["question_id", 4], ["created_at", 2016-06-21 15:28:25 UTC], ["updated_at", 2016-06-21 15:28:25 UTC]]
  [1m[35m (0.7ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "answers" ("vote_score", "vote_count", "content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["vote_score", -2], ["vote_count", 4], ["content", "Web development is like, you know, creating front end\n  presentations of backend APIs using asynchronious requests."], ["question_id", 4], ["created_at", 2016-06-21 15:28:25 UTC], ["updated_at", 2016-06-21 15:28:25 UTC]]
  [1m[35m (0.9ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "How does the web work?"], ["created_at", 2016-06-21 15:28:25 UTC], ["updated_at", 2016-06-21 15:28:25 UTC]]
  [1m[35m (0.7ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "answers" ("vote_score", "vote_count", "content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["vote_score", -2], ["vote_count", 3], ["content", "It's a series of tubes."], ["question_id", 31], ["created_at", 2016-06-21 15:28:25 UTC], ["updated_at", 2016-06-21 15:28:25 UTC]]
  [1m[35m (0.9ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "answers" ("vote_score", "vote_count", "content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["vote_score", 5], ["vote_count", 7], ["content", "The Internet has a technical side and a social side. There's the\n  infrastructure, like routers, cables, satelites, ISPs, servers,\n  and website code, and there are the users who participate in the\n  Internet by creating content for it's applications and browsing\n  the sites.\n  <br>\n  I imagine you guys are interested in the technical side though\n  right? (Yes)\n  <br>\n  In short, I'd say it's a communication network designed\n  to deliver messages between computers. One of the most interesting\n  things about it, I think, is that in the end, it really is a\n  bunch of cables! Some run under the oceans, others go through\n  mountains and under forests. Some signals travel through space! All\n  the code we write goes through those cables, I think that's pretty\n  amazing!"], ["question_id", 31], ["created_at", 2016-06-21 15:28:25 UTC], ["updated_at", 2016-06-21 15:28:25 UTC]]
  [1m[35m (0.6ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "How did you learn programming?"], ["created_at", 2016-06-21 15:28:25 UTC], ["updated_at", 2016-06-21 15:28:25 UTC]]
  [1m[35m (0.6ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "answers" ("vote_score", "vote_count", "content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["vote_score", -3], ["vote_count", 4], ["content", "I just started Googling it you know, and I liked doing it so\n  I ended up trying to do it professionally."], ["question_id", 32], ["created_at", 2016-06-21 15:28:25 UTC], ["updated_at", 2016-06-21 15:28:25 UTC]]
  [1m[35m (0.8ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "answers" ("vote_score", "vote_count", "content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["vote_score", -3], ["vote_count", 4], ["content", "For me, it started back in 2011 when I was doing social science\n  at Stockholm University. The creation of communities had become a\n  passion of mine so I was exploring ways of finding data on\n  social networks. The Internet was the obvious place to look so I\n  found myself writing Python scripts to build simple web scrapers and\n  spiders.\n  <br>\n  It was exciting, I discovered coding makes me happy not just for\n  the results it creates but because I like the way it looks. Solving\n  problems is interesting."], ["question_id", 32], ["created_at", 2016-06-21 15:28:25 UTC], ["updated_at", 2016-06-21 15:28:25 UTC]]
  [1m[35m (1.0ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.3ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.5ms)[0m  [1m[32mINSERT INTO "answers" ("vote_score", "vote_count", "content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["vote_score", -1], ["vote_count", 6], ["content", "For the best possible opportunity"], ["question_id", 1], ["created_at", 2016-06-21 15:28:25 UTC], ["updated_at", 2016-06-21 15:28:25 UTC]]
  [1m[35m (0.7ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "answers" ("vote_score", "vote_count", "content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["vote_score", 7], ["vote_count", 9], ["content", "I am looking to develop my ability to handle production deployments and ability to communicate with a computer program through algorithms and other functions I have learned at school and will learn in my next job"], ["question_id", 1], ["created_at", 2016-06-21 15:28:25 UTC], ["updated_at", 2016-06-21 15:28:25 UTC]]
  [1m[35m (1.7ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "answers" ("vote_score", "vote_count", "content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["vote_score", 5], ["vote_count", 12], ["content", "Working with a big group of people, as a programmer I can usually figure out the problem if I keep hacking it on my own but it becomes a burden for me when multiple people join in with me."], ["question_id", 3], ["created_at", 2016-06-21 15:28:25 UTC], ["updated_at", 2016-06-21 15:28:25 UTC]]
  [1m[35m (0.7ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "answers" ("vote_score", "vote_count", "content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["vote_score", 3], ["vote_count", 5], ["content", "I would definitely say that my strength would be sitting in front of my computer and weakness in front of an interviewer."], ["question_id", 3], ["created_at", 2016-06-21 15:28:25 UTC], ["updated_at", 2016-06-21 15:28:25 UTC]]
  [1m[35m (0.9ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "answers" ("vote_score", "vote_count", "content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["vote_score", 5], ["vote_count", 7], ["content", "The energy of the people around me. I did not feel any real passion in their work which affected me deeply and prompted me to change courses."], ["question_id", 5], ["created_at", 2016-06-21 15:28:25 UTC], ["updated_at", 2016-06-21 15:28:25 UTC]]
  [1m[35m (0.9ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "answers" ("vote_score", "vote_count", "content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["vote_score", 8], ["vote_count", 11], ["content", "I felt that there was a lot of politics and that your voice or position within the company was not reflective of the hard work and level competence I brought to the table."], ["question_id", 5], ["created_at", 2016-06-21 15:28:25 UTC], ["updated_at", 2016-06-21 15:28:25 UTC]]
  [1m[35m (0.6ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "answers" ("vote_score", "vote_count", "content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["vote_score", 6], ["vote_count", 7], ["content", "Hoisting is JavaScript's default behavior of moving all declarations to the top of the current scope (to the top of the current script or the current function)."], ["question_id", 7], ["created_at", 2016-06-21 15:28:25 UTC], ["updated_at", 2016-06-21 15:28:25 UTC]]
  [1m[35m (0.7ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "answers" ("vote_score", "vote_count", "content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["vote_score", -2], ["vote_count", 3], ["content", "I beleive the variables in JavaScript are assigned on a first come first serve basis?"], ["question_id", 7], ["created_at", 2016-06-21 15:28:25 UTC], ["updated_at", 2016-06-21 15:28:25 UTC]]
  [1m[35m (19.2ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "answers" ("vote_score", "vote_count", "content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["vote_score", 7], ["vote_count", 8], ["content", "When functions in JavaScript execute, they use the same scope chain that was in effect when they were created. This means that even after the outer function has returned, the inner function still has access to the outer function's variables."], ["question_id", 9], ["created_at", 2016-06-21 15:28:25 UTC], ["updated_at", 2016-06-21 15:28:25 UTC]]
  [1m[35m (0.8ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "answers" ("vote_score", "vote_count", "content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["vote_score", -2], ["vote_count", 9], ["content", "The end of a project. Usually involves closing the books and the servers after deployment."], ["question_id", 9], ["created_at", 2016-06-21 15:28:25 UTC], ["updated_at", 2016-06-21 15:28:25 UTC]]
  [1m[35m (1.0ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "answers" ("vote_score", "vote_count", "content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["vote_score", 4], ["vote_count", 7], ["content", "Refactoring the code that we had previously written for our app using service and adapters."], ["question_id", 11], ["created_at", 2016-06-21 15:28:25 UTC], ["updated_at", 2016-06-21 15:28:25 UTC]]
  [1m[35m (0.9ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "answers" ("vote_score", "vote_count", "content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["vote_score", 8], ["vote_count", 10], ["content", "I would love to be implementing what I have learned in those previous five years by giving back to my company in a senior position"], ["question_id", 13], ["created_at", 2016-06-21 15:28:25 UTC], ["updated_at", 2016-06-21 15:28:25 UTC]]
  [1m[35m (0.9ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "answers" ("vote_score", "vote_count", "content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["vote_score", 3], ["vote_count", 7], ["content", "Prototypal inheritance (also: prototypes, OLOO). Functional programm (also: closures, first class functions, lambdas)."], ["question_id", 15], ["created_at", 2016-06-21 15:28:25 UTC], ["updated_at", 2016-06-21 15:28:25 UTC]]
  [1m[35m (0.9ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "answers" ("vote_score", "vote_count", "content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["vote_score", -2], ["vote_count", 11], ["content", "Is that a new syntax part of ES7"], ["question_id", 15], ["created_at", 2016-06-21 15:28:25 UTC], ["updated_at", 2016-06-21 15:28:25 UTC]]
  [1m[35m (0.6ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "answers" ("vote_score", "vote_count", "content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["vote_score", 7], ["vote_count", 7], ["content", "JavaScript is a multi-paradigm language, supporting imperative/procedural programming along with OOP (Object-Oriented Programming) and functional programming. JavaScript supports OOP with prototypal inheritance."], ["question_id", 15], ["created_at", 2016-06-21 15:28:25 UTC], ["updated_at", 2016-06-21 15:28:25 UTC]]
  [1m[35m (0.6ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "answers" ("vote_score", "vote_count", "content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["vote_score", -7], ["vote_count", 10], ["content", "I worked on three recent rails project I basically wrote all the code for the project so lead architect I would say"], ["question_id", 17], ["created_at", 2016-06-21 15:28:25 UTC], ["updated_at", 2016-06-21 15:28:25 UTC]]
  [1m[35m (0.8ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "answers" ("vote_score", "vote_count", "content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["vote_score", 7], ["vote_count", 10], ["content", "Had a recent rails project where we focused on refactoring using services and getting 100% test coverage we had 98 but learned how to test controllers, features and models it was an awesome experience"], ["question_id", 17], ["created_at", 2016-06-21 15:28:25 UTC], ["updated_at", 2016-06-21 15:28:25 UTC]]
  [1m[35m (0.6ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "answers" ("vote_score", "vote_count", "content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["vote_score", 3], ["vote_count", 11], ["content", "No, Thank you for your time"], ["question_id", 19], ["created_at", 2016-06-21 15:28:25 UTC], ["updated_at", 2016-06-21 15:28:25 UTC]]
  [1m[35m (0.9ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "answers" ("vote_score", "vote_count", "content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["vote_score", 3], ["vote_count", 11], ["content", "Yes, How do you implement your mission statement "], ["question_id", 19], ["created_at", 2016-06-21 15:28:25 UTC], ["updated_at", 2016-06-21 15:28:25 UTC]]
  [1m[35m (0.8ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "answers" ("vote_score", "vote_count", "content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["vote_score", 11], ["vote_count", 13], ["content", "instances inherit from classes (like a blueprint — a description of the class), and create sub-class relationships: hierarchical class taxonomies. instances inherit directly from other objects. Instances are typically instantiated via factory functions or `Object.create()"], ["question_id", 21], ["created_at", 2016-06-21 15:28:25 UTC], ["updated_at", 2016-06-21 15:28:25 UTC]]
  [1m[35m (0.7ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "answers" ("vote_score", "vote_count", "content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["vote_score", -2], ["vote_count", 13], ["content", "No preference for prototypal inheritance & composition over class inheritance."], ["question_id", 21], ["created_at", 2016-06-21 15:28:25 UTC], ["updated_at", 2016-06-21 15:28:25 UTC]]
  [1m[35m (0.7ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "answers" ("vote_score", "vote_count", "content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["vote_score", 7], ["vote_count", 13], ["content", "Polymorphic association is a term used in discussions of Object-Relational Mapping with respect to the problem of representing in the relational database domain, a relationship from one class to multiple classes"], ["question_id", 23], ["created_at", 2016-06-21 15:28:25 UTC], ["updated_at", 2016-06-21 15:28:25 UTC]]
  [1m[35m (0.7ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "answers" ("vote_score", "vote_count", "content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["vote_score", -1], ["vote_count", 1], ["content", "What’s that?"], ["question_id", 25], ["created_at", 2016-06-21 15:28:25 UTC], ["updated_at", 2016-06-21 15:28:25 UTC]]
  [1m[35m (0.9ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "answers" ("vote_score", "vote_count", "content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["vote_score", -2], ["vote_count", 3], ["content", "how about using the initialize method?"], ["question_id", 27], ["created_at", 2016-06-21 15:28:25 UTC], ["updated_at", 2016-06-21 15:28:25 UTC]]
  [1m[35m (0.9ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "answers" ("vote_score", "vote_count", "content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["vote_score", 2], ["vote_count", 4], ["content", "Success is the march towards the realization of a worthy ideal?"], ["question_id", 27], ["created_at", 2016-06-21 15:28:25 UTC], ["updated_at", 2016-06-21 15:28:25 UTC]]
  [1m[35m (1.9ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.7ms)[0m  [1m[32mINSERT INTO "answers" ("vote_score", "vote_count", "content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["vote_score", 4], ["vote_count", 9], ["content", "I learned web-development by taking classes at the flatiron school"], ["question_id", 10], ["created_at", 2016-06-21 15:28:25 UTC], ["updated_at", 2016-06-21 15:28:25 UTC]]
  [1m[35m (0.9ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "answers" ("vote_score", "vote_count", "content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["vote_score", 8], ["vote_count", 10], ["content", "I took some classes online which included code academy and code school. At first I didn't think too much about it but I couldn't stop looking for classes. This is when I realized I’d be interested in making it a career for me"], ["question_id", 10], ["created_at", 2016-06-21 15:28:25 UTC], ["updated_at", 2016-06-21 15:28:25 UTC]]
  [1m[35m (0.9ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "answers" ("vote_score", "vote_count", "content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["vote_score", -1], ["vote_count", 10], ["content", "I’m born Sydney and live 15 years in the U.S"], ["question_id", 12], ["created_at", 2016-06-21 15:28:25 UTC], ["updated_at", 2016-06-21 15:28:25 UTC]]
  [1m[35m (0.6ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "answers" ("vote_score", "vote_count", "content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["vote_score", 6], ["vote_count", 10], ["content", "I am an engineer who quickly became in love with coding at a young age. I am striving to become the best programmer I could be and I hope that with time I will be able to accomplish that goal"], ["question_id", 12], ["created_at", 2016-06-21 15:28:25 UTC], ["updated_at", 2016-06-21 15:28:25 UTC]]
  [1m[35m (0.6ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "answers" ("vote_score", "vote_count", "content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["vote_score", 4], ["vote_count", 7], ["content", "Because I align with your mission and how you help the community on a daily basis"], ["question_id", 14], ["created_at", 2016-06-21 15:28:25 UTC], ["updated_at", 2016-06-21 15:28:25 UTC]]
  [1m[35m (0.7ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "answers" ("vote_score", "vote_count", "content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["vote_score", -2], ["vote_count", 7], ["content", "You're a big corporation with a lot of opportunities."], ["question_id", 14], ["created_at", 2016-06-21 15:28:25 UTC], ["updated_at", 2016-06-21 15:28:25 UTC]]
  [1m[35m (0.6ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "answers" ("vote_score", "vote_count", "content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["vote_score", -2], ["vote_count", 4], ["content", "I plan to be the best programmer in the world"], ["question_id", 16], ["created_at", 2016-06-21 15:28:25 UTC], ["updated_at", 2016-06-21 15:28:25 UTC]]
  [1m[35m (0.6ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "answers" ("vote_score", "vote_count", "content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["vote_score", 6], ["vote_count", 9], ["content", "To put myself in a situation of learning where I can always give back to my community."], ["question_id", 16], ["created_at", 2016-06-21 15:28:25 UTC], ["updated_at", 2016-06-21 15:28:25 UTC]]
  [1m[35m (1.0ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "answers" ("vote_score", "vote_count", "content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["vote_score", -2], ["vote_count", 6], ["content", "To learn as much as I can so I can advance in my career."], ["question_id", 18], ["created_at", 2016-06-21 15:28:25 UTC], ["updated_at", 2016-06-21 15:28:25 UTC]]
  [1m[35m (0.6ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "answers" ("vote_score", "vote_count", "content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["vote_score", 6], ["vote_count", 9], ["content", "To join a company that will allow me to grow both personally and professionally"], ["question_id", 18], ["created_at", 2016-06-21 15:28:25 UTC], ["updated_at", 2016-06-21 15:28:25 UTC]]
  [1m[35m (1.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "answers" ("vote_score", "vote_count", "content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["vote_score", 6], ["vote_count", 9], ["content", "I hope to put myself in a situation of learning where I can always give back to my community."], ["question_id", 20], ["created_at", 2016-06-21 15:28:25 UTC], ["updated_at", 2016-06-21 15:28:25 UTC]]
  [1m[35m (1.0ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "answers" ("vote_score", "vote_count", "content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["vote_score", 1], ["vote_count", 5], ["content", "I’ve always had problem making deadlines so the way I went about it is through creating calendars that would help me achieve my objectives."], ["question_id", 22], ["created_at", 2016-06-21 15:28:25 UTC], ["updated_at", 2016-06-21 15:28:25 UTC]]
  [1m[35m (0.7ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "answers" ("vote_score", "vote_count", "content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["vote_score", -1], ["vote_count", 7], ["content", "Because of the opportunity and lifestyle it will give me."], ["question_id", 24], ["created_at", 2016-06-21 15:28:25 UTC], ["updated_at", 2016-06-21 15:28:25 UTC]]
  [1m[35m (0.9ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "answers" ("vote_score", "vote_count", "content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["vote_score", 3], ["vote_count", 4], ["content", "Because of the constant sense of creativity and joy that it gives me. Being a web developer would allow me to put myself in a position of learning from a great community of people who are always open to give."], ["question_id", 24], ["created_at", 2016-06-21 15:28:25 UTC], ["updated_at", 2016-06-21 15:28:25 UTC]]
  [1m[35m (1.0ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "answers" ("vote_score", "vote_count", "content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["vote_score", 4], ["vote_count", 6], ["content", "Because of the mission and sense of community this company instills in the workplace."], ["question_id", 26], ["created_at", 2016-06-21 15:28:25 UTC], ["updated_at", 2016-06-21 15:28:25 UTC]]
  [1m[35m (0.8ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "answers" ("vote_score", "vote_count", "content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["vote_score", -1], ["vote_count", 7], ["content", "I love the perks you have at your office. I can definitely utilize some free lunches"], ["question_id", 26], ["created_at", 2016-06-21 15:28:25 UTC], ["updated_at", 2016-06-21 15:28:25 UTC]]
  [1m[35m (0.7ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "answers" ("vote_score", "vote_count", "content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["vote_score", -1], ["vote_count", 3], ["content", "I do not thank you for your time."], ["question_id", 28], ["created_at", 2016-06-21 15:28:25 UTC], ["updated_at", 2016-06-21 15:28:25 UTC]]
  [1m[35m (0.9ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "answers" ("vote_score", "vote_count", "content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["vote_score", 1], ["vote_count", 2], ["content", "What reservations our question about myself that you feel I haven't answered."], ["question_id", 28], ["created_at", 2016-06-21 15:28:25 UTC], ["updated_at", 2016-06-21 15:28:25 UTC]]
  [1m[35m (0.9ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "answers" ("vote_score", "vote_count", "content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["vote_score", -2], ["vote_count", 10], ["content", "Laidback"], ["question_id", 30], ["created_at", 2016-06-21 15:28:25 UTC], ["updated_at", 2016-06-21 15:28:25 UTC]]
  [1m[35m (0.8ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "answers" ("vote_score", "vote_count", "content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["vote_score", -2], ["vote_count", 3], ["content", "I am a deadline onlooker I strive towards the goal and ravage anything or anybody thats on my way"], ["question_id", 30], ["created_at", 2016-06-21 15:28:25 UTC], ["updated_at", 2016-06-21 15:28:25 UTC]]
  [1m[35m (0.6ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "answers" ("vote_score", "vote_count", "content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["vote_score", 6], ["vote_count", 9], ["content", "I am open to the workload and task assigned by my superior. The more informed the better but I have no problem improvising and getting assignments done before the dealines"], ["question_id", 30], ["created_at", 2016-06-21 15:28:25 UTC], ["updated_at", 2016-06-21 15:28:25 UTC]]
  [1m[35m (0.9ms)[0m  [1m[35mCOMMIT[0m
Started GET "/api/v1/questions/32" for ::1 at 2016-06-21 11:28:38 -0400
  [1m[36mActiveRecord::SchemaMigration Load (0.5ms)[0m  [1m[34mSELECT "schema_migrations".* FROM "schema_migrations"[0m
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"32"}
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 32], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.4ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 32]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (48.82ms)
Completed 200 OK in 99ms (Views: 74.9ms | ActiveRecord: 6.7ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-21 11:28:41 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"sadfdasfd", "vote-count"=>0, "vote-score"=>0, "approved"=>true}, "question"=>{"data"=>{"id"=>"32", "attributes"=>{"content"=>"How did you learn programming?", "received-count"=>0}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 32], ["LIMIT", 1]]
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.7ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "sadfdasfd"], ["question_id", 32], ["created_at", 2016-06-21 15:28:41 UTC], ["updated_at", 2016-06-21 15:28:41 UTC]]
  [1m[35m (18.7ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mAnswer Load (0.9ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."question_id" = $1 ORDER BY "answers"."id" DESC LIMIT $2[0m  [["question_id", 32], ["LIMIT", 1]]
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (1.28ms)
Completed 200 OK in 32ms (Views: 2.1ms | ActiveRecord: 20.8ms)


Started GET "/api/v1/questions/32" for ::1 at 2016-06-21 11:29:28 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"32"}
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 32], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.3ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 32]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (6.13ms)
Completed 200 OK in 8ms (Views: 6.3ms | ActiveRecord: 0.8ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-21 11:29:30 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"asdasgdas", "vote-count"=>0, "vote-score"=>0, "approved"=>true}, "question"=>{"data"=>{"id"=>"32", "attributes"=>{"content"=>"How did you learn programming?", "received-count"=>0}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 32], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.5ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "asdasgdas"], ["question_id", 32], ["created_at", 2016-06-21 15:29:30 UTC], ["updated_at", 2016-06-21 15:29:30 UTC]]
  [1m[35m (126.5ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mAnswer Load (1.0ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."question_id" = $1 ORDER BY "answers"."id" DESC LIMIT $2[0m  [["question_id", 32], ["LIMIT", 1]]
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (1.38ms)
Completed 200 OK in 138ms (Views: 2.2ms | ActiveRecord: 128.4ms)


  [1m[36mAnswer Load (1.6ms)[0m  [1m[34mSELECT "answers".* FROM "answers"[0m
Started GET "/api/v1/questions/32" for ::1 at 2016-06-21 11:32:05 -0400
  [1m[36mActiveRecord::SchemaMigration Load (0.8ms)[0m  [1m[34mSELECT "schema_migrations".* FROM "schema_migrations"[0m
  
ActiveRecord::PendingMigrationError (

Migrations are pending. To resolve this issue, run:

	bin/rails db:migrate RAILS_ENV=development

):
  
activerecord (5.0.0.rc1) lib/active_record/migration.rb:572:in `check_pending!'
activerecord (5.0.0.rc1) lib/active_record/migration.rb:548:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/callbacks.rb:38:in `block in call'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:97:in `__run_callbacks__'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:750:in `_run_call_callbacks'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:90:in `run_callbacks'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/callbacks.rb:36:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/remote_ip.rb:79:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/debug_exceptions.rb:49:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/show_exceptions.rb:31:in `call'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:36:in `call_app'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:24:in `block in call'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:70:in `block in tagged'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:26:in `tagged'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:70:in `tagged'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:24:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/request_id.rb:24:in `call'
rack (2.0.0.rc1) lib/rack/runtime.rb:22:in `call'
activesupport (5.0.0.rc1) lib/active_support/cache/strategy/local_cache_middleware.rb:28:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/static.rb:136:in `call'
rack (2.0.0.rc1) lib/rack/sendfile.rb:111:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
railties (5.0.0.rc1) lib/rails/engine.rb:522:in `call'
puma (3.4.0) lib/puma/configuration.rb:224:in `call'
puma (3.4.0) lib/puma/server.rb:569:in `handle_request'
puma (3.4.0) lib/puma/server.rb:406:in `process_client'
puma (3.4.0) lib/puma/server.rb:271:in `block in run'
puma (3.4.0) lib/puma/thread_pool.rb:114:in `call'
puma (3.4.0) lib/puma/thread_pool.rb:114:in `block in spawn_thread'
Started GET "/api/v1/questions/32" for ::1 at 2016-06-21 11:32:13 -0400
  [1m[36mActiveRecord::SchemaMigration Load (0.2ms)[0m  [1m[34mSELECT "schema_migrations".* FROM "schema_migrations"[0m
  
ActiveRecord::PendingMigrationError (

Migrations are pending. To resolve this issue, run:

	bin/rails db:migrate RAILS_ENV=development

):
  
activerecord (5.0.0.rc1) lib/active_record/migration.rb:572:in `check_pending!'
activerecord (5.0.0.rc1) lib/active_record/migration.rb:548:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/callbacks.rb:38:in `block in call'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:97:in `__run_callbacks__'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:750:in `_run_call_callbacks'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:90:in `run_callbacks'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/callbacks.rb:36:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/remote_ip.rb:79:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/debug_exceptions.rb:49:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/show_exceptions.rb:31:in `call'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:36:in `call_app'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:24:in `block in call'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:70:in `block in tagged'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:26:in `tagged'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:70:in `tagged'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:24:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/request_id.rb:24:in `call'
rack (2.0.0.rc1) lib/rack/runtime.rb:22:in `call'
activesupport (5.0.0.rc1) lib/active_support/cache/strategy/local_cache_middleware.rb:28:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/static.rb:136:in `call'
rack (2.0.0.rc1) lib/rack/sendfile.rb:111:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
railties (5.0.0.rc1) lib/rails/engine.rb:522:in `call'
puma (3.4.0) lib/puma/configuration.rb:224:in `call'
puma (3.4.0) lib/puma/server.rb:569:in `handle_request'
puma (3.4.0) lib/puma/server.rb:406:in `process_client'
puma (3.4.0) lib/puma/server.rb:271:in `block in run'
puma (3.4.0) lib/puma/thread_pool.rb:114:in `call'
puma (3.4.0) lib/puma/thread_pool.rb:114:in `block in spawn_thread'
  [1m[36mActiveRecord::SchemaMigration Load (0.5ms)[0m  [1m[34mSELECT "schema_migrations".* FROM "schema_migrations"[0m
  [1m[35m (0.5ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1[0m  [["key", :environment]]
  [1m[36mActiveRecord::SchemaMigration Load (0.4ms)[0m  [1m[34mSELECT "schema_migrations".* FROM "schema_migrations"[0m
  [1m[35m (0.4ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1[0m  [["key", :environment]]
  [1m[36mActiveRecord::SchemaMigration Load (0.3ms)[0m  [1m[34mSELECT "schema_migrations".* FROM "schema_migrations"[0m
  [1m[35m (0.3ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1[0m  [["key", :environment]]
  [1m[35m (5083.7ms)[0m  [1m[35mDROP DATABASE IF EXISTS "QIQAPI_development"[0m
  [1m[35m (140.8ms)[0m  [1m[35mDROP DATABASE IF EXISTS "QIQAPI_test"[0m
  [1m[35m (2040.6ms)[0m  [1m[35mCREATE DATABASE "QIQAPI_development" ENCODING = 'unicode'[0m
  [1m[35m (566.8ms)[0m  [1m[35mCREATE DATABASE "QIQAPI_test" ENCODING = 'unicode'[0m
  [1m[35mSQL (0.4ms)[0m  [1m[35mCREATE EXTENSION IF NOT EXISTS "plpgsql"[0m
  [1m[35m (27.2ms)[0m  [1m[35mCREATE TABLE "answers" ("id" serial primary key, "vote_score" integer DEFAULT 0, "vote_count" integer DEFAULT 0, "content" character varying, "question_id" integer, "created_at" timestamp, "updated_at" timestamp, "approved" boolean DEFAULT 't')[0m
  [1m[35m (6.5ms)[0m  [1m[35mCREATE TABLE "comments" ("id" serial primary key, "answer_id" integer, "content" character varying, "vote_count" integer, "vote_score" integer, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  [1m[35m (4.4ms)[0m  [1m[35mCREATE TABLE "questions" ("id" serial primary key, "content" character varying, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL, "received_count" integer DEFAULT 0)[0m
  [1m[35m (3.6ms)[0m  [1m[35mCREATE TABLE "schema_migrations" ("version" character varying PRIMARY KEY)[0m
  [1m[35m (0.4ms)[0m  [1m[34mSELECT version FROM "schema_migrations"[0m
  [1m[35m (0.9ms)[0m  [1m[32mINSERT INTO "schema_migrations" (version) VALUES ('20160621133422')[0m
  [1m[35m (0.8ms)[0m  [1m[32mINSERT INTO schema_migrations (version) VALUES ('20160615195122'), ('20160615195241'), ('20160615195717'), ('20160617182704'), ('20160620225649'), ('20160621014846');

[0m
  [1m[35m (5.4ms)[0m  [1m[35mCREATE TABLE "ar_internal_metadata" ("key" character varying PRIMARY KEY, "value" character varying, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  [1m[36mActiveRecord::InternalMetadata Load (0.3ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" ORDER BY "ar_internal_metadata"."key" ASC LIMIT $1[0m  [["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "ar_internal_metadata" ("key", "value", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "key"[0m  [["key", "environment"], ["value", "development"], ["created_at", 2016-06-21 15:32:52 UTC], ["updated_at", 2016-06-21 15:32:52 UTC]]
  [1m[35m (0.7ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mActiveRecord::InternalMetadata Load (0.2ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" ORDER BY "ar_internal_metadata"."key" ASC LIMIT $1[0m  [["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35m (0.1ms)[0m  [1m[35mCOMMIT[0m
  [1m[35mSQL (0.3ms)[0m  [1m[35mCREATE EXTENSION IF NOT EXISTS "plpgsql"[0m
  [1m[35m (9.2ms)[0m  [1m[35mCREATE TABLE "answers" ("id" serial primary key, "vote_score" integer DEFAULT 0, "vote_count" integer DEFAULT 0, "content" character varying, "question_id" integer, "created_at" timestamp, "updated_at" timestamp, "approved" boolean DEFAULT 't')[0m
  [1m[35m (4.6ms)[0m  [1m[35mCREATE TABLE "comments" ("id" serial primary key, "answer_id" integer, "content" character varying, "vote_count" integer, "vote_score" integer, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  [1m[35m (66.9ms)[0m  [1m[35mCREATE TABLE "questions" ("id" serial primary key, "content" character varying, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL, "received_count" integer DEFAULT 0)[0m
  [1m[35m (5.6ms)[0m  [1m[35mCREATE TABLE "schema_migrations" ("version" character varying PRIMARY KEY)[0m
  [1m[35m (0.5ms)[0m  [1m[34mSELECT version FROM "schema_migrations"[0m
  [1m[35m (1.1ms)[0m  [1m[32mINSERT INTO "schema_migrations" (version) VALUES ('20160621133422')[0m
  [1m[35m (0.9ms)[0m  [1m[32mINSERT INTO schema_migrations (version) VALUES ('20160615195122'), ('20160615195241'), ('20160615195717'), ('20160617182704'), ('20160620225649'), ('20160621014846');

[0m
  [1m[35m (4.8ms)[0m  [1m[35mCREATE TABLE "ar_internal_metadata" ("key" character varying PRIMARY KEY, "value" character varying, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  [1m[36mActiveRecord::InternalMetadata Load (0.3ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" ORDER BY "ar_internal_metadata"."key" ASC LIMIT $1[0m  [["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "ar_internal_metadata" ("key", "value", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "key"[0m  [["key", "environment"], ["value", "development"], ["created_at", 2016-06-21 15:32:52 UTC], ["updated_at", 2016-06-21 15:32:52 UTC]]
  [1m[35m (0.7ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mActiveRecord::InternalMetadata Load (0.2ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" ORDER BY "ar_internal_metadata"."key" ASC LIMIT $1[0m  [["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35m (0.1ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mActiveRecord::SchemaMigration Load (0.3ms)[0m  [1m[34mSELECT "schema_migrations".* FROM "schema_migrations"[0m
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.8ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "What are you looking for in terms of career development?"], ["created_at", 2016-06-21 15:32:52 UTC], ["updated_at", 2016-06-21 15:32:52 UTC]]
  [1m[35m (1.2ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "How many ways can you center a div?"], ["created_at", 2016-06-21 15:32:52 UTC], ["updated_at", 2016-06-21 15:32:52 UTC]]
  [1m[35m (0.9ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "What are your strengths and weaknesses?"], ["created_at", 2016-06-21 15:32:52 UTC], ["updated_at", 2016-06-21 15:32:52 UTC]]
  [1m[35m (0.8ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "Explain the process of web development to a middle school kid."], ["created_at", 2016-06-21 15:32:52 UTC], ["updated_at", 2016-06-21 15:32:52 UTC]]
  [1m[35m (1.0ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "What did you like least about your last job?"], ["created_at", 2016-06-21 15:32:52 UTC], ["updated_at", 2016-06-21 15:32:52 UTC]]
  [1m[35m (0.9ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "How does the web work?"], ["created_at", 2016-06-21 15:32:52 UTC], ["updated_at", 2016-06-21 15:32:52 UTC]]
  [1m[35m (1.0ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.3ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.5ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "What is function hoisting in JavaScript?"], ["created_at", 2016-06-21 15:32:52 UTC], ["updated_at", 2016-06-21 15:32:52 UTC]]
  [1m[35m (0.9ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "How did you learn programming?"], ["created_at", 2016-06-21 15:32:52 UTC], ["updated_at", 2016-06-21 15:32:52 UTC]]
  [1m[35m (1.7ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "What is a closure?"], ["created_at", 2016-06-21 15:32:52 UTC], ["updated_at", 2016-06-21 15:32:52 UTC]]
  [1m[35m (0.7ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "How did you learn web development?"], ["created_at", 2016-06-21 15:32:52 UTC], ["updated_at", 2016-06-21 15:32:52 UTC]]
  [1m[35m (0.7ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "Describe a time when you were able to improve upon the design that was originally suggested?"], ["created_at", 2016-06-21 15:32:52 UTC], ["updated_at", 2016-06-21 15:32:52 UTC]]
  [1m[35m (0.7ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "So tell me about yourself."], ["created_at", 2016-06-21 15:32:52 UTC], ["updated_at", 2016-06-21 15:32:52 UTC]]
  [1m[35m (1.0ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "Where would you like to be in your career five years from now?"], ["created_at", 2016-06-21 15:32:52 UTC], ["updated_at", 2016-06-21 15:32:52 UTC]]
  [1m[35m (0.7ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "Why do you want to work with us?"], ["created_at", 2016-06-21 15:32:52 UTC], ["updated_at", 2016-06-21 15:32:52 UTC]]
  [1m[35m (0.8ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "Can you name two programming paradigms important for JavaScript app developers?"], ["created_at", 2016-06-21 15:32:52 UTC], ["updated_at", 2016-06-21 15:32:52 UTC]]
  [1m[35m (1.1ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "Tell me about your long-term goals."], ["created_at", 2016-06-21 15:32:52 UTC], ["updated_at", 2016-06-21 15:32:52 UTC]]
  [1m[35m (0.7ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "Tell me about the most recent project you worked on. What were your responsibilities?"], ["created_at", 2016-06-21 15:32:52 UTC], ["updated_at", 2016-06-21 15:32:52 UTC]]
  [1m[35m (0.6ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "What are your short-term goals."], ["created_at", 2016-06-21 15:32:52 UTC], ["updated_at", 2016-06-21 15:32:52 UTC]]
  [1m[35m (1.9ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "Do you have any questions for me?"], ["created_at", 2016-06-21 15:32:52 UTC], ["updated_at", 2016-06-21 15:32:52 UTC]]
  [1m[35m (0.8ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.5ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "Please walk me through one of the projects on your resume."], ["created_at", 2016-06-21 15:32:52 UTC], ["updated_at", 2016-06-21 15:32:52 UTC]]
  [1m[35m (1.1ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.3ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.5ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "What is the difference between classical inheritance and prototypal inheritance? "], ["created_at", 2016-06-21 15:32:52 UTC], ["updated_at", 2016-06-21 15:32:52 UTC]]
  [1m[35m (1.1ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "Can you tell me about a challenge you've faced at work and how you got through it?"], ["created_at", 2016-06-21 15:32:52 UTC], ["updated_at", 2016-06-21 15:32:52 UTC]]
  [1m[35m (1.0ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "Explain a polymorphic association?"], ["created_at", 2016-06-21 15:32:52 UTC], ["updated_at", 2016-06-21 15:32:52 UTC]]
  [1m[35m (0.7ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "Why do you want to be a web developer?"], ["created_at", 2016-06-21 15:32:52 UTC], ["updated_at", 2016-06-21 15:32:52 UTC]]
  [1m[35m (1.0ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "Describe your production deployment process?"], ["created_at", 2016-06-21 15:32:52 UTC], ["updated_at", 2016-06-21 15:32:52 UTC]]
  [1m[35m (0.9ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "Why do you want to work for us?"], ["created_at", 2016-06-21 15:32:52 UTC], ["updated_at", 2016-06-21 15:32:52 UTC]]
  [1m[35m (0.6ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "How would you declare and use a constructor in Ruby?"], ["created_at", 2016-06-21 15:32:52 UTC], ["updated_at", 2016-06-21 15:32:52 UTC]]
  [1m[35m (0.6ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "Do you have any questions for me?"], ["created_at", 2016-06-21 15:32:52 UTC], ["updated_at", 2016-06-21 15:32:52 UTC]]
  [1m[35m (0.6ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "How do you evaluate success?"], ["created_at", 2016-06-21 15:32:52 UTC], ["updated_at", 2016-06-21 15:32:52 UTC]]
  [1m[35m (0.7ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "How would you describe your work style?"], ["created_at", 2016-06-21 15:32:52 UTC], ["updated_at", 2016-06-21 15:32:52 UTC]]
  [1m[35m (0.7ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.8ms)[0m  [1m[32mINSERT INTO "answers" ("vote_score", "vote_count", "content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["vote_score", 15], ["vote_count", 20], ["content", "Three, and more than you'd expect!\n  <br>\n  You could center a div horizontally, vertically, or both and there are\n  a ton of ways to do them each. It also depends on what you're trying to\n  center. The most common way I do it is using the margins. If you set\n    a div's margin to 0 auto, to will automatically get the width of the\n    client's screen and use that information to center the div.\n  <br>\n  If I had text within a div, I wold use the text-align: center css\n  attribute on the div."], ["question_id", 2], ["created_at", 2016-06-21 15:32:52 UTC], ["updated_at", 2016-06-21 15:32:52 UTC]]
  [1m[35m (16.5ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.3ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.5ms)[0m  [1m[32mINSERT INTO "answers" ("vote_score", "vote_count", "content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["vote_score", -1], ["vote_count", 7], ["content", "<p>Just use margin dude.</p>"], ["question_id", 2], ["created_at", 2016-06-21 15:32:52 UTC], ["updated_at", 2016-06-21 15:32:52 UTC]]
  [1m[35m (1.1ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.5ms)[0m  [1m[32mINSERT INTO "answers" ("vote_score", "vote_count", "content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["vote_score", 2], ["vote_count", 2], ["content", "You know when you write notes and pass them to Suzie from\n  down the street? That's kind of what I do. Websites are like notes\n  you want your friends to read. For them to read your notes, you\n  need to also give them the note right? Well that is what the Internet\n  does for you. It sends the websites to the people who want to read\n  them.\n  <br>\n  The best part is, you know how you don't want Ms. Robinson to see\n  you pass that note? It's like that with the Internet too. There's\n  ways of keeping the visits to your website secret!"], ["question_id", 4], ["created_at", 2016-06-21 15:32:52 UTC], ["updated_at", 2016-06-21 15:32:52 UTC]]
  [1m[35m (1.0ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "answers" ("vote_score", "vote_count", "content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["vote_score", -2], ["vote_count", 4], ["content", "Web development is like, you know, creating front end\n  presentations of backend APIs using asynchronious requests."], ["question_id", 4], ["created_at", 2016-06-21 15:32:52 UTC], ["updated_at", 2016-06-21 15:32:52 UTC]]
  [1m[35m (0.7ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "How does the web work?"], ["created_at", 2016-06-21 15:32:52 UTC], ["updated_at", 2016-06-21 15:32:52 UTC]]
  [1m[35m (0.7ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "answers" ("vote_score", "vote_count", "content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["vote_score", -2], ["vote_count", 3], ["content", "It's a series of tubes."], ["question_id", 31], ["created_at", 2016-06-21 15:32:52 UTC], ["updated_at", 2016-06-21 15:32:52 UTC]]
  [1m[35m (0.7ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "answers" ("vote_score", "vote_count", "content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["vote_score", 5], ["vote_count", 7], ["content", "The Internet has a technical side and a social side. There's the\n  infrastructure, like routers, cables, satelites, ISPs, servers,\n  and website code, and there are the users who participate in the\n  Internet by creating content for it's applications and browsing\n  the sites.\n  <br>\n  I imagine you guys are interested in the technical side though\n  right? (Yes)\n  <br>\n  In short, I'd say it's a communication network designed\n  to deliver messages between computers. One of the most interesting\n  things about it, I think, is that in the end, it really is a\n  bunch of cables! Some run under the oceans, others go through\n  mountains and under forests. Some signals travel through space! All\n  the code we write goes through those cables, I think that's pretty\n  amazing!"], ["question_id", 31], ["created_at", 2016-06-21 15:32:52 UTC], ["updated_at", 2016-06-21 15:32:52 UTC]]
  [1m[35m (0.8ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "How did you learn programming?"], ["created_at", 2016-06-21 15:32:52 UTC], ["updated_at", 2016-06-21 15:32:52 UTC]]
  [1m[35m (0.8ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "answers" ("vote_score", "vote_count", "content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["vote_score", -3], ["vote_count", 4], ["content", "I just started Googling it you know, and I liked doing it so\n  I ended up trying to do it professionally."], ["question_id", 32], ["created_at", 2016-06-21 15:32:52 UTC], ["updated_at", 2016-06-21 15:32:52 UTC]]
  [1m[35m (0.9ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "answers" ("vote_score", "vote_count", "content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["vote_score", -3], ["vote_count", 4], ["content", "For me, it started back in 2011 when I was doing social science\n  at Stockholm University. The creation of communities had become a\n  passion of mine so I was exploring ways of finding data on\n  social networks. The Internet was the obvious place to look so I\n  found myself writing Python scripts to build simple web scrapers and\n  spiders.\n  <br>\n  It was exciting, I discovered coding makes me happy not just for\n  the results it creates but because I like the way it looks. Solving\n  problems is interesting."], ["question_id", 32], ["created_at", 2016-06-21 15:32:52 UTC], ["updated_at", 2016-06-21 15:32:52 UTC]]
  [1m[35m (0.8ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.5ms)[0m  [1m[32mINSERT INTO "comments" ("answer_id", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["answer_id", 8], ["content", "I agree."], ["created_at", 2016-06-21 15:32:52 UTC], ["updated_at", 2016-06-21 15:32:52 UTC]]
  [1m[35m (16.1ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.5ms)[0m  [1m[32mINSERT INTO "answers" ("vote_score", "vote_count", "content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["vote_score", -1], ["vote_count", 6], ["content", "For the best possible opportunity"], ["question_id", 1], ["created_at", 2016-06-21 15:32:52 UTC], ["updated_at", 2016-06-21 15:32:52 UTC]]
  [1m[35m (1.0ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "answers" ("vote_score", "vote_count", "content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["vote_score", 7], ["vote_count", 9], ["content", "I am looking to develop my ability to handle production deployments and ability to communicate with a computer program through algorithms and other functions I have learned at school and will learn in my next job"], ["question_id", 1], ["created_at", 2016-06-21 15:32:52 UTC], ["updated_at", 2016-06-21 15:32:52 UTC]]
  [1m[35m (1.0ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "answers" ("vote_score", "vote_count", "content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["vote_score", 5], ["vote_count", 12], ["content", "Working with a big group of people, as a programmer I can usually figure out the problem if I keep hacking it on my own but it becomes a burden for me when multiple people join in with me."], ["question_id", 3], ["created_at", 2016-06-21 15:32:52 UTC], ["updated_at", 2016-06-21 15:32:52 UTC]]
  [1m[35m (0.7ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "answers" ("vote_score", "vote_count", "content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["vote_score", 3], ["vote_count", 5], ["content", "I would definitely say that my strength would be sitting in front of my computer and weakness in front of an interviewer."], ["question_id", 3], ["created_at", 2016-06-21 15:32:52 UTC], ["updated_at", 2016-06-21 15:32:52 UTC]]
  [1m[35m (0.7ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "answers" ("vote_score", "vote_count", "content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["vote_score", 5], ["vote_count", 7], ["content", "The energy of the people around me. I did not feel any real passion in their work which affected me deeply and prompted me to change courses."], ["question_id", 5], ["created_at", 2016-06-21 15:32:52 UTC], ["updated_at", 2016-06-21 15:32:52 UTC]]
  [1m[35m (0.7ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "answers" ("vote_score", "vote_count", "content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["vote_score", 8], ["vote_count", 11], ["content", "I felt that there was a lot of politics and that your voice or position within the company was not reflective of the hard work and level competence I brought to the table."], ["question_id", 5], ["created_at", 2016-06-21 15:32:52 UTC], ["updated_at", 2016-06-21 15:32:52 UTC]]
  [1m[35m (0.7ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "answers" ("vote_score", "vote_count", "content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["vote_score", 6], ["vote_count", 7], ["content", "Hoisting is JavaScript's default behavior of moving all declarations to the top of the current scope (to the top of the current script or the current function)."], ["question_id", 7], ["created_at", 2016-06-21 15:32:52 UTC], ["updated_at", 2016-06-21 15:32:52 UTC]]
  [1m[35m (0.7ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "answers" ("vote_score", "vote_count", "content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["vote_score", -2], ["vote_count", 3], ["content", "I beleive the variables in JavaScript are assigned on a first come first serve basis?"], ["question_id", 7], ["created_at", 2016-06-21 15:32:53 UTC], ["updated_at", 2016-06-21 15:32:53 UTC]]
  [1m[35m (0.9ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "answers" ("vote_score", "vote_count", "content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["vote_score", 7], ["vote_count", 8], ["content", "When functions in JavaScript execute, they use the same scope chain that was in effect when they were created. This means that even after the outer function has returned, the inner function still has access to the outer function's variables."], ["question_id", 9], ["created_at", 2016-06-21 15:32:53 UTC], ["updated_at", 2016-06-21 15:32:53 UTC]]
  [1m[35m (0.9ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "answers" ("vote_score", "vote_count", "content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["vote_score", -2], ["vote_count", 9], ["content", "The end of a project. Usually involves closing the books and the servers after deployment."], ["question_id", 9], ["created_at", 2016-06-21 15:32:53 UTC], ["updated_at", 2016-06-21 15:32:53 UTC]]
  [1m[35m (1.8ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "answers" ("vote_score", "vote_count", "content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["vote_score", 4], ["vote_count", 7], ["content", "Refactoring the code that we had previously written for our app using service and adapters."], ["question_id", 11], ["created_at", 2016-06-21 15:32:53 UTC], ["updated_at", 2016-06-21 15:32:53 UTC]]
  [1m[35m (1.0ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "answers" ("vote_score", "vote_count", "content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["vote_score", 4], ["vote_count", 7], ["content", "That would definitely involve the latest group project where we went about refactoring our app using services and adapters. Great"], ["question_id", 11], ["created_at", 2016-06-21 15:32:53 UTC], ["updated_at", 2016-06-21 15:32:53 UTC]]
  [1m[35m (1.0ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "answers" ("vote_score", "vote_count", "content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["vote_score", 8], ["vote_count", 10], ["content", "I would love to be implementing what I have learned in those previous five years by giving back to my company in a senior position."], ["question_id", 13], ["created_at", 2016-06-21 15:32:53 UTC], ["updated_at", 2016-06-21 15:32:53 UTC]]
  [1m[35m (0.9ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "answers" ("vote_score", "vote_count", "content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["vote_score", 3], ["vote_count", 6], ["content", "I want to explore management training opportunities and also learn the finer points of this industry so I can eventually become  a company leader."], ["question_id", 13], ["created_at", 2016-06-21 15:32:53 UTC], ["updated_at", 2016-06-21 15:32:53 UTC]]
  [1m[35m (0.9ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "answers" ("vote_score", "vote_count", "content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["vote_score", 3], ["vote_count", 7], ["content", "Prototypal inheritance (also: prototypes, OLOO). Functional programm (also: closures, first class functions, lambdas)."], ["question_id", 15], ["created_at", 2016-06-21 15:32:53 UTC], ["updated_at", 2016-06-21 15:32:53 UTC]]
  [1m[35m (1.4ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "answers" ("vote_score", "vote_count", "content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["vote_score", -2], ["vote_count", 11], ["content", "Is that a new syntax part of ES7"], ["question_id", 15], ["created_at", 2016-06-21 15:32:53 UTC], ["updated_at", 2016-06-21 15:32:53 UTC]]
  [1m[35m (0.7ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "answers" ("vote_score", "vote_count", "content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["vote_score", 7], ["vote_count", 7], ["content", "JavaScript is a multi-paradigm language, supporting imperative/procedural programming along with OOP (Object-Oriented Programming) and functional programming. JavaScript supports OOP with prototypal inheritance."], ["question_id", 15], ["created_at", 2016-06-21 15:32:53 UTC], ["updated_at", 2016-06-21 15:32:53 UTC]]
  [1m[35m (1.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "answers" ("vote_score", "vote_count", "content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["vote_score", -7], ["vote_count", 10], ["content", "I worked on three recent rails project I basically wrote all the code for the project so lead architect I would say"], ["question_id", 17], ["created_at", 2016-06-21 15:32:53 UTC], ["updated_at", 2016-06-21 15:32:53 UTC]]
  [1m[35m (1.0ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "answers" ("vote_score", "vote_count", "content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["vote_score", 7], ["vote_count", 10], ["content", "Had a recent rails project where we focused on refactoring using services and getting 100% test coverage we had 98 but learned how to test controllers, features and models it was an awesome experience"], ["question_id", 17], ["created_at", 2016-06-21 15:32:53 UTC], ["updated_at", 2016-06-21 15:32:53 UTC]]
  [1m[35m (0.9ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "answers" ("vote_score", "vote_count", "content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["vote_score", 3], ["vote_count", 11], ["content", "No, Thank you for your time"], ["question_id", 19], ["created_at", 2016-06-21 15:32:53 UTC], ["updated_at", 2016-06-21 15:32:53 UTC]]
  [1m[35m (0.7ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "answers" ("vote_score", "vote_count", "content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["vote_score", 3], ["vote_count", 11], ["content", "Yes, How do you implement your mission statement "], ["question_id", 19], ["created_at", 2016-06-21 15:32:53 UTC], ["updated_at", 2016-06-21 15:32:53 UTC]]
  [1m[35m (0.9ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "answers" ("vote_score", "vote_count", "content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["vote_score", 11], ["vote_count", 13], ["content", "instances inherit from classes (like a blueprint — a description of the class), and create sub-class relationships: hierarchical class taxonomies. instances inherit directly from other objects. Instances are typically instantiated via factory functions or `Object.create()"], ["question_id", 21], ["created_at", 2016-06-21 15:32:53 UTC], ["updated_at", 2016-06-21 15:32:53 UTC]]
  [1m[35m (1.0ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "answers" ("vote_score", "vote_count", "content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["vote_score", -2], ["vote_count", 13], ["content", "No preference for prototypal inheritance & composition over class inheritance."], ["question_id", 21], ["created_at", 2016-06-21 15:32:53 UTC], ["updated_at", 2016-06-21 15:32:53 UTC]]
  [1m[35m (0.9ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.6ms)[0m  [1m[32mINSERT INTO "answers" ("vote_score", "vote_count", "content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["vote_score", 7], ["vote_count", 13], ["content", "Polymorphic association is a term used in discussions of Object-Relational Mapping with respect to the problem of representing in the relational database domain, a relationship from one class to multiple classes"], ["question_id", 23], ["created_at", 2016-06-21 15:32:53 UTC], ["updated_at", 2016-06-21 15:32:53 UTC]]
  [1m[35m (1.8ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "answers" ("vote_score", "vote_count", "content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["vote_score", 10], ["vote_count", 13], ["content", "It’s where an ActiveRecord model can potentially belong to more than one other kind of model record.  So the single instance of your car belongs to you, a person, whereas other cars may individually belong to a car lot, a business."], ["question_id", 23], ["created_at", 2016-06-21 15:32:53 UTC], ["updated_at", 2016-06-21 15:32:53 UTC]]
  [1m[35m (0.7ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "answers" ("vote_score", "vote_count", "content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["vote_score", -9], ["vote_count", 12], ["content", "What’s that?"], ["question_id", 25], ["created_at", 2016-06-21 15:32:53 UTC], ["updated_at", 2016-06-21 15:32:53 UTC]]
  [1m[35m (0.7ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "answers" ("vote_score", "vote_count", "content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["vote_score", 3], ["vote_count", 6], ["content", "I usually seperate my gems in different production environments. I would deploy than deploy to heroku for some assurance and than the official website for publishing"], ["question_id", 25], ["created_at", 2016-06-21 15:32:53 UTC], ["updated_at", 2016-06-21 15:32:53 UTC]]
  [1m[35m (0.9ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "answers" ("vote_score", "vote_count", "content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["vote_score", -2], ["vote_count", 3], ["content", "how about using the initialize method?"], ["question_id", 27], ["created_at", 2016-06-21 15:32:53 UTC], ["updated_at", 2016-06-21 15:32:53 UTC]]
  [1m[35m (0.7ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "answers" ("vote_score", "vote_count", "content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["vote_score", 7], ["vote_count", 10], ["content", "The Ruby Constructor has three jobs.It allocates space for the object. It assigns instances variables their initial values. It returns the instance of that class"], ["question_id", 27], ["created_at", 2016-06-21 15:32:53 UTC], ["updated_at", 2016-06-21 15:32:53 UTC]]
  [1m[35m (0.7ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "answers" ("vote_score", "vote_count", "content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["vote_score", 2], ["vote_count", 4], ["content", "Success is the march towards the realization of a worthy ideal?"], ["question_id", 29], ["created_at", 2016-06-21 15:32:53 UTC], ["updated_at", 2016-06-21 15:32:53 UTC]]
  [1m[35m (0.7ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "answers" ("vote_score", "vote_count", "content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["vote_score", 2], ["vote_count", 4], ["content", "I evaluate success in different ways. At work, it is meeting the goals set by my supervisors and my fellow workers. It is my understanding, from talking to other employees, that the GGR company is recognized for not only rewarding success but giving employees opportunity to grow as well."], ["question_id", 29], ["created_at", 2016-06-21 15:32:53 UTC], ["updated_at", 2016-06-21 15:32:53 UTC]]
  [1m[35m (0.7ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "answers" ("vote_score", "vote_count", "content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["vote_score", 4], ["vote_count", 9], ["content", "I learned web-development by taking classes at the flatiron school"], ["question_id", 10], ["created_at", 2016-06-21 15:32:53 UTC], ["updated_at", 2016-06-21 15:32:53 UTC]]
  [1m[35m (2.0ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "answers" ("vote_score", "vote_count", "content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["vote_score", 8], ["vote_count", 10], ["content", "I took some classes online which included code academy and code school. At first I didn't think too much about it but I couldn't stop looking for classes. This is when I realized I’d be interested in making it a career for me"], ["question_id", 10], ["created_at", 2016-06-21 15:32:53 UTC], ["updated_at", 2016-06-21 15:32:53 UTC]]
  [1m[35m (1.0ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.7ms)[0m  [1m[32mINSERT INTO "answers" ("vote_score", "vote_count", "content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["vote_score", -1], ["vote_count", 10], ["content", "I’m born Sydney and live 15 years in the U.S"], ["question_id", 12], ["created_at", 2016-06-21 15:32:53 UTC], ["updated_at", 2016-06-21 15:32:53 UTC]]
  [1m[35m (0.6ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "answers" ("vote_score", "vote_count", "content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["vote_score", 6], ["vote_count", 10], ["content", "I am an engineer who quickly became in love with coding at a young age. I am striving to become the best programmer I could be and I hope that with time I will be able to accomplish that goal"], ["question_id", 12], ["created_at", 2016-06-21 15:32:53 UTC], ["updated_at", 2016-06-21 15:32:53 UTC]]
  [1m[35m (0.6ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "answers" ("vote_score", "vote_count", "content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["vote_score", 4], ["vote_count", 7], ["content", "Because I align with your mission and how you help the community on a daily basis"], ["question_id", 14], ["created_at", 2016-06-21 15:32:53 UTC], ["updated_at", 2016-06-21 15:32:53 UTC]]
  [1m[35m (28.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "answers" ("vote_score", "vote_count", "content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["vote_score", -2], ["vote_count", 7], ["content", "You're a big corporation with a lot of opportunities."], ["question_id", 14], ["created_at", 2016-06-21 15:32:53 UTC], ["updated_at", 2016-06-21 15:32:53 UTC]]
  [1m[35m (0.7ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "answers" ("vote_score", "vote_count", "content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["vote_score", -2], ["vote_count", 4], ["content", "I plan to be the best programmer in the world"], ["question_id", 16], ["created_at", 2016-06-21 15:32:53 UTC], ["updated_at", 2016-06-21 15:32:53 UTC]]
  [1m[35m (0.7ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "answers" ("vote_score", "vote_count", "content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["vote_score", 3], ["vote_count", 7], ["content", "To put myself in a situation of learning where I can always give back to my community."], ["question_id", 16], ["created_at", 2016-06-21 15:32:53 UTC], ["updated_at", 2016-06-21 15:32:53 UTC]]
  [1m[35m (1.0ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "answers" ("vote_score", "vote_count", "content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["vote_score", -2], ["vote_count", 6], ["content", "To learn as much as I can so I can advance in my career."], ["question_id", 18], ["created_at", 2016-06-21 15:32:53 UTC], ["updated_at", 2016-06-21 15:32:53 UTC]]
  [1m[35m (0.9ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "answers" ("vote_score", "vote_count", "content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["vote_score", 2], ["vote_count", 4], ["content", "To join a company that will allow me to grow both personally and professionally"], ["question_id", 18], ["created_at", 2016-06-21 15:32:53 UTC], ["updated_at", 2016-06-21 15:32:53 UTC]]
  [1m[35m (0.8ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "answers" ("vote_score", "vote_count", "content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["vote_score", 3], ["vote_count", 5], ["content", "I hope to put myself in a situation of learning where I can always give back to my community."], ["question_id", 20], ["created_at", 2016-06-21 15:32:53 UTC], ["updated_at", 2016-06-21 15:32:53 UTC]]
  [1m[35m (0.7ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "answers" ("vote_score", "vote_count", "content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["vote_score", 3], ["vote_count", 5], ["content", "I can walk you through two of my favorites app I build at flatiron. I will go over the code I wrote at first and how I refactored by deployment"], ["question_id", 20], ["created_at", 2016-06-21 15:32:53 UTC], ["updated_at", 2016-06-21 15:32:53 UTC]]
  [1m[35m (1.0ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "answers" ("vote_score", "vote_count", "content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["vote_score", 1], ["vote_count", 5], ["content", "I’ve always had problem making deadlines so the way I went about it is through creating calendars that would help me achieve my objectives."], ["question_id", 22], ["created_at", 2016-06-21 15:32:53 UTC], ["updated_at", 2016-06-21 15:32:53 UTC]]
  [1m[35m (0.9ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "answers" ("vote_score", "vote_count", "content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["vote_score", 7], ["vote_count", 10], ["content", "The greatest challenge I've faced in my career to date has to be the key role I played in helping my company survive the recent recession. \nWhile we certainly did have a tough time of it, we successfully rode out the recession and the cost control measures which I personally devised and implemented ultimately resulted in a significantly healthier bottom line than we had had before the recession."], ["question_id", 22], ["created_at", 2016-06-21 15:32:53 UTC], ["updated_at", 2016-06-21 15:32:53 UTC]]
  [1m[35m (0.7ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "answers" ("vote_score", "vote_count", "content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["vote_score", -1], ["vote_count", 7], ["content", "Because of the opportunity and lifestyle it will give me."], ["question_id", 24], ["created_at", 2016-06-21 15:32:53 UTC], ["updated_at", 2016-06-21 15:32:53 UTC]]
  [1m[35m (0.7ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.6ms)[0m  [1m[32mINSERT INTO "answers" ("vote_score", "vote_count", "content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["vote_score", 3], ["vote_count", 4], ["content", "Because of the constant sense of creativity and joy that it gives me. Being a web developer would allow me to put myself in a position of learning from a great community of people who are always open to give."], ["question_id", 24], ["created_at", 2016-06-21 15:32:53 UTC], ["updated_at", 2016-06-21 15:32:53 UTC]]
  [1m[35m (1.0ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "answers" ("vote_score", "vote_count", "content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["vote_score", 4], ["vote_count", 6], ["content", "Because of the mission and sense of community this company instills in the workplace."], ["question_id", 26], ["created_at", 2016-06-21 15:32:53 UTC], ["updated_at", 2016-06-21 15:32:53 UTC]]
  [1m[35m (0.7ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "answers" ("vote_score", "vote_count", "content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["vote_score", -1], ["vote_count", 7], ["content", "I love the perks you have at your office. I can definitely utilize some free lunches"], ["question_id", 26], ["created_at", 2016-06-21 15:32:53 UTC], ["updated_at", 2016-06-21 15:32:53 UTC]]
  [1m[35m (0.9ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "answers" ("vote_score", "vote_count", "content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["vote_score", -1], ["vote_count", 3], ["content", "I do not thank you for your time."], ["question_id", 28], ["created_at", 2016-06-21 15:32:53 UTC], ["updated_at", 2016-06-21 15:32:53 UTC]]
  [1m[35m (0.7ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "answers" ("vote_score", "vote_count", "content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["vote_score", 1], ["vote_count", 2], ["content", "What reservations our question about myself that you feel I haven't answered."], ["question_id", 28], ["created_at", 2016-06-21 15:32:53 UTC], ["updated_at", 2016-06-21 15:32:53 UTC]]
  [1m[35m (1.0ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "answers" ("vote_score", "vote_count", "content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["vote_score", -2], ["vote_count", 10], ["content", "Laidback"], ["question_id", 30], ["created_at", 2016-06-21 15:32:53 UTC], ["updated_at", 2016-06-21 15:32:53 UTC]]
  [1m[35m (0.7ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "answers" ("vote_score", "vote_count", "content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["vote_score", -2], ["vote_count", 3], ["content", "I am a deadline onlooker I strive towards the goal and ravage anything or anybody thats on my way"], ["question_id", 30], ["created_at", 2016-06-21 15:32:53 UTC], ["updated_at", 2016-06-21 15:32:53 UTC]]
  [1m[35m (0.9ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "answers" ("vote_score", "vote_count", "content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["vote_score", 6], ["vote_count", 9], ["content", "I am open to the workload and task assigned by my superior. The more informed the better but I have no problem improvising and getting assignments done before the dealines"], ["question_id", 30], ["created_at", 2016-06-21 15:32:53 UTC], ["updated_at", 2016-06-21 15:32:53 UTC]]
  [1m[35m (0.9ms)[0m  [1m[35mCOMMIT[0m
Started GET "/api/v1/questions/32" for ::1 at 2016-06-21 11:33:03 -0400
  [1m[36mActiveRecord::SchemaMigration Load (0.5ms)[0m  [1m[34mSELECT "schema_migrations".* FROM "schema_migrations"[0m
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"32"}
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 32], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.4ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 32]]
[active_model_serializers]   [1m[36mComment Load (0.3ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 7]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 8]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (112.55ms)
Completed 200 OK in 238ms (Views: 200.3ms | ActiveRecord: 11.8ms)


Started GET "/api/v1/questions/32" for ::1 at 2016-06-21 11:33:04 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"32"}
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 32], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.3ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 32]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 7]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 8]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (9.41ms)
Completed 200 OK in 11ms (Views: 9.1ms | ActiveRecord: 1.1ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-21 11:33:07 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"adsadsgsdg", "vote-count"=>0, "vote-score"=>0, "approved"=>true}, "question"=>{"data"=>{"id"=>"32", "attributes"=>{"content"=>"How did you learn programming?", "received-count"=>0}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.5ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 32], ["LIMIT", 1]]
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.5ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "adsadsgsdg"], ["question_id", 32], ["created_at", 2016-06-21 15:33:07 UTC], ["updated_at", 2016-06-21 15:33:07 UTC]]
  [1m[35m (0.8ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mAnswer Load (0.5ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."question_id" = $1 ORDER BY "answers"."id" DESC LIMIT $2[0m  [["question_id", 32], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mComment Load (0.3ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 63]]
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (3.1ms)
Completed 200 OK in 14ms (Views: 3.4ms | ActiveRecord: 2.8ms)


Started GET "/api/v1/questions/32" for ::1 at 2016-06-21 11:33:45 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"32"}
  [1m[36mQuestion Load (1.5ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 32], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.9ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 32]]
[active_model_serializers]   [1m[36mComment Load (2.0ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 7]]
[active_model_serializers]   [1m[36mComment Load (1.1ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 8]]
[active_model_serializers]   [1m[36mComment Load (0.3ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 63]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (35.23ms)
Completed 200 OK in 39ms (Views: 32.0ms | ActiveRecord: 5.8ms)


Started GET "/api/v1/questions/32" for ::1 at 2016-06-21 11:33:46 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"32"}
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 32], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.4ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 32]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 7]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 8]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 63]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (14.71ms)
Completed 200 OK in 16ms (Views: 14.3ms | ActiveRecord: 1.3ms)


Started GET "/api/v1/questions/32" for ::1 at 2016-06-21 11:34:20 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"32"}
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 32], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.3ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 32]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 7]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 8]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 63]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (11.57ms)
Completed 200 OK in 13ms (Views: 11.2ms | ActiveRecord: 1.1ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-21 11:34:22 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"sadgasdg", "vote-count"=>0, "vote-score"=>0, "approved"=>true}, "question"=>{"data"=>{"id"=>"32", "attributes"=>{"content"=>"How did you learn programming?", "received-count"=>0}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 32], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "sadgasdg"], ["question_id", 32], ["created_at", 2016-06-21 15:34:22 UTC], ["updated_at", 2016-06-21 15:34:22 UTC]]
  [1m[35m (54.7ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mAnswer Load (0.7ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."question_id" = $1 ORDER BY "answers"."id" DESC LIMIT $2[0m  [["question_id", 32], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 64]]
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (2.55ms)
Completed 200 OK in 66ms (Views: 2.8ms | ActiveRecord: 56.3ms)


Started GET "/api/v1/questions/32" for ::1 at 2016-06-21 11:34:37 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"32"}
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 32], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.5ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 32]]
[active_model_serializers]   [1m[36mComment Load (0.3ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 7]]
[active_model_serializers]   [1m[36mComment Load (0.3ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 8]]
[active_model_serializers]   [1m[36mComment Load (0.3ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 63]]
[active_model_serializers]   [1m[36mComment Load (0.3ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 64]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (25.58ms)
Completed 200 OK in 29ms (Views: 24.9ms | ActiveRecord: 2.0ms)


Started GET "/api/v1/questions/32" for ::1 at 2016-06-21 11:34:37 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"32"}
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 32], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.3ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 32]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 7]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 8]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 63]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 64]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (16.64ms)
Completed 200 OK in 18ms (Views: 16.0ms | ActiveRecord: 1.3ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-21 11:34:40 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"asdgfadsf", "vote-count"=>0, "vote-score"=>0, "approved"=>true}, "question"=>{"data"=>{"id"=>"32", "attributes"=>{"content"=>"How did you learn programming?", "received-count"=>0}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 32], ["LIMIT", 1]]
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (1.5ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "asdgfadsf"], ["question_id", 32], ["created_at", 2016-06-21 15:34:40 UTC], ["updated_at", 2016-06-21 15:34:40 UTC]]
  [1m[35m (969.6ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mAnswer Load (1.1ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."question_id" = $1 ORDER BY "answers"."id" DESC LIMIT $2[0m  [["question_id", 32], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 65]]
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (4.31ms)
Completed 200 OK in 1016ms (Views: 5.1ms | ActiveRecord: 972.9ms)


Started GET "/api/v1/questions/32" for ::1 at 2016-06-21 11:34:43 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"32"}
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 32], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.3ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 32]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 7]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 8]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 63]]
[active_model_serializers]   [1m[36mComment Load (0.4ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 64]]
[active_model_serializers]   [1m[36mComment Load (0.3ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 65]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (25.6ms)
Completed 200 OK in 28ms (Views: 24.8ms | ActiveRecord: 1.9ms)


Started GET "/api/v1/questions/32" for ::1 at 2016-06-21 11:34:44 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"32"}
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 32], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (1.1ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 32]]
[active_model_serializers]   [1m[36mComment Load (0.3ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 7]]
[active_model_serializers]   [1m[36mComment Load (0.3ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 8]]
[active_model_serializers]   [1m[36mComment Load (0.3ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 63]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 64]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 65]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (35.95ms)
Completed 200 OK in 39ms (Views: 35.6ms | ActiveRecord: 2.7ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-21 11:34:45 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"asdfadsggds", "vote-count"=>0, "vote-score"=>0, "approved"=>true}, "question"=>{"data"=>{"id"=>"32", "attributes"=>{"content"=>"How did you learn programming?", "received-count"=>0}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 32], ["LIMIT", 1]]
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "asdfadsggds"], ["question_id", 32], ["created_at", 2016-06-21 15:34:45 UTC], ["updated_at", 2016-06-21 15:34:45 UTC]]
  [1m[35m (1.0ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mAnswer Load (0.4ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."question_id" = $1 ORDER BY "answers"."id" DESC LIMIT $2[0m  [["question_id", 32], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 66]]
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (3.46ms)
Completed 200 OK in 14ms (Views: 4.1ms | ActiveRecord: 2.4ms)


Started GET "/api/v1/questions/32" for ::1 at 2016-06-21 11:35:06 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"32"}
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 32], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.3ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 32]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 7]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 8]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 63]]
[active_model_serializers]   [1m[36mComment Load (0.3ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 64]]
[active_model_serializers]   [1m[36mComment Load (0.3ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 65]]
[active_model_serializers]   [1m[36mComment Load (0.3ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 66]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (29.0ms)
Completed 200 OK in 31ms (Views: 28.0ms | ActiveRecord: 2.0ms)


Started GET "/api/v1/questions/32" for ::1 at 2016-06-21 11:35:06 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"32"}
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 32], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.4ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 32]]
[active_model_serializers]   [1m[36mComment Load (0.7ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 7]]
[active_model_serializers]   [1m[36mComment Load (0.3ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 8]]
[active_model_serializers]   [1m[36mComment Load (0.4ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 63]]
[active_model_serializers]   [1m[36mComment Load (0.3ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 64]]
[active_model_serializers]   [1m[36mComment Load (0.3ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 65]]
[active_model_serializers]   [1m[36mComment Load (0.3ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 66]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (38.65ms)
Completed 200 OK in 41ms (Views: 37.0ms | ActiveRecord: 2.9ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-21 11:35:08 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"asdadsg", "vote-count"=>0, "vote-score"=>0, "approved"=>true}, "question"=>{"data"=>{"id"=>"32", "attributes"=>{"content"=>"How did you learn programming?", "received-count"=>0}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 32], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.5ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "asdadsg"], ["question_id", 32], ["created_at", 2016-06-21 15:35:08 UTC], ["updated_at", 2016-06-21 15:35:08 UTC]]
  [1m[35m (2.2ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mAnswer Load (0.6ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."question_id" = $1 ORDER BY "answers"."id" DESC LIMIT $2[0m  [["question_id", 32], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 67]]
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (2.57ms)
Completed 200 OK in 13ms (Views: 2.9ms | ActiveRecord: 3.8ms)


  [1m[36mActiveRecord::SchemaMigration Load (0.6ms)[0m  [1m[34mSELECT "schema_migrations".* FROM "schema_migrations"[0m
  [1m[35m (0.8ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1[0m  [["key", :environment]]
  [1m[36mActiveRecord::SchemaMigration Load (0.3ms)[0m  [1m[34mSELECT "schema_migrations".* FROM "schema_migrations"[0m
  [1m[35m (0.3ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1[0m  [["key", :environment]]
  [1m[36mActiveRecord::SchemaMigration Load (0.3ms)[0m  [1m[34mSELECT "schema_migrations".* FROM "schema_migrations"[0m
  [1m[35m (0.2ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1[0m  [["key", :environment]]
  [1m[35m (710.2ms)[0m  [1m[35mDROP DATABASE IF EXISTS "QIQAPI_development"[0m
  [1m[35m (184.8ms)[0m  [1m[35mDROP DATABASE IF EXISTS "QIQAPI_test"[0m
  [1m[35m (2666.6ms)[0m  [1m[35mCREATE DATABASE "QIQAPI_development" ENCODING = 'unicode'[0m
  [1m[35m (615.0ms)[0m  [1m[35mCREATE DATABASE "QIQAPI_test" ENCODING = 'unicode'[0m
  [1m[35mSQL (0.3ms)[0m  [1m[35mCREATE EXTENSION IF NOT EXISTS "plpgsql"[0m
  [1m[35m (24.9ms)[0m  [1m[35mCREATE TABLE "answers" ("id" serial primary key, "vote_score" integer DEFAULT 0, "vote_count" integer DEFAULT 0, "content" character varying, "question_id" integer, "created_at" timestamp, "updated_at" timestamp, "approved" boolean DEFAULT 't')[0m
  [1m[35m (5.1ms)[0m  [1m[35mCREATE TABLE "comments" ("id" serial primary key, "answer_id" integer, "content" character varying, "vote_count" integer, "vote_score" integer, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  [1m[35m (3.9ms)[0m  [1m[35mCREATE TABLE "questions" ("id" serial primary key, "content" character varying, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL, "received_count" integer DEFAULT 0)[0m
  [1m[35m (3.1ms)[0m  [1m[35mCREATE TABLE "schema_migrations" ("version" character varying PRIMARY KEY)[0m
  [1m[35m (0.3ms)[0m  [1m[34mSELECT version FROM "schema_migrations"[0m
  [1m[35m (0.7ms)[0m  [1m[32mINSERT INTO "schema_migrations" (version) VALUES ('20160621133422')[0m
  [1m[35m (0.6ms)[0m  [1m[32mINSERT INTO schema_migrations (version) VALUES ('20160615195122'), ('20160615195241'), ('20160615195717'), ('20160617182704'), ('20160620225649'), ('20160621014846');

[0m
  [1m[35m (3.2ms)[0m  [1m[35mCREATE TABLE "ar_internal_metadata" ("key" character varying PRIMARY KEY, "value" character varying, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  [1m[36mActiveRecord::InternalMetadata Load (0.3ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" ORDER BY "ar_internal_metadata"."key" ASC LIMIT $1[0m  [["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "ar_internal_metadata" ("key", "value", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "key"[0m  [["key", "environment"], ["value", "development"], ["created_at", 2016-06-21 15:36:50 UTC], ["updated_at", 2016-06-21 15:36:50 UTC]]
  [1m[35m (0.6ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mActiveRecord::InternalMetadata Load (0.1ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" ORDER BY "ar_internal_metadata"."key" ASC LIMIT $1[0m  [["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35m (0.1ms)[0m  [1m[35mCOMMIT[0m
  [1m[35mSQL (0.3ms)[0m  [1m[35mCREATE EXTENSION IF NOT EXISTS "plpgsql"[0m
  [1m[35m (7.6ms)[0m  [1m[35mCREATE TABLE "answers" ("id" serial primary key, "vote_score" integer DEFAULT 0, "vote_count" integer DEFAULT 0, "content" character varying, "question_id" integer, "created_at" timestamp, "updated_at" timestamp, "approved" boolean DEFAULT 't')[0m
  [1m[35m (4.6ms)[0m  [1m[35mCREATE TABLE "comments" ("id" serial primary key, "answer_id" integer, "content" character varying, "vote_count" integer, "vote_score" integer, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  [1m[35m (4.7ms)[0m  [1m[35mCREATE TABLE "questions" ("id" serial primary key, "content" character varying, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL, "received_count" integer DEFAULT 0)[0m
  [1m[35m (39.4ms)[0m  [1m[35mCREATE TABLE "schema_migrations" ("version" character varying PRIMARY KEY)[0m
  [1m[35m (0.6ms)[0m  [1m[34mSELECT version FROM "schema_migrations"[0m
  [1m[35m (1.1ms)[0m  [1m[32mINSERT INTO "schema_migrations" (version) VALUES ('20160621133422')[0m
  [1m[35m (0.9ms)[0m  [1m[32mINSERT INTO schema_migrations (version) VALUES ('20160615195122'), ('20160615195241'), ('20160615195717'), ('20160617182704'), ('20160620225649'), ('20160621014846');

[0m
  [1m[35m (16.3ms)[0m  [1m[35mCREATE TABLE "ar_internal_metadata" ("key" character varying PRIMARY KEY, "value" character varying, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  [1m[36mActiveRecord::InternalMetadata Load (0.6ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" ORDER BY "ar_internal_metadata"."key" ASC LIMIT $1[0m  [["LIMIT", 1]]
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.7ms)[0m  [1m[32mINSERT INTO "ar_internal_metadata" ("key", "value", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "key"[0m  [["key", "environment"], ["value", "development"], ["created_at", 2016-06-21 15:36:51 UTC], ["updated_at", 2016-06-21 15:36:51 UTC]]
  [1m[35m (0.8ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mActiveRecord::InternalMetadata Load (0.2ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" ORDER BY "ar_internal_metadata"."key" ASC LIMIT $1[0m  [["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35m (0.1ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mActiveRecord::SchemaMigration Load (0.3ms)[0m  [1m[34mSELECT "schema_migrations".* FROM "schema_migrations"[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (1.4ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "What are you looking for in terms of career development?"], ["created_at", 2016-06-21 15:36:51 UTC], ["updated_at", 2016-06-21 15:36:51 UTC]]
  [1m[35m (16.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.5ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "How many ways can you center a div?"], ["created_at", 2016-06-21 15:36:51 UTC], ["updated_at", 2016-06-21 15:36:51 UTC]]
  [1m[35m (1.1ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "What are your strengths and weaknesses?"], ["created_at", 2016-06-21 15:36:51 UTC], ["updated_at", 2016-06-21 15:36:51 UTC]]
  [1m[35m (0.7ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "Explain the process of web development to a middle school kid."], ["created_at", 2016-06-21 15:36:51 UTC], ["updated_at", 2016-06-21 15:36:51 UTC]]
  [1m[35m (0.9ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "What did you like least about your last job?"], ["created_at", 2016-06-21 15:36:51 UTC], ["updated_at", 2016-06-21 15:36:51 UTC]]
  [1m[35m (3.0ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "How does the web work?"], ["created_at", 2016-06-21 15:36:51 UTC], ["updated_at", 2016-06-21 15:36:51 UTC]]
  [1m[35m (0.9ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "What is function hoisting in JavaScript?"], ["created_at", 2016-06-21 15:36:51 UTC], ["updated_at", 2016-06-21 15:36:51 UTC]]
  [1m[35m (0.8ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "How did you learn programming?"], ["created_at", 2016-06-21 15:36:51 UTC], ["updated_at", 2016-06-21 15:36:51 UTC]]
  [1m[35m (1.8ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "What is a closure?"], ["created_at", 2016-06-21 15:36:51 UTC], ["updated_at", 2016-06-21 15:36:51 UTC]]
  [1m[35m (0.9ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "How did you learn web development?"], ["created_at", 2016-06-21 15:36:51 UTC], ["updated_at", 2016-06-21 15:36:51 UTC]]
  [1m[35m (1.7ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "Describe a time when you were able to improve upon the design that was originally suggested?"], ["created_at", 2016-06-21 15:36:51 UTC], ["updated_at", 2016-06-21 15:36:51 UTC]]
  [1m[35m (1.0ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "So tell me about yourself."], ["created_at", 2016-06-21 15:36:51 UTC], ["updated_at", 2016-06-21 15:36:51 UTC]]
  [1m[35m (0.9ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "Where would you like to be in your career five years from now?"], ["created_at", 2016-06-21 15:36:51 UTC], ["updated_at", 2016-06-21 15:36:51 UTC]]
  [1m[35m (0.9ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "Why do you want to work with us?"], ["created_at", 2016-06-21 15:36:51 UTC], ["updated_at", 2016-06-21 15:36:51 UTC]]
  [1m[35m (0.7ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.3ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.6ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "Can you name two programming paradigms important for JavaScript app developers?"], ["created_at", 2016-06-21 15:36:51 UTC], ["updated_at", 2016-06-21 15:36:51 UTC]]
  [1m[35m (0.8ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "Tell me about your long-term goals."], ["created_at", 2016-06-21 15:36:51 UTC], ["updated_at", 2016-06-21 15:36:51 UTC]]
  [1m[35m (1.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "Tell me about the most recent project you worked on. What were your responsibilities?"], ["created_at", 2016-06-21 15:36:51 UTC], ["updated_at", 2016-06-21 15:36:51 UTC]]
  [1m[35m (1.0ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "What are your short-term goals."], ["created_at", 2016-06-21 15:36:51 UTC], ["updated_at", 2016-06-21 15:36:51 UTC]]
  [1m[35m (2.8ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "Do you have any questions for me?"], ["created_at", 2016-06-21 15:36:51 UTC], ["updated_at", 2016-06-21 15:36:51 UTC]]
  [1m[35m (1.0ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "Please walk me through one of the projects on your resume."], ["created_at", 2016-06-21 15:36:51 UTC], ["updated_at", 2016-06-21 15:36:51 UTC]]
  [1m[35m (0.9ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "What is the difference between classical inheritance and prototypal inheritance? "], ["created_at", 2016-06-21 15:36:51 UTC], ["updated_at", 2016-06-21 15:36:51 UTC]]
  [1m[35m (0.9ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "Can you tell me about a challenge you've faced at work and how you got through it?"], ["created_at", 2016-06-21 15:36:51 UTC], ["updated_at", 2016-06-21 15:36:51 UTC]]
  [1m[35m (0.6ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "Explain a polymorphic association?"], ["created_at", 2016-06-21 15:36:51 UTC], ["updated_at", 2016-06-21 15:36:51 UTC]]
  [1m[35m (0.7ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "Why do you want to be a web developer?"], ["created_at", 2016-06-21 15:36:51 UTC], ["updated_at", 2016-06-21 15:36:51 UTC]]
  [1m[35m (1.6ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "Describe your production deployment process?"], ["created_at", 2016-06-21 15:36:51 UTC], ["updated_at", 2016-06-21 15:36:51 UTC]]
  [1m[35m (0.9ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "Why do you want to work for us?"], ["created_at", 2016-06-21 15:36:51 UTC], ["updated_at", 2016-06-21 15:36:51 UTC]]
  [1m[35m (0.9ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "How would you declare and use a constructor in Ruby?"], ["created_at", 2016-06-21 15:36:51 UTC], ["updated_at", 2016-06-21 15:36:51 UTC]]
  [1m[35m (1.0ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "Do you have any questions for me?"], ["created_at", 2016-06-21 15:36:51 UTC], ["updated_at", 2016-06-21 15:36:51 UTC]]
  [1m[35m (0.9ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "How do you evaluate success?"], ["created_at", 2016-06-21 15:36:51 UTC], ["updated_at", 2016-06-21 15:36:51 UTC]]
  [1m[35m (0.9ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "How would you describe your work style?"], ["created_at", 2016-06-21 15:36:51 UTC], ["updated_at", 2016-06-21 15:36:51 UTC]]
  [1m[35m (1.0ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.8ms)[0m  [1m[32mINSERT INTO "answers" ("vote_score", "vote_count", "content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["vote_score", 15], ["vote_count", 20], ["content", "Three, and more than you'd expect!\n  <br>\n  You could center a div horizontally, vertically, or both and there are\n  a ton of ways to do them each. It also depends on what you're trying to\n  center. The most common way I do it is using the margins. If you set\n    a div's margin to 0 auto, to will automatically get the width of the\n    client's screen and use that information to center the div.\n  <br>\n  If I had text within a div, I wold use the text-align: center css\n  attribute on the div."], ["question_id", 2], ["created_at", 2016-06-21 15:36:51 UTC], ["updated_at", 2016-06-21 15:36:51 UTC]]
  [1m[35m (16.5ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.3ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.5ms)[0m  [1m[32mINSERT INTO "answers" ("vote_score", "vote_count", "content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["vote_score", -1], ["vote_count", 7], ["content", "<p>Just use margin dude.</p>"], ["question_id", 2], ["created_at", 2016-06-21 15:36:51 UTC], ["updated_at", 2016-06-21 15:36:51 UTC]]
  [1m[35m (1.1ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "answers" ("vote_score", "vote_count", "content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["vote_score", 2], ["vote_count", 2], ["content", "You know when you write notes and pass them to Suzie from\n  down the street? That's kind of what I do. Websites are like notes\n  you want your friends to read. For them to read your notes, you\n  need to also give them the note right? Well that is what the Internet\n  does for you. It sends the websites to the people who want to read\n  them.\n  <br>\n  The best part is, you know how you don't want Ms. Robinson to see\n  you pass that note? It's like that with the Internet too. There's\n  ways of keeping the visits to your website secret!"], ["question_id", 4], ["created_at", 2016-06-21 15:36:51 UTC], ["updated_at", 2016-06-21 15:36:51 UTC]]
  [1m[35m (1.1ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.5ms)[0m  [1m[32mINSERT INTO "answers" ("vote_score", "vote_count", "content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["vote_score", -2], ["vote_count", 4], ["content", "Web development is like, you know, creating front end\n  presentations of backend APIs using asynchronious requests."], ["question_id", 4], ["created_at", 2016-06-21 15:36:51 UTC], ["updated_at", 2016-06-21 15:36:51 UTC]]
  [1m[35m (0.8ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "How does the web work?"], ["created_at", 2016-06-21 15:36:51 UTC], ["updated_at", 2016-06-21 15:36:51 UTC]]
  [1m[35m (1.0ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.5ms)[0m  [1m[32mINSERT INTO "answers" ("vote_score", "vote_count", "content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["vote_score", -2], ["vote_count", 3], ["content", "It's a series of tubes."], ["question_id", 31], ["created_at", 2016-06-21 15:36:51 UTC], ["updated_at", 2016-06-21 15:36:51 UTC]]
  [1m[35m (0.7ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "answers" ("vote_score", "vote_count", "content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["vote_score", 5], ["vote_count", 7], ["content", "The Internet has a technical side and a social side. There's the\n  infrastructure, like routers, cables, satelites, ISPs, servers,\n  and website code, and there are the users who participate in the\n  Internet by creating content for it's applications and browsing\n  the sites.\n  <br>\n  I imagine you guys are interested in the technical side though\n  right? (Yes)\n  <br>\n  In short, I'd say it's a communication network designed\n  to deliver messages between computers. One of the most interesting\n  things about it, I think, is that in the end, it really is a\n  bunch of cables! Some run under the oceans, others go through\n  mountains and under forests. Some signals travel through space! All\n  the code we write goes through those cables, I think that's pretty\n  amazing!"], ["question_id", 31], ["created_at", 2016-06-21 15:36:51 UTC], ["updated_at", 2016-06-21 15:36:51 UTC]]
  [1m[35m (0.9ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "How did you learn programming?"], ["created_at", 2016-06-21 15:36:51 UTC], ["updated_at", 2016-06-21 15:36:51 UTC]]
  [1m[35m (0.9ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "answers" ("vote_score", "vote_count", "content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["vote_score", -3], ["vote_count", 4], ["content", "I just started Googling it you know, and I liked doing it so\n  I ended up trying to do it professionally."], ["question_id", 32], ["created_at", 2016-06-21 15:36:51 UTC], ["updated_at", 2016-06-21 15:36:51 UTC]]
  [1m[35m (0.8ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "answers" ("vote_score", "vote_count", "content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["vote_score", -3], ["vote_count", 4], ["content", "For me, it started back in 2011 when I was doing social science\n  at Stockholm University. The creation of communities had become a\n  passion of mine so I was exploring ways of finding data on\n  social networks. The Internet was the obvious place to look so I\n  found myself writing Python scripts to build simple web scrapers and\n  spiders.\n  <br>\n  It was exciting, I discovered coding makes me happy not just for\n  the results it creates but because I like the way it looks. Solving\n  problems is interesting."], ["question_id", 32], ["created_at", 2016-06-21 15:36:51 UTC], ["updated_at", 2016-06-21 15:36:51 UTC]]
  [1m[35m (0.8ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.5ms)[0m  [1m[32mINSERT INTO "comments" ("answer_id", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["answer_id", 8], ["content", "I agree."], ["created_at", 2016-06-21 15:36:51 UTC], ["updated_at", 2016-06-21 15:36:51 UTC]]
  [1m[35m (15.1ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "comments" ("answer_id", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["answer_id", 8], ["content", "I disagree."], ["created_at", 2016-06-21 15:36:51 UTC], ["updated_at", 2016-06-21 15:36:51 UTC]]
  [1m[35m (0.7ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "comments" ("answer_id", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["answer_id", 8], ["content", "I'm undecided."], ["created_at", 2016-06-21 15:36:51 UTC], ["updated_at", 2016-06-21 15:36:51 UTC]]
  [1m[35m (1.0ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "comments" ("answer_id", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["answer_id", 8], ["content", "I don't care."], ["created_at", 2016-06-21 15:36:51 UTC], ["updated_at", 2016-06-21 15:36:51 UTC]]
  [1m[35m (0.9ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (36.6ms)[0m  [1m[32mINSERT INTO "answers" ("vote_score", "vote_count", "content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["vote_score", -1], ["vote_count", 6], ["content", "For the best possible opportunity"], ["question_id", 1], ["created_at", 2016-06-21 15:36:51 UTC], ["updated_at", 2016-06-21 15:36:51 UTC]]
  [1m[35m (1.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.5ms)[0m  [1m[32mINSERT INTO "answers" ("vote_score", "vote_count", "content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["vote_score", 7], ["vote_count", 9], ["content", "I am looking to develop my ability to handle production deployments and ability to communicate with a computer program through algorithms and other functions I have learned at school and will learn in my next job"], ["question_id", 1], ["created_at", 2016-06-21 15:36:51 UTC], ["updated_at", 2016-06-21 15:36:51 UTC]]
  [1m[35m (0.8ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "answers" ("vote_score", "vote_count", "content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["vote_score", 5], ["vote_count", 12], ["content", "Working with a big group of people, as a programmer I can usually figure out the problem if I keep hacking it on my own but it becomes a burden for me when multiple people join in with me."], ["question_id", 3], ["created_at", 2016-06-21 15:36:51 UTC], ["updated_at", 2016-06-21 15:36:51 UTC]]
  [1m[35m (0.9ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "answers" ("vote_score", "vote_count", "content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["vote_score", 3], ["vote_count", 5], ["content", "I would definitely say that my strength would be sitting in front of my computer and weakness in front of an interviewer."], ["question_id", 3], ["created_at", 2016-06-21 15:36:51 UTC], ["updated_at", 2016-06-21 15:36:51 UTC]]
  [1m[35m (0.7ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "answers" ("vote_score", "vote_count", "content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["vote_score", 5], ["vote_count", 7], ["content", "The energy of the people around me. I did not feel any real passion in their work which affected me deeply and prompted me to change courses."], ["question_id", 5], ["created_at", 2016-06-21 15:36:51 UTC], ["updated_at", 2016-06-21 15:36:51 UTC]]
  [1m[35m (0.9ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "answers" ("vote_score", "vote_count", "content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["vote_score", 8], ["vote_count", 11], ["content", "I felt that there was a lot of politics and that your voice or position within the company was not reflective of the hard work and level competence I brought to the table."], ["question_id", 5], ["created_at", 2016-06-21 15:36:51 UTC], ["updated_at", 2016-06-21 15:36:51 UTC]]
  [1m[35m (0.9ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "answers" ("vote_score", "vote_count", "content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["vote_score", 6], ["vote_count", 7], ["content", "Hoisting is JavaScript's default behavior of moving all declarations to the top of the current scope (to the top of the current script or the current function)."], ["question_id", 7], ["created_at", 2016-06-21 15:36:51 UTC], ["updated_at", 2016-06-21 15:36:51 UTC]]
  [1m[35m (0.8ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "answers" ("vote_score", "vote_count", "content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["vote_score", -2], ["vote_count", 3], ["content", "I beleive the variables in JavaScript are assigned on a first come first serve basis?"], ["question_id", 7], ["created_at", 2016-06-21 15:36:51 UTC], ["updated_at", 2016-06-21 15:36:51 UTC]]
  [1m[35m (0.9ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "answers" ("vote_score", "vote_count", "content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["vote_score", 7], ["vote_count", 8], ["content", "When functions in JavaScript execute, they use the same scope chain that was in effect when they were created. This means that even after the outer function has returned, the inner function still has access to the outer function's variables."], ["question_id", 9], ["created_at", 2016-06-21 15:36:51 UTC], ["updated_at", 2016-06-21 15:36:51 UTC]]
  [1m[35m (0.9ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "answers" ("vote_score", "vote_count", "content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["vote_score", -2], ["vote_count", 9], ["content", "The end of a project. Usually involves closing the books and the servers after deployment."], ["question_id", 9], ["created_at", 2016-06-21 15:36:51 UTC], ["updated_at", 2016-06-21 15:36:51 UTC]]
  [1m[35m (0.9ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "answers" ("vote_score", "vote_count", "content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["vote_score", 4], ["vote_count", 7], ["content", "Refactoring the code that we had previously written for our app using service and adapters."], ["question_id", 11], ["created_at", 2016-06-21 15:36:51 UTC], ["updated_at", 2016-06-21 15:36:51 UTC]]
  [1m[35m (0.9ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "answers" ("vote_score", "vote_count", "content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["vote_score", 4], ["vote_count", 7], ["content", "That would definitely involve the latest group project where we went about refactoring our app using services and adapters. Great"], ["question_id", 11], ["created_at", 2016-06-21 15:36:51 UTC], ["updated_at", 2016-06-21 15:36:51 UTC]]
  [1m[35m (0.6ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "answers" ("vote_score", "vote_count", "content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["vote_score", 8], ["vote_count", 10], ["content", "I would love to be implementing what I have learned in those previous five years by giving back to my company in a senior position."], ["question_id", 13], ["created_at", 2016-06-21 15:36:51 UTC], ["updated_at", 2016-06-21 15:36:51 UTC]]
  [1m[35m (0.9ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "answers" ("vote_score", "vote_count", "content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["vote_score", 3], ["vote_count", 6], ["content", "I want to explore management training opportunities and also learn the finer points of this industry so I can eventually become  a company leader."], ["question_id", 13], ["created_at", 2016-06-21 15:36:51 UTC], ["updated_at", 2016-06-21 15:36:51 UTC]]
  [1m[35m (1.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "answers" ("vote_score", "vote_count", "content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["vote_score", 3], ["vote_count", 7], ["content", "Prototypal inheritance (also: prototypes, OLOO). Functional programm (also: closures, first class functions, lambdas)."], ["question_id", 15], ["created_at", 2016-06-21 15:36:51 UTC], ["updated_at", 2016-06-21 15:36:51 UTC]]
  [1m[35m (0.9ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "answers" ("vote_score", "vote_count", "content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["vote_score", -2], ["vote_count", 11], ["content", "Is that a new syntax part of ES7"], ["question_id", 15], ["created_at", 2016-06-21 15:36:51 UTC], ["updated_at", 2016-06-21 15:36:51 UTC]]
  [1m[35m (0.9ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "answers" ("vote_score", "vote_count", "content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["vote_score", 7], ["vote_count", 7], ["content", "JavaScript is a multi-paradigm language, supporting imperative/procedural programming along with OOP (Object-Oriented Programming) and functional programming. JavaScript supports OOP with prototypal inheritance."], ["question_id", 15], ["created_at", 2016-06-21 15:36:51 UTC], ["updated_at", 2016-06-21 15:36:51 UTC]]
  [1m[35m (0.8ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "answers" ("vote_score", "vote_count", "content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["vote_score", -7], ["vote_count", 10], ["content", "I worked on three recent rails project I basically wrote all the code for the project so lead architect I would say"], ["question_id", 17], ["created_at", 2016-06-21 15:36:51 UTC], ["updated_at", 2016-06-21 15:36:51 UTC]]
  [1m[35m (0.6ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "answers" ("vote_score", "vote_count", "content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["vote_score", 7], ["vote_count", 10], ["content", "Had a recent rails project where we focused on refactoring using services and getting 100% test coverage we had 98 but learned how to test controllers, features and models it was an awesome experience"], ["question_id", 17], ["created_at", 2016-06-21 15:36:51 UTC], ["updated_at", 2016-06-21 15:36:51 UTC]]
  [1m[35m (0.9ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "answers" ("vote_score", "vote_count", "content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["vote_score", 3], ["vote_count", 11], ["content", "No, Thank you for your time"], ["question_id", 19], ["created_at", 2016-06-21 15:36:51 UTC], ["updated_at", 2016-06-21 15:36:51 UTC]]
  [1m[35m (0.7ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "answers" ("vote_score", "vote_count", "content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["vote_score", 3], ["vote_count", 11], ["content", "Yes, How do you implement your mission statement "], ["question_id", 19], ["created_at", 2016-06-21 15:36:51 UTC], ["updated_at", 2016-06-21 15:36:51 UTC]]
  [1m[35m (1.5ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "answers" ("vote_score", "vote_count", "content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["vote_score", 11], ["vote_count", 13], ["content", "instances inherit from classes (like a blueprint — a description of the class), and create sub-class relationships: hierarchical class taxonomies. instances inherit directly from other objects. Instances are typically instantiated via factory functions or `Object.create()"], ["question_id", 21], ["created_at", 2016-06-21 15:36:51 UTC], ["updated_at", 2016-06-21 15:36:51 UTC]]
  [1m[35m (1.0ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "answers" ("vote_score", "vote_count", "content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["vote_score", -2], ["vote_count", 13], ["content", "No preference for prototypal inheritance & composition over class inheritance."], ["question_id", 21], ["created_at", 2016-06-21 15:36:51 UTC], ["updated_at", 2016-06-21 15:36:51 UTC]]
  [1m[35m (0.6ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.5ms)[0m  [1m[32mINSERT INTO "answers" ("vote_score", "vote_count", "content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["vote_score", 7], ["vote_count", 13], ["content", "Polymorphic association is a term used in discussions of Object-Relational Mapping with respect to the problem of representing in the relational database domain, a relationship from one class to multiple classes"], ["question_id", 23], ["created_at", 2016-06-21 15:36:51 UTC], ["updated_at", 2016-06-21 15:36:51 UTC]]
  [1m[35m (0.6ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "answers" ("vote_score", "vote_count", "content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["vote_score", 10], ["vote_count", 13], ["content", "It’s where an ActiveRecord model can potentially belong to more than one other kind of model record.  So the single instance of your car belongs to you, a person, whereas other cars may individually belong to a car lot, a business."], ["question_id", 23], ["created_at", 2016-06-21 15:36:51 UTC], ["updated_at", 2016-06-21 15:36:51 UTC]]
  [1m[35m (0.9ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "answers" ("vote_score", "vote_count", "content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["vote_score", -9], ["vote_count", 12], ["content", "What’s that?"], ["question_id", 25], ["created_at", 2016-06-21 15:36:51 UTC], ["updated_at", 2016-06-21 15:36:51 UTC]]
  [1m[35m (0.9ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "answers" ("vote_score", "vote_count", "content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["vote_score", 3], ["vote_count", 6], ["content", "I usually seperate my gems in different production environments. I would deploy than deploy to heroku for some assurance and than the official website for publishing"], ["question_id", 25], ["created_at", 2016-06-21 15:36:51 UTC], ["updated_at", 2016-06-21 15:36:51 UTC]]
  [1m[35m (1.0ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "answers" ("vote_score", "vote_count", "content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["vote_score", -2], ["vote_count", 3], ["content", "how about using the initialize method?"], ["question_id", 27], ["created_at", 2016-06-21 15:36:51 UTC], ["updated_at", 2016-06-21 15:36:51 UTC]]
  [1m[35m (1.9ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "answers" ("vote_score", "vote_count", "content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["vote_score", 7], ["vote_count", 10], ["content", "The Ruby Constructor has three jobs.It allocates space for the object. It assigns instances variables their initial values. It returns the instance of that class"], ["question_id", 27], ["created_at", 2016-06-21 15:36:51 UTC], ["updated_at", 2016-06-21 15:36:51 UTC]]
  [1m[35m (1.0ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "answers" ("vote_score", "vote_count", "content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["vote_score", 2], ["vote_count", 4], ["content", "Success is the march towards the realization of a worthy ideal?"], ["question_id", 29], ["created_at", 2016-06-21 15:36:51 UTC], ["updated_at", 2016-06-21 15:36:51 UTC]]
  [1m[35m (1.0ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "answers" ("vote_score", "vote_count", "content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["vote_score", 2], ["vote_count", 4], ["content", "I evaluate success in different ways. At work, it is meeting the goals set by my supervisors and my fellow workers. It is my understanding, from talking to other employees, that the GGR company is recognized for not only rewarding success but giving employees opportunity to grow as well."], ["question_id", 29], ["created_at", 2016-06-21 15:36:51 UTC], ["updated_at", 2016-06-21 15:36:51 UTC]]
  [1m[35m (0.9ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "answers" ("vote_score", "vote_count", "content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["vote_score", 4], ["vote_count", 9], ["content", "I learned web-development by taking classes at the flatiron school"], ["question_id", 10], ["created_at", 2016-06-21 15:36:51 UTC], ["updated_at", 2016-06-21 15:36:51 UTC]]
  [1m[35m (0.9ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "answers" ("vote_score", "vote_count", "content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["vote_score", 8], ["vote_count", 10], ["content", "I took some classes online which included code academy and code school. At first I didn't think too much about it but I couldn't stop looking for classes. This is when I realized I’d be interested in making it a career for me"], ["question_id", 10], ["created_at", 2016-06-21 15:36:51 UTC], ["updated_at", 2016-06-21 15:36:51 UTC]]
  [1m[35m (1.0ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "answers" ("vote_score", "vote_count", "content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["vote_score", -1], ["vote_count", 10], ["content", "I’m born Sydney and live 15 years in the U.S"], ["question_id", 12], ["created_at", 2016-06-21 15:36:51 UTC], ["updated_at", 2016-06-21 15:36:51 UTC]]
  [1m[35m (0.6ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "answers" ("vote_score", "vote_count", "content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["vote_score", 6], ["vote_count", 10], ["content", "I am an engineer who quickly became in love with coding at a young age. I am striving to become the best programmer I could be and I hope that with time I will be able to accomplish that goal"], ["question_id", 12], ["created_at", 2016-06-21 15:36:51 UTC], ["updated_at", 2016-06-21 15:36:51 UTC]]
  [1m[35m (0.9ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "answers" ("vote_score", "vote_count", "content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["vote_score", 4], ["vote_count", 7], ["content", "Because I align with your mission and how you help the community on a daily basis"], ["question_id", 14], ["created_at", 2016-06-21 15:36:51 UTC], ["updated_at", 2016-06-21 15:36:51 UTC]]
  [1m[35m (0.9ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "answers" ("vote_score", "vote_count", "content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["vote_score", -2], ["vote_count", 7], ["content", "You're a big corporation with a lot of opportunities."], ["question_id", 14], ["created_at", 2016-06-21 15:36:51 UTC], ["updated_at", 2016-06-21 15:36:51 UTC]]
  [1m[35m (1.1ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "answers" ("vote_score", "vote_count", "content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["vote_score", -2], ["vote_count", 4], ["content", "I plan to be the best programmer in the world"], ["question_id", 16], ["created_at", 2016-06-21 15:36:51 UTC], ["updated_at", 2016-06-21 15:36:51 UTC]]
  [1m[35m (0.9ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "answers" ("vote_score", "vote_count", "content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["vote_score", 3], ["vote_count", 7], ["content", "To put myself in a situation of learning where I can always give back to my community."], ["question_id", 16], ["created_at", 2016-06-21 15:36:51 UTC], ["updated_at", 2016-06-21 15:36:51 UTC]]
  [1m[35m (1.9ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "answers" ("vote_score", "vote_count", "content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["vote_score", -2], ["vote_count", 6], ["content", "To learn as much as I can so I can advance in my career."], ["question_id", 18], ["created_at", 2016-06-21 15:36:51 UTC], ["updated_at", 2016-06-21 15:36:51 UTC]]
  [1m[35m (0.6ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "answers" ("vote_score", "vote_count", "content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["vote_score", 2], ["vote_count", 4], ["content", "To join a company that will allow me to grow both personally and professionally"], ["question_id", 18], ["created_at", 2016-06-21 15:36:51 UTC], ["updated_at", 2016-06-21 15:36:51 UTC]]
  [1m[35m (0.9ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "answers" ("vote_score", "vote_count", "content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["vote_score", 3], ["vote_count", 5], ["content", "I hope to put myself in a situation of learning where I can always give back to my community."], ["question_id", 20], ["created_at", 2016-06-21 15:36:51 UTC], ["updated_at", 2016-06-21 15:36:51 UTC]]
  [1m[35m (0.9ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "answers" ("vote_score", "vote_count", "content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["vote_score", 3], ["vote_count", 5], ["content", "I can walk you through two of my favorites app I build at flatiron. I will go over the code I wrote at first and how I refactored by deployment"], ["question_id", 20], ["created_at", 2016-06-21 15:36:51 UTC], ["updated_at", 2016-06-21 15:36:51 UTC]]
  [1m[35m (0.9ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "answers" ("vote_score", "vote_count", "content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["vote_score", 1], ["vote_count", 5], ["content", "I’ve always had problem making deadlines so the way I went about it is through creating calendars that would help me achieve my objectives."], ["question_id", 22], ["created_at", 2016-06-21 15:36:51 UTC], ["updated_at", 2016-06-21 15:36:51 UTC]]
  [1m[35m (1.0ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "answers" ("vote_score", "vote_count", "content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["vote_score", 7], ["vote_count", 10], ["content", "The greatest challenge I've faced in my career to date has to be the key role I played in helping my company survive the recent recession.\nWhile we certainly did have a tough time of it, we successfully rode out the recession and the cost control measures which I personally devised and implemented ultimately resulted in a significantly healthier bottom line than we had had before the recession."], ["question_id", 22], ["created_at", 2016-06-21 15:36:51 UTC], ["updated_at", 2016-06-21 15:36:51 UTC]]
  [1m[35m (1.0ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "answers" ("vote_score", "vote_count", "content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["vote_score", -1], ["vote_count", 7], ["content", "Because of the opportunity and lifestyle it will give me."], ["question_id", 24], ["created_at", 2016-06-21 15:36:51 UTC], ["updated_at", 2016-06-21 15:36:51 UTC]]
  [1m[35m (1.0ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "answers" ("vote_score", "vote_count", "content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["vote_score", 3], ["vote_count", 4], ["content", "Because of the constant sense of creativity and joy that it gives me. Being a web developer would allow me to put myself in a position of learning from a great community of people who are always open to give."], ["question_id", 24], ["created_at", 2016-06-21 15:36:51 UTC], ["updated_at", 2016-06-21 15:36:51 UTC]]
  [1m[35m (1.0ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "answers" ("vote_score", "vote_count", "content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["vote_score", 4], ["vote_count", 6], ["content", "Because of the mission and sense of community this company instills in the workplace."], ["question_id", 26], ["created_at", 2016-06-21 15:36:51 UTC], ["updated_at", 2016-06-21 15:36:51 UTC]]
  [1m[35m (0.7ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "answers" ("vote_score", "vote_count", "content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["vote_score", -1], ["vote_count", 7], ["content", "I love the perks you have at your office. I can definitely utilize some free lunches"], ["question_id", 26], ["created_at", 2016-06-21 15:36:51 UTC], ["updated_at", 2016-06-21 15:36:51 UTC]]
  [1m[35m (0.7ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "answers" ("vote_score", "vote_count", "content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["vote_score", -1], ["vote_count", 3], ["content", "I do not thank you for your time."], ["question_id", 28], ["created_at", 2016-06-21 15:36:51 UTC], ["updated_at", 2016-06-21 15:36:51 UTC]]
  [1m[35m (0.9ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "answers" ("vote_score", "vote_count", "content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["vote_score", 1], ["vote_count", 2], ["content", "What reservations our question about myself that you feel I haven't answered."], ["question_id", 28], ["created_at", 2016-06-21 15:36:51 UTC], ["updated_at", 2016-06-21 15:36:51 UTC]]
  [1m[35m (0.8ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "answers" ("vote_score", "vote_count", "content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["vote_score", -2], ["vote_count", 10], ["content", "Laidback"], ["question_id", 30], ["created_at", 2016-06-21 15:36:51 UTC], ["updated_at", 2016-06-21 15:36:51 UTC]]
  [1m[35m (0.6ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "answers" ("vote_score", "vote_count", "content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["vote_score", -2], ["vote_count", 3], ["content", "I am a deadline onlooker I strive towards the goal and ravage anything or anybody thats on my way"], ["question_id", 30], ["created_at", 2016-06-21 15:36:51 UTC], ["updated_at", 2016-06-21 15:36:51 UTC]]
  [1m[35m (0.7ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "answers" ("vote_score", "vote_count", "content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["vote_score", 6], ["vote_count", 9], ["content", "I am open to the workload and task assigned by my superior. The more informed the better but I have no problem improvising and getting assignments done before the dealines"], ["question_id", 30], ["created_at", 2016-06-21 15:36:51 UTC], ["updated_at", 2016-06-21 15:36:51 UTC]]
  [1m[35m (0.9ms)[0m  [1m[35mCOMMIT[0m
Started GET "/api/v1/questions/32" for ::1 at 2016-06-21 11:37:12 -0400
Started GET "/api/v1/questions/32" for ::1 at 2016-06-21 11:37:12 -0400
  [1m[36mActiveRecord::SchemaMigration Load (0.5ms)[0m  [1m[34mSELECT "schema_migrations".* FROM "schema_migrations"[0m
  [1m[36mActiveRecord::SchemaMigration Load (0.5ms)[0m  [1m[34mSELECT "schema_migrations".* FROM "schema_migrations"[0m
  
Processing by Api::V1::QuestionsController#show as JSON
LoadError (Unable to autoload constant Api::V1::QuestionsController, expected /Users/hlpolivy/Development/code/final-project/QIQAPI/app/controllers/api/v1/questions_controller.rb to define it):
  Parameters: {"id"=>"32"}
  
activesupport (5.0.0.rc1) lib/active_support/dependencies.rb:512:in `load_missing_constant'
activesupport (5.0.0.rc1) lib/active_support/dependencies.rb:203:in `const_missing'
activesupport (5.0.0.rc1) lib/active_support/inflector/methods.rb:270:in `const_get'
activesupport (5.0.0.rc1) lib/active_support/inflector/methods.rb:270:in `block in constantize'
activesupport (5.0.0.rc1) lib/active_support/inflector/methods.rb:266:in `each'
activesupport (5.0.0.rc1) lib/active_support/inflector/methods.rb:266:in `inject'
activesupport (5.0.0.rc1) lib/active_support/inflector/methods.rb:266:in `constantize'
activesupport (5.0.0.rc1) lib/active_support/dependencies.rb:583:in `get'
activesupport (5.0.0.rc1) lib/active_support/dependencies.rb:614:in `constantize'
actionpack (5.0.0.rc1) lib/action_dispatch/http/request.rb:93:in `controller_class'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:44:in `controller'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:30:in `serve'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:39:in `block in serve'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:26:in `each'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:26:in `serve'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:725:in `call'
actionview (5.0.0.rc1) lib/action_view/digestor.rb:12:in `call'
rack (2.0.0.rc1) lib/rack/etag.rb:25:in `call'
rack (2.0.0.rc1) lib/rack/conditional_get.rb:25:in `call'
rack (2.0.0.rc1) lib/rack/head.rb:12:in `call'
activerecord (5.0.0.rc1) lib/active_record/migration.rb:552:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/callbacks.rb:38:in `block in call'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:97:in `__run_callbacks__'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:750:in `_run_call_callbacks'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:90:in `run_callbacks'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/callbacks.rb:36:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/remote_ip.rb:79:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/debug_exceptions.rb:49:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/show_exceptions.rb:31:in `call'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:36:in `call_app'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:24:in `block in call'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:70:in `block in tagged'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:26:in `tagged'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:70:in `tagged'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:24:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/request_id.rb:24:in `call'
rack (2.0.0.rc1) lib/rack/runtime.rb:22:in `call'
activesupport (5.0.0.rc1) lib/active_support/cache/strategy/local_cache_middleware.rb:28:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/static.rb:136:in `call'
rack (2.0.0.rc1) lib/rack/sendfile.rb:111:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
railties (5.0.0.rc1) lib/rails/engine.rb:522:in `call'
puma (3.4.0) lib/puma/configuration.rb:224:in `call'
puma (3.4.0) lib/puma/server.rb:569:in `handle_request'
puma (3.4.0) lib/puma/server.rb:406:in `process_client'
puma (3.4.0) lib/puma/server.rb:271:in `block in run'
puma (3.4.0) lib/puma/thread_pool.rb:114:in `call'
puma (3.4.0) lib/puma/thread_pool.rb:114:in `block in spawn_thread'
Started GET "/api/v1/questions/32" for ::1 at 2016-06-21 11:37:16 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"32"}
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 32], ["LIMIT", 1]]
  [1m[36mQuestion Load (1.6ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 32], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.4ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 32]]
[active_model_serializers]   [1m[36mAnswer Load (0.5ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 32]]
[active_model_serializers]   [1m[36mComment Load (0.3ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 7]]
[active_model_serializers]   [1m[36mComment Load (0.3ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 7]]
[active_model_serializers]   [1m[36mComment Load (1.8ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 8]]
[active_model_serializers]   [1m[36mComment Load (0.3ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 8]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (781.94ms)
Completed 200 OK in 1211ms (Views: 933.1ms | ActiveRecord: 28.7ms)


[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (786.08ms)
Completed 200 OK in 1019ms (Views: 942.5ms | ActiveRecord: 18.7ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-21 11:37:19 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"asdgdsgadsg", "vote-count"=>0, "vote-score"=>0, "approved"=>true}, "question"=>{"data"=>{"id"=>"32", "attributes"=>{"content"=>"How did you learn programming?", "received-count"=>0}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 32], ["LIMIT", 1]]
  [1m[35m (0.3ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.8ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "asdgdsgadsg"], ["question_id", 32], ["created_at", 2016-06-21 15:37:19 UTC], ["updated_at", 2016-06-21 15:37:19 UTC]]
  [1m[35m (1.0ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mAnswer Load (0.7ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."question_id" = $1 ORDER BY "answers"."id" DESC LIMIT $2[0m  [["question_id", 32], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mComment Load (0.3ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 63]]
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (2.74ms)
Completed 200 OK in 18ms (Views: 3.0ms | ActiveRecord: 3.5ms)


Started GET "/api/v1/questions/32" for ::1 at 2016-06-21 11:38:02 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"32"}
  [1m[36mQuestion Load (1.0ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 32], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.9ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 32]]
[active_model_serializers]   [1m[36mComment Load (0.4ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 7]]
[active_model_serializers]   [1m[36mComment Load (0.3ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 8]]
[active_model_serializers]   [1m[36mComment Load (0.3ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 63]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (39.44ms)
Completed 200 OK in 45ms (Views: 38.6ms | ActiveRecord: 2.9ms)


Started GET "/api/v1/questions/32" for ::1 at 2016-06-21 11:38:02 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"32"}
  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 32], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.6ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 32]]
[active_model_serializers]   [1m[36mComment Load (0.4ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 7]]
[active_model_serializers]   [1m[36mComment Load (0.5ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 8]]
[active_model_serializers]   [1m[36mComment Load (0.3ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 63]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (41.46ms)
Completed 200 OK in 44ms (Views: 40.3ms | ActiveRecord: 2.5ms)


Started GET "/api/v1/questions/32" for ::1 at 2016-06-21 11:38:05 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"32"}
  [1m[36mQuestion Load (0.5ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 32], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.5ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 32]]
[active_model_serializers]   [1m[36mComment Load (0.3ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 7]]
[active_model_serializers]   [1m[36mComment Load (0.3ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 8]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 63]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (15.39ms)
Completed 200 OK in 18ms (Views: 14.8ms | ActiveRecord: 1.7ms)


Started GET "/api/v1/questions/32" for ::1 at 2016-06-21 11:38:05 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"32"}
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 32], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.5ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 32]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 7]]
[active_model_serializers]   [1m[36mComment Load (0.3ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 8]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 63]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (18.28ms)
Completed 200 OK in 20ms (Views: 17.5ms | ActiveRecord: 1.6ms)


Started GET "/api/v1/questions/32" for ::1 at 2016-06-21 11:38:23 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"32"}
  [1m[36mQuestion Load (0.5ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 32], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 32]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 7]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 8]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 63]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (15.25ms)
Completed 200 OK in 17ms (Views: 14.9ms | ActiveRecord: 1.3ms)


Started GET "/api/v1/questions/32" for ::1 at 2016-06-21 11:38:23 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"32"}
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 32], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.4ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 32]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 7]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 8]]
[active_model_serializers]   [1m[36mComment Load (0.3ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 63]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (15.81ms)
Completed 200 OK in 17ms (Views: 15.3ms | ActiveRecord: 1.4ms)


Started GET "/api/v1/questions/32" for ::1 at 2016-06-21 11:38:40 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"32"}
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 32], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.3ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 32]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 7]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 8]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 63]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (14.51ms)
Completed 200 OK in 16ms (Views: 14.2ms | ActiveRecord: 1.1ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-21 11:38:49 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"asddsfg", "vote-count"=>0, "vote-score"=>0, "approved"=>true}, "question"=>{"data"=>{"id"=>"32", "attributes"=>{"content"=>"How did you learn programming?", "received-count"=>0}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 32], ["LIMIT", 1]]
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.6ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "asddsfg"], ["question_id", 32], ["created_at", 2016-06-21 15:38:49 UTC], ["updated_at", 2016-06-21 15:38:49 UTC]]
  [1m[35m (132.7ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mAnswer Load (1.0ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."question_id" = $1 ORDER BY "answers"."id" DESC LIMIT $2[0m  [["question_id", 32], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 64]]
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (3.45ms)
Completed 200 OK in 152ms (Views: 4.0ms | ActiveRecord: 135.0ms)


Started GET "/api/v1/questions/32" for ::1 at 2016-06-21 11:39:10 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"32"}
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 32], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.3ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 32]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 7]]
[active_model_serializers]   [1m[36mComment Load (0.3ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 8]]
[active_model_serializers]   [1m[36mComment Load (0.3ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 63]]
[active_model_serializers]   [1m[36mComment Load (0.3ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 64]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (25.82ms)
Completed 200 OK in 28ms (Views: 24.9ms | ActiveRecord: 1.8ms)


Started GET "/api/v1/questions/32" for ::1 at 2016-06-21 11:39:10 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"32"}
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 32], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.5ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 32]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 7]]
[active_model_serializers]   [1m[36mComment Load (0.3ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 8]]
[active_model_serializers]   [1m[36mComment Load (0.3ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 63]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 64]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (25.93ms)
Completed 200 OK in 29ms (Views: 25.4ms | ActiveRecord: 1.9ms)


Started GET "/api/v1/questions/32" for ::1 at 2016-06-21 11:40:28 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"32"}
  [1m[36mQuestion Load (0.5ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 32], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.5ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 32]]
[active_model_serializers]   [1m[36mComment Load (0.4ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 7]]
[active_model_serializers]   [1m[36mComment Load (0.3ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 8]]
[active_model_serializers]   [1m[36mComment Load (0.3ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 63]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 64]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (44.55ms)
Completed 200 OK in 49ms (Views: 43.9ms | ActiveRecord: 2.2ms)


Started GET "/api/v1/questions/32" for ::1 at 2016-06-21 11:40:28 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"32"}
  [1m[36mQuestion Load (0.5ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 32], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.5ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 32]]
[active_model_serializers]   [1m[36mComment Load (0.3ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 7]]
[active_model_serializers]   [1m[36mComment Load (0.3ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 8]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 63]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 64]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (19.33ms)
Completed 200 OK in 30ms (Views: 26.8ms | ActiveRecord: 2.0ms)


Started GET "/api/v1/questions/32" for ::1 at 2016-06-21 11:41:36 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"32"}
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 32], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.3ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 32]]
[active_model_serializers]   [1m[36mComment Load (0.3ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 7]]
[active_model_serializers]   [1m[36mComment Load (0.3ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 8]]
[active_model_serializers]   [1m[36mComment Load (0.3ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 63]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 64]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (29.98ms)
Completed 200 OK in 40ms (Views: 31.6ms | ActiveRecord: 1.5ms)


Started GET "/api/v1/questions/32" for ::1 at 2016-06-21 11:41:36 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"32"}
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 32], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.3ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 32]]
[active_model_serializers]   [1m[36mComment Load (0.3ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 7]]
[active_model_serializers]   [1m[36mComment Load (0.3ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 8]]
[active_model_serializers]   [1m[36mComment Load (0.3ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 63]]
[active_model_serializers]   [1m[36mComment Load (0.3ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 64]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (31.18ms)
Completed 200 OK in 34ms (Views: 30.4ms | ActiveRecord: 1.8ms)


Started GET "/api/v1/questions/32" for ::1 at 2016-06-21 11:41:48 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"32"}
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 32], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.3ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 32]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 7]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 8]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 63]]
[active_model_serializers]   [1m[36mComment Load (0.3ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 64]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (24.64ms)
Completed 200 OK in 27ms (Views: 24.3ms | ActiveRecord: 1.6ms)


Started GET "/api/v1/questions/32" for ::1 at 2016-06-21 11:41:48 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"32"}
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 32], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.4ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 32]]
[active_model_serializers]   [1m[36mComment Load (0.5ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 7]]
[active_model_serializers]   [1m[36mComment Load (0.3ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 8]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 63]]
[active_model_serializers]   [1m[36mComment Load (0.5ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 64]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (43.71ms)
Completed 200 OK in 46ms (Views: 42.7ms | ActiveRecord: 2.3ms)


Started GET "/api/v1/questions/32" for ::1 at 2016-06-21 11:41:59 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"32"}
  [1m[36mQuestion Load (0.5ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 32], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.4ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 32]]
[active_model_serializers]   [1m[36mComment Load (0.3ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 7]]
[active_model_serializers]   [1m[36mComment Load (0.4ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 8]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 63]]
[active_model_serializers]   [1m[36mComment Load (0.3ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 64]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (27.69ms)
Completed 200 OK in 30ms (Views: 27.0ms | ActiveRecord: 2.0ms)


Started GET "/api/v1/questions/32" for ::1 at 2016-06-21 11:42:00 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"32"}
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 32], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.3ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 32]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 7]]
[active_model_serializers]   [1m[36mComment Load (0.3ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 8]]
[active_model_serializers]   [1m[36mComment Load (0.3ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 63]]
[active_model_serializers]   [1m[36mComment Load (0.3ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 64]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (57.23ms)
Completed 200 OK in 60ms (Views: 56.6ms | ActiveRecord: 1.8ms)


Started GET "/api/v1/questions/32" for ::1 at 2016-06-21 11:42:05 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"32"}
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 32], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.3ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 32]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 7]]
[active_model_serializers]   [1m[36mComment Load (0.3ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 8]]
[active_model_serializers]   [1m[36mComment Load (0.3ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 63]]
[active_model_serializers]   [1m[36mComment Load (0.3ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 64]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (32.61ms)
Completed 200 OK in 35ms (Views: 32.1ms | ActiveRecord: 1.7ms)


Started GET "/api/v1/questions/32" for ::1 at 2016-06-21 11:42:05 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"32"}
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 32], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.3ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 32]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 7]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 8]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 63]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 64]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (22.49ms)
Completed 200 OK in 25ms (Views: 22.2ms | ActiveRecord: 1.5ms)


Started GET "/api/v1/questions/32" for ::1 at 2016-06-21 11:42:11 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"32"}
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 32], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.5ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 32]]
[active_model_serializers]   [1m[36mComment Load (0.3ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 7]]
[active_model_serializers]   [1m[36mComment Load (0.3ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 8]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 63]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 64]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (34.8ms)
Completed 200 OK in 40ms (Views: 34.5ms | ActiveRecord: 2.1ms)


Started GET "/api/v1/questions/32" for ::1 at 2016-06-21 11:42:11 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"32"}
  [1m[36mQuestion Load (0.5ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 32], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.6ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 32]]
[active_model_serializers]   [1m[36mComment Load (0.3ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 7]]
[active_model_serializers]   [1m[36mComment Load (0.3ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 8]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 63]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 64]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (25.86ms)
Completed 200 OK in 28ms (Views: 24.9ms | ActiveRecord: 2.1ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-21 11:42:13 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"sadfadsfsd", "vote-count"=>0, "vote-score"=>0, "approved"=>true}, "question"=>{"data"=>{"id"=>"32", "attributes"=>{"content"=>"How did you learn programming?", "received-count"=>0}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 32], ["LIMIT", 1]]
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (78.4ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "sadfadsfsd"], ["question_id", 32], ["created_at", 2016-06-21 15:42:13 UTC], ["updated_at", 2016-06-21 15:42:13 UTC]]
  [1m[35m (1.9ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mAnswer Load (1.9ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."question_id" = $1 ORDER BY "answers"."id" DESC LIMIT $2[0m  [["question_id", 32], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mComment Load (0.3ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 65]]
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (3.49ms)
Completed 200 OK in 98ms (Views: 4.0ms | ActiveRecord: 82.9ms)


Started GET "/api/v1/questions/32" for ::1 at 2016-06-21 11:42:43 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"32"}
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 32], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.3ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 32]]
[active_model_serializers]   [1m[36mComment Load (0.3ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 7]]
[active_model_serializers]   [1m[36mComment Load (0.4ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 8]]
[active_model_serializers]   [1m[36mComment Load (0.3ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 63]]
[active_model_serializers]   [1m[36mComment Load (0.3ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 64]]
[active_model_serializers]   [1m[36mComment Load (0.3ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 65]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (32.42ms)
Completed 200 OK in 34ms (Views: 31.3ms | ActiveRecord: 2.0ms)


Started GET "/api/v1/questions/32" for ::1 at 2016-06-21 11:42:43 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"32"}
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 32], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.3ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 32]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 7]]
[active_model_serializers]   [1m[36mComment Load (0.3ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 8]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 63]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 64]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 65]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (22.58ms)
Completed 200 OK in 25ms (Views: 21.9ms | ActiveRecord: 1.7ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-21 11:42:45 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"adsfadsggdsa", "vote-count"=>0, "vote-score"=>0, "approved"=>true}, "question"=>{"data"=>{"id"=>"32", "attributes"=>{"content"=>"How did you learn programming?", "received-count"=>0}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 32], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.6ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "adsfadsggdsa"], ["question_id", 32], ["created_at", 2016-06-21 15:42:45 UTC], ["updated_at", 2016-06-21 15:42:45 UTC]]
  [1m[35m (2.2ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mAnswer Load (0.6ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."question_id" = $1 ORDER BY "answers"."id" DESC LIMIT $2[0m  [["question_id", 32], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 66]]
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (2.67ms)
Completed 200 OK in 13ms (Views: 3.0ms | ActiveRecord: 4.0ms)


Started GET "/api/v1/questions/32" for ::1 at 2016-06-21 11:43:09 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"32"}
  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 32], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.3ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 32]]
[active_model_serializers]   [1m[36mComment Load (0.3ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 7]]
[active_model_serializers]   [1m[36mComment Load (0.4ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 8]]
[active_model_serializers]   [1m[36mComment Load (0.3ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 63]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 64]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 65]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 66]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (45.07ms)
Completed 200 OK in 69ms (Views: 55.9ms | ActiveRecord: 2.6ms)


Started GET "/api/v1/questions/32" for ::1 at 2016-06-21 11:43:09 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"32"}
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 32], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.4ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 32]]
[active_model_serializers]   [1m[36mComment Load (0.3ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 7]]
[active_model_serializers]   [1m[36mComment Load (0.3ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 8]]
[active_model_serializers]   [1m[36mComment Load (0.3ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 63]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 64]]
[active_model_serializers]   [1m[36mComment Load (0.4ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 65]]
[active_model_serializers]   [1m[36mComment Load (0.4ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 66]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (43.24ms)
Completed 200 OK in 46ms (Views: 41.9ms | ActiveRecord: 2.6ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-21 11:43:12 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"dasgsdagsgd", "vote-count"=>0, "vote-score"=>0, "approved"=>true}, "question"=>{"data"=>{"id"=>"32", "attributes"=>{"content"=>"How did you learn programming?", "received-count"=>0}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 32], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "dasgsdagsgd"], ["question_id", 32], ["created_at", 2016-06-21 15:43:12 UTC], ["updated_at", 2016-06-21 15:43:12 UTC]]
  [1m[35m (2.4ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mAnswer Load (0.4ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."question_id" = $1 ORDER BY "answers"."id" DESC LIMIT $2[0m  [["question_id", 32], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 67]]
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (2.76ms)
Completed 200 OK in 15ms (Views: 3.0ms | ActiveRecord: 3.8ms)


Started GET "/api/v1/questions/32" for ::1 at 2016-06-21 11:43:58 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"32"}
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 32], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.3ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 32]]
[active_model_serializers]   [1m[36mComment Load (0.4ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 7]]
[active_model_serializers]   [1m[36mComment Load (0.3ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 8]]
[active_model_serializers]   [1m[36mComment Load (0.3ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 63]]
[active_model_serializers]   [1m[36mComment Load (0.6ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 64]]
[active_model_serializers]   [1m[36mComment Load (0.3ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 65]]
[active_model_serializers]   [1m[36mComment Load (0.3ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 66]]
[active_model_serializers]   [1m[36mComment Load (0.3ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 67]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (54.25ms)
Completed 200 OK in 57ms (Views: 52.4ms | ActiveRecord: 3.1ms)


Started GET "/api/v1/questions/32" for ::1 at 2016-06-21 11:43:58 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"32"}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 32], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.4ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 32]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 7]]
[active_model_serializers]   [1m[36mComment Load (0.3ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 8]]
[active_model_serializers]   [1m[36mComment Load (0.5ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 63]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 64]]
[active_model_serializers]   [1m[36mComment Load (0.3ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 65]]
[active_model_serializers]   [1m[36mComment Load (0.6ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 66]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 67]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (65.8ms)
Completed 200 OK in 79ms (Views: 66.4ms | ActiveRecord: 3.6ms)


Started GET "/api/v1/questions/32" for ::1 at 2016-06-21 11:44:15 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"32"}
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 32], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.4ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 32]]
[active_model_serializers]   [1m[36mComment Load (0.3ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 7]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 8]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 63]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 64]]
[active_model_serializers]   [1m[36mComment Load (0.3ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 65]]
[active_model_serializers]   [1m[36mComment Load (0.3ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 66]]
[active_model_serializers]   [1m[36mComment Load (0.3ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 67]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (46.7ms)
Completed 200 OK in 49ms (Views: 45.5ms | ActiveRecord: 2.4ms)


Started GET "/api/v1/questions/32" for ::1 at 2016-06-21 11:44:16 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"32"}
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 32], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.4ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 32]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 7]]
[active_model_serializers]   [1m[36mComment Load (0.3ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 8]]
[active_model_serializers]   [1m[36mComment Load (0.3ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 63]]
[active_model_serializers]   [1m[36mComment Load (0.3ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 64]]
[active_model_serializers]   [1m[36mComment Load (0.3ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 65]]
[active_model_serializers]   [1m[36mComment Load (0.3ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 66]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 67]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (77.11ms)
Completed 200 OK in 80ms (Views: 76.0ms | ActiveRecord: 2.5ms)


Started GET "/api/v1/questions/32" for ::1 at 2016-06-21 11:44:22 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"32"}
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 32], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.3ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 32]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 7]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 8]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 63]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 64]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 65]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 66]]
[active_model_serializers]   [1m[36mComment Load (0.3ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 67]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (149.92ms)
Completed 200 OK in 152ms (Views: 148.9ms | ActiveRecord: 2.0ms)


Started GET "/api/v1/questions/32" for ::1 at 2016-06-21 11:44:22 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"32"}
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 32], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.3ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 32]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 7]]
[active_model_serializers]   [1m[36mComment Load (0.3ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 8]]
[active_model_serializers]   [1m[36mComment Load (0.3ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 63]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 64]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 65]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 66]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 67]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (41.3ms)
Completed 200 OK in 44ms (Views: 40.1ms | ActiveRecord: 2.4ms)


Started GET "/api/v1/questions/32" for ::1 at 2016-06-21 11:44:26 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"32"}
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 32], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.3ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 32]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 7]]
[active_model_serializers]   [1m[36mComment Load (0.3ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 8]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 63]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 64]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 65]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 66]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 67]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (35.06ms)
Completed 200 OK in 37ms (Views: 33.8ms | ActiveRecord: 2.0ms)


Started GET "/api/v1/questions/32" for ::1 at 2016-06-21 11:44:26 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"32"}
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 32], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.4ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 32]]
[active_model_serializers]   [1m[36mComment Load (0.3ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 7]]
[active_model_serializers]   [1m[36mComment Load (0.3ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 8]]
[active_model_serializers]   [1m[36mComment Load (0.3ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 63]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 64]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 65]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 66]]
[active_model_serializers]   [1m[36mComment Load (0.3ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 67]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (41.28ms)
Completed 200 OK in 43ms (Views: 39.9ms | ActiveRecord: 2.3ms)


Started GET "/api/v1/questions/32" for ::1 at 2016-06-21 11:44:31 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"32"}
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 32], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.5ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 32]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 7]]
[active_model_serializers]   [1m[36mComment Load (0.3ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 8]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 63]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 64]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 65]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 66]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 67]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (33.11ms)
Completed 200 OK in 35ms (Views: 31.7ms | ActiveRecord: 2.3ms)


Started GET "/api/v1/questions/32" for ::1 at 2016-06-21 11:44:31 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"32"}
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 32], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.3ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 32]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 7]]
[active_model_serializers]   [1m[36mComment Load (0.3ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 8]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 63]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 64]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 65]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 66]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 67]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (40.41ms)
Completed 200 OK in 43ms (Views: 39.3ms | ActiveRecord: 2.2ms)


Started GET "/api/v1/questions/32" for ::1 at 2016-06-21 11:44:37 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"32"}
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 32], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 32]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 7]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 8]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 63]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 64]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 65]]
[active_model_serializers]   [1m[36mComment Load (0.3ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 66]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 67]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (29.97ms)
Completed 200 OK in 32ms (Views: 28.8ms | ActiveRecord: 2.0ms)


Started GET "/api/v1/questions/32" for ::1 at 2016-06-21 11:44:37 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"32"}
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 32], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 32]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 7]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 8]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 63]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 64]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 65]]
[active_model_serializers]   [1m[36mComment Load (0.3ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 66]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 67]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (25.43ms)
Completed 200 OK in 27ms (Views: 24.4ms | ActiveRecord: 1.9ms)


Started GET "/api/v1/questions/32" for ::1 at 2016-06-21 11:44:43 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"32"}
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 32], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.3ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 32]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 7]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 8]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 63]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 64]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 65]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 66]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 67]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (31.64ms)
Completed 200 OK in 34ms (Views: 30.5ms | ActiveRecord: 2.1ms)


Started GET "/api/v1/questions/32" for ::1 at 2016-06-21 11:44:43 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"32"}
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 32], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.5ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 32]]
[active_model_serializers]   [1m[36mComment Load (0.3ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 7]]
[active_model_serializers]   [1m[36mComment Load (0.3ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 8]]
[active_model_serializers]   [1m[36mComment Load (0.3ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 63]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 64]]
[active_model_serializers]   [1m[36mComment Load (0.3ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 65]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 66]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 67]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (43.79ms)
Completed 200 OK in 46ms (Views: 42.1ms | ActiveRecord: 2.6ms)


Started GET "/api/v1/questions/32" for ::1 at 2016-06-21 11:44:50 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"32"}
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 32], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.4ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 32]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 7]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 8]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 63]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 64]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 65]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 66]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 67]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (37.23ms)
Completed 200 OK in 39ms (Views: 36.1ms | ActiveRecord: 2.1ms)


Started GET "/api/v1/questions/32" for ::1 at 2016-06-21 11:44:50 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"32"}
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 32], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 32]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 7]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 8]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 63]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 64]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 65]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 66]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 67]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (26.07ms)
Completed 200 OK in 28ms (Views: 24.9ms | ActiveRecord: 1.9ms)


Started GET "/api/v1/questions/32" for ::1 at 2016-06-21 11:45:04 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"32"}
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 32], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.4ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 32]]
[active_model_serializers]   [1m[36mComment Load (0.3ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 7]]
[active_model_serializers]   [1m[36mComment Load (0.3ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 8]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 63]]
[active_model_serializers]   [1m[36mComment Load (0.3ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 64]]
[active_model_serializers]   [1m[36mComment Load (0.3ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 65]]
[active_model_serializers]   [1m[36mComment Load (0.3ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 66]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 67]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (38.88ms)
Completed 200 OK in 42ms (Views: 37.6ms | ActiveRecord: 2.5ms)


Started GET "/api/v1/questions/32" for ::1 at 2016-06-21 11:45:04 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"32"}
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 32], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.4ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 32]]
[active_model_serializers]   [1m[36mComment Load (0.3ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 7]]
[active_model_serializers]   [1m[36mComment Load (0.3ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 8]]
[active_model_serializers]   [1m[36mComment Load (0.3ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 63]]
[active_model_serializers]   [1m[36mComment Load (0.3ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 64]]
[active_model_serializers]   [1m[36mComment Load (0.3ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 65]]
[active_model_serializers]   [1m[36mComment Load (0.3ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 66]]
[active_model_serializers]   [1m[36mComment Load (0.3ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 67]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (41.04ms)
Completed 200 OK in 43ms (Views: 39.6ms | ActiveRecord: 2.6ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-21 11:45:06 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"adsgadsgdsga", "vote-count"=>0, "vote-score"=>0, "approved"=>true}, "question"=>{"data"=>{"id"=>"32", "attributes"=>{"content"=>"How did you learn programming?", "received-count"=>0}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 32], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.7ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "adsgadsgdsga"], ["question_id", 32], ["created_at", 2016-06-21 15:45:06 UTC], ["updated_at", 2016-06-21 15:45:06 UTC]]
  [1m[35m (76.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mAnswer Load (1.0ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."question_id" = $1 ORDER BY "answers"."id" DESC LIMIT $2[0m  [["question_id", 32], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 68]]
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (3.35ms)
Completed 200 OK in 92ms (Views: 3.8ms | ActiveRecord: 78.6ms)


Started GET "/api/v1/questions/32" for ::1 at 2016-06-21 11:45:19 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"32"}
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 32], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.3ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 32]]
[active_model_serializers]   [1m[36mComment Load (0.3ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 7]]
[active_model_serializers]   [1m[36mComment Load (0.3ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 8]]
[active_model_serializers]   [1m[36mComment Load (0.3ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 63]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 64]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 65]]
[active_model_serializers]   [1m[36mComment Load (0.3ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 66]]
[active_model_serializers]   [1m[36mComment Load (0.3ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 67]]
[active_model_serializers]   [1m[36mComment Load (1.3ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 68]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (49.33ms)
Completed 200 OK in 52ms (Views: 46.8ms | ActiveRecord: 3.6ms)


Started GET "/api/v1/questions/32" for ::1 at 2016-06-21 11:45:19 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"32"}
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 32], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.3ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 32]]
[active_model_serializers]   [1m[36mComment Load (0.3ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 7]]
[active_model_serializers]   [1m[36mComment Load (0.3ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 8]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 63]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 64]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 65]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 66]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 67]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 68]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (40.47ms)
Completed 200 OK in 43ms (Views: 39.1ms | ActiveRecord: 2.4ms)


Started GET "/api/v1/questions/32" for ::1 at 2016-06-21 11:45:21 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"32"}
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 32], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 32]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 7]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 8]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 63]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 64]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 65]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 66]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 67]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 68]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (34.31ms)
Completed 200 OK in 36ms (Views: 32.9ms | ActiveRecord: 2.2ms)


Started GET "/api/v1/questions/32" for ::1 at 2016-06-21 11:45:21 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"32"}
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 32], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.5ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 32]]
[active_model_serializers]   [1m[36mComment Load (0.3ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 7]]
[active_model_serializers]   [1m[36mComment Load (0.3ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 8]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 63]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 64]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 65]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 66]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 67]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 68]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (41.3ms)
Completed 200 OK in 43ms (Views: 39.7ms | ActiveRecord: 2.6ms)


Started GET "/api/v1/questions/32" for ::1 at 2016-06-21 11:45:38 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"32"}
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 32], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.3ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 32]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 7]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 8]]
[active_model_serializers]   [1m[36mComment Load (0.3ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 63]]
[active_model_serializers]   [1m[36mComment Load (0.4ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 64]]
[active_model_serializers]   [1m[36mComment Load (0.4ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 65]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 66]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 67]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 68]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (38.8ms)
Completed 200 OK in 41ms (Views: 37.1ms | ActiveRecord: 2.6ms)


Started GET "/api/v1/questions/32" for ::1 at 2016-06-21 11:45:38 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"32"}
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 32], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.3ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 32]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 7]]
[active_model_serializers]   [1m[36mComment Load (0.3ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 8]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 63]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 64]]
[active_model_serializers]   [1m[36mComment Load (0.3ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 65]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 66]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 67]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 68]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (53.87ms)
Completed 200 OK in 56ms (Views: 52.5ms | ActiveRecord: 2.5ms)


Started GET "/api/v1/questions/32" for ::1 at 2016-06-21 11:45:48 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"32"}
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 32], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.4ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 32]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 7]]
[active_model_serializers]   [1m[36mComment Load (0.3ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 8]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 63]]
[active_model_serializers]   [1m[36mComment Load (0.3ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 64]]
[active_model_serializers]   [1m[36mComment Load (0.3ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 65]]
[active_model_serializers]   [1m[36mComment Load (0.3ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 66]]
[active_model_serializers]   [1m[36mComment Load (0.3ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 67]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 68]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (44.01ms)
Completed 200 OK in 47ms (Views: 42.6ms | ActiveRecord: 3.0ms)


Started GET "/api/v1/questions/32" for ::1 at 2016-06-21 11:45:48 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"32"}
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 32], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.4ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 32]]
[active_model_serializers]   [1m[36mComment Load (0.3ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 7]]
[active_model_serializers]   [1m[36mComment Load (0.3ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 8]]
[active_model_serializers]   [1m[36mComment Load (0.5ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 63]]
[active_model_serializers]   [1m[36mComment Load (0.6ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 64]]
[active_model_serializers]   [1m[36mComment Load (0.7ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 65]]
[active_model_serializers]   [1m[36mComment Load (0.3ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 66]]
[active_model_serializers]   [1m[36mComment Load (2.6ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 67]]
[active_model_serializers]   [1m[36mComment Load (0.3ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 68]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (70.08ms)
Completed 200 OK in 73ms (Views: 65.3ms | ActiveRecord: 6.2ms)


Started GET "/api/v1/questions/32" for ::1 at 2016-06-21 11:45:50 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"32"}
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 32], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.4ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 32]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 7]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 8]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 63]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 64]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 65]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 66]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 67]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 68]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (33.94ms)
Completed 200 OK in 36ms (Views: 32.8ms | ActiveRecord: 2.2ms)


Started GET "/api/v1/questions/32" for ::1 at 2016-06-21 11:45:50 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"32"}
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 32], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.3ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 32]]
[active_model_serializers]   [1m[36mComment Load (0.3ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 7]]
[active_model_serializers]   [1m[36mComment Load (0.3ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 8]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 63]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 64]]
[active_model_serializers]   [1m[36mComment Load (0.3ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 65]]
[active_model_serializers]   [1m[36mComment Load (0.3ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 66]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 67]]
[active_model_serializers]   [1m[36mComment Load (0.3ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 68]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (37.99ms)
Completed 200 OK in 40ms (Views: 36.5ms | ActiveRecord: 2.7ms)


Started GET "/api/v1/questions/32" for ::1 at 2016-06-21 11:45:56 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"32"}
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 32], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.4ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 32]]
[active_model_serializers]   [1m[36mComment Load (0.3ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 7]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 8]]
[active_model_serializers]   [1m[36mComment Load (0.3ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 63]]
[active_model_serializers]   [1m[36mComment Load (0.6ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 64]]
[active_model_serializers]   [1m[36mComment Load (1.0ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 65]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 66]]
[active_model_serializers]   [1m[36mComment Load (0.3ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 67]]
[active_model_serializers]   [1m[36mComment Load (0.3ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 68]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (52.61ms)
Completed 200 OK in 55ms (Views: 49.9ms | ActiveRecord: 3.9ms)


Started GET "/api/v1/questions/32" for ::1 at 2016-06-21 11:45:56 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"32"}
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 32], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.3ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 32]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 7]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 8]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 63]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 64]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 65]]
[active_model_serializers]   [1m[36mComment Load (0.3ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 66]]
[active_model_serializers]   [1m[36mComment Load (0.7ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 67]]
[active_model_serializers]   [1m[36mComment Load (0.3ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 68]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (41.14ms)
Completed 200 OK in 43ms (Views: 39.2ms | ActiveRecord: 2.9ms)


Started GET "/api/v1/questions/32" for ::1 at 2016-06-21 11:46:07 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"32"}
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 32], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.4ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 32]]
[active_model_serializers]   [1m[36mComment Load (0.3ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 7]]
[active_model_serializers]   [1m[36mComment Load (0.3ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 8]]
[active_model_serializers]   [1m[36mComment Load (0.4ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 63]]
[active_model_serializers]   [1m[36mComment Load (0.3ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 64]]
[active_model_serializers]   [1m[36mComment Load (0.3ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 65]]
[active_model_serializers]   [1m[36mComment Load (0.4ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 66]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 67]]
[active_model_serializers]   [1m[36mComment Load (0.3ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 68]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (51.7ms)
Completed 200 OK in 55ms (Views: 50.0ms | ActiveRecord: 3.1ms)


Started GET "/api/v1/questions/32" for ::1 at 2016-06-21 11:46:07 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"32"}
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 32], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.4ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 32]]
[active_model_serializers]   [1m[36mComment Load (0.3ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 7]]
[active_model_serializers]   [1m[36mComment Load (0.3ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 8]]
[active_model_serializers]   [1m[36mComment Load (0.3ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 63]]
[active_model_serializers]   [1m[36mComment Load (0.3ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 64]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 65]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 66]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 67]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 68]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (47.15ms)
Completed 200 OK in 49ms (Views: 45.4ms | ActiveRecord: 2.8ms)


Started GET "/api/v1/questions/32" for ::1 at 2016-06-21 11:46:25 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"32"}
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 32], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.3ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 32]]
[active_model_serializers]   [1m[36mComment Load (0.3ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 7]]
[active_model_serializers]   [1m[36mComment Load (0.3ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 8]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 63]]
[active_model_serializers]   [1m[36mComment Load (0.3ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 64]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 65]]
[active_model_serializers]   [1m[36mComment Load (0.3ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 66]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 67]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 68]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (41.56ms)
Completed 200 OK in 44ms (Views: 40.1ms | ActiveRecord: 2.6ms)


Started GET "/api/v1/questions/32" for ::1 at 2016-06-21 11:46:25 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"32"}
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 32], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.4ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 32]]
[active_model_serializers]   [1m[36mComment Load (0.3ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 7]]
[active_model_serializers]   [1m[36mComment Load (0.3ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 8]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 63]]
[active_model_serializers]   [1m[36mComment Load (0.3ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 64]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 65]]
[active_model_serializers]   [1m[36mComment Load (0.3ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 66]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 67]]
[active_model_serializers]   [1m[36mComment Load (0.3ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 68]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (50.67ms)
Completed 200 OK in 53ms (Views: 49.0ms | ActiveRecord: 2.8ms)


Started GET "/api/v1/questions/32" for ::1 at 2016-06-21 11:46:27 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"32"}
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 32], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.4ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 32]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 7]]
[active_model_serializers]   [1m[36mComment Load (0.3ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 8]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 63]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 64]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 65]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 66]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 67]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 68]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (31.83ms)
Completed 200 OK in 34ms (Views: 30.7ms | ActiveRecord: 2.4ms)


Started GET "/api/v1/questions/32" for ::1 at 2016-06-21 11:46:27 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"32"}
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 32], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.4ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 32]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 7]]
[active_model_serializers]   [1m[36mComment Load (0.3ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 8]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 63]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 64]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 65]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 66]]
[active_model_serializers]   [1m[36mComment Load (0.3ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 67]]
[active_model_serializers]   [1m[36mComment Load (0.3ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 68]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (42.91ms)
Completed 200 OK in 45ms (Views: 41.3ms | ActiveRecord: 2.7ms)


Started GET "/api/v1/questions/32" for ::1 at 2016-06-21 11:46:41 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"32"}
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 32], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.3ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 32]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 7]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 8]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 63]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 64]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 65]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 66]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 67]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 68]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (33.19ms)
Completed 200 OK in 37ms (Views: 32.3ms | ActiveRecord: 2.2ms)


Started GET "/api/v1/questions/32" for ::1 at 2016-06-21 11:46:41 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"32"}
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 32], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.3ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 32]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 7]]
[active_model_serializers]   [1m[36mComment Load (1.8ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 8]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 63]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 64]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 65]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 66]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 67]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 68]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (43.81ms)
Completed 200 OK in 46ms (Views: 40.8ms | ActiveRecord: 4.1ms)


Started GET "/api/v1/questions/32" for ::1 at 2016-06-21 11:46:43 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"32"}
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 32], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.7ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 32]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 7]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 8]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 63]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 64]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 65]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 66]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 67]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 68]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (34.71ms)
Completed 200 OK in 37ms (Views: 32.9ms | ActiveRecord: 2.7ms)


Started GET "/api/v1/questions/32" for ::1 at 2016-06-21 11:46:43 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"32"}
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 32], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.3ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 32]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 7]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 8]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 63]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 64]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 65]]
[active_model_serializers]   [1m[36mComment Load (0.3ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 66]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 67]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 68]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (30.81ms)
Completed 200 OK in 33ms (Views: 29.6ms | ActiveRecord: 2.2ms)


Started GET "/api/v1/questions/32" for ::1 at 2016-06-21 11:46:46 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"32"}
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 32], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.3ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 32]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 7]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 8]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 63]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 64]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 65]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 66]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 67]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 68]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (31.89ms)
Completed 200 OK in 34ms (Views: 30.7ms | ActiveRecord: 2.5ms)


Started GET "/api/v1/questions/32" for ::1 at 2016-06-21 11:46:46 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"32"}
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 32], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.3ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 32]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 7]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 8]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 63]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 64]]
[active_model_serializers]   [1m[36mComment Load (0.1ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 65]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 66]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 67]]
[active_model_serializers]   [1m[36mComment Load (0.3ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 68]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (31.13ms)
Completed 200 OK in 33ms (Views: 29.9ms | ActiveRecord: 2.1ms)


Started GET "/api/v1/questions/32" for ::1 at 2016-06-21 11:47:18 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"32"}
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 32], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 32]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 7]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 8]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 63]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 64]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 65]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 66]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 67]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 68]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (32.12ms)
Completed 200 OK in 34ms (Views: 30.9ms | ActiveRecord: 2.0ms)


Started GET "/api/v1/questions/32" for ::1 at 2016-06-21 11:47:18 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"32"}
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 32], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 32]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 7]]
[active_model_serializers]   [1m[36mComment Load (0.3ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 8]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 63]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 64]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 65]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 66]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 67]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 68]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (30.34ms)
Completed 200 OK in 33ms (Views: 29.0ms | ActiveRecord: 2.4ms)


Started GET "/api/v1/questions/32" for ::1 at 2016-06-21 11:47:20 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"32"}
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 32], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.3ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 32]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 7]]
[active_model_serializers]   [1m[36mComment Load (0.3ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 8]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 63]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 64]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 65]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 66]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 67]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 68]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (41.64ms)
Completed 200 OK in 44ms (Views: 40.6ms | ActiveRecord: 2.5ms)


Started GET "/api/v1/questions/32" for ::1 at 2016-06-21 11:47:20 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"32"}
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 32], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.5ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 32]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 7]]
[active_model_serializers]   [1m[36mComment Load (0.5ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 8]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 63]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 64]]
[active_model_serializers]   [1m[36mComment Load (0.3ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 65]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 66]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 67]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 68]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (41.45ms)
Completed 200 OK in 43ms (Views: 39.3ms | ActiveRecord: 3.0ms)


Started GET "/api/v1/questions/32" for ::1 at 2016-06-21 11:47:52 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"32"}
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 32], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.3ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 32]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 7]]
[active_model_serializers]   [1m[36mComment Load (0.3ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 8]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 63]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 64]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 65]]
[active_model_serializers]   [1m[36mComment Load (0.3ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 66]]
[active_model_serializers]   [1m[36mComment Load (0.3ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 67]]
[active_model_serializers]   [1m[36mComment Load (0.5ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 68]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (41.1ms)
Completed 200 OK in 43ms (Views: 39.4ms | ActiveRecord: 2.7ms)


Started GET "/api/v1/questions/32" for ::1 at 2016-06-21 11:47:52 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"32"}
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 32], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (4.5ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 32]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 7]]
[active_model_serializers]   [1m[36mComment Load (0.3ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 8]]
[active_model_serializers]   [1m[36mComment Load (0.3ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 63]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 64]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 65]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 66]]
[active_model_serializers]   [1m[36mComment Load (0.1ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 67]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 68]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (186.63ms)
Completed 200 OK in 189ms (Views: 181.1ms | ActiveRecord: 6.5ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-21 11:47:53 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"asdgdasg", "vote-count"=>0, "vote-score"=>0, "approved"=>true}, "question"=>{"data"=>{"id"=>"32", "attributes"=>{"content"=>"How did you learn programming?", "received-count"=>0}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 32], ["LIMIT", 1]]
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (27.4ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "asdgdasg"], ["question_id", 32], ["created_at", 2016-06-21 15:47:53 UTC], ["updated_at", 2016-06-21 15:47:53 UTC]]
  [1m[35m (34.5ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mAnswer Load (0.8ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."question_id" = $1 ORDER BY "answers"."id" DESC LIMIT $2[0m  [["question_id", 32], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mComment Load (0.3ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 69]]
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (3.55ms)
Completed 200 OK in 80ms (Views: 3.9ms | ActiveRecord: 63.5ms)


Started GET "/api/v1/questions/32" for ::1 at 2016-06-21 11:48:15 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"32"}
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 32], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.3ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 32]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 7]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 8]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 63]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 64]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 65]]
[active_model_serializers]   [1m[36mComment Load (0.3ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 66]]
[active_model_serializers]   [1m[36mComment Load (0.3ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 67]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 68]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 69]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (39.19ms)
Completed 200 OK in 41ms (Views: 37.6ms | ActiveRecord: 2.5ms)


Started GET "/api/v1/questions/32" for ::1 at 2016-06-21 11:48:16 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"32"}
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 32], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.2ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 32]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 7]]
[active_model_serializers]   [1m[36mComment Load (0.3ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 8]]
[active_model_serializers]   [1m[36mComment Load (0.3ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 63]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 64]]
[active_model_serializers]   [1m[36mComment Load (0.3ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 65]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 66]]
[active_model_serializers]   [1m[36mComment Load (0.1ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 67]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 68]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 69]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (35.21ms)
Completed 200 OK in 37ms (Views: 33.5ms | ActiveRecord: 2.4ms)


Started GET "/api/v1/questions/32" for ::1 at 2016-06-21 11:48:22 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"32"}
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 32], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.3ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 32]]
[active_model_serializers]   [1m[36mComment Load (0.3ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 7]]
[active_model_serializers]   [1m[36mComment Load (0.4ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 8]]
[active_model_serializers]   [1m[36mComment Load (0.3ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 63]]
[active_model_serializers]   [1m[36mComment Load (0.4ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 64]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 65]]
[active_model_serializers]   [1m[36mComment Load (0.3ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 66]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 67]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 68]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 69]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (55.64ms)
Completed 200 OK in 57ms (Views: 53.5ms | ActiveRecord: 3.0ms)


Started GET "/api/v1/questions/32" for ::1 at 2016-06-21 11:48:24 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"32"}
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 32], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.3ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 32]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 7]]
[active_model_serializers]   [1m[36mComment Load (0.4ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 8]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 63]]
[active_model_serializers]   [1m[36mComment Load (0.3ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 64]]
[active_model_serializers]   [1m[36mComment Load (0.4ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 65]]
[active_model_serializers]   [1m[36mComment Load (0.3ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 66]]
[active_model_serializers]   [1m[36mComment Load (0.5ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 67]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 68]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 69]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (85.99ms)
Completed 200 OK in 88ms (Views: 84.0ms | ActiveRecord: 3.2ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-21 11:48:32 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"sadfadsf", "vote-count"=>0, "vote-score"=>0, "approved"=>true}, "question"=>{"data"=>{"id"=>"32", "attributes"=>{"content"=>"How did you learn programming?", "received-count"=>0}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 32], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.7ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "sadfadsf"], ["question_id", 32], ["created_at", 2016-06-21 15:48:32 UTC], ["updated_at", 2016-06-21 15:48:32 UTC]]
  [1m[35m (23.7ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mAnswer Load (0.7ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."question_id" = $1 ORDER BY "answers"."id" DESC LIMIT $2[0m  [["question_id", 32], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mComment Load (0.3ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 70]]
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (4.17ms)
Completed 200 OK in 39ms (Views: 4.5ms | ActiveRecord: 25.8ms)


Started GET "/api/v1/questions/32" for ::1 at 2016-06-21 11:49:54 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"32"}
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 32], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.4ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 32]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 7]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 8]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 63]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 64]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 65]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 66]]
[active_model_serializers]   [1m[36mComment Load (0.1ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 67]]
[active_model_serializers]   [1m[36mComment Load (0.3ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 68]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 69]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 70]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (44.81ms)
Completed 200 OK in 48ms (Views: 43.4ms | ActiveRecord: 2.8ms)


Started GET "/api/v1/questions/32" for ::1 at 2016-06-21 11:49:59 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"32"}
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 32], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.3ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 32]]
[active_model_serializers]   [1m[36mComment Load (1.5ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 7]]
[active_model_serializers]   [1m[36mComment Load (0.6ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 8]]
[active_model_serializers]   [1m[36mComment Load (0.4ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 63]]
[active_model_serializers]   [1m[36mComment Load (0.3ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 64]]
[active_model_serializers]   [1m[36mComment Load (0.3ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 65]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 66]]
[active_model_serializers]   [1m[36mComment Load (0.4ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 67]]
[active_model_serializers]   [1m[36mComment Load (0.3ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 68]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 69]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 70]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (84.36ms)
Completed 200 OK in 87ms (Views: 80.2ms | ActiveRecord: 5.1ms)


Started GET "/api/v1/questions/32" for ::1 at 2016-06-21 11:50:02 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"32"}
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 32], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.3ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 32]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 7]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 8]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 63]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 64]]
[active_model_serializers]   [1m[36mComment Load (0.3ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 65]]
[active_model_serializers]   [1m[36mComment Load (0.5ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 66]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 67]]
[active_model_serializers]   [1m[36mComment Load (0.3ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 68]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 69]]
[active_model_serializers]   [1m[36mComment Load (0.3ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 70]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (48.89ms)
Completed 200 OK in 51ms (Views: 46.7ms | ActiveRecord: 3.1ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-21 11:50:04 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"asdgasgs", "vote-count"=>0, "vote-score"=>0, "approved"=>true}, "question"=>{"data"=>{"id"=>"32", "attributes"=>{"content"=>"How did you learn programming?", "received-count"=>0}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 32], ["LIMIT", 1]]
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "asdgasgs"], ["question_id", 32], ["created_at", 2016-06-21 15:50:04 UTC], ["updated_at", 2016-06-21 15:50:04 UTC]]
  [1m[35m (69.6ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mAnswer Load (0.7ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."question_id" = $1 ORDER BY "answers"."id" DESC LIMIT $2[0m  [["question_id", 32], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mComment Load (0.3ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 71]]
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (3.99ms)
Completed 200 OK in 90ms (Views: 4.5ms | ActiveRecord: 71.5ms)


Started POST "/api/v1/comments" for ::1 at 2016-06-21 11:50:18 -0400
  
AbstractController::ActionNotFound (The action 'create' could not be found for Api::V1::CommentsController):
  
actionpack (5.0.0.rc1) lib/abstract_controller/base.rb:121:in `process'
actionpack (5.0.0.rc1) lib/action_controller/metal.rb:190:in `dispatch'
actionpack (5.0.0.rc1) lib/action_controller/metal.rb:262:in `dispatch'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:50:in `dispatch'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:32:in `serve'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:39:in `block in serve'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:26:in `each'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:26:in `serve'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:725:in `call'
actionview (5.0.0.rc1) lib/action_view/digestor.rb:12:in `call'
rack (2.0.0.rc1) lib/rack/etag.rb:25:in `call'
rack (2.0.0.rc1) lib/rack/conditional_get.rb:38:in `call'
rack (2.0.0.rc1) lib/rack/head.rb:12:in `call'
activerecord (5.0.0.rc1) lib/active_record/migration.rb:552:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/callbacks.rb:38:in `block in call'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:97:in `__run_callbacks__'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:750:in `_run_call_callbacks'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:90:in `run_callbacks'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/callbacks.rb:36:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/remote_ip.rb:79:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/debug_exceptions.rb:49:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/show_exceptions.rb:31:in `call'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:36:in `call_app'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:24:in `block in call'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:70:in `block in tagged'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:26:in `tagged'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:70:in `tagged'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:24:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/request_id.rb:24:in `call'
rack (2.0.0.rc1) lib/rack/runtime.rb:22:in `call'
activesupport (5.0.0.rc1) lib/active_support/cache/strategy/local_cache_middleware.rb:28:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/static.rb:136:in `call'
rack (2.0.0.rc1) lib/rack/sendfile.rb:111:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
railties (5.0.0.rc1) lib/rails/engine.rb:522:in `call'
puma (3.4.0) lib/puma/configuration.rb:224:in `call'
puma (3.4.0) lib/puma/server.rb:569:in `handle_request'
puma (3.4.0) lib/puma/server.rb:406:in `process_client'
puma (3.4.0) lib/puma/server.rb:271:in `block in run'
puma (3.4.0) lib/puma/thread_pool.rb:114:in `call'
puma (3.4.0) lib/puma/thread_pool.rb:114:in `block in spawn_thread'
Started GET "/api/v1/questions/32" for ::1 at 2016-06-21 11:51:05 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"32"}
  [1m[36mQuestion Load (2.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 32], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (1.0ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 32]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 7]]
[active_model_serializers]   [1m[36mComment Load (2.7ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 8]]
[active_model_serializers]   [1m[36mComment Load (0.4ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 63]]
[active_model_serializers]   [1m[36mComment Load (1.8ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 64]]
[active_model_serializers]   [1m[36mComment Load (0.3ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 65]]
[active_model_serializers]   [1m[36mComment Load (0.3ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 66]]
[active_model_serializers]   [1m[36mComment Load (1.0ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 67]]
[active_model_serializers]   [1m[36mComment Load (0.3ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 68]]
[active_model_serializers]   [1m[36mComment Load (0.3ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 69]]
[active_model_serializers]   [1m[36mComment Load (0.3ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 70]]
[active_model_serializers]   [1m[36mComment Load (0.3ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 71]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (90.76ms)
Completed 200 OK in 98ms (Views: 84.1ms | ActiveRecord: 11.1ms)


Started GET "/api/v1/questions/32" for ::1 at 2016-06-21 11:51:05 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"32"}
  [1m[36mQuestion Load (1.0ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 32], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (1.5ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 32]]
[active_model_serializers]   [1m[36mComment Load (0.3ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 7]]
[active_model_serializers]   [1m[36mComment Load (0.5ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 8]]
[active_model_serializers]   [1m[36mComment Load (0.3ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 63]]
[active_model_serializers]   [1m[36mComment Load (0.3ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 64]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 65]]
[active_model_serializers]   [1m[36mComment Load (0.3ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 66]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 67]]
[active_model_serializers]   [1m[36mComment Load (0.3ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 68]]
[active_model_serializers]   [1m[36mComment Load (0.5ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 69]]
[active_model_serializers]   [1m[36mComment Load (0.3ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 70]]
[active_model_serializers]   [1m[36mComment Load (0.4ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 71]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (84.16ms)
Completed 200 OK in 88ms (Views: 80.3ms | ActiveRecord: 6.0ms)


Started GET "/api/v1/questions/32" for ::1 at 2016-06-21 11:51:44 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"32"}
  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 32], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.4ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 32]]
[active_model_serializers]   [1m[36mComment Load (0.4ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 7]]
[active_model_serializers]   [1m[36mComment Load (0.5ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 8]]
[active_model_serializers]   [1m[36mComment Load (0.3ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 63]]
[active_model_serializers]   [1m[36mComment Load (0.3ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 64]]
[active_model_serializers]   [1m[36mComment Load (0.3ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 65]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 66]]
[active_model_serializers]   [1m[36mComment Load (0.4ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 67]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 68]]
[active_model_serializers]   [1m[36mComment Load (0.6ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 69]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 70]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 71]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (167.61ms)
Completed 200 OK in 235ms (Views: 180.3ms | ActiveRecord: 4.9ms)


Started GET "/api/v1/questions/32" for ::1 at 2016-06-21 11:51:44 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"32"}
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 32], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.4ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 32]]
[active_model_serializers]   [1m[36mComment Load (0.3ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 7]]
[active_model_serializers]   [1m[36mComment Load (0.3ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 8]]
[active_model_serializers]   [1m[36mComment Load (0.3ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 63]]
[active_model_serializers]   [1m[36mComment Load (0.3ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 64]]
[active_model_serializers]   [1m[36mComment Load (0.3ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 65]]
[active_model_serializers]   [1m[36mComment Load (0.3ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 66]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 67]]
[active_model_serializers]   [1m[36mComment Load (0.3ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 68]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 69]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 70]]
[active_model_serializers]   [1m[36mComment Load (0.5ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 71]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (84.48ms)
Completed 200 OK in 87ms (Views: 81.6ms | ActiveRecord: 4.0ms)


Started GET "/api/v1/questions/32" for ::1 at 2016-06-21 11:51:48 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"32"}
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 32], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.3ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 32]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 7]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 8]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 63]]
[active_model_serializers]   [1m[36mComment Load (0.3ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 64]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 65]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 66]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 67]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 68]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 69]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 70]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 71]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (41.85ms)
Completed 200 OK in 44ms (Views: 39.7ms | ActiveRecord: 3.0ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-21 11:51:50 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"asgasdgasd", "vote-count"=>0, "vote-score"=>0, "approved"=>true}, "question"=>{"data"=>{"id"=>"32", "attributes"=>{"content"=>"How did you learn programming?", "received-count"=>0}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 32], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.6ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "asgasdgasd"], ["question_id", 32], ["created_at", 2016-06-21 15:51:50 UTC], ["updated_at", 2016-06-21 15:51:50 UTC]]
  [1m[35m (34.2ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mAnswer Load (0.7ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."question_id" = $1 ORDER BY "answers"."id" DESC LIMIT $2[0m  [["question_id", 32], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 72]]
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (2.88ms)
Completed 200 OK in 47ms (Views: 3.3ms | ActiveRecord: 36.2ms)


Started POST "/api/v1/comments" for ::1 at 2016-06-21 11:51:55 -0400
  
AbstractController::ActionNotFound (The action 'create' could not be found for Api::V1::CommentsController):
  
actionpack (5.0.0.rc1) lib/abstract_controller/base.rb:121:in `process'
actionpack (5.0.0.rc1) lib/action_controller/metal.rb:190:in `dispatch'
actionpack (5.0.0.rc1) lib/action_controller/metal.rb:262:in `dispatch'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:50:in `dispatch'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:32:in `serve'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:39:in `block in serve'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:26:in `each'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:26:in `serve'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:725:in `call'
actionview (5.0.0.rc1) lib/action_view/digestor.rb:12:in `call'
rack (2.0.0.rc1) lib/rack/etag.rb:25:in `call'
rack (2.0.0.rc1) lib/rack/conditional_get.rb:38:in `call'
rack (2.0.0.rc1) lib/rack/head.rb:12:in `call'
activerecord (5.0.0.rc1) lib/active_record/migration.rb:552:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/callbacks.rb:38:in `block in call'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:97:in `__run_callbacks__'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:750:in `_run_call_callbacks'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:90:in `run_callbacks'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/callbacks.rb:36:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/remote_ip.rb:79:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/debug_exceptions.rb:49:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/show_exceptions.rb:31:in `call'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:36:in `call_app'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:24:in `block in call'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:70:in `block in tagged'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:26:in `tagged'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:70:in `tagged'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:24:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/request_id.rb:24:in `call'
rack (2.0.0.rc1) lib/rack/runtime.rb:22:in `call'
activesupport (5.0.0.rc1) lib/active_support/cache/strategy/local_cache_middleware.rb:28:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/static.rb:136:in `call'
rack (2.0.0.rc1) lib/rack/sendfile.rb:111:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
railties (5.0.0.rc1) lib/rails/engine.rb:522:in `call'
puma (3.4.0) lib/puma/configuration.rb:224:in `call'
puma (3.4.0) lib/puma/server.rb:569:in `handle_request'
puma (3.4.0) lib/puma/server.rb:406:in `process_client'
puma (3.4.0) lib/puma/server.rb:271:in `block in run'
puma (3.4.0) lib/puma/thread_pool.rb:114:in `call'
puma (3.4.0) lib/puma/thread_pool.rb:114:in `block in spawn_thread'
Started GET "/api/v1/questions/32" for ::1 at 2016-06-21 11:53:13 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"32"}
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 32], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.4ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 32]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 7]]
[active_model_serializers]   [1m[36mComment Load (0.3ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 8]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 63]]
[active_model_serializers]   [1m[36mComment Load (0.3ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 64]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 65]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 66]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 67]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 68]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 69]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 70]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 71]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 72]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (48.43ms)
Completed 200 OK in 50ms (Views: 46.2ms | ActiveRecord: 3.2ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-21 11:53:15 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"adsgsdgsdg", "vote-count"=>0, "vote-score"=>0, "approved"=>true}, "question"=>{"data"=>{"id"=>"32", "attributes"=>{"content"=>"How did you learn programming?", "received-count"=>0}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 32], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (39.5ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "adsgsdgsdg"], ["question_id", 32], ["created_at", 2016-06-21 15:53:15 UTC], ["updated_at", 2016-06-21 15:53:15 UTC]]
  [1m[35m (53.4ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mAnswer Load (0.8ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."question_id" = $1 ORDER BY "answers"."id" DESC LIMIT $2[0m  [["question_id", 32], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mComment Load (0.3ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 73]]
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (4.58ms)
Completed 200 OK in 292ms (Views: 4.9ms | ActiveRecord: 94.5ms)


Started POST "/api/v1/comments" for ::1 at 2016-06-21 11:53:28 -0400
  
AbstractController::ActionNotFound (The action 'create' could not be found for Api::V1::CommentsController):
  
actionpack (5.0.0.rc1) lib/abstract_controller/base.rb:121:in `process'
actionpack (5.0.0.rc1) lib/action_controller/metal.rb:190:in `dispatch'
actionpack (5.0.0.rc1) lib/action_controller/metal.rb:262:in `dispatch'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:50:in `dispatch'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:32:in `serve'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:39:in `block in serve'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:26:in `each'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:26:in `serve'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:725:in `call'
actionview (5.0.0.rc1) lib/action_view/digestor.rb:12:in `call'
rack (2.0.0.rc1) lib/rack/etag.rb:25:in `call'
rack (2.0.0.rc1) lib/rack/conditional_get.rb:38:in `call'
rack (2.0.0.rc1) lib/rack/head.rb:12:in `call'
activerecord (5.0.0.rc1) lib/active_record/migration.rb:552:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/callbacks.rb:38:in `block in call'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:97:in `__run_callbacks__'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:750:in `_run_call_callbacks'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:90:in `run_callbacks'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/callbacks.rb:36:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/remote_ip.rb:79:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/debug_exceptions.rb:49:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/show_exceptions.rb:31:in `call'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:36:in `call_app'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:24:in `block in call'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:70:in `block in tagged'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:26:in `tagged'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:70:in `tagged'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:24:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/request_id.rb:24:in `call'
rack (2.0.0.rc1) lib/rack/runtime.rb:22:in `call'
activesupport (5.0.0.rc1) lib/active_support/cache/strategy/local_cache_middleware.rb:28:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/static.rb:136:in `call'
rack (2.0.0.rc1) lib/rack/sendfile.rb:111:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
railties (5.0.0.rc1) lib/rails/engine.rb:522:in `call'
puma (3.4.0) lib/puma/configuration.rb:224:in `call'
puma (3.4.0) lib/puma/server.rb:569:in `handle_request'
puma (3.4.0) lib/puma/server.rb:406:in `process_client'
puma (3.4.0) lib/puma/server.rb:271:in `block in run'
puma (3.4.0) lib/puma/thread_pool.rb:114:in `call'
puma (3.4.0) lib/puma/thread_pool.rb:114:in `block in spawn_thread'
Started GET "/api/v1/questions/32" for ::1 at 2016-06-21 11:53:28 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"32"}
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 32], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.4ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 32]]
[active_model_serializers]   [1m[36mComment Load (0.3ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 7]]
[active_model_serializers]   [1m[36mComment Load (0.3ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 8]]
[active_model_serializers]   [1m[36mComment Load (0.3ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 63]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 64]]
[active_model_serializers]   [1m[36mComment Load (0.3ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 65]]
[active_model_serializers]   [1m[36mComment Load (0.3ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 66]]
[active_model_serializers]   [1m[36mComment Load (0.3ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 67]]
[active_model_serializers]   [1m[36mComment Load (0.3ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 68]]
[active_model_serializers]   [1m[36mComment Load (0.3ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 69]]
[active_model_serializers]   [1m[36mComment Load (0.3ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 70]]
[active_model_serializers]   [1m[36mComment Load (0.4ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 71]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 72]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 73]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (80.99ms)
Completed 200 OK in 83ms (Views: 77.8ms | ActiveRecord: 4.4ms)


Started GET "/api/v1/questions/32" for ::1 at 2016-06-21 11:53:29 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"32"}
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 32], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.4ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 32]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 7]]
[active_model_serializers]   [1m[36mComment Load (0.3ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 8]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 63]]
[active_model_serializers]   [1m[36mComment Load (0.3ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 64]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 65]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 66]]
[active_model_serializers]   [1m[36mComment Load (0.6ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 67]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 68]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 69]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 70]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 71]]
[active_model_serializers]   [1m[36mComment Load (0.3ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 72]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 73]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (66.9ms)
Completed 200 OK in 70ms (Views: 64.0ms | ActiveRecord: 4.1ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-21 11:53:32 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"asdgadsgads", "vote-count"=>0, "vote-score"=>0, "approved"=>true}, "question"=>{"data"=>{"id"=>"32", "attributes"=>{"content"=>"How did you learn programming?", "received-count"=>0}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 32], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "asdgadsgads"], ["question_id", 32], ["created_at", 2016-06-21 15:53:32 UTC], ["updated_at", 2016-06-21 15:53:32 UTC]]
  [1m[35m (2.2ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mAnswer Load (0.4ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."question_id" = $1 ORDER BY "answers"."id" DESC LIMIT $2[0m  [["question_id", 32], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 74]]
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (2.53ms)
Completed 200 OK in 12ms (Views: 2.9ms | ActiveRecord: 3.5ms)


Started POST "/api/v1/comments" for ::1 at 2016-06-21 11:53:35 -0400
  
AbstractController::ActionNotFound (The action 'create' could not be found for Api::V1::CommentsController):
  
actionpack (5.0.0.rc1) lib/abstract_controller/base.rb:121:in `process'
actionpack (5.0.0.rc1) lib/action_controller/metal.rb:190:in `dispatch'
actionpack (5.0.0.rc1) lib/action_controller/metal.rb:262:in `dispatch'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:50:in `dispatch'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:32:in `serve'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:39:in `block in serve'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:26:in `each'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:26:in `serve'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:725:in `call'
actionview (5.0.0.rc1) lib/action_view/digestor.rb:12:in `call'
rack (2.0.0.rc1) lib/rack/etag.rb:25:in `call'
rack (2.0.0.rc1) lib/rack/conditional_get.rb:38:in `call'
rack (2.0.0.rc1) lib/rack/head.rb:12:in `call'
activerecord (5.0.0.rc1) lib/active_record/migration.rb:552:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/callbacks.rb:38:in `block in call'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:97:in `__run_callbacks__'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:750:in `_run_call_callbacks'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:90:in `run_callbacks'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/callbacks.rb:36:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/remote_ip.rb:79:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/debug_exceptions.rb:49:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/show_exceptions.rb:31:in `call'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:36:in `call_app'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:24:in `block in call'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:70:in `block in tagged'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:26:in `tagged'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:70:in `tagged'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:24:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/request_id.rb:24:in `call'
rack (2.0.0.rc1) lib/rack/runtime.rb:22:in `call'
activesupport (5.0.0.rc1) lib/active_support/cache/strategy/local_cache_middleware.rb:28:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/static.rb:136:in `call'
rack (2.0.0.rc1) lib/rack/sendfile.rb:111:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
railties (5.0.0.rc1) lib/rails/engine.rb:522:in `call'
puma (3.4.0) lib/puma/configuration.rb:224:in `call'
puma (3.4.0) lib/puma/server.rb:569:in `handle_request'
puma (3.4.0) lib/puma/server.rb:406:in `process_client'
puma (3.4.0) lib/puma/server.rb:271:in `block in run'
puma (3.4.0) lib/puma/thread_pool.rb:114:in `call'
puma (3.4.0) lib/puma/thread_pool.rb:114:in `block in spawn_thread'
Started POST "/api/v1/comments" for ::1 at 2016-06-21 11:53:37 -0400
  
AbstractController::ActionNotFound (The action 'create' could not be found for Api::V1::CommentsController):
  
actionpack (5.0.0.rc1) lib/abstract_controller/base.rb:121:in `process'
actionpack (5.0.0.rc1) lib/action_controller/metal.rb:190:in `dispatch'
actionpack (5.0.0.rc1) lib/action_controller/metal.rb:262:in `dispatch'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:50:in `dispatch'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:32:in `serve'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:39:in `block in serve'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:26:in `each'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:26:in `serve'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:725:in `call'
actionview (5.0.0.rc1) lib/action_view/digestor.rb:12:in `call'
rack (2.0.0.rc1) lib/rack/etag.rb:25:in `call'
rack (2.0.0.rc1) lib/rack/conditional_get.rb:38:in `call'
rack (2.0.0.rc1) lib/rack/head.rb:12:in `call'
activerecord (5.0.0.rc1) lib/active_record/migration.rb:552:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/callbacks.rb:38:in `block in call'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:97:in `__run_callbacks__'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:750:in `_run_call_callbacks'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:90:in `run_callbacks'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/callbacks.rb:36:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/remote_ip.rb:79:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/debug_exceptions.rb:49:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/show_exceptions.rb:31:in `call'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:36:in `call_app'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:24:in `block in call'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:70:in `block in tagged'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:26:in `tagged'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:70:in `tagged'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:24:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/request_id.rb:24:in `call'
rack (2.0.0.rc1) lib/rack/runtime.rb:22:in `call'
activesupport (5.0.0.rc1) lib/active_support/cache/strategy/local_cache_middleware.rb:28:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/static.rb:136:in `call'
rack (2.0.0.rc1) lib/rack/sendfile.rb:111:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
railties (5.0.0.rc1) lib/rails/engine.rb:522:in `call'
puma (3.4.0) lib/puma/configuration.rb:224:in `call'
puma (3.4.0) lib/puma/server.rb:569:in `handle_request'
puma (3.4.0) lib/puma/server.rb:406:in `process_client'
puma (3.4.0) lib/puma/server.rb:271:in `block in run'
puma (3.4.0) lib/puma/thread_pool.rb:114:in `call'
puma (3.4.0) lib/puma/thread_pool.rb:114:in `block in spawn_thread'
Started POST "/api/v1/comments" for ::1 at 2016-06-21 11:53:39 -0400
  
AbstractController::ActionNotFound (The action 'create' could not be found for Api::V1::CommentsController):
  
actionpack (5.0.0.rc1) lib/abstract_controller/base.rb:121:in `process'
actionpack (5.0.0.rc1) lib/action_controller/metal.rb:190:in `dispatch'
actionpack (5.0.0.rc1) lib/action_controller/metal.rb:262:in `dispatch'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:50:in `dispatch'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:32:in `serve'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:39:in `block in serve'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:26:in `each'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:26:in `serve'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:725:in `call'
actionview (5.0.0.rc1) lib/action_view/digestor.rb:12:in `call'
rack (2.0.0.rc1) lib/rack/etag.rb:25:in `call'
rack (2.0.0.rc1) lib/rack/conditional_get.rb:38:in `call'
rack (2.0.0.rc1) lib/rack/head.rb:12:in `call'
activerecord (5.0.0.rc1) lib/active_record/migration.rb:552:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/callbacks.rb:38:in `block in call'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:97:in `__run_callbacks__'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:750:in `_run_call_callbacks'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:90:in `run_callbacks'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/callbacks.rb:36:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/remote_ip.rb:79:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/debug_exceptions.rb:49:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/show_exceptions.rb:31:in `call'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:36:in `call_app'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:24:in `block in call'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:70:in `block in tagged'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:26:in `tagged'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:70:in `tagged'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:24:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/request_id.rb:24:in `call'
rack (2.0.0.rc1) lib/rack/runtime.rb:22:in `call'
activesupport (5.0.0.rc1) lib/active_support/cache/strategy/local_cache_middleware.rb:28:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/static.rb:136:in `call'
rack (2.0.0.rc1) lib/rack/sendfile.rb:111:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
railties (5.0.0.rc1) lib/rails/engine.rb:522:in `call'
puma (3.4.0) lib/puma/configuration.rb:224:in `call'
puma (3.4.0) lib/puma/server.rb:569:in `handle_request'
puma (3.4.0) lib/puma/server.rb:406:in `process_client'
puma (3.4.0) lib/puma/server.rb:271:in `block in run'
puma (3.4.0) lib/puma/thread_pool.rb:114:in `call'
puma (3.4.0) lib/puma/thread_pool.rb:114:in `block in spawn_thread'
Started GET "/api/v1/questions/32" for ::1 at 2016-06-21 11:53:51 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"32"}
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 32], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.7ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 32]]
[active_model_serializers]   [1m[36mComment Load (0.4ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 7]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 8]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 63]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 64]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 65]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 66]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 67]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 68]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 69]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 70]]
[active_model_serializers]   [1m[36mComment Load (0.3ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 71]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 72]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 73]]
[active_model_serializers]   [1m[36mComment Load (0.3ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 74]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (57.49ms)
Completed 200 OK in 60ms (Views: 54.1ms | ActiveRecord: 4.4ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-21 11:53:53 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"adsgsgr", "vote-count"=>0, "vote-score"=>0, "approved"=>true}, "question"=>{"data"=>{"id"=>"32", "attributes"=>{"content"=>"How did you learn programming?", "received-count"=>0}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 32], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.5ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "adsgsgr"], ["question_id", 32], ["created_at", 2016-06-21 15:53:53 UTC], ["updated_at", 2016-06-21 15:53:53 UTC]]
  [1m[35m (1.0ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mAnswer Load (0.5ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."question_id" = $1 ORDER BY "answers"."id" DESC LIMIT $2[0m  [["question_id", 32], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 75]]
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (2.45ms)
Completed 200 OK in 12ms (Views: 2.8ms | ActiveRecord: 2.5ms)


Started POST "/api/v1/comments" for ::1 at 2016-06-21 11:53:57 -0400
  
AbstractController::ActionNotFound (The action 'create' could not be found for Api::V1::CommentsController):
  
actionpack (5.0.0.rc1) lib/abstract_controller/base.rb:121:in `process'
actionpack (5.0.0.rc1) lib/action_controller/metal.rb:190:in `dispatch'
actionpack (5.0.0.rc1) lib/action_controller/metal.rb:262:in `dispatch'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:50:in `dispatch'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:32:in `serve'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:39:in `block in serve'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:26:in `each'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:26:in `serve'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:725:in `call'
actionview (5.0.0.rc1) lib/action_view/digestor.rb:12:in `call'
rack (2.0.0.rc1) lib/rack/etag.rb:25:in `call'
rack (2.0.0.rc1) lib/rack/conditional_get.rb:38:in `call'
rack (2.0.0.rc1) lib/rack/head.rb:12:in `call'
activerecord (5.0.0.rc1) lib/active_record/migration.rb:552:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/callbacks.rb:38:in `block in call'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:97:in `__run_callbacks__'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:750:in `_run_call_callbacks'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:90:in `run_callbacks'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/callbacks.rb:36:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/remote_ip.rb:79:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/debug_exceptions.rb:49:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/show_exceptions.rb:31:in `call'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:36:in `call_app'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:24:in `block in call'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:70:in `block in tagged'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:26:in `tagged'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:70:in `tagged'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:24:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/request_id.rb:24:in `call'
rack (2.0.0.rc1) lib/rack/runtime.rb:22:in `call'
activesupport (5.0.0.rc1) lib/active_support/cache/strategy/local_cache_middleware.rb:28:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/static.rb:136:in `call'
rack (2.0.0.rc1) lib/rack/sendfile.rb:111:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
railties (5.0.0.rc1) lib/rails/engine.rb:522:in `call'
puma (3.4.0) lib/puma/configuration.rb:224:in `call'
puma (3.4.0) lib/puma/server.rb:569:in `handle_request'
puma (3.4.0) lib/puma/server.rb:406:in `process_client'
puma (3.4.0) lib/puma/server.rb:271:in `block in run'
puma (3.4.0) lib/puma/thread_pool.rb:114:in `call'
puma (3.4.0) lib/puma/thread_pool.rb:114:in `block in spawn_thread'
Started POST "/api/v1/comments" for ::1 at 2016-06-21 11:54:00 -0400
  
AbstractController::ActionNotFound (The action 'create' could not be found for Api::V1::CommentsController):
  
actionpack (5.0.0.rc1) lib/abstract_controller/base.rb:121:in `process'
actionpack (5.0.0.rc1) lib/action_controller/metal.rb:190:in `dispatch'
actionpack (5.0.0.rc1) lib/action_controller/metal.rb:262:in `dispatch'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:50:in `dispatch'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:32:in `serve'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:39:in `block in serve'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:26:in `each'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:26:in `serve'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:725:in `call'
actionview (5.0.0.rc1) lib/action_view/digestor.rb:12:in `call'
rack (2.0.0.rc1) lib/rack/etag.rb:25:in `call'
rack (2.0.0.rc1) lib/rack/conditional_get.rb:38:in `call'
rack (2.0.0.rc1) lib/rack/head.rb:12:in `call'
activerecord (5.0.0.rc1) lib/active_record/migration.rb:552:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/callbacks.rb:38:in `block in call'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:97:in `__run_callbacks__'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:750:in `_run_call_callbacks'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:90:in `run_callbacks'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/callbacks.rb:36:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/remote_ip.rb:79:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/debug_exceptions.rb:49:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/show_exceptions.rb:31:in `call'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:36:in `call_app'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:24:in `block in call'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:70:in `block in tagged'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:26:in `tagged'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:70:in `tagged'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:24:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/request_id.rb:24:in `call'
rack (2.0.0.rc1) lib/rack/runtime.rb:22:in `call'
activesupport (5.0.0.rc1) lib/active_support/cache/strategy/local_cache_middleware.rb:28:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/static.rb:136:in `call'
rack (2.0.0.rc1) lib/rack/sendfile.rb:111:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
railties (5.0.0.rc1) lib/rails/engine.rb:522:in `call'
puma (3.4.0) lib/puma/configuration.rb:224:in `call'
puma (3.4.0) lib/puma/server.rb:569:in `handle_request'
puma (3.4.0) lib/puma/server.rb:406:in `process_client'
puma (3.4.0) lib/puma/server.rb:271:in `block in run'
puma (3.4.0) lib/puma/thread_pool.rb:114:in `call'
puma (3.4.0) lib/puma/thread_pool.rb:114:in `block in spawn_thread'
Started POST "/api/v1/comments" for ::1 at 2016-06-21 11:54:02 -0400
  
AbstractController::ActionNotFound (The action 'create' could not be found for Api::V1::CommentsController):
  
actionpack (5.0.0.rc1) lib/abstract_controller/base.rb:121:in `process'
actionpack (5.0.0.rc1) lib/action_controller/metal.rb:190:in `dispatch'
actionpack (5.0.0.rc1) lib/action_controller/metal.rb:262:in `dispatch'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:50:in `dispatch'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:32:in `serve'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:39:in `block in serve'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:26:in `each'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:26:in `serve'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:725:in `call'
actionview (5.0.0.rc1) lib/action_view/digestor.rb:12:in `call'
rack (2.0.0.rc1) lib/rack/etag.rb:25:in `call'
rack (2.0.0.rc1) lib/rack/conditional_get.rb:38:in `call'
rack (2.0.0.rc1) lib/rack/head.rb:12:in `call'
activerecord (5.0.0.rc1) lib/active_record/migration.rb:552:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/callbacks.rb:38:in `block in call'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:97:in `__run_callbacks__'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:750:in `_run_call_callbacks'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:90:in `run_callbacks'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/callbacks.rb:36:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/remote_ip.rb:79:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/debug_exceptions.rb:49:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/show_exceptions.rb:31:in `call'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:36:in `call_app'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:24:in `block in call'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:70:in `block in tagged'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:26:in `tagged'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:70:in `tagged'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:24:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/request_id.rb:24:in `call'
rack (2.0.0.rc1) lib/rack/runtime.rb:22:in `call'
activesupport (5.0.0.rc1) lib/active_support/cache/strategy/local_cache_middleware.rb:28:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/static.rb:136:in `call'
rack (2.0.0.rc1) lib/rack/sendfile.rb:111:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
railties (5.0.0.rc1) lib/rails/engine.rb:522:in `call'
puma (3.4.0) lib/puma/configuration.rb:224:in `call'
puma (3.4.0) lib/puma/server.rb:569:in `handle_request'
puma (3.4.0) lib/puma/server.rb:406:in `process_client'
puma (3.4.0) lib/puma/server.rb:271:in `block in run'
puma (3.4.0) lib/puma/thread_pool.rb:114:in `call'
puma (3.4.0) lib/puma/thread_pool.rb:114:in `block in spawn_thread'
Started GET "/api/v1/questions/32" for ::1 at 2016-06-21 11:54:31 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"32"}
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 32], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.5ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 32]]
[active_model_serializers]   [1m[36mComment Load (0.3ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 7]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 8]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 63]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 64]]
[active_model_serializers]   [1m[36mComment Load (0.3ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 65]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 66]]
[active_model_serializers]   [1m[36mComment Load (0.3ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 67]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 68]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 69]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 70]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 71]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 72]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 73]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 74]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 75]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (107.61ms)
Completed 200 OK in 125ms (Views: 105.5ms | ActiveRecord: 4.5ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-21 11:54:33 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"sadgsrgs", "vote-count"=>0, "vote-score"=>0, "approved"=>true}, "question"=>{"data"=>{"id"=>"32", "attributes"=>{"content"=>"How did you learn programming?", "received-count"=>0}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.5ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 32], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.5ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "sadgsrgs"], ["question_id", 32], ["created_at", 2016-06-21 15:54:33 UTC], ["updated_at", 2016-06-21 15:54:33 UTC]]
  [1m[35m (41.1ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mAnswer Load (0.6ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."question_id" = $1 ORDER BY "answers"."id" DESC LIMIT $2[0m  [["question_id", 32], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mComment Load (0.3ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 76]]
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (2.84ms)
Completed 200 OK in 55ms (Views: 3.2ms | ActiveRecord: 43.0ms)


Started POST "/api/v1/comments" for ::1 at 2016-06-21 11:54:37 -0400
Processing by Api::V1::CommentsController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"rsaggrsgas", "vote-count"=>0, "vote-score"=>0}, "relationships"=>{"answer"=>{"data"=>{"type"=>"answers", "id"=>"7"}}}, "type"=>"comments"}, "comment"=>{}}
Completed 500 Internal Server Error in 127683ms (ActiveRecord: 0.0ms)


  
SystemExit (exit):
  
app/controllers/api/v1/comments_controller.rb:12:in `create'
Started GET "/api/v1/questions/32" for ::1 at 2016-06-21 11:56:48 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"32"}
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 32], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.7ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 32]]
[active_model_serializers]   [1m[36mComment Load (0.6ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 7]]
[active_model_serializers]   [1m[36mComment Load (0.5ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 8]]
[active_model_serializers]   [1m[36mComment Load (0.5ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 63]]
[active_model_serializers]   [1m[36mComment Load (0.5ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 64]]
[active_model_serializers]   [1m[36mComment Load (0.5ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 65]]
[active_model_serializers]   [1m[36mComment Load (0.5ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 66]]
[active_model_serializers]   [1m[36mComment Load (0.5ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 67]]
[active_model_serializers]   [1m[36mComment Load (0.7ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 68]]
[active_model_serializers]   [1m[36mComment Load (0.6ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 69]]
[active_model_serializers]   [1m[36mComment Load (0.5ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 70]]
[active_model_serializers]   [1m[36mComment Load (0.5ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 71]]
[active_model_serializers]   [1m[36mComment Load (0.6ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 72]]
[active_model_serializers]   [1m[36mComment Load (0.5ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 73]]
[active_model_serializers]   [1m[36mComment Load (0.5ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 74]]
[active_model_serializers]   [1m[36mComment Load (0.5ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 75]]
[active_model_serializers]   [1m[36mComment Load (0.6ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 76]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (1598.19ms)
Completed 200 OK in 1713ms (Views: 1605.2ms | ActiveRecord: 10.0ms)


Started GET "/api/v1/questions/32" for ::1 at 2016-06-21 11:56:52 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"32"}
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 32], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.7ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 32]]
[active_model_serializers]   [1m[36mComment Load (0.5ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 7]]
[active_model_serializers]   [1m[36mComment Load (0.6ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 8]]
[active_model_serializers]   [1m[36mComment Load (0.5ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 63]]
[active_model_serializers]   [1m[36mComment Load (0.6ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 64]]
[active_model_serializers]   [1m[36mComment Load (0.6ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 65]]
[active_model_serializers]   [1m[36mComment Load (0.5ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 66]]
[active_model_serializers]   [1m[36mComment Load (0.5ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 67]]
[active_model_serializers]   [1m[36mComment Load (0.5ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 68]]
[active_model_serializers]   [1m[36mComment Load (0.5ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 69]]
[active_model_serializers]   [1m[36mComment Load (0.5ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 70]]
[active_model_serializers]   [1m[36mComment Load (0.6ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 71]]
[active_model_serializers]   [1m[36mComment Load (0.5ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 72]]
[active_model_serializers]   [1m[36mComment Load (0.7ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 73]]
[active_model_serializers]   [1m[36mComment Load (0.6ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 74]]
[active_model_serializers]   [1m[36mComment Load (0.6ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 75]]
[active_model_serializers]   [1m[36mComment Load (0.6ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 76]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (1411.43ms)
Completed 200 OK in 1437ms (Views: 1411.2ms | ActiveRecord: 10.3ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-21 11:56:56 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"asdgsdgads", "vote-count"=>0, "vote-score"=>0, "approved"=>true}, "question"=>{"data"=>{"id"=>"32", "attributes"=>{"content"=>"How did you learn programming?", "received-count"=>0}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 32], ["LIMIT", 1]]
  [1m[35m (4.5ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (28.6ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "asdgsdgads"], ["question_id", 32], ["created_at", 2016-06-21 15:56:56 UTC], ["updated_at", 2016-06-21 15:56:56 UTC]]
  [1m[35m (5.6ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mAnswer Load (1.1ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."question_id" = $1 ORDER BY "answers"."id" DESC LIMIT $2[0m  [["question_id", 32], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mComment Load (0.6ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 77]]
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (73.69ms)
Completed 200 OK in 290ms (Views: 80.8ms | ActiveRecord: 41.0ms)


Started POST "/api/v1/comments" for ::1 at 2016-06-21 11:57:00 -0400
Processing by Api::V1::CommentsController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"sdagasdgsadg", "vote-count"=>0, "vote-score"=>0}, "relationships"=>{"answer"=>{"data"=>{"type"=>"answers", "id"=>"7"}}}, "type"=>"comments"}, "comment"=>{}}
Completed 500 Internal Server Error in 16ms (ActiveRecord: 0.0ms)


  
NoMethodError (undefined method `[]' for nil:NilClass):
  
app/controllers/api/v1/comments_controller.rb:12:in `create'
Started GET "/api/v1/questions/32" for ::1 at 2016-06-21 11:57:32 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"32"}
  [1m[36mQuestion Load (0.9ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 32], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.7ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 32]]
[active_model_serializers]   [1m[36mComment Load (0.6ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 7]]
[active_model_serializers]   [1m[36mComment Load (0.7ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 8]]
[active_model_serializers]   [1m[36mComment Load (0.9ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 63]]
[active_model_serializers]   [1m[36mComment Load (0.7ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 64]]
[active_model_serializers]   [1m[36mComment Load (0.6ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 65]]
[active_model_serializers]   [1m[36mComment Load (0.8ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 66]]
[active_model_serializers]   [1m[36mComment Load (0.7ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 67]]
[active_model_serializers]   [1m[36mComment Load (0.8ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 68]]
[active_model_serializers]   [1m[36mComment Load (1.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 69]]
[active_model_serializers]   [1m[36mComment Load (1.0ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 70]]
[active_model_serializers]   [1m[36mComment Load (0.6ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 71]]
[active_model_serializers]   [1m[36mComment Load (1.0ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 72]]
[active_model_serializers]   [1m[36mComment Load (0.6ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 73]]
[active_model_serializers]   [1m[36mComment Load (0.6ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 74]]
[active_model_serializers]   [1m[36mComment Load (0.6ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 75]]
[active_model_serializers]   [1m[36mComment Load (1.0ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 76]]
[active_model_serializers]   [1m[36mComment Load (0.6ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 77]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (2419.27ms)
Completed 200 OK in 2592ms (Views: 2416.2ms | ActiveRecord: 31.1ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-21 11:57:38 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"asddsg", "vote-count"=>0, "vote-score"=>0, "approved"=>true}, "question"=>{"data"=>{"id"=>"32", "attributes"=>{"content"=>"How did you learn programming?", "received-count"=>0}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (6.5ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 32], ["LIMIT", 1]]
  [1m[35m (1.0ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (1.1ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "asddsg"], ["question_id", 32], ["created_at", 2016-06-21 15:57:38 UTC], ["updated_at", 2016-06-21 15:57:38 UTC]]
  [1m[35m (56.5ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mAnswer Load (1.1ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."question_id" = $1 ORDER BY "answers"."id" DESC LIMIT $2[0m  [["question_id", 32], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mComment Load (0.6ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 78]]
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (86.29ms)
Completed 200 OK in 369ms (Views: 93.7ms | ActiveRecord: 66.9ms)


Started POST "/api/v1/comments" for ::1 at 2016-06-21 11:57:41 -0400
Processing by Api::V1::CommentsController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"adsgsdgasd", "vote-count"=>0, "vote-score"=>0}, "relationships"=>{"answer"=>{"data"=>{"type"=>"answers", "id"=>"7"}}}, "type"=>"comments"}, "comment"=>{}}
Completed 500 Internal Server Error in 55609ms (ActiveRecord: 0.0ms)


  
SystemExit (exit):
  
app/controllers/api/v1/comments_controller.rb:12:in `create'
Started GET "/api/v1/questions/32" for ::1 at 2016-06-21 11:58:40 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"32"}
  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 32], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (5.0ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 32]]
[active_model_serializers]   [1m[36mComment Load (0.6ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 7]]
[active_model_serializers]   [1m[36mComment Load (0.6ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 8]]
[active_model_serializers]   [1m[36mComment Load (1.0ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 63]]
[active_model_serializers]   [1m[36mComment Load (1.1ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 64]]
[active_model_serializers]   [1m[36mComment Load (0.6ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 65]]
[active_model_serializers]   [1m[36mComment Load (0.8ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 66]]
[active_model_serializers]   [1m[36mComment Load (0.8ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 67]]
[active_model_serializers]   [1m[36mComment Load (1.1ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 68]]
[active_model_serializers]   [1m[36mComment Load (1.0ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 69]]
[active_model_serializers]   [1m[36mComment Load (0.9ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 70]]
[active_model_serializers]   [1m[36mComment Load (0.6ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 71]]
[active_model_serializers]   [1m[36mComment Load (0.8ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 72]]
[active_model_serializers]   [1m[36mComment Load (0.9ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 73]]
[active_model_serializers]   [1m[36mComment Load (1.1ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 74]]
[active_model_serializers]   [1m[36mComment Load (1.0ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 75]]
[active_model_serializers]   [1m[36mComment Load (1.0ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 76]]
[active_model_serializers]   [1m[36mComment Load (1.0ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 77]]
[active_model_serializers]   [1m[36mComment Load (0.9ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 78]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (2613.29ms)
Completed 200 OK in 2767ms (Views: 2615.4ms | ActiveRecord: 21.4ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-21 11:58:46 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"sdagasgw4", "vote-count"=>0, "vote-score"=>0, "approved"=>true}, "question"=>{"data"=>{"id"=>"32", "attributes"=>{"content"=>"How did you learn programming?", "received-count"=>0}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 32], ["LIMIT", 1]]
  [1m[35m (0.7ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.9ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "sdagasgw4"], ["question_id", 32], ["created_at", 2016-06-21 15:58:46 UTC], ["updated_at", 2016-06-21 15:58:46 UTC]]
  [1m[35m (118.6ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mAnswer Load (1.0ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."question_id" = $1 ORDER BY "answers"."id" DESC LIMIT $2[0m  [["question_id", 32], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mComment Load (0.6ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 79]]
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (94.76ms)
Completed 200 OK in 455ms (Views: 105.4ms | ActiveRecord: 122.3ms)


Started POST "/api/v1/comments" for ::1 at 2016-06-21 11:58:49 -0400
Processing by Api::V1::CommentsController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"asdgr44rg", "vote-count"=>0, "vote-score"=>0}, "relationships"=>{"answer"=>{"data"=>{"type"=>"answers", "id"=>"7"}}}, "type"=>"comments"}, "comment"=>{}}
  [1m[36mAnswer Load (0.7ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."id" = $1 LIMIT $2[0m  [["id", 7], ["LIMIT", 1]]
  [1m[35m (0.8ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.9ms)[0m  [1m[32mINSERT INTO "comments" ("answer_id", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["answer_id", 7], ["content", "asdgr44rg"], ["created_at", 2016-06-21 15:58:49 UTC], ["updated_at", 2016-06-21 15:58:49 UTC]]
  [1m[35m (1.5ms)[0m  [1m[35mCOMMIT[0m
Completed 500 Internal Server Error in 294ms (ActiveRecord: 3.9ms)


  
NameError (undefined local variable or method `comment' for #<Api::V1::CommentsController:0x007f9bcca031a0>):
  
app/controllers/api/v1/comments_controller.rb:15:in `create'
Started GET "/api/v1/questions/32" for ::1 at 2016-06-21 11:59:35 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"32"}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 32], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (1.1ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 32]]
[active_model_serializers]   [1m[36mComment Load (0.9ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 7]]
[active_model_serializers]   [1m[36mComment Load (0.6ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 8]]
[active_model_serializers]   [1m[36mComment Load (0.7ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 63]]
[active_model_serializers]   [1m[36mComment Load (0.7ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 64]]
[active_model_serializers]   [1m[36mComment Load (1.4ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 65]]
[active_model_serializers]   [1m[36mComment Load (0.7ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 66]]
[active_model_serializers]   [1m[36mComment Load (0.7ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 67]]
[active_model_serializers]   [1m[36mComment Load (5.7ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 68]]
[active_model_serializers]   [1m[36mComment Load (0.8ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 69]]
[active_model_serializers]   [1m[36mComment Load (0.6ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 70]]
[active_model_serializers]   [1m[36mComment Load (0.6ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 71]]
[active_model_serializers]   [1m[36mComment Load (0.6ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 72]]
[active_model_serializers]   [1m[36mComment Load (0.7ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 73]]
[active_model_serializers]   [1m[36mComment Load (0.7ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 74]]
[active_model_serializers]   [1m[36mComment Load (0.6ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 75]]
[active_model_serializers]   [1m[36mComment Load (0.6ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 76]]
[active_model_serializers]   [1m[36mComment Load (0.6ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 77]]
[active_model_serializers]   [1m[36mComment Load (0.6ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 78]]
[active_model_serializers]   [1m[36mComment Load (2.1ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 79]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (2918.06ms)
Completed 200 OK in 3112ms (Views: 2919.5ms | ActiveRecord: 21.8ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-21 11:59:42 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"qwegw44", "vote-count"=>0, "vote-score"=>0, "approved"=>true}, "question"=>{"data"=>{"id"=>"32", "attributes"=>{"content"=>"How did you learn programming?", "received-count"=>0}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 32], ["LIMIT", 1]]
  [1m[35m (0.6ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (1.1ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "qwegw44"], ["question_id", 32], ["created_at", 2016-06-21 15:59:42 UTC], ["updated_at", 2016-06-21 15:59:42 UTC]]
  [1m[35m (24.1ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mAnswer Load (0.8ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."question_id" = $1 ORDER BY "answers"."id" DESC LIMIT $2[0m  [["question_id", 32], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mComment Load (0.7ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 80]]
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (82.95ms)
Completed 200 OK in 335ms (Views: 95.8ms | ActiveRecord: 28.2ms)


Started POST "/api/v1/comments" for ::1 at 2016-06-21 11:59:46 -0400
Processing by Api::V1::CommentsController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"qwefqewfeqwf", "vote-count"=>0, "vote-score"=>0}, "relationships"=>{"answer"=>{"data"=>{"type"=>"answers", "id"=>"7"}}}, "type"=>"comments"}, "comment"=>{}}
  [1m[36mAnswer Load (0.9ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."id" = $1 LIMIT $2[0m  [["id", 7], ["LIMIT", 1]]
  [1m[35m (0.5ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.7ms)[0m  [1m[32mINSERT INTO "comments" ("answer_id", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["answer_id", 7], ["content", "qwefqewfeqwf"], ["created_at", 2016-06-21 15:59:46 UTC], ["updated_at", 2016-06-21 15:59:46 UTC]]
  [1m[35m (3.2ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mComment Load (0.8ms)[0m  [1m[34mSELECT  "comments".* FROM "comments" WHERE "comments"."answer_id" = $1 ORDER BY "comments"."id" DESC LIMIT $2[0m  [["answer_id", 7], ["LIMIT", 1]]
[active_model_serializers] Rendered CommentSerializer with ActiveModelSerializers::Adapter::JsonApi (21.97ms)
Completed 200 OK in 190ms (Views: 33.6ms | ActiveRecord: 6.2ms)


Started GET "/api/v1/questions/32" for ::1 at 2016-06-21 11:59:55 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"32"}
  [1m[36mQuestion Load (0.9ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 32], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.8ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 32]]
[active_model_serializers]   [1m[36mComment Load (0.8ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 7]]
[active_model_serializers]   [1m[36mComment Load (1.1ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 8]]
[active_model_serializers]   [1m[36mComment Load (0.7ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 63]]
[active_model_serializers]   [1m[36mComment Load (0.6ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 64]]
[active_model_serializers]   [1m[36mComment Load (0.6ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 65]]
[active_model_serializers]   [1m[36mComment Load (0.6ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 66]]
[active_model_serializers]   [1m[36mComment Load (0.7ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 67]]
[active_model_serializers]   [1m[36mComment Load (0.8ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 68]]
[active_model_serializers]   [1m[36mComment Load (0.7ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 69]]
[active_model_serializers]   [1m[36mComment Load (0.6ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 70]]
[active_model_serializers]   [1m[36mComment Load (0.7ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 71]]
[active_model_serializers]   [1m[36mComment Load (0.6ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 72]]
[active_model_serializers]   [1m[36mComment Load (1.0ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 73]]
[active_model_serializers]   [1m[36mComment Load (0.6ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 74]]
[active_model_serializers]   [1m[36mComment Load (0.6ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 75]]
[active_model_serializers]   [1m[36mComment Load (0.9ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 76]]
[active_model_serializers]   [1m[36mComment Load (1.0ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 77]]
[active_model_serializers]   [1m[36mComment Load (0.7ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 78]]
[active_model_serializers]   [1m[36mComment Load (0.6ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 79]]
[active_model_serializers]   [1m[36mComment Load (0.6ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 80]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (2294.58ms)
Completed 200 OK in 2332ms (Views: 2291.4ms | ActiveRecord: 16.2ms)


Started POST "/api/v1/answers" for ::1 at 2016-06-21 11:59:59 -0400
Processing by Api::V1::AnswersController#create as JSON
  Parameters: {"data"=>{"attributes"=>{"content"=>"asgrrgr", "vote-count"=>0, "vote-score"=>0, "approved"=>true}, "question"=>{"data"=>{"id"=>"32", "attributes"=>{"content"=>"How did you learn programming?", "received-count"=>0}, "type"=>"questions"}}, "type"=>"answers"}, "answer"=>{}}
Unpermitted parameters: attributes, type
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 32], ["LIMIT", 1]]
  [1m[35m (0.7ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.8ms)[0m  [1m[32mINSERT INTO "answers" ("content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["content", "asgrrgr"], ["question_id", 32], ["created_at", 2016-06-21 15:59:59 UTC], ["updated_at", 2016-06-21 15:59:59 UTC]]
  [1m[35m (2.6ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mAnswer Load (1.0ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."question_id" = $1 ORDER BY "answers"."id" DESC LIMIT $2[0m  [["question_id", 32], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mComment Load (0.6ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 81]]
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (84.18ms)
Completed 200 OK in 285ms (Views: 91.7ms | ActiveRecord: 6.3ms)


Started GET "/api/v1/questions/32" for ::1 at 2016-06-21 12:53:02 -0400
  [1m[36mActiveRecord::SchemaMigration Load (0.7ms)[0m  [1m[34mSELECT "schema_migrations".* FROM "schema_migrations"[0m
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"32"}
  [1m[36mQuestion Load (0.9ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 32], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (21.8ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 32]]
[active_model_serializers]   [1m[36mComment Load (0.4ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 7]]
[active_model_serializers]   [1m[36mComment Load (0.3ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 8]]
[active_model_serializers]   [1m[36mComment Load (0.3ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 63]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 64]]
[active_model_serializers]   [1m[36mComment Load (0.1ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 65]]
[active_model_serializers]   [1m[36mComment Load (0.1ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 66]]
[active_model_serializers]   [1m[36mComment Load (0.1ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 67]]
[active_model_serializers]   [1m[36mComment Load (0.1ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 68]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 69]]
[active_model_serializers]   [1m[36mComment Load (0.1ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 70]]
[active_model_serializers]   [1m[36mComment Load (0.1ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 71]]
[active_model_serializers]   [1m[36mComment Load (0.1ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 72]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 73]]
[active_model_serializers]   [1m[36mComment Load (0.1ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 74]]
[active_model_serializers]   [1m[36mComment Load (0.1ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 75]]
[active_model_serializers]   [1m[36mComment Load (0.1ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 76]]
[active_model_serializers]   [1m[36mComment Load (0.1ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 77]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 78]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 79]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 80]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 81]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (155.24ms)
Completed 200 OK in 230ms (Views: 156.2ms | ActiveRecord: 37.8ms)


Started GET "/api/v1/questions/32" for ::1 at 2016-06-21 12:53:09 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"32"}
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 32], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.3ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 32]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 7]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 8]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 63]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 64]]
[active_model_serializers]   [1m[36mComment Load (0.1ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 65]]
[active_model_serializers]   [1m[36mComment Load (0.1ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 66]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 67]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 68]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 69]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 70]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 71]]
[active_model_serializers]   [1m[36mComment Load (0.3ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 72]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 73]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 74]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 75]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 76]]
[active_model_serializers]   [1m[36mComment Load (0.1ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 77]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 78]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 79]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 80]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 81]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (71.19ms)
Completed 200 OK in 73ms (Views: 67.5ms | ActiveRecord: 4.5ms)


Started GET "/api/v1/questions/32" for ::1 at 2016-06-21 12:53:12 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"32"}
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 32], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.3ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 32]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 7]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 8]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 63]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 64]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 65]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 66]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 67]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 68]]
[active_model_serializers]   [1m[36mComment Load (0.1ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 69]]
[active_model_serializers]   [1m[36mComment Load (0.1ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 70]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 71]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 72]]
[active_model_serializers]   [1m[36mComment Load (2.7ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 73]]
[active_model_serializers]   [1m[36mComment Load (0.3ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 74]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 75]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 76]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 77]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 78]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 79]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 80]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 81]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (66.8ms)
Completed 200 OK in 69ms (Views: 60.5ms | ActiveRecord: 7.2ms)


Started GET "/api/v1/questions/32" for ::1 at 2016-06-21 12:53:14 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"32"}
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 32], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.6ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 32]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 7]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 8]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 63]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 64]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 65]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 66]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 67]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 68]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 69]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 70]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 71]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 72]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 73]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 74]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 75]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 76]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 77]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 78]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 79]]
[active_model_serializers]   [1m[36mComment Load (0.3ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 80]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 81]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (67.05ms)
Completed 200 OK in 69ms (Views: 62.8ms | ActiveRecord: 5.1ms)


Started PATCH "/api/v1/questions/32" for ::1 at 2016-06-21 12:53:18 -0400
Processing by Api::V1::QuestionsController#update as JSON
  Parameters: {"data"=>{"id"=>"32", "attributes"=>{"content"=>"How did you learn programming?", "received-count"=>1}, "type"=>"questions"}, "id"=>"32", "question"=>{}}
Completed 500 Internal Server Error in 20771ms (ActiveRecord: 0.0ms)


  
SystemExit (exit):
  
app/controllers/api/v1/questions_controller.rb:12:in `update'
Started PATCH "/api/v1/questions/32" for ::1 at 2016-06-21 12:53:48 -0400
Processing by Api::V1::QuestionsController#update as JSON
  Parameters: {"data"=>{"id"=>"32", "attributes"=>{"content"=>"How did you learn programming?", "received-count"=>2}, "type"=>"questions"}, "id"=>"32", "question"=>{}}
Unpermitted parameter: content
  [1m[36mQuestion Load (0.5ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 32], ["LIMIT", 1]]
  [1m[35m (1.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.9ms)[0m  [1m[33mUPDATE "questions" SET "received_count" = $1, "updated_at" = $2 WHERE "questions"."id" = $3[0m  [["received_count", 2], ["updated_at", 2016-06-21 16:53:49 UTC], ["id", 32]]
  [1m[35m (78.2ms)[0m  [1m[35mCOMMIT[0m
[active_model_serializers]   [1m[36mAnswer Load (0.9ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 32]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (299.26ms)
Completed 200 OK in 501ms (Views: 310.7ms | ActiveRecord: 91.7ms)


Started GET "/api/v1/questions/32" for ::1 at 2016-06-21 12:54:08 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"32"}
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 32], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.9ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 32]]
[active_model_serializers]   [1m[36mComment Load (0.6ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 7]]
[active_model_serializers]   [1m[36mComment Load (0.5ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 8]]
[active_model_serializers]   [1m[36mComment Load (0.6ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 63]]
[active_model_serializers]   [1m[36mComment Load (0.9ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 64]]
[active_model_serializers]   [1m[36mComment Load (3.7ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 65]]
[active_model_serializers]   [1m[36mComment Load (0.5ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 66]]
[active_model_serializers]   [1m[36mComment Load (0.5ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 67]]
[active_model_serializers]   [1m[36mComment Load (0.5ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 68]]
[active_model_serializers]   [1m[36mComment Load (0.7ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 69]]
[active_model_serializers]   [1m[36mComment Load (4.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 70]]
[active_model_serializers]   [1m[36mComment Load (0.8ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 71]]
[active_model_serializers]   [1m[36mComment Load (0.5ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 72]]
[active_model_serializers]   [1m[36mComment Load (0.5ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 73]]
[active_model_serializers]   [1m[36mComment Load (0.5ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 74]]
[active_model_serializers]   [1m[36mComment Load (0.5ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 75]]
[active_model_serializers]   [1m[36mComment Load (0.5ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 76]]
[active_model_serializers]   [1m[36mComment Load (0.5ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 77]]
[active_model_serializers]   [1m[36mComment Load (0.5ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 78]]
[active_model_serializers]   [1m[36mComment Load (0.6ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 79]]
[active_model_serializers]   [1m[36mComment Load (0.5ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 80]]
[active_model_serializers]   [1m[36mComment Load (0.9ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 81]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (1911.77ms)
Completed 200 OK in 1943ms (Views: 1895.0ms | ActiveRecord: 24.8ms)


Started PATCH "/api/v1/questions/32" for ::1 at 2016-06-21 12:54:14 -0400
Processing by Api::V1::QuestionsController#update as JSON
  Parameters: {"data"=>{"id"=>"32", "attributes"=>{"content"=>"How did you learn programming?", "received-count"=>3}, "type"=>"questions"}, "id"=>"32", "question"=>{}}
Unpermitted parameter: content
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 32], ["LIMIT", 1]]
  [1m[35m (0.5ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.7ms)[0m  [1m[33mUPDATE "questions" SET "received_count" = $1, "updated_at" = $2 WHERE "questions"."id" = $3[0m  [["received_count", 3], ["updated_at", 2016-06-21 16:54:14 UTC], ["id", 32]]
  [1m[35m (2.7ms)[0m  [1m[35mCOMMIT[0m
[active_model_serializers]   [1m[36mAnswer Load (0.8ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 32]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (144.9ms)
Completed 200 OK in 222ms (Views: 154.4ms | ActiveRecord: 5.2ms)


Started GET "/api/v1/questions/32" for ::1 at 2016-06-21 12:55:00 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"32"}
  [1m[36mQuestion Load (4.1ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 32], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.7ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 32]]
[active_model_serializers]   [1m[36mComment Load (1.4ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 7]]
[active_model_serializers]   [1m[36mComment Load (1.1ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 8]]
[active_model_serializers]   [1m[36mComment Load (0.7ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 63]]
[active_model_serializers]   [1m[36mComment Load (1.0ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 64]]
[active_model_serializers]   [1m[36mComment Load (0.7ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 65]]
[active_model_serializers]   [1m[36mComment Load (0.5ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 66]]
[active_model_serializers]   [1m[36mComment Load (0.6ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 67]]
[active_model_serializers]   [1m[36mComment Load (0.6ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 68]]
[active_model_serializers]   [1m[36mComment Load (0.6ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 69]]
[active_model_serializers]   [1m[36mComment Load (0.9ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 70]]
[active_model_serializers]   [1m[36mComment Load (0.7ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 71]]
[active_model_serializers]   [1m[36mComment Load (1.0ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 72]]
[active_model_serializers]   [1m[36mComment Load (0.8ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 73]]
[active_model_serializers]   [1m[36mComment Load (0.6ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 74]]
[active_model_serializers]   [1m[36mComment Load (0.6ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 75]]
[active_model_serializers]   [1m[36mComment Load (0.6ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 76]]
[active_model_serializers]   [1m[36mComment Load (1.0ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 77]]
[active_model_serializers]   [1m[36mComment Load (1.0ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 78]]
[active_model_serializers]   [1m[36mComment Load (0.8ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 79]]
[active_model_serializers]   [1m[36mComment Load (0.6ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 80]]
[active_model_serializers]   [1m[36mComment Load (0.6ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 81]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (2311.76ms)
Completed 200 OK in 2340ms (Views: 2304.3ms | ActiveRecord: 21.1ms)


Started PATCH "/api/v1/questions/32" for ::1 at 2016-06-21 12:55:04 -0400
Processing by Api::V1::QuestionsController#update as JSON
  Parameters: {"data"=>{"id"=>"32", "attributes"=>{"content"=>"How did you learn programming?", "received-count"=>4}, "type"=>"questions"}, "id"=>"32", "question"=>{}}
Unpermitted parameter: content
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 32], ["LIMIT", 1]]
  [1m[35m (0.5ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.8ms)[0m  [1m[33mUPDATE "questions" SET "received_count" = $1, "updated_at" = $2 WHERE "questions"."id" = $3[0m  [["received_count", 4], ["updated_at", 2016-06-21 16:55:04 UTC], ["id", 32]]
  [1m[35m (2.8ms)[0m  [1m[35mCOMMIT[0m
[active_model_serializers]   [1m[36mAnswer Load (0.6ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 32]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (184.05ms)
Completed 200 OK in 286ms (Views: 206.5ms | ActiveRecord: 5.4ms)


Started GET "/api/v1/questions/32" for ::1 at 2016-06-21 12:55:06 -0400
Processing by Api::V1::QuestionsController#show as JSON
  Parameters: {"id"=>"32"}
  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 32], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.7ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 32]]
[active_model_serializers]   [1m[36mComment Load (0.7ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 7]]
[active_model_serializers]   [1m[36mComment Load (0.6ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 8]]
[active_model_serializers]   [1m[36mComment Load (1.0ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 63]]
[active_model_serializers]   [1m[36mComment Load (0.6ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 64]]
[active_model_serializers]   [1m[36mComment Load (0.6ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 65]]
[active_model_serializers]   [1m[36mComment Load (0.9ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 66]]
[active_model_serializers]   [1m[36mComment Load (0.8ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 67]]
[active_model_serializers]   [1m[36mComment Load (0.6ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 68]]
[active_model_serializers]   [1m[36mComment Load (0.6ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 69]]
[active_model_serializers]   [1m[36mComment Load (0.9ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 70]]
[active_model_serializers]   [1m[36mComment Load (0.6ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 71]]
[active_model_serializers]   [1m[36mComment Load (0.6ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 72]]
[active_model_serializers]   [1m[36mComment Load (0.6ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 73]]
[active_model_serializers]   [1m[36mComment Load (0.6ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 74]]
[active_model_serializers]   [1m[36mComment Load (1.0ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 75]]
[active_model_serializers]   [1m[36mComment Load (0.6ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 76]]
[active_model_serializers]   [1m[36mComment Load (0.7ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 77]]
[active_model_serializers]   [1m[36mComment Load (0.7ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 78]]
[active_model_serializers]   [1m[36mComment Load (0.9ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 79]]
[active_model_serializers]   [1m[36mComment Load (0.6ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 80]]
[active_model_serializers]   [1m[36mComment Load (0.6ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 81]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (2101.69ms)
Completed 200 OK in 2128ms (Views: 2098.2ms | ActiveRecord: 16.0ms)


Started GET "/" for ::1 at 2016-07-16 22:47:39 -0400
  
ActiveRecord::NoDatabaseError (FATAL:  database "QIQAPI_development" does not exist
):
  
activerecord (5.0.0.rc1) lib/active_record/connection_adapters/postgresql_adapter.rb:675:in `rescue in connect'
activerecord (5.0.0.rc1) lib/active_record/connection_adapters/postgresql_adapter.rb:671:in `connect'
activerecord (5.0.0.rc1) lib/active_record/connection_adapters/postgresql_adapter.rb:217:in `initialize'
activerecord (5.0.0.rc1) lib/active_record/connection_adapters/postgresql_adapter.rb:37:in `new'
activerecord (5.0.0.rc1) lib/active_record/connection_adapters/postgresql_adapter.rb:37:in `postgresql_connection'
activerecord (5.0.0.rc1) lib/active_record/connection_adapters/abstract/connection_pool.rb:721:in `new_connection'
activerecord (5.0.0.rc1) lib/active_record/connection_adapters/abstract/connection_pool.rb:765:in `checkout_new_connection'
activerecord (5.0.0.rc1) lib/active_record/connection_adapters/abstract/connection_pool.rb:744:in `try_to_checkout_new_connection'
activerecord (5.0.0.rc1) lib/active_record/connection_adapters/abstract/connection_pool.rb:705:in `acquire_connection'
activerecord (5.0.0.rc1) lib/active_record/connection_adapters/abstract/connection_pool.rb:501:in `checkout'
activerecord (5.0.0.rc1) lib/active_record/connection_adapters/abstract/connection_pool.rb:364:in `connection'
activerecord (5.0.0.rc1) lib/active_record/connection_adapters/abstract/connection_pool.rb:877:in `retrieve_connection'
activerecord (5.0.0.rc1) lib/active_record/connection_handling.rb:128:in `retrieve_connection'
activerecord (5.0.0.rc1) lib/active_record/connection_handling.rb:91:in `connection'
activerecord (5.0.0.rc1) lib/active_record/migration.rb:558:in `connection'
activerecord (5.0.0.rc1) lib/active_record/migration.rb:545:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/callbacks.rb:38:in `block in call'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:97:in `__run_callbacks__'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:750:in `_run_call_callbacks'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:90:in `run_callbacks'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/callbacks.rb:36:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/remote_ip.rb:79:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/debug_exceptions.rb:49:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/show_exceptions.rb:31:in `call'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:36:in `call_app'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:24:in `block in call'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:70:in `block in tagged'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:26:in `tagged'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:70:in `tagged'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:24:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/request_id.rb:24:in `call'
rack (2.0.0.rc1) lib/rack/runtime.rb:22:in `call'
activesupport (5.0.0.rc1) lib/active_support/cache/strategy/local_cache_middleware.rb:28:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/static.rb:136:in `call'
rack (2.0.0.rc1) lib/rack/sendfile.rb:111:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
railties (5.0.0.rc1) lib/rails/engine.rb:522:in `call'
puma (3.4.0) lib/puma/configuration.rb:224:in `call'
puma (3.4.0) lib/puma/server.rb:569:in `handle_request'
puma (3.4.0) lib/puma/server.rb:406:in `process_client'
puma (3.4.0) lib/puma/server.rb:271:in `block in run'
puma (3.4.0) lib/puma/thread_pool.rb:114:in `block in spawn_thread'
Started GET "/" for ::1 at 2016-07-16 22:52:45 -0400
  
ActiveRecord::NoDatabaseError (FATAL:  database "QIQAPI_development" does not exist
):
  
activerecord (5.0.0.rc1) lib/active_record/connection_adapters/postgresql_adapter.rb:675:in `rescue in connect'
activerecord (5.0.0.rc1) lib/active_record/connection_adapters/postgresql_adapter.rb:671:in `connect'
activerecord (5.0.0.rc1) lib/active_record/connection_adapters/postgresql_adapter.rb:217:in `initialize'
activerecord (5.0.0.rc1) lib/active_record/connection_adapters/postgresql_adapter.rb:37:in `new'
activerecord (5.0.0.rc1) lib/active_record/connection_adapters/postgresql_adapter.rb:37:in `postgresql_connection'
activerecord (5.0.0.rc1) lib/active_record/connection_adapters/abstract/connection_pool.rb:721:in `new_connection'
activerecord (5.0.0.rc1) lib/active_record/connection_adapters/abstract/connection_pool.rb:765:in `checkout_new_connection'
activerecord (5.0.0.rc1) lib/active_record/connection_adapters/abstract/connection_pool.rb:744:in `try_to_checkout_new_connection'
activerecord (5.0.0.rc1) lib/active_record/connection_adapters/abstract/connection_pool.rb:705:in `acquire_connection'
activerecord (5.0.0.rc1) lib/active_record/connection_adapters/abstract/connection_pool.rb:501:in `checkout'
activerecord (5.0.0.rc1) lib/active_record/connection_adapters/abstract/connection_pool.rb:364:in `connection'
activerecord (5.0.0.rc1) lib/active_record/connection_adapters/abstract/connection_pool.rb:877:in `retrieve_connection'
activerecord (5.0.0.rc1) lib/active_record/connection_handling.rb:128:in `retrieve_connection'
activerecord (5.0.0.rc1) lib/active_record/connection_handling.rb:91:in `connection'
activerecord (5.0.0.rc1) lib/active_record/migration.rb:558:in `connection'
activerecord (5.0.0.rc1) lib/active_record/migration.rb:545:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/callbacks.rb:38:in `block in call'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:97:in `__run_callbacks__'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:750:in `_run_call_callbacks'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:90:in `run_callbacks'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/callbacks.rb:36:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/remote_ip.rb:79:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/debug_exceptions.rb:49:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/show_exceptions.rb:31:in `call'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:36:in `call_app'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:24:in `block in call'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:70:in `block in tagged'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:26:in `tagged'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:70:in `tagged'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:24:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/request_id.rb:24:in `call'
rack (2.0.0.rc1) lib/rack/runtime.rb:22:in `call'
activesupport (5.0.0.rc1) lib/active_support/cache/strategy/local_cache_middleware.rb:28:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/static.rb:136:in `call'
rack (2.0.0.rc1) lib/rack/sendfile.rb:111:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
railties (5.0.0.rc1) lib/rails/engine.rb:522:in `call'
puma (3.4.0) lib/puma/configuration.rb:224:in `call'
puma (3.4.0) lib/puma/server.rb:569:in `handle_request'
puma (3.4.0) lib/puma/server.rb:406:in `process_client'
puma (3.4.0) lib/puma/server.rb:271:in `block in run'
puma (3.4.0) lib/puma/thread_pool.rb:114:in `block in spawn_thread'
  [1m[35m (11.5ms)[0m  [1m[35mCREATE TABLE "schema_migrations" ("version" character varying PRIMARY KEY)[0m
  [1m[35m (5.2ms)[0m  [1m[35mCREATE TABLE "ar_internal_metadata" ("key" character varying PRIMARY KEY, "value" character varying, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  [1m[35m (0.3ms)[0m  [1m[34mSELECT pg_try_advisory_lock(7064053580037655320);[0m
  [1m[36mActiveRecord::SchemaMigration Load (0.6ms)[0m  [1m[34mSELECT "schema_migrations".* FROM "schema_migrations"[0m
Migrating to CreateQuestionsTable (20160615195122)
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35m (6.0ms)[0m  [1m[35mCREATE TABLE "questions" ("id" serial primary key, "content" character varying, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  [1m[35mSQL (0.6ms)[0m  [1m[32mINSERT INTO "schema_migrations" ("version") VALUES ($1) RETURNING "version"[0m  [["version", "20160615195122"]]
  [1m[35m (1.8ms)[0m  [1m[35mCOMMIT[0m
Migrating to CreateAnswers (20160615195241)
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35m (5.1ms)[0m  [1m[35mCREATE TABLE "answers" ("id" serial primary key, "vote_score" integer, "vote_count" integer, "content" character varying, "question_id" integer)[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "schema_migrations" ("version") VALUES ($1) RETURNING "version"[0m  [["version", "20160615195241"]]
  [1m[35m (0.8ms)[0m  [1m[35mCOMMIT[0m
Migrating to AddTimeStampsColumnToAnswer (20160615195717)
  [1m[35m (0.3ms)[0m  [1m[35mBEGIN[0m
  [1m[35m (25.8ms)[0m  [1m[35mALTER TABLE "answers" ADD "created_at" timestamp[0m
  [1m[35m (0.3ms)[0m  [1m[35mALTER TABLE "answers" ADD "updated_at" timestamp[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "schema_migrations" ("version") VALUES ($1) RETURNING "version"[0m  [["version", "20160615195717"]]
  [1m[35m (0.6ms)[0m  [1m[35mCOMMIT[0m
Migrating to AddDefaultsToVoteVariables (20160617182704)
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35m (0.5ms)[0m  [1m[35mALTER TABLE "answers" ALTER COLUMN "vote_score" TYPE integer[0m
  [1m[35m (0.6ms)[0m  [1m[35mALTER TABLE "answers" ALTER COLUMN "vote_score" SET DEFAULT 0[0m
  [1m[35m (0.3ms)[0m  [1m[35mALTER TABLE "answers" ALTER COLUMN "vote_count" TYPE integer[0m
  [1m[35m (0.3ms)[0m  [1m[35mALTER TABLE "answers" ALTER COLUMN "vote_count" SET DEFAULT 0[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "schema_migrations" ("version") VALUES ($1) RETURNING "version"[0m  [["version", "20160617182704"]]
  [1m[35m (0.6ms)[0m  [1m[35mCOMMIT[0m
Migrating to AddApprovedColumnToAnswer (20160620225649)
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35m (7.1ms)[0m  [1m[35mALTER TABLE "answers" ADD "approved" boolean DEFAULT 't'[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "schema_migrations" ("version") VALUES ($1) RETURNING "version"[0m  [["version", "20160620225649"]]
  [1m[35m (1.8ms)[0m  [1m[35mCOMMIT[0m
Migrating to AddReceivedCountToQuestions (20160621014846)
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35m (6.2ms)[0m  [1m[35mALTER TABLE "questions" ADD "received_count" integer DEFAULT 0[0m
  [1m[35mSQL (0.6ms)[0m  [1m[32mINSERT INTO "schema_migrations" ("version") VALUES ($1) RETURNING "version"[0m  [["version", "20160621014846"]]
  [1m[35m (1.4ms)[0m  [1m[35mCOMMIT[0m
Migrating to CreateCommentsTable (20160621133422)
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35m (6.2ms)[0m  [1m[35mCREATE TABLE "comments" ("id" serial primary key, "answer_id" integer, "content" character varying, "vote_count" integer, "vote_score" integer, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "schema_migrations" ("version") VALUES ($1) RETURNING "version"[0m  [["version", "20160621133422"]]
  [1m[35m (0.7ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mActiveRecord::InternalMetadata Load (0.5ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" ORDER BY "ar_internal_metadata"."key" ASC LIMIT $1[0m  [["LIMIT", 1]]
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.5ms)[0m  [1m[32mINSERT INTO "ar_internal_metadata" ("key", "value", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "key"[0m  [["key", "environment"], ["value", "development"], ["created_at", 2016-07-17 02:53:37 UTC], ["updated_at", 2016-07-17 02:53:37 UTC]]
  [1m[35m (0.6ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.3ms)[0m  [1m[34mSELECT pg_advisory_unlock(7064053580037655320)[0m
  [1m[36mActiveRecord::SchemaMigration Load (0.3ms)[0m  [1m[34mSELECT "schema_migrations".* FROM "schema_migrations"[0m
  [1m[35m (5.9ms)[0m  [1m[34mSELECT t2.oid::regclass::text AS to_table, a1.attname AS column, a2.attname AS primary_key, c.conname AS name, c.confupdtype AS on_update, c.confdeltype AS on_delete
FROM pg_constraint c
JOIN pg_class t1 ON c.conrelid = t1.oid
JOIN pg_class t2 ON c.confrelid = t2.oid
JOIN pg_attribute a1 ON a1.attnum = c.conkey[1] AND a1.attrelid = t1.oid
JOIN pg_attribute a2 ON a2.attnum = c.confkey[1] AND a2.attrelid = t2.oid
JOIN pg_namespace t3 ON c.connamespace = t3.oid
WHERE c.contype = 'f'
  AND t1.relname = 'answers'
  AND t3.nspname = ANY (current_schemas(false))
ORDER BY c.conname
[0m
  [1m[35m (4.7ms)[0m  [1m[34mSELECT t2.oid::regclass::text AS to_table, a1.attname AS column, a2.attname AS primary_key, c.conname AS name, c.confupdtype AS on_update, c.confdeltype AS on_delete
FROM pg_constraint c
JOIN pg_class t1 ON c.conrelid = t1.oid
JOIN pg_class t2 ON c.confrelid = t2.oid
JOIN pg_attribute a1 ON a1.attnum = c.conkey[1] AND a1.attrelid = t1.oid
JOIN pg_attribute a2 ON a2.attnum = c.confkey[1] AND a2.attrelid = t2.oid
JOIN pg_namespace t3 ON c.connamespace = t3.oid
WHERE c.contype = 'f'
  AND t1.relname = 'comments'
  AND t3.nspname = ANY (current_schemas(false))
ORDER BY c.conname
[0m
  [1m[35m (4.6ms)[0m  [1m[34mSELECT t2.oid::regclass::text AS to_table, a1.attname AS column, a2.attname AS primary_key, c.conname AS name, c.confupdtype AS on_update, c.confdeltype AS on_delete
FROM pg_constraint c
JOIN pg_class t1 ON c.conrelid = t1.oid
JOIN pg_class t2 ON c.confrelid = t2.oid
JOIN pg_attribute a1 ON a1.attnum = c.conkey[1] AND a1.attrelid = t1.oid
JOIN pg_attribute a2 ON a2.attnum = c.confkey[1] AND a2.attrelid = t2.oid
JOIN pg_namespace t3 ON c.connamespace = t3.oid
WHERE c.contype = 'f'
  AND t1.relname = 'questions'
  AND t3.nspname = ANY (current_schemas(false))
ORDER BY c.conname
[0m
  [1m[36mActiveRecord::SchemaMigration Load (0.8ms)[0m  [1m[34mSELECT "schema_migrations".* FROM "schema_migrations"[0m
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (1.3ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "What are you looking for in terms of career development?"], ["created_at", 2016-07-17 02:53:43 UTC], ["updated_at", 2016-07-17 02:53:43 UTC]]
  [1m[35m (0.8ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.5ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "How many ways can you center a div?"], ["created_at", 2016-07-17 02:53:43 UTC], ["updated_at", 2016-07-17 02:53:43 UTC]]
  [1m[35m (0.6ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "What are your strengths and weaknesses?"], ["created_at", 2016-07-17 02:53:43 UTC], ["updated_at", 2016-07-17 02:53:43 UTC]]
  [1m[35m (0.6ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "Explain the process of web development to a middle school kid."], ["created_at", 2016-07-17 02:53:43 UTC], ["updated_at", 2016-07-17 02:53:43 UTC]]
  [1m[35m (0.6ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "What did you like least about your last job?"], ["created_at", 2016-07-17 02:53:43 UTC], ["updated_at", 2016-07-17 02:53:43 UTC]]
  [1m[35m (0.6ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "How does the web work?"], ["created_at", 2016-07-17 02:53:43 UTC], ["updated_at", 2016-07-17 02:53:43 UTC]]
  [1m[35m (0.6ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "What is function hoisting in JavaScript?"], ["created_at", 2016-07-17 02:53:43 UTC], ["updated_at", 2016-07-17 02:53:43 UTC]]
  [1m[35m (0.6ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "How did you learn programming?"], ["created_at", 2016-07-17 02:53:43 UTC], ["updated_at", 2016-07-17 02:53:43 UTC]]
  [1m[35m (0.6ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "What is a closure?"], ["created_at", 2016-07-17 02:53:43 UTC], ["updated_at", 2016-07-17 02:53:43 UTC]]
  [1m[35m (0.6ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "How did you learn web development?"], ["created_at", 2016-07-17 02:53:43 UTC], ["updated_at", 2016-07-17 02:53:43 UTC]]
  [1m[35m (0.6ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "Describe a time when you were able to improve upon the design that was originally suggested?"], ["created_at", 2016-07-17 02:53:43 UTC], ["updated_at", 2016-07-17 02:53:43 UTC]]
  [1m[35m (0.6ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "So tell me about yourself."], ["created_at", 2016-07-17 02:53:43 UTC], ["updated_at", 2016-07-17 02:53:43 UTC]]
  [1m[35m (4.6ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "Where would you like to be in your career five years from now?"], ["created_at", 2016-07-17 02:53:43 UTC], ["updated_at", 2016-07-17 02:53:43 UTC]]
  [1m[35m (0.6ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "Why do you want to work with us?"], ["created_at", 2016-07-17 02:53:43 UTC], ["updated_at", 2016-07-17 02:53:43 UTC]]
  [1m[35m (0.6ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "Can you name two programming paradigms important for JavaScript app developers?"], ["created_at", 2016-07-17 02:53:43 UTC], ["updated_at", 2016-07-17 02:53:43 UTC]]
  [1m[35m (0.6ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "Tell me about your long-term goals."], ["created_at", 2016-07-17 02:53:43 UTC], ["updated_at", 2016-07-17 02:53:43 UTC]]
  [1m[35m (0.6ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "Tell me about the most recent project you worked on. What were your responsibilities?"], ["created_at", 2016-07-17 02:53:43 UTC], ["updated_at", 2016-07-17 02:53:43 UTC]]
  [1m[35m (0.6ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "What are your short-term goals."], ["created_at", 2016-07-17 02:53:43 UTC], ["updated_at", 2016-07-17 02:53:43 UTC]]
  [1m[35m (0.8ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "Do you have any questions for me?"], ["created_at", 2016-07-17 02:53:43 UTC], ["updated_at", 2016-07-17 02:53:43 UTC]]
  [1m[35m (2.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "Please walk me through one of the projects on your resume."], ["created_at", 2016-07-17 02:53:43 UTC], ["updated_at", 2016-07-17 02:53:43 UTC]]
  [1m[35m (0.5ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "What is the difference between classical inheritance and prototypal inheritance? "], ["created_at", 2016-07-17 02:53:43 UTC], ["updated_at", 2016-07-17 02:53:43 UTC]]
  [1m[35m (0.6ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "Can you tell me about a challenge you've faced at work and how you got through it?"], ["created_at", 2016-07-17 02:53:43 UTC], ["updated_at", 2016-07-17 02:53:43 UTC]]
  [1m[35m (0.6ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "Explain a polymorphic association?"], ["created_at", 2016-07-17 02:53:43 UTC], ["updated_at", 2016-07-17 02:53:43 UTC]]
  [1m[35m (0.6ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "Why do you want to be a web developer?"], ["created_at", 2016-07-17 02:53:43 UTC], ["updated_at", 2016-07-17 02:53:43 UTC]]
  [1m[35m (2.7ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "Describe your production deployment process?"], ["created_at", 2016-07-17 02:53:43 UTC], ["updated_at", 2016-07-17 02:53:43 UTC]]
  [1m[35m (0.6ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "Why do you want to work for us?"], ["created_at", 2016-07-17 02:53:43 UTC], ["updated_at", 2016-07-17 02:53:43 UTC]]
  [1m[35m (0.6ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "How would you declare and use a constructor in Ruby?"], ["created_at", 2016-07-17 02:53:43 UTC], ["updated_at", 2016-07-17 02:53:43 UTC]]
  [1m[35m (0.7ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "Do you have any questions for me?"], ["created_at", 2016-07-17 02:53:43 UTC], ["updated_at", 2016-07-17 02:53:43 UTC]]
  [1m[35m (0.5ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "How do you evaluate success?"], ["created_at", 2016-07-17 02:53:43 UTC], ["updated_at", 2016-07-17 02:53:43 UTC]]
  [1m[35m (0.5ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "How would you describe your work style?"], ["created_at", 2016-07-17 02:53:43 UTC], ["updated_at", 2016-07-17 02:53:43 UTC]]
  [1m[35m (0.5ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.8ms)[0m  [1m[32mINSERT INTO "answers" ("vote_score", "vote_count", "content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["vote_score", 15], ["vote_count", 20], ["content", "Three, and more than you'd expect!\n  <br>\n  You could center a div horizontally, vertically, or both and there are\n  a ton of ways to do them each. It also depends on what you're trying to\n  center. The most common way I do it is using the margins. If you set\n    a div's margin to 0 auto, to will automatically get the width of the\n    client's screen and use that information to center the div.\n  <br>\n  If I had text within a div, I wold use the text-align: center css\n  attribute on the div."], ["question_id", 2], ["created_at", 2016-07-17 02:53:43 UTC], ["updated_at", 2016-07-17 02:53:43 UTC]]
  [1m[35m (0.8ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "answers" ("vote_score", "vote_count", "content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["vote_score", -1], ["vote_count", 7], ["content", "<p>Just use margin dude.</p>"], ["question_id", 2], ["created_at", 2016-07-17 02:53:43 UTC], ["updated_at", 2016-07-17 02:53:43 UTC]]
  [1m[35m (0.6ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "answers" ("vote_score", "vote_count", "content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["vote_score", 2], ["vote_count", 2], ["content", "You know when you write notes and pass them to Suzie from\n  down the street? That's kind of what I do. Websites are like notes\n  you want your friends to read. For them to read your notes, you\n  need to also give them the note right? Well that is what the Internet\n  does for you. It sends the websites to the people who want to read\n  them.\n  <br>\n  The best part is, you know how you don't want Ms. Robinson to see\n  you pass that note? It's like that with the Internet too. There's\n  ways of keeping the visits to your website secret!"], ["question_id", 4], ["created_at", 2016-07-17 02:53:43 UTC], ["updated_at", 2016-07-17 02:53:43 UTC]]
  [1m[35m (0.6ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "answers" ("vote_score", "vote_count", "content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["vote_score", -2], ["vote_count", 4], ["content", "Web development is like, you know, creating front end\n  presentations of backend APIs using asynchronious requests."], ["question_id", 4], ["created_at", 2016-07-17 02:53:43 UTC], ["updated_at", 2016-07-17 02:53:43 UTC]]
  [1m[35m (0.6ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "How does the web work?"], ["created_at", 2016-07-17 02:53:43 UTC], ["updated_at", 2016-07-17 02:53:43 UTC]]
  [1m[35m (0.6ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "answers" ("vote_score", "vote_count", "content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["vote_score", -2], ["vote_count", 3], ["content", "It's a series of tubes."], ["question_id", 31], ["created_at", 2016-07-17 02:53:43 UTC], ["updated_at", 2016-07-17 02:53:43 UTC]]
  [1m[35m (0.6ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "answers" ("vote_score", "vote_count", "content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["vote_score", 5], ["vote_count", 7], ["content", "The Internet has a technical side and a social side. There's the\n  infrastructure, like routers, cables, satelites, ISPs, servers,\n  and website code, and there are the users who participate in the\n  Internet by creating content for it's applications and browsing\n  the sites.\n  <br>\n  I imagine you guys are interested in the technical side though\n  right? (Yes)\n  <br>\n  In short, I'd say it's a communication network designed\n  to deliver messages between computers. One of the most interesting\n  things about it, I think, is that in the end, it really is a\n  bunch of cables! Some run under the oceans, others go through\n  mountains and under forests. Some signals travel through space! All\n  the code we write goes through those cables, I think that's pretty\n  amazing!"], ["question_id", 31], ["created_at", 2016-07-17 02:53:43 UTC], ["updated_at", 2016-07-17 02:53:43 UTC]]
  [1m[35m (0.6ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "questions" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["content", "How did you learn programming?"], ["created_at", 2016-07-17 02:53:43 UTC], ["updated_at", 2016-07-17 02:53:43 UTC]]
  [1m[35m (0.6ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "answers" ("vote_score", "vote_count", "content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["vote_score", -3], ["vote_count", 4], ["content", "I just started Googling it you know, and I liked doing it so\n  I ended up trying to do it professionally."], ["question_id", 32], ["created_at", 2016-07-17 02:53:43 UTC], ["updated_at", 2016-07-17 02:53:43 UTC]]
  [1m[35m (0.6ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "answers" ("vote_score", "vote_count", "content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["vote_score", -3], ["vote_count", 4], ["content", "For me, it started back in 2011 when I was doing social science\n  at Stockholm University. The creation of communities had become a\n  passion of mine so I was exploring ways of finding data on\n  social networks. The Internet was the obvious place to look so I\n  found myself writing Python scripts to build simple web scrapers and\n  spiders.\n  <br>\n  It was exciting, I discovered coding makes me happy not just for\n  the results it creates but because I like the way it looks. Solving\n  problems is interesting."], ["question_id", 32], ["created_at", 2016-07-17 02:53:43 UTC], ["updated_at", 2016-07-17 02:53:43 UTC]]
  [1m[35m (0.6ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.7ms)[0m  [1m[32mINSERT INTO "comments" ("answer_id", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["answer_id", 8], ["content", "I agree."], ["created_at", 2016-07-17 02:53:43 UTC], ["updated_at", 2016-07-17 02:53:43 UTC]]
  [1m[35m (0.7ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "comments" ("answer_id", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["answer_id", 8], ["content", "I disagree."], ["created_at", 2016-07-17 02:53:43 UTC], ["updated_at", 2016-07-17 02:53:43 UTC]]
  [1m[35m (0.6ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "comments" ("answer_id", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["answer_id", 8], ["content", "I'm undecided."], ["created_at", 2016-07-17 02:53:43 UTC], ["updated_at", 2016-07-17 02:53:43 UTC]]
  [1m[35m (0.5ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "comments" ("answer_id", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["answer_id", 8], ["content", "I don't care."], ["created_at", 2016-07-17 02:53:43 UTC], ["updated_at", 2016-07-17 02:53:43 UTC]]
  [1m[35m (0.5ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "answers" ("vote_score", "vote_count", "content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["vote_score", -1], ["vote_count", 6], ["content", "For the best possible opportunity"], ["question_id", 1], ["created_at", 2016-07-17 02:53:43 UTC], ["updated_at", 2016-07-17 02:53:43 UTC]]
  [1m[35m (0.6ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "answers" ("vote_score", "vote_count", "content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["vote_score", 7], ["vote_count", 9], ["content", "I am looking to develop my ability to handle production deployments and ability to communicate with a computer program through algorithms and other functions I have learned at school and will learn in my next job"], ["question_id", 1], ["created_at", 2016-07-17 02:53:43 UTC], ["updated_at", 2016-07-17 02:53:43 UTC]]
  [1m[35m (6.7ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "answers" ("vote_score", "vote_count", "content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["vote_score", 5], ["vote_count", 12], ["content", "Working with a big group of people, as a programmer I can usually figure out the problem if I keep hacking it on my own but it becomes a burden for me when multiple people join in with me."], ["question_id", 3], ["created_at", 2016-07-17 02:53:43 UTC], ["updated_at", 2016-07-17 02:53:43 UTC]]
  [1m[35m (0.6ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "answers" ("vote_score", "vote_count", "content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["vote_score", 3], ["vote_count", 5], ["content", "I would definitely say that my strength would be sitting in front of my computer and weakness in front of an interviewer."], ["question_id", 3], ["created_at", 2016-07-17 02:53:43 UTC], ["updated_at", 2016-07-17 02:53:43 UTC]]
  [1m[35m (0.6ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "answers" ("vote_score", "vote_count", "content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["vote_score", 5], ["vote_count", 7], ["content", "The energy of the people around me. I did not feel any real passion in their work which affected me deeply and prompted me to change courses."], ["question_id", 5], ["created_at", 2016-07-17 02:53:43 UTC], ["updated_at", 2016-07-17 02:53:43 UTC]]
  [1m[35m (0.6ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "answers" ("vote_score", "vote_count", "content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["vote_score", 8], ["vote_count", 11], ["content", "I felt that there was a lot of politics and that your voice or position within the company was not reflective of the hard work and level competence I brought to the table."], ["question_id", 5], ["created_at", 2016-07-17 02:53:43 UTC], ["updated_at", 2016-07-17 02:53:43 UTC]]
  [1m[35m (0.6ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "answers" ("vote_score", "vote_count", "content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["vote_score", 6], ["vote_count", 7], ["content", "Hoisting is JavaScript's default behavior of moving all declarations to the top of the current scope (to the top of the current script or the current function)."], ["question_id", 7], ["created_at", 2016-07-17 02:53:43 UTC], ["updated_at", 2016-07-17 02:53:43 UTC]]
  [1m[35m (0.8ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "answers" ("vote_score", "vote_count", "content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["vote_score", -2], ["vote_count", 3], ["content", "I beleive the variables in JavaScript are assigned on a first come first serve basis?"], ["question_id", 7], ["created_at", 2016-07-17 02:53:43 UTC], ["updated_at", 2016-07-17 02:53:43 UTC]]
  [1m[35m (0.7ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.5ms)[0m  [1m[32mINSERT INTO "answers" ("vote_score", "vote_count", "content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["vote_score", 7], ["vote_count", 8], ["content", "When functions in JavaScript execute, they use the same scope chain that was in effect when they were created. This means that even after the outer function has returned, the inner function still has access to the outer function's variables."], ["question_id", 9], ["created_at", 2016-07-17 02:53:43 UTC], ["updated_at", 2016-07-17 02:53:43 UTC]]
  [1m[35m (0.7ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "answers" ("vote_score", "vote_count", "content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["vote_score", -2], ["vote_count", 9], ["content", "The end of a project. Usually involves closing the books and the servers after deployment."], ["question_id", 9], ["created_at", 2016-07-17 02:53:43 UTC], ["updated_at", 2016-07-17 02:53:43 UTC]]
  [1m[35m (0.6ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "answers" ("vote_score", "vote_count", "content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["vote_score", 4], ["vote_count", 7], ["content", "Refactoring the code that we had previously written for our app using service and adapters."], ["question_id", 11], ["created_at", 2016-07-17 02:53:43 UTC], ["updated_at", 2016-07-17 02:53:43 UTC]]
  [1m[35m (0.6ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "answers" ("vote_score", "vote_count", "content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["vote_score", 4], ["vote_count", 7], ["content", "That would definitely involve the latest group project where we went about refactoring our app using services and adapters. Great"], ["question_id", 11], ["created_at", 2016-07-17 02:53:43 UTC], ["updated_at", 2016-07-17 02:53:43 UTC]]
  [1m[35m (0.6ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "answers" ("vote_score", "vote_count", "content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["vote_score", 8], ["vote_count", 10], ["content", "I would love to be implementing what I have learned in those previous five years by giving back to my company in a senior position."], ["question_id", 13], ["created_at", 2016-07-17 02:53:43 UTC], ["updated_at", 2016-07-17 02:53:43 UTC]]
  [1m[35m (0.6ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "answers" ("vote_score", "vote_count", "content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["vote_score", 3], ["vote_count", 6], ["content", "I want to explore management training opportunities and also learn the finer points of this industry so I can eventually become  a company leader."], ["question_id", 13], ["created_at", 2016-07-17 02:53:43 UTC], ["updated_at", 2016-07-17 02:53:43 UTC]]
  [1m[35m (0.9ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "answers" ("vote_score", "vote_count", "content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["vote_score", 3], ["vote_count", 7], ["content", "Prototypal inheritance (also: prototypes, OLOO). Functional programm (also: closures, first class functions, lambdas)."], ["question_id", 15], ["created_at", 2016-07-17 02:53:43 UTC], ["updated_at", 2016-07-17 02:53:43 UTC]]
  [1m[35m (0.7ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "answers" ("vote_score", "vote_count", "content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["vote_score", -2], ["vote_count", 11], ["content", "Is that a new syntax part of ES7"], ["question_id", 15], ["created_at", 2016-07-17 02:53:43 UTC], ["updated_at", 2016-07-17 02:53:43 UTC]]
  [1m[35m (1.7ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "answers" ("vote_score", "vote_count", "content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["vote_score", 7], ["vote_count", 7], ["content", "JavaScript is a multi-paradigm language, supporting imperative/procedural programming along with OOP (Object-Oriented Programming) and functional programming. JavaScript supports OOP with prototypal inheritance."], ["question_id", 15], ["created_at", 2016-07-17 02:53:43 UTC], ["updated_at", 2016-07-17 02:53:43 UTC]]
  [1m[35m (0.6ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "answers" ("vote_score", "vote_count", "content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["vote_score", -7], ["vote_count", 10], ["content", "I worked on three recent rails project I basically wrote all the code for the project so lead architect I would say"], ["question_id", 17], ["created_at", 2016-07-17 02:53:43 UTC], ["updated_at", 2016-07-17 02:53:43 UTC]]
  [1m[35m (0.6ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "answers" ("vote_score", "vote_count", "content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["vote_score", 7], ["vote_count", 10], ["content", "Had a recent rails project where we focused on refactoring using services and getting 100% test coverage we had 98 but learned how to test controllers, features and models it was an awesome experience"], ["question_id", 17], ["created_at", 2016-07-17 02:53:43 UTC], ["updated_at", 2016-07-17 02:53:43 UTC]]
  [1m[35m (0.6ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "answers" ("vote_score", "vote_count", "content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["vote_score", 3], ["vote_count", 11], ["content", "No, Thank you for your time"], ["question_id", 19], ["created_at", 2016-07-17 02:53:43 UTC], ["updated_at", 2016-07-17 02:53:43 UTC]]
  [1m[35m (1.5ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "answers" ("vote_score", "vote_count", "content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["vote_score", 3], ["vote_count", 11], ["content", "Yes, How do you implement your mission statement "], ["question_id", 19], ["created_at", 2016-07-17 02:53:43 UTC], ["updated_at", 2016-07-17 02:53:43 UTC]]
  [1m[35m (0.6ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "answers" ("vote_score", "vote_count", "content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["vote_score", 11], ["vote_count", 13], ["content", "instances inherit from classes (like a blueprint — a description of the class), and create sub-class relationships: hierarchical class taxonomies. instances inherit directly from other objects. Instances are typically instantiated via factory functions or `Object.create()"], ["question_id", 21], ["created_at", 2016-07-17 02:53:43 UTC], ["updated_at", 2016-07-17 02:53:43 UTC]]
  [1m[35m (0.6ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "answers" ("vote_score", "vote_count", "content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["vote_score", -2], ["vote_count", 13], ["content", "No preference for prototypal inheritance & composition over class inheritance."], ["question_id", 21], ["created_at", 2016-07-17 02:53:43 UTC], ["updated_at", 2016-07-17 02:53:43 UTC]]
  [1m[35m (0.6ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.6ms)[0m  [1m[32mINSERT INTO "answers" ("vote_score", "vote_count", "content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["vote_score", 7], ["vote_count", 13], ["content", "Polymorphic association is a term used in discussions of Object-Relational Mapping with respect to the problem of representing in the relational database domain, a relationship from one class to multiple classes"], ["question_id", 23], ["created_at", 2016-07-17 02:53:43 UTC], ["updated_at", 2016-07-17 02:53:43 UTC]]
  [1m[35m (1.2ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "answers" ("vote_score", "vote_count", "content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["vote_score", 10], ["vote_count", 13], ["content", "It’s where an ActiveRecord model can potentially belong to more than one other kind of model record.  So the single instance of your car belongs to you, a person, whereas other cars may individually belong to a car lot, a business."], ["question_id", 23], ["created_at", 2016-07-17 02:53:43 UTC], ["updated_at", 2016-07-17 02:53:43 UTC]]
  [1m[35m (0.6ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "answers" ("vote_score", "vote_count", "content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["vote_score", -9], ["vote_count", 12], ["content", "What’s that?"], ["question_id", 25], ["created_at", 2016-07-17 02:53:43 UTC], ["updated_at", 2016-07-17 02:53:43 UTC]]
  [1m[35m (0.6ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "answers" ("vote_score", "vote_count", "content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["vote_score", 3], ["vote_count", 6], ["content", "I usually seperate my gems in different production environments. I would deploy than deploy to heroku for some assurance and than the official website for publishing"], ["question_id", 25], ["created_at", 2016-07-17 02:53:43 UTC], ["updated_at", 2016-07-17 02:53:43 UTC]]
  [1m[35m (0.6ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "answers" ("vote_score", "vote_count", "content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["vote_score", -2], ["vote_count", 3], ["content", "how about using the initialize method?"], ["question_id", 27], ["created_at", 2016-07-17 02:53:43 UTC], ["updated_at", 2016-07-17 02:53:43 UTC]]
  [1m[35m (1.8ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.5ms)[0m  [1m[32mINSERT INTO "answers" ("vote_score", "vote_count", "content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["vote_score", 7], ["vote_count", 10], ["content", "The Ruby Constructor has three jobs.It allocates space for the object. It assigns instances variables their initial values. It returns the instance of that class"], ["question_id", 27], ["created_at", 2016-07-17 02:53:43 UTC], ["updated_at", 2016-07-17 02:53:43 UTC]]
  [1m[35m (0.6ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "answers" ("vote_score", "vote_count", "content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["vote_score", 2], ["vote_count", 4], ["content", "Success is the march towards the realization of a worthy ideal?"], ["question_id", 29], ["created_at", 2016-07-17 02:53:43 UTC], ["updated_at", 2016-07-17 02:53:43 UTC]]
  [1m[35m (0.5ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "answers" ("vote_score", "vote_count", "content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["vote_score", 2], ["vote_count", 4], ["content", "I evaluate success in different ways. At work, it is meeting the goals set by my supervisors and my fellow workers. It is my understanding, from talking to other employees, that the GGR company is recognized for not only rewarding success but giving employees opportunity to grow as well."], ["question_id", 29], ["created_at", 2016-07-17 02:53:43 UTC], ["updated_at", 2016-07-17 02:53:43 UTC]]
  [1m[35m (0.5ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "answers" ("vote_score", "vote_count", "content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["vote_score", 4], ["vote_count", 9], ["content", "I learned web-development by taking classes at the flatiron school"], ["question_id", 10], ["created_at", 2016-07-17 02:53:43 UTC], ["updated_at", 2016-07-17 02:53:43 UTC]]
  [1m[35m (1.1ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "answers" ("vote_score", "vote_count", "content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["vote_score", 8], ["vote_count", 10], ["content", "I took some classes online which included code academy and code school. At first I didn't think too much about it but I couldn't stop looking for classes. This is when I realized I’d be interested in making it a career for me"], ["question_id", 10], ["created_at", 2016-07-17 02:53:43 UTC], ["updated_at", 2016-07-17 02:53:43 UTC]]
  [1m[35m (0.6ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "answers" ("vote_score", "vote_count", "content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["vote_score", -1], ["vote_count", 10], ["content", "I’m born Sydney and live 15 years in the U.S"], ["question_id", 12], ["created_at", 2016-07-17 02:53:43 UTC], ["updated_at", 2016-07-17 02:53:43 UTC]]
  [1m[35m (0.6ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "answers" ("vote_score", "vote_count", "content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["vote_score", 6], ["vote_count", 10], ["content", "I am an engineer who quickly became in love with coding at a young age. I am striving to become the best programmer I could be and I hope that with time I will be able to accomplish that goal"], ["question_id", 12], ["created_at", 2016-07-17 02:53:43 UTC], ["updated_at", 2016-07-17 02:53:43 UTC]]
  [1m[35m (0.6ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "answers" ("vote_score", "vote_count", "content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["vote_score", 4], ["vote_count", 7], ["content", "Because I align with your mission and how you help the community on a daily basis"], ["question_id", 14], ["created_at", 2016-07-17 02:53:43 UTC], ["updated_at", 2016-07-17 02:53:43 UTC]]
  [1m[35m (1.7ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "answers" ("vote_score", "vote_count", "content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["vote_score", -2], ["vote_count", 7], ["content", "You're a big corporation with a lot of opportunities."], ["question_id", 14], ["created_at", 2016-07-17 02:53:43 UTC], ["updated_at", 2016-07-17 02:53:43 UTC]]
  [1m[35m (0.6ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "answers" ("vote_score", "vote_count", "content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["vote_score", -2], ["vote_count", 4], ["content", "I plan to be the best programmer in the world"], ["question_id", 16], ["created_at", 2016-07-17 02:53:43 UTC], ["updated_at", 2016-07-17 02:53:43 UTC]]
  [1m[35m (0.6ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "answers" ("vote_score", "vote_count", "content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["vote_score", 3], ["vote_count", 7], ["content", "To put myself in a situation of learning where I can always give back to my community."], ["question_id", 16], ["created_at", 2016-07-17 02:53:43 UTC], ["updated_at", 2016-07-17 02:53:43 UTC]]
  [1m[35m (0.6ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "answers" ("vote_score", "vote_count", "content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["vote_score", -2], ["vote_count", 6], ["content", "To learn as much as I can so I can advance in my career."], ["question_id", 18], ["created_at", 2016-07-17 02:53:43 UTC], ["updated_at", 2016-07-17 02:53:43 UTC]]
  [1m[35m (1.7ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "answers" ("vote_score", "vote_count", "content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["vote_score", 2], ["vote_count", 4], ["content", "To join a company that will allow me to grow both personally and professionally"], ["question_id", 18], ["created_at", 2016-07-17 02:53:43 UTC], ["updated_at", 2016-07-17 02:53:43 UTC]]
  [1m[35m (0.7ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.5ms)[0m  [1m[32mINSERT INTO "answers" ("vote_score", "vote_count", "content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["vote_score", 3], ["vote_count", 5], ["content", "I hope to put myself in a situation of learning where I can always give back to my community."], ["question_id", 20], ["created_at", 2016-07-17 02:53:43 UTC], ["updated_at", 2016-07-17 02:53:43 UTC]]
  [1m[35m (0.7ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.5ms)[0m  [1m[32mINSERT INTO "answers" ("vote_score", "vote_count", "content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["vote_score", 3], ["vote_count", 5], ["content", "I can walk you through two of my favorites app I build at flatiron. I will go over the code I wrote at first and how I refactored by deployment"], ["question_id", 20], ["created_at", 2016-07-17 02:53:43 UTC], ["updated_at", 2016-07-17 02:53:43 UTC]]
  [1m[35m (0.6ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.5ms)[0m  [1m[32mINSERT INTO "answers" ("vote_score", "vote_count", "content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["vote_score", 1], ["vote_count", 5], ["content", "I’ve always had problem making deadlines so the way I went about it is through creating calendars that would help me achieve my objectives."], ["question_id", 22], ["created_at", 2016-07-17 02:53:43 UTC], ["updated_at", 2016-07-17 02:53:43 UTC]]
  [1m[35m (1.0ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "answers" ("vote_score", "vote_count", "content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["vote_score", 7], ["vote_count", 10], ["content", "The greatest challenge I've faced in my career to date has to be the key role I played in helping my company survive the recent recession.\nWhile we certainly did have a tough time of it, we successfully rode out the recession and the cost control measures which I personally devised and implemented ultimately resulted in a significantly healthier bottom line than we had had before the recession."], ["question_id", 22], ["created_at", 2016-07-17 02:53:43 UTC], ["updated_at", 2016-07-17 02:53:43 UTC]]
  [1m[35m (0.6ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "answers" ("vote_score", "vote_count", "content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["vote_score", -1], ["vote_count", 7], ["content", "Because of the opportunity and lifestyle it will give me."], ["question_id", 24], ["created_at", 2016-07-17 02:53:43 UTC], ["updated_at", 2016-07-17 02:53:43 UTC]]
  [1m[35m (0.6ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "answers" ("vote_score", "vote_count", "content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["vote_score", 3], ["vote_count", 4], ["content", "Because of the constant sense of creativity and joy that it gives me. Being a web developer would allow me to put myself in a position of learning from a great community of people who are always open to give."], ["question_id", 24], ["created_at", 2016-07-17 02:53:43 UTC], ["updated_at", 2016-07-17 02:53:43 UTC]]
  [1m[35m (2.1ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "answers" ("vote_score", "vote_count", "content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["vote_score", 4], ["vote_count", 6], ["content", "Because of the mission and sense of community this company instills in the workplace."], ["question_id", 26], ["created_at", 2016-07-17 02:53:43 UTC], ["updated_at", 2016-07-17 02:53:43 UTC]]
  [1m[35m (0.6ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "answers" ("vote_score", "vote_count", "content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["vote_score", -1], ["vote_count", 7], ["content", "I love the perks you have at your office. I can definitely utilize some free lunches"], ["question_id", 26], ["created_at", 2016-07-17 02:53:43 UTC], ["updated_at", 2016-07-17 02:53:43 UTC]]
  [1m[35m (0.6ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "answers" ("vote_score", "vote_count", "content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["vote_score", -1], ["vote_count", 3], ["content", "I do not thank you for your time."], ["question_id", 28], ["created_at", 2016-07-17 02:53:43 UTC], ["updated_at", 2016-07-17 02:53:43 UTC]]
  [1m[35m (1.1ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "answers" ("vote_score", "vote_count", "content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["vote_score", 1], ["vote_count", 2], ["content", "What reservations our question about myself that you feel I haven't answered."], ["question_id", 28], ["created_at", 2016-07-17 02:53:43 UTC], ["updated_at", 2016-07-17 02:53:43 UTC]]
  [1m[35m (36.7ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "answers" ("vote_score", "vote_count", "content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["vote_score", -2], ["vote_count", 10], ["content", "Laidback"], ["question_id", 30], ["created_at", 2016-07-17 02:53:43 UTC], ["updated_at", 2016-07-17 02:53:43 UTC]]
  [1m[35m (0.6ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "answers" ("vote_score", "vote_count", "content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["vote_score", -2], ["vote_count", 3], ["content", "I am a deadline onlooker I strive towards the goal and ravage anything or anybody thats on my way"], ["question_id", 30], ["created_at", 2016-07-17 02:53:43 UTC], ["updated_at", 2016-07-17 02:53:43 UTC]]
  [1m[35m (0.6ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "answers" ("vote_score", "vote_count", "content", "question_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["vote_score", 6], ["vote_count", 9], ["content", "I am open to the workload and task assigned by my superior. The more informed the better but I have no problem improvising and getting assignments done before the dealines"], ["question_id", 30], ["created_at", 2016-07-17 02:53:43 UTC], ["updated_at", 2016-07-17 02:53:43 UTC]]
  [1m[35m (0.7ms)[0m  [1m[35mCOMMIT[0m
Started GET "/api/v1/questions/1" for ::1 at 2016-07-16 22:54:09 -0400
  [1m[36mActiveRecord::SchemaMigration Load (0.8ms)[0m  [1m[34mSELECT "schema_migrations".* FROM "schema_migrations"[0m
Processing by Api::V1::QuestionsController#show as HTML
  Parameters: {"id"=>"1"}
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.5ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 1]]
[active_model_serializers]   [1m[36mComment Load (0.4ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 9]]
[active_model_serializers]   [1m[36mComment Load (0.3ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 10]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (101.75ms)
Completed 200 OK in 164ms (Views: 126.6ms | ActiveRecord: 15.2ms)


Started GET "/api/v1/questions/1?rand=0.9464774099236895" for ::1 at 2016-07-16 22:55:16 -0400
Processing by Api::V1::QuestionsController#show as */*
  Parameters: {"rand"=>"0.9464774099236895", "id"=>"1"}
  [1m[36mQuestion Load (0.5ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (1.3ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 1]]
[active_model_serializers]   [1m[36mComment Load (0.4ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 9]]
[active_model_serializers]   [1m[36mComment Load (0.4ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 10]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (15.87ms)
Completed 200 OK in 19ms (Views: 14.6ms | ActiveRecord: 2.6ms)


Started GET "/api/v1/questions/1?rand=0.14754426615800087" for ::1 at 2016-07-16 22:55:38 -0400
Processing by Api::V1::QuestionsController#show as */*
  Parameters: {"rand"=>"0.14754426615800087", "id"=>"1"}
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.5ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 1]]
[active_model_serializers]   [1m[36mComment Load (0.4ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 9]]
[active_model_serializers]   [1m[36mComment Load (0.4ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 10]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (15.13ms)
Completed 200 OK in 18ms (Views: 14.8ms | ActiveRecord: 1.7ms)


Started GET "/api/v1/questions/1?rand=0.38952757043805364" for ::1 at 2016-07-16 22:58:03 -0400
Processing by Api::V1::QuestionsController#show as */*
  Parameters: {"rand"=>"0.38952757043805364", "id"=>"1"}
  [1m[36mQuestion Load (0.5ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.8ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 1]]
[active_model_serializers]   [1m[36mComment Load (0.5ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 9]]
[active_model_serializers]   [1m[36mComment Load (0.3ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 10]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (20.78ms)
Completed 200 OK in 24ms (Views: 20.1ms | ActiveRecord: 2.1ms)


Started GET "/api/v1/questions/1?rand=0.9305569989482594" for ::1 at 2016-07-16 22:58:12 -0400
Processing by Api::V1::QuestionsController#show as */*
  Parameters: {"rand"=>"0.9305569989482594", "id"=>"1"}
  [1m[36mQuestion Load (0.5ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.5ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 1]]
[active_model_serializers]   [1m[36mComment Load (0.3ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 9]]
[active_model_serializers]   [1m[36mComment Load (0.3ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 10]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (15.46ms)
Completed 200 OK in 18ms (Views: 15.1ms | ActiveRecord: 1.6ms)


Started GET "/api/v1/questions/1?rand=0.2706492528383979" for ::1 at 2016-07-16 22:58:27 -0400
Processing by Api::V1::QuestionsController#show as */*
  Parameters: {"rand"=>"0.2706492528383979", "id"=>"1"}
  [1m[36mQuestion Load (0.5ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.6ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 1]]
[active_model_serializers]   [1m[36mComment Load (0.3ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 9]]
[active_model_serializers]   [1m[36mComment Load (0.3ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 10]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (16.65ms)
Completed 200 OK in 19ms (Views: 16.2ms | ActiveRecord: 1.8ms)


Started GET "/api/v1/questions/1?rand=0.5262479974349363" for ::1 at 2016-07-16 23:04:59 -0400
  [1m[36mActiveRecord::SchemaMigration Load (0.7ms)[0m  [1m[34mSELECT "schema_migrations".* FROM "schema_migrations"[0m
Processing by Api::V1::QuestionsController#show as */*
  Parameters: {"rand"=>"0.5262479974349363", "id"=>"1"}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mAnswer Load (0.7ms)[0m  [1m[34mSELECT "answers".* FROM "answers" WHERE "answers"."question_id" = $1[0m  [["question_id", 1]]
[active_model_serializers]   [1m[36mComment Load (0.5ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 9]]
[active_model_serializers]   [1m[36mComment Load (0.3ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 10]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::JsonApi (114.76ms)
Completed 200 OK in 188ms (Views: 132.0ms | ActiveRecord: 19.9ms)


Started GET "/api/v1/answers/1?rand=0.6456154131682765" for ::1 at 2016-07-17 00:07:55 -0400
  [1m[36mActiveRecord::SchemaMigration Load (0.5ms)[0m  [1m[34mSELECT "schema_migrations".* FROM "schema_migrations"[0m
Processing by Api::V1::AnswersController#show as */*
  Parameters: {"rand"=>"0.6456154131682765", "id"=>"1"}
  [1m[36mAnswer Load (0.6ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mComment Load (0.5ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 1]]
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (88.88ms)
Completed 200 OK in 183ms (Views: 143.2ms | ActiveRecord: 12.8ms)


Started GET "/api/v1/answers/1?rand=0.6216350633061913" for ::1 at 2016-07-17 00:10:22 -0400
Processing by Api::V1::AnswersController#show as */*
  Parameters: {"rand"=>"0.6216350633061913", "id"=>"1"}
  [1m[36mAnswer Load (0.5ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mComment Load (0.4ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 1]]
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (5.89ms)
Completed 200 OK in 8ms (Views: 5.7ms | ActiveRecord: 1.3ms)


Started OPTIONS "/api/v1/answers/1?rand=0.1864161628648633" for ::1 at 2016-07-17 00:10:24 -0400
  
ActionController::RoutingError (No route matches [OPTIONS] "/api/v1/answers/1"):
  
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/debug_exceptions.rb:53:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/show_exceptions.rb:31:in `call'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:36:in `call_app'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:24:in `block in call'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:70:in `block in tagged'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:26:in `tagged'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:70:in `tagged'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:24:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/request_id.rb:24:in `call'
rack (2.0.0.rc1) lib/rack/runtime.rb:22:in `call'
activesupport (5.0.0.rc1) lib/active_support/cache/strategy/local_cache_middleware.rb:28:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/static.rb:136:in `call'
rack (2.0.0.rc1) lib/rack/sendfile.rb:111:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
railties (5.0.0.rc1) lib/rails/engine.rb:522:in `call'
puma (3.4.0) lib/puma/configuration.rb:224:in `call'
puma (3.4.0) lib/puma/server.rb:569:in `handle_request'
puma (3.4.0) lib/puma/server.rb:406:in `process_client'
puma (3.4.0) lib/puma/server.rb:271:in `block in run'
puma (3.4.0) lib/puma/thread_pool.rb:114:in `block in spawn_thread'
Started OPTIONS "/api/v1/answers/1?rand=0.5783948889259665" for ::1 at 2016-07-17 00:10:24 -0400
  
ActionController::RoutingError (No route matches [OPTIONS] "/api/v1/answers/1"):
  
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/debug_exceptions.rb:53:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/show_exceptions.rb:31:in `call'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:36:in `call_app'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:24:in `block in call'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:70:in `block in tagged'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:26:in `tagged'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:70:in `tagged'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:24:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/request_id.rb:24:in `call'
rack (2.0.0.rc1) lib/rack/runtime.rb:22:in `call'
activesupport (5.0.0.rc1) lib/active_support/cache/strategy/local_cache_middleware.rb:28:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/static.rb:136:in `call'
rack (2.0.0.rc1) lib/rack/sendfile.rb:111:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
railties (5.0.0.rc1) lib/rails/engine.rb:522:in `call'
puma (3.4.0) lib/puma/configuration.rb:224:in `call'
puma (3.4.0) lib/puma/server.rb:569:in `handle_request'
puma (3.4.0) lib/puma/server.rb:406:in `process_client'
puma (3.4.0) lib/puma/server.rb:271:in `block in run'
puma (3.4.0) lib/puma/thread_pool.rb:114:in `block in spawn_thread'
Started GET "/api/v1/answers/1?rand=0.9075188091298887" for ::1 at 2016-07-17 00:10:52 -0400
Processing by Api::V1::AnswersController#show as */*
  Parameters: {"rand"=>"0.9075188091298887", "id"=>"1"}
  [1m[36mAnswer Load (0.4ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mComment Load (0.4ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 1]]
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (5.95ms)
Completed 200 OK in 8ms (Views: 5.7ms | ActiveRecord: 1.2ms)


Started OPTIONS "/api/v1/answers/1" for ::1 at 2016-07-17 00:10:53 -0400
  
ActionController::RoutingError (No route matches [OPTIONS] "/api/v1/answers/1"):
  
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/debug_exceptions.rb:53:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/show_exceptions.rb:31:in `call'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:36:in `call_app'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:24:in `block in call'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:70:in `block in tagged'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:26:in `tagged'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:70:in `tagged'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:24:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/request_id.rb:24:in `call'
rack (2.0.0.rc1) lib/rack/runtime.rb:22:in `call'
activesupport (5.0.0.rc1) lib/active_support/cache/strategy/local_cache_middleware.rb:28:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/static.rb:136:in `call'
rack (2.0.0.rc1) lib/rack/sendfile.rb:111:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
railties (5.0.0.rc1) lib/rails/engine.rb:522:in `call'
puma (3.4.0) lib/puma/configuration.rb:224:in `call'
puma (3.4.0) lib/puma/server.rb:569:in `handle_request'
puma (3.4.0) lib/puma/server.rb:406:in `process_client'
puma (3.4.0) lib/puma/server.rb:271:in `block in run'
puma (3.4.0) lib/puma/thread_pool.rb:114:in `block in spawn_thread'
Started OPTIONS "/api/v1/answers/1" for ::1 at 2016-07-17 00:10:53 -0400
  
ActionController::RoutingError (No route matches [OPTIONS] "/api/v1/answers/1"):
  
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/debug_exceptions.rb:53:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/show_exceptions.rb:31:in `call'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:36:in `call_app'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:24:in `block in call'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:70:in `block in tagged'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:26:in `tagged'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:70:in `tagged'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:24:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/request_id.rb:24:in `call'
rack (2.0.0.rc1) lib/rack/runtime.rb:22:in `call'
activesupport (5.0.0.rc1) lib/active_support/cache/strategy/local_cache_middleware.rb:28:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/static.rb:136:in `call'
rack (2.0.0.rc1) lib/rack/sendfile.rb:111:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
railties (5.0.0.rc1) lib/rails/engine.rb:522:in `call'
puma (3.4.0) lib/puma/configuration.rb:224:in `call'
puma (3.4.0) lib/puma/server.rb:569:in `handle_request'
puma (3.4.0) lib/puma/server.rb:406:in `process_client'
puma (3.4.0) lib/puma/server.rb:271:in `block in run'
puma (3.4.0) lib/puma/thread_pool.rb:114:in `block in spawn_thread'
Started GET "/api/v1/answers/1" for ::1 at 2016-07-17 00:11:12 -0400
Processing by Api::V1::AnswersController#show as HTML
  Parameters: {"id"=>"1"}
  [1m[36mAnswer Load (0.3ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 1]]
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (4.06ms)
Completed 200 OK in 6ms (Views: 3.9ms | ActiveRecord: 0.9ms)


Started OPTIONS "/api/v1/answers/1" for ::1 at 2016-07-17 00:12:06 -0400
  
ActionController::RoutingError (No route matches [OPTIONS] "/api/v1/answers/1"):
  
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/debug_exceptions.rb:53:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/show_exceptions.rb:31:in `call'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:36:in `call_app'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:24:in `block in call'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:70:in `block in tagged'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:26:in `tagged'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:70:in `tagged'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:24:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/request_id.rb:24:in `call'
rack (2.0.0.rc1) lib/rack/runtime.rb:22:in `call'
activesupport (5.0.0.rc1) lib/active_support/cache/strategy/local_cache_middleware.rb:28:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/static.rb:136:in `call'
rack (2.0.0.rc1) lib/rack/sendfile.rb:111:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
railties (5.0.0.rc1) lib/rails/engine.rb:522:in `call'
puma (3.4.0) lib/puma/configuration.rb:224:in `call'
puma (3.4.0) lib/puma/server.rb:569:in `handle_request'
puma (3.4.0) lib/puma/server.rb:406:in `process_client'
puma (3.4.0) lib/puma/server.rb:271:in `block in run'
puma (3.4.0) lib/puma/thread_pool.rb:114:in `block in spawn_thread'
Started OPTIONS "/api/v1/answers/1" for ::1 at 2016-07-17 00:12:07 -0400
  
ActionController::RoutingError (No route matches [OPTIONS] "/api/v1/answers/1"):
  
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/debug_exceptions.rb:53:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/show_exceptions.rb:31:in `call'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:36:in `call_app'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:24:in `block in call'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:70:in `block in tagged'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:26:in `tagged'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:70:in `tagged'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:24:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/request_id.rb:24:in `call'
rack (2.0.0.rc1) lib/rack/runtime.rb:22:in `call'
activesupport (5.0.0.rc1) lib/active_support/cache/strategy/local_cache_middleware.rb:28:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/static.rb:136:in `call'
rack (2.0.0.rc1) lib/rack/sendfile.rb:111:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
railties (5.0.0.rc1) lib/rails/engine.rb:522:in `call'
puma (3.4.0) lib/puma/configuration.rb:224:in `call'
puma (3.4.0) lib/puma/server.rb:569:in `handle_request'
puma (3.4.0) lib/puma/server.rb:406:in `process_client'
puma (3.4.0) lib/puma/server.rb:271:in `block in run'
puma (3.4.0) lib/puma/thread_pool.rb:114:in `block in spawn_thread'
Started GET "/api/v1/answers/1?rand=0.08381827245068885" for ::1 at 2016-07-17 00:16:49 -0400
Processing by Api::V1::AnswersController#show as */*
  Parameters: {"rand"=>"0.08381827245068885", "id"=>"1"}
  [1m[36mAnswer Load (0.4ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 1]]
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (40.49ms)
Completed 200 OK in 79ms (Views: 50.8ms | ActiveRecord: 12.3ms)


Started OPTIONS "/api/v1/answers" for ::1 at 2016-07-17 00:16:50 -0400
  
ActionController::RoutingError (No route matches [OPTIONS] "/api/v1/answers"):
  
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/debug_exceptions.rb:53:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/show_exceptions.rb:31:in `call'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:36:in `call_app'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:24:in `block in call'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:70:in `block in tagged'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:26:in `tagged'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:70:in `tagged'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:24:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/request_id.rb:24:in `call'
rack (2.0.0.rc1) lib/rack/runtime.rb:22:in `call'
activesupport (5.0.0.rc1) lib/active_support/cache/strategy/local_cache_middleware.rb:28:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/static.rb:136:in `call'
rack (2.0.0.rc1) lib/rack/sendfile.rb:111:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
railties (5.0.0.rc1) lib/rails/engine.rb:522:in `call'
puma (3.4.0) lib/puma/configuration.rb:224:in `call'
puma (3.4.0) lib/puma/server.rb:569:in `handle_request'
puma (3.4.0) lib/puma/server.rb:406:in `process_client'
puma (3.4.0) lib/puma/server.rb:271:in `block in run'
puma (3.4.0) lib/puma/thread_pool.rb:114:in `block in spawn_thread'
Started OPTIONS "/api/v1/answers" for ::1 at 2016-07-17 00:16:50 -0400
  
ActionController::RoutingError (No route matches [OPTIONS] "/api/v1/answers"):
  
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/debug_exceptions.rb:53:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/show_exceptions.rb:31:in `call'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:36:in `call_app'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:24:in `block in call'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:70:in `block in tagged'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:26:in `tagged'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:70:in `tagged'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:24:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/request_id.rb:24:in `call'
rack (2.0.0.rc1) lib/rack/runtime.rb:22:in `call'
activesupport (5.0.0.rc1) lib/active_support/cache/strategy/local_cache_middleware.rb:28:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/static.rb:136:in `call'
rack (2.0.0.rc1) lib/rack/sendfile.rb:111:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
railties (5.0.0.rc1) lib/rails/engine.rb:522:in `call'
puma (3.4.0) lib/puma/configuration.rb:224:in `call'
puma (3.4.0) lib/puma/server.rb:569:in `handle_request'
puma (3.4.0) lib/puma/server.rb:406:in `process_client'
puma (3.4.0) lib/puma/server.rb:271:in `block in run'
puma (3.4.0) lib/puma/thread_pool.rb:114:in `block in spawn_thread'
Started OPTIONS "/api/v1/answers" for ::1 at 2016-07-17 00:16:50 -0400
  
ActionController::RoutingError (No route matches [OPTIONS] "/api/v1/answers"):
  
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/debug_exceptions.rb:53:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/show_exceptions.rb:31:in `call'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:36:in `call_app'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:24:in `block in call'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:70:in `block in tagged'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:26:in `tagged'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:70:in `tagged'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:24:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/request_id.rb:24:in `call'
rack (2.0.0.rc1) lib/rack/runtime.rb:22:in `call'
activesupport (5.0.0.rc1) lib/active_support/cache/strategy/local_cache_middleware.rb:28:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/static.rb:136:in `call'
rack (2.0.0.rc1) lib/rack/sendfile.rb:111:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
railties (5.0.0.rc1) lib/rails/engine.rb:522:in `call'
puma (3.4.0) lib/puma/configuration.rb:224:in `call'
puma (3.4.0) lib/puma/server.rb:569:in `handle_request'
puma (3.4.0) lib/puma/server.rb:406:in `process_client'
puma (3.4.0) lib/puma/server.rb:271:in `block in run'
puma (3.4.0) lib/puma/thread_pool.rb:114:in `block in spawn_thread'
Started GET "/api/v1/answers/1?rand=0.16607923590613538" for ::1 at 2016-07-17 00:20:01 -0400
  [1m[36mActiveRecord::SchemaMigration Load (0.5ms)[0m  [1m[34mSELECT "schema_migrations".* FROM "schema_migrations"[0m
Processing by Api::V1::AnswersController#show as */*
  Parameters: {"rand"=>"0.16607923590613538", "id"=>"1"}
  [1m[36mAnswer Load (1.0ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mComment Load (0.4ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 1]]
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (75.07ms)
Completed 200 OK in 159ms (Views: 114.3ms | ActiveRecord: 15.2ms)


Started OPTIONS "/api/v1/answers" for ::1 at 2016-07-17 00:20:03 -0400
  
ActionController::RoutingError (No route matches [OPTIONS] "/api/v1/answers"):
  
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/debug_exceptions.rb:53:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/show_exceptions.rb:31:in `call'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:36:in `call_app'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:24:in `block in call'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:70:in `block in tagged'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:26:in `tagged'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:70:in `tagged'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:24:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/request_id.rb:24:in `call'
rack (2.0.0.rc1) lib/rack/runtime.rb:22:in `call'
activesupport (5.0.0.rc1) lib/active_support/cache/strategy/local_cache_middleware.rb:28:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/static.rb:136:in `call'
rack (2.0.0.rc1) lib/rack/sendfile.rb:111:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
railties (5.0.0.rc1) lib/rails/engine.rb:522:in `call'
puma (3.4.0) lib/puma/configuration.rb:224:in `call'
puma (3.4.0) lib/puma/server.rb:569:in `handle_request'
puma (3.4.0) lib/puma/server.rb:406:in `process_client'
puma (3.4.0) lib/puma/server.rb:271:in `block in run'
puma (3.4.0) lib/puma/thread_pool.rb:114:in `block in spawn_thread'
Started OPTIONS "/api/v1/answers" for ::1 at 2016-07-17 00:20:03 -0400
  
ActionController::RoutingError (No route matches [OPTIONS] "/api/v1/answers"):
  
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/debug_exceptions.rb:53:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/show_exceptions.rb:31:in `call'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:36:in `call_app'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:24:in `block in call'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:70:in `block in tagged'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:26:in `tagged'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:70:in `tagged'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:24:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/request_id.rb:24:in `call'
rack (2.0.0.rc1) lib/rack/runtime.rb:22:in `call'
activesupport (5.0.0.rc1) lib/active_support/cache/strategy/local_cache_middleware.rb:28:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/static.rb:136:in `call'
rack (2.0.0.rc1) lib/rack/sendfile.rb:111:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
railties (5.0.0.rc1) lib/rails/engine.rb:522:in `call'
puma (3.4.0) lib/puma/configuration.rb:224:in `call'
puma (3.4.0) lib/puma/server.rb:569:in `handle_request'
puma (3.4.0) lib/puma/server.rb:406:in `process_client'
puma (3.4.0) lib/puma/server.rb:271:in `block in run'
puma (3.4.0) lib/puma/thread_pool.rb:114:in `block in spawn_thread'
Started GET "/api/v1/answers/1?rand=0.0036509857834294834" for ::1 at 2016-07-17 00:20:30 -0400
  [1m[36mActiveRecord::SchemaMigration Load (0.5ms)[0m  [1m[34mSELECT "schema_migrations".* FROM "schema_migrations"[0m
Processing by Api::V1::AnswersController#show as */*
  Parameters: {"rand"=>"0.0036509857834294834", "id"=>"1"}
  [1m[36mAnswer Load (0.8ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mComment Load (0.4ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 1]]
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (40.38ms)
Completed 200 OK in 85ms (Views: 45.8ms | ActiveRecord: 16.0ms)


Started PUT "/api/v1/answers" for ::1 at 2016-07-17 00:20:31 -0400
  
ActionController::RoutingError (No route matches [PUT] "/api/v1/answers"):
  
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/debug_exceptions.rb:53:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/show_exceptions.rb:31:in `call'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:36:in `call_app'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:24:in `block in call'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:70:in `block in tagged'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:26:in `tagged'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:70:in `tagged'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:24:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/request_id.rb:24:in `call'
rack (2.0.0.rc1) lib/rack/runtime.rb:22:in `call'
activesupport (5.0.0.rc1) lib/active_support/cache/strategy/local_cache_middleware.rb:28:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/static.rb:136:in `call'
rack (2.0.0.rc1) lib/rack/sendfile.rb:111:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
railties (5.0.0.rc1) lib/rails/engine.rb:522:in `call'
puma (3.4.0) lib/puma/configuration.rb:224:in `call'
puma (3.4.0) lib/puma/server.rb:569:in `handle_request'
puma (3.4.0) lib/puma/server.rb:406:in `process_client'
puma (3.4.0) lib/puma/server.rb:271:in `block in run'
puma (3.4.0) lib/puma/thread_pool.rb:114:in `block in spawn_thread'
Started PUT "/api/v1/answers" for ::1 at 2016-07-17 00:20:32 -0400
  
ActionController::RoutingError (No route matches [PUT] "/api/v1/answers"):
  
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/debug_exceptions.rb:53:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/show_exceptions.rb:31:in `call'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:36:in `call_app'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:24:in `block in call'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:70:in `block in tagged'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:26:in `tagged'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:70:in `tagged'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:24:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/request_id.rb:24:in `call'
rack (2.0.0.rc1) lib/rack/runtime.rb:22:in `call'
activesupport (5.0.0.rc1) lib/active_support/cache/strategy/local_cache_middleware.rb:28:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/static.rb:136:in `call'
rack (2.0.0.rc1) lib/rack/sendfile.rb:111:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
railties (5.0.0.rc1) lib/rails/engine.rb:522:in `call'
puma (3.4.0) lib/puma/configuration.rb:224:in `call'
puma (3.4.0) lib/puma/server.rb:569:in `handle_request'
puma (3.4.0) lib/puma/server.rb:406:in `process_client'
puma (3.4.0) lib/puma/server.rb:271:in `block in run'
puma (3.4.0) lib/puma/thread_pool.rb:114:in `block in spawn_thread'
Started PUT "/api/v1/answers" for ::1 at 2016-07-17 00:20:32 -0400
  
ActionController::RoutingError (No route matches [PUT] "/api/v1/answers"):
  
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/debug_exceptions.rb:53:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/show_exceptions.rb:31:in `call'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:36:in `call_app'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:24:in `block in call'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:70:in `block in tagged'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:26:in `tagged'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:70:in `tagged'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:24:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/request_id.rb:24:in `call'
rack (2.0.0.rc1) lib/rack/runtime.rb:22:in `call'
activesupport (5.0.0.rc1) lib/active_support/cache/strategy/local_cache_middleware.rb:28:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/static.rb:136:in `call'
rack (2.0.0.rc1) lib/rack/sendfile.rb:111:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
railties (5.0.0.rc1) lib/rails/engine.rb:522:in `call'
puma (3.4.0) lib/puma/configuration.rb:224:in `call'
puma (3.4.0) lib/puma/server.rb:569:in `handle_request'
puma (3.4.0) lib/puma/server.rb:406:in `process_client'
puma (3.4.0) lib/puma/server.rb:271:in `block in run'
puma (3.4.0) lib/puma/thread_pool.rb:114:in `block in spawn_thread'
Started GET "/api/v1/answers/1?rand=0.9849712278335525" for ::1 at 2016-07-17 00:20:51 -0400
Processing by Api::V1::AnswersController#show as */*
  Parameters: {"rand"=>"0.9849712278335525", "id"=>"1"}
  [1m[36mAnswer Load (0.4ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mComment Load (0.3ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 1]]
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (5.65ms)
Completed 200 OK in 8ms (Views: 5.6ms | ActiveRecord: 1.1ms)


Started PUT "/api/v1/answers/1" for ::1 at 2016-07-17 00:20:52 -0400
Processing by Api::V1::AnswersController#update as */*
  Parameters: {"content"=>"Three, and more than you'd expect!\n  <br>\n  You could center a div horizontally, vertically, or both and there are\n  a ton of ways to do them each. It also depends on what you're trying to\n  center. The most common way I do it is using the margins. If you set\n    a div's margin to 0 auto, to will automatically get the width of the\n    client's screen and use that information to center the div.\n  <br>\n  If I had text within a div, I wold use the text-align: center css\n  attribute on the div.sad", "id"=>"1"}
Completed 500 Internal Server Error in 1ms (ActiveRecord: 0.0ms)


  
NoMethodError (undefined method `pry' for #<Binding:0x007fb9ed5731c8>
Did you mean?  pretty_print
               pretty_inspect
               pretty_print_cycle
               try):
  
app/controllers/api/v1/answers_controller.rb:22:in `update'
Started PUT "/api/v1/answers/1" for ::1 at 2016-07-17 00:20:52 -0400
Processing by Api::V1::AnswersController#update as */*
  Parameters: {"content"=>"Three, and more than you'd expect!\n  <br>\n  You could center a div horizontally, vertically, or both and there are\n  a ton of ways to do them each. It also depends on what you're trying to\n  center. The most common way I do it is using the margins. If you set\n    a div's margin to 0 auto, to will automatically get the width of the\n    client's screen and use that information to center the div.\n  <br>\n  If I had text within a div, I wold use the text-align: center css\n  attribute on the div.sadfgad", "id"=>"1"}
Completed 500 Internal Server Error in 1ms (ActiveRecord: 0.0ms)


  
NoMethodError (undefined method `pry' for #<Binding:0x007fb9f1143928>
Did you mean?  pretty_print
               pretty_inspect
               pretty_print_cycle
               try):
  
app/controllers/api/v1/answers_controller.rb:22:in `update'
Started GET "/api/v1/answers/1?rand=0.44049449026152465" for ::1 at 2016-07-17 00:21:19 -0400
Processing by Api::V1::AnswersController#show as */*
  Parameters: {"rand"=>"0.44049449026152465", "id"=>"1"}
  [1m[36mAnswer Load (0.3ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mComment Load (0.4ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 1]]
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (31.24ms)
Completed 200 OK in 53ms (Views: 25.8ms | ActiveRecord: 12.5ms)


Started PUT "/api/v1/answers/1" for ::1 at 2016-07-17 00:21:20 -0400
Processing by Api::V1::AnswersController#update as */*
  Parameters: {"content"=>"Three, and more than you'd expect!\n  <br>\n  You could center a div horizontally, vertically, or both and there are\n  a ton of ways to do them each. It also depends on what you're trying to\n  center. The most common way I do it is using the margins. If you set\n    a div's margin to 0 auto, to will automatically get the width of the\n    client's screen and use that information to center the div.\n  <br>\n  If I had text within a div, I wold use the text-align: center css\n  attribute on the div.asd", "id"=>"1"}
Completed 500 Internal Server Error in 54801ms (ActiveRecord: 0.0ms)


  
SystemExit (exit):
  
app/controllers/api/v1/answers_controller.rb:23:in `update'
Started PUT "/api/v1/answers/1" for ::1 at 2016-07-17 00:22:16 -0400
Started PUT "/api/v1/answers/1" for ::1 at 2016-07-17 00:22:16 -0400
Started GET "/api/v1/answers/1?rand=0.415854325711122" for ::1 at 2016-07-17 00:22:28 -0400
Started GET "/api/v1/answers/1?rand=0.7302647862795968" for ::1 at 2016-07-17 00:22:28 -0400
Processing by Api::V1::AnswersController#update as */*
  Parameters: {"content"=>"Three, and more than you'd expect!\n  <br>\n  You could center a div horizontally, vertically, or both and there are\n  a ton of ways to do them each. It also depends on what you're trying to\n  center. The most common way I do it is using the margins. If you set\n    a div's margin to 0 auto, to will automatically get the width of the\n    client's screen and use that information to center the div.\n  <br>\n  If I had text within a div, I wold use the text-align: center css\n  attribute on the div.asdfgas", "id"=>"1"}
Processing by Api::V1::AnswersController#update as */*
  Parameters: {"content"=>"Three, and more than you'd expect!\n  <br>\n  You could center a div horizontally, vertically, or both and there are\n  a ton of ways to do them each. It also depends on what you're trying to\n  center. The most common way I do it is using the margins. If you set\n    a div's margin to 0 auto, to will automatically get the width of the\n    client's screen and use that information to center the div.\n  <br>\n  If I had text within a div, I wold use the text-align: center css\n  attribute on the div.asdfgasdgsd", "id"=>"1"}
  [1m[36mAnswer Load (9.3ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  [1m[36mAnswer Load (2.9ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
Completed 400 Bad Request in 191ms (ActiveRecord: 27.0ms)


Completed 400 Bad Request in 142ms (ActiveRecord: 41.0ms)


  
  
ActionController::ParameterMissing (param is missing or the value is empty: data):
ActionController::ParameterMissing (param is missing or the value is empty: data):
  
  
app/controllers/api/v1/answers_controller.rb:42:in `answer_params'
app/controllers/api/v1/answers_controller.rb:42:in `answer_params'
app/controllers/api/v1/answers_controller.rb:24:in `update'
app/controllers/api/v1/answers_controller.rb:24:in `update'
Started GET "/api/v1/answers/1?rand=0.05747481141452693" for ::1 at 2016-07-17 00:22:42 -0400
Started PUT "/api/v1/answers/1" for ::1 at 2016-07-17 00:22:42 -0400
Processing by Api::V1::AnswersController#show as */*
  Parameters: {"rand"=>"0.415854325711122", "id"=>"1"}
Processing by Api::V1::AnswersController#update as */*
  Parameters: {"content"=>"asd", "id"=>"1"}
Processing by Api::V1::AnswersController#show as */*
  Parameters: {"rand"=>"0.7302647862795968", "id"=>"1"}
Processing by Api::V1::AnswersController#show as */*
  Parameters: {"rand"=>"0.05747481141452693", "id"=>"1"}
  [1m[36mAnswer Load (38.4ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  [1m[36mAnswer Load (14.6ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  [1m[36mAnswer Load (5.5ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  [1m[36mAnswer Load (39.3ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
Completed 400 Bad Request in 287ms (ActiveRecord: 169.5ms)


  
ActionController::ParameterMissing (param is missing or the value is empty: data):
  
app/controllers/api/v1/answers_controller.rb:42:in `answer_params'
app/controllers/api/v1/answers_controller.rb:24:in `update'
[active_model_serializers]   [1m[36mQuestion Load (42.5ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mQuestion Load (67.6ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mQuestion Load (67.5ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mComment Load (31.6ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 1]]
[active_model_serializers]   [1m[36mComment Load (22.6ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 1]]
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (595.85ms)
Completed 200 OK in 1849ms (Views: 1215.8ms | ActiveRecord: 327.2ms)


[active_model_serializers]   [1m[36mComment Load (100.6ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 1]]
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (595.23ms)
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (720.59ms)
Completed 200 OK in 1914ms (Views: 1495.0ms | ActiveRecord: 238.7ms)


Completed 200 OK in 2004ms (Views: 1244.1ms | ActiveRecord: 472.9ms)


Started PUT "/api/v1/answers/1" for ::1 at 2016-07-17 00:22:53 -0400
Processing by Api::V1::AnswersController#update as */*
  Parameters: {"content"=>"Three, and more than you'd expect!\n  <br>\n  You could center a div horizontally, vertically, or both and there are\n  a ton of ways to do them each. It also depends on what you're trying to\n  center. The most common way I do it is using the margins. If you set\n    a div's margin to 0 auto, to will automatically get the width of the\n    client's screen and use that information to center the div.\n  <br>\n  If I had text within a div, I wold use the text-align: center css\n  attribute on the div.sdf", "id"=>"1"}
  [1m[36mAnswer Load (0.9ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
Completed 400 Bad Request in 21ms (ActiveRecord: 0.9ms)


  
ActionController::ParameterMissing (param is missing or the value is empty: data):
  
app/controllers/api/v1/answers_controller.rb:42:in `answer_params'
app/controllers/api/v1/answers_controller.rb:24:in `update'
Started PUT "/api/v1/answers/1" for ::1 at 2016-07-17 00:22:54 -0400
Processing by Api::V1::AnswersController#update as */*
  Parameters: {"content"=>"Three, and more than you'd expect!\n  <br>\n  You could center a div horizontally, vertically, or both and there are\n  a ton of ways to do them each. It also depends on what you're trying to\n  center. The most common way I do it is using the margins. If you set\n    a div's margin to 0 auto, to will automatically get the width of the\n    client's screen and use that information to center the div.\n  <br>\n  If I had text within a div, I wold use the text-align: center css\n  attribute on the div.sdfasdg", "id"=>"1"}
  [1m[36mAnswer Load (1.7ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
Completed 400 Bad Request in 21ms (ActiveRecord: 1.7ms)


  
ActionController::ParameterMissing (param is missing or the value is empty: data):
  
app/controllers/api/v1/answers_controller.rb:42:in `answer_params'
app/controllers/api/v1/answers_controller.rb:24:in `update'
Started GET "/api/v1/answers/1?rand=0.3319814034336417" for ::1 at 2016-07-17 00:24:50 -0400
Processing by Api::V1::AnswersController#show as */*
  Parameters: {"rand"=>"0.3319814034336417", "id"=>"1"}
  [1m[36mAnswer Load (0.7ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mQuestion Load (1.1ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mComment Load (0.9ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 1]]
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (309.91ms)
Completed 200 OK in 481ms (Views: 326.5ms | ActiveRecord: 5.3ms)


Started PUT "/api/v1/answers/1" for ::1 at 2016-07-17 00:24:57 -0400
Processing by Api::V1::AnswersController#update as */*
  Parameters: {"object Object"=>nil, "id"=>"1"}
Completed 500 Internal Server Error in 18753ms (ActiveRecord: 0.0ms)


Started PUT "/api/v1/answers/1" for ::1 at 2016-07-17 00:25:15 -0400
  
Processing by Api::V1::AnswersController#update as */*
SystemExit (exit):
  Parameters: {"object Object"=>nil, "id"=>"1"}
  
app/controllers/api/v1/answers_controller.rb:23:in `update'
Completed 500 Internal Server Error in 2301ms (ActiveRecord: 0.0ms)


  
SystemExit (exit):
  
app/controllers/api/v1/answers_controller.rb:23:in `update'
Started GET "/api/v1/answers/1?rand=0.19137862158442198" for ::1 at 2016-07-17 00:26:20 -0400
  
SyntaxError (/Users/hlpolivy/Development/code/final-project/QIQAPI/app/controllers/api/v1/answers_controller.rb:22: syntax error, unexpected ')', expecting ']'):
  
app/controllers/api/v1/answers_controller.rb:22: syntax error, unexpected ')', expecting ']'
Started GET "/api/v1/answers/1?rand=0.9249301749085241" for ::1 at 2016-07-17 00:26:33 -0400
  
SyntaxError (/Users/hlpolivy/Development/code/final-project/QIQAPI/app/controllers/api/v1/answers_controller.rb:22: syntax error, unexpected ')', expecting ']'):
  
app/controllers/api/v1/answers_controller.rb:22: syntax error, unexpected ')', expecting ']'
Started GET "/api/v1/answers/1?rand=0.8414649070335762" for ::1 at 2016-07-17 00:26:53 -0400
  
SyntaxError (/Users/hlpolivy/Development/code/final-project/QIQAPI/app/controllers/api/v1/answers_controller.rb:22: syntax error, unexpected ')', expecting ']'):
  
app/controllers/api/v1/answers_controller.rb:22: syntax error, unexpected ')', expecting ']'
Started GET "/api/v1/answers/1" for ::1 at 2016-07-17 00:27:14 -0400
  
SyntaxError (/Users/hlpolivy/Development/code/final-project/QIQAPI/app/controllers/api/v1/answers_controller.rb:22: syntax error, unexpected ')', expecting ']'):
  
app/controllers/api/v1/answers_controller.rb:22: syntax error, unexpected ')', expecting ']'
Started GET "/api/v1/answers/1" for ::1 at 2016-07-17 00:27:19 -0400
  
SyntaxError (/Users/hlpolivy/Development/code/final-project/QIQAPI/app/controllers/api/v1/answers_controller.rb:22: syntax error, unexpected ')', expecting ']'):
  
app/controllers/api/v1/answers_controller.rb:22: syntax error, unexpected ')', expecting ']'
Started GET "/api/v1/answers/1" for ::1 at 2016-07-17 00:28:37 -0400
  
SyntaxError (/Users/hlpolivy/Development/code/final-project/QIQAPI/app/controllers/api/v1/answers_controller.rb:22: syntax error, unexpected ')', expecting ']'):
  
app/controllers/api/v1/answers_controller.rb:22: syntax error, unexpected ')', expecting ']'
Started GET "/api/v1/answers/1" for ::1 at 2016-07-17 00:28:58 -0400
  
SyntaxError (/Users/hlpolivy/Development/code/final-project/QIQAPI/app/controllers/api/v1/answers_controller.rb:22: syntax error, unexpected ')', expecting ']'):
  
app/controllers/api/v1/answers_controller.rb:22: syntax error, unexpected ')', expecting ']'
Started GET "/api/v1/answers/2" for ::1 at 2016-07-17 00:29:07 -0400
  
SyntaxError (/Users/hlpolivy/Development/code/final-project/QIQAPI/app/controllers/api/v1/answers_controller.rb:22: syntax error, unexpected ')', expecting ']'):
  
app/controllers/api/v1/answers_controller.rb:22: syntax error, unexpected ')', expecting ']'
Started GET "/api/v1/answers/1" for ::1 at 2016-07-17 00:29:37 -0400
Processing by Api::V1::AnswersController#show as */*
  Parameters: {"id"=>"1"}
  [1m[36mAnswer Load (0.7ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mQuestion Load (0.9ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mComment Load (0.8ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 1]]
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (287.32ms)
Completed 200 OK in 472ms (Views: 293.8ms | ActiveRecord: 15.0ms)


Started PUT "/api/v1/answers/1" for ::1 at 2016-07-17 00:29:43 -0400
Processing by Api::V1::AnswersController#update as */*
  Parameters: {"object Object"=>nil, "id"=>"1"}
  [1m[36mAnswer Load (0.8ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  [1m[35m (0.5ms)[0m  [1m[35mBEGIN[0m
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
  [1m[35mSQL (7.5ms)[0m  [1m[33mUPDATE "answers" SET "content" = $1, "updated_at" = $2 WHERE "answers"."id" = $3[0m  [["content", nil], ["updated_at", 2016-07-17 04:29:43 UTC], ["id", 1]]
  [1m[35m (1.4ms)[0m  [1m[35mCOMMIT[0m
[active_model_serializers]   [1m[36mComment Load (0.7ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 1]]
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (83.26ms)
Completed 200 OK in 226ms (Views: 90.8ms | ActiveRecord: 11.7ms)


Started PUT "/api/v1/answers/1" for ::1 at 2016-07-17 00:29:44 -0400
Processing by Api::V1::AnswersController#update as */*
  Parameters: {"object Object"=>nil, "id"=>"1"}
  [1m[36mAnswer Load (1.7ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  [1m[35m (0.6ms)[0m  [1m[35mBEGIN[0m
  [1m[36mQuestion Load (1.1ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
  [1m[35m (0.6ms)[0m  [1m[35mCOMMIT[0m
[active_model_serializers]   [1m[36mComment Load (1.0ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 1]]
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (68.05ms)
Completed 200 OK in 158ms (Views: 73.3ms | ActiveRecord: 4.9ms)


Started PUT "/api/v1/answers/1" for ::1 at 2016-07-17 00:29:50 -0400
Processing by Api::V1::AnswersController#update as */*
  Parameters: {"object Object"=>nil, "id"=>"1"}
  [1m[36mAnswer Load (0.8ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  [1m[35m (0.7ms)[0m  [1m[35mBEGIN[0m
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
  [1m[35m (0.5ms)[0m  [1m[35mCOMMIT[0m
[active_model_serializers]   [1m[36mComment Load (0.8ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 1]]
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (74.42ms)
Completed 200 OK in 152ms (Views: 80.2ms | ActiveRecord: 3.7ms)


Started PUT "/api/v1/answers/1" for ::1 at 2016-07-17 00:29:52 -0400
Processing by Api::V1::AnswersController#update as */*
  Parameters: {"object Object"=>nil, "id"=>"1"}
  [1m[36mAnswer Load (1.1ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  [1m[35m (0.8ms)[0m  [1m[35mBEGIN[0m
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
  [1m[35m (0.5ms)[0m  [1m[35mCOMMIT[0m
[active_model_serializers]   [1m[36mComment Load (0.6ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 1]]
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (62.56ms)
Completed 200 OK in 149ms (Views: 71.4ms | ActiveRecord: 3.6ms)


Started PUT "/api/v1/answers/1" for ::1 at 2016-07-17 00:29:53 -0400
Processing by Api::V1::AnswersController#update as */*
  Parameters: {"object Object"=>nil, "id"=>"1"}
  [1m[36mAnswer Load (0.8ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  [1m[35m (0.5ms)[0m  [1m[35mBEGIN[0m
  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
  [1m[35m (0.6ms)[0m  [1m[35mCOMMIT[0m
[active_model_serializers]   [1m[36mComment Load (0.7ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 1]]
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (63.91ms)
Completed 200 OK in 148ms (Views: 75.7ms | ActiveRecord: 3.2ms)


Started GET "/api/v1/answers/1" for ::1 at 2016-07-17 00:29:56 -0400
Processing by Api::V1::AnswersController#show as */*
  Parameters: {"id"=>"1"}
  [1m[36mAnswer Load (1.3ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mQuestion Load (0.9ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mComment Load (1.0ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 1]]
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (123.48ms)
Completed 200 OK in 153ms (Views: 128.7ms | ActiveRecord: 3.1ms)


Started GET "/api/v1/answers/1" for ::1 at 2016-07-17 00:30:12 -0400
Processing by Api::V1::AnswersController#show as */*
  Parameters: {"id"=>"1"}
  [1m[36mAnswer Load (1.6ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mQuestion Load (1.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mComment Load (0.8ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 1]]
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (117.13ms)
Completed 200 OK in 147ms (Views: 125.1ms | ActiveRecord: 3.7ms)


  [1m[36mAnswer Load (1.2ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
Started PUT "/api/v1/answers/1" for ::1 at 2016-07-17 00:31:30 -0400
Processing by Api::V1::AnswersController#update as */*
  Parameters: {"object Object"=>nil, "id"=>"1"}
  [1m[36mAnswer Load (1.0ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
Completed 500 Internal Server Error in 120008ms (ActiveRecord: 7.1ms)


  
SystemExit (exit):
Started PUT "/api/v1/answers/1" for ::1 at 2016-07-17 00:33:31 -0400
Started PUT "/api/v1/answers/1" for ::1 at 2016-07-17 00:33:31 -0400
Started GET "/api/v1/answers/1" for ::1 at 2016-07-17 00:33:31 -0400
Processing by Api::V1::AnswersController#update as */*
  
Processing by Api::V1::AnswersController#update as */*
Processing by Api::V1::AnswersController#show as */*
  Parameters: {"object Object"=>nil, "id"=>"1"}
app/controllers/api/v1/answers_controller.rb:32:in `update'
  Parameters: {"object Object"=>nil, "id"=>"1"}
  Parameters: {"id"=>"1"}
  [1m[36mAnswer Load (166.1ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  [1m[36mAnswer Load (100.1ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
Completed 500 Internal Server Error in 10570ms (ActiveRecord: 166.1ms)


Completed 500 Internal Server Error in 15534ms (ActiveRecord: 100.1ms)


  [1m[36mAnswer Load (15512.5ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  
  
SystemExit (exit):
SystemExit (exit):
  
  
app/controllers/api/v1/answers_controller.rb:32:in `update'
app/controllers/api/v1/answers_controller.rb:32:in `update'
Started PUT "/api/v1/answers/1" for ::1 at 2016-07-17 00:33:50 -0400
Processing by Api::V1::AnswersController#update as */*
  Parameters: {"object Object"=>nil, "id"=>"1"}
  [1m[36mAnswer Load (5.8ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
Started PUT "/api/v1/answers/1" for ::1 at 2016-07-17 00:33:56 -0400
Processing by Api::V1::AnswersController#update as */*
  Parameters: {"object Object"=>nil, "id"=>"1"}
  [1m[36mAnswer Load (4.5ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
Completed 500 Internal Server Error in 8346ms (ActiveRecord: 5.8ms)


  
SystemExit (exit):
  
app/controllers/api/v1/answers_controller.rb:32:in `update'
Completed 500 Internal Server Error in 6370ms (ActiveRecord: 4.5ms)


  
SystemExit (exit):
  
app/controllers/api/v1/answers_controller.rb:32:in `update'
Started PUT "/api/v1/answers/1" for ::1 at 2016-07-17 00:34:05 -0400
Processing by Api::V1::AnswersController#update as */*
  Parameters: {"object Object"=>nil, "id"=>"1"}
  [1m[36mAnswer Load (9.3ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
Completed 500 Internal Server Error in 5083ms (ActiveRecord: 9.3ms)


  
SystemExit (exit):
  
app/controllers/api/v1/answers_controller.rb:32:in `update'
[active_model_serializers]   [1m[36mQuestion Load (100.6ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mComment Load (0.6ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 1]]
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (22096.64ms)
Completed 200 OK in 40485ms (Views: 19659.2ms | ActiveRecord: 20673.4ms)


Started GET "/api/v1/answers/1" for ::1 at 2016-07-17 00:34:59 -0400
Processing by Api::V1::AnswersController#show as */*
  Parameters: {"id"=>"1"}
  [1m[36mAnswer Load (1.1ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mQuestion Load (0.9ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mComment Load (1.1ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 1]]
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (135.85ms)
Completed 200 OK in 169ms (Views: 148.3ms | ActiveRecord: 3.2ms)


Started PUT "/api/v1/answers/1" for ::1 at 2016-07-17 00:35:03 -0400
Processing by Api::V1::AnswersController#update as */*
  Parameters: {"{\"data\":{\"attributes\":{\"content\":\"asd\"}}}"=>nil, "id"=>"1"}
  [1m[36mAnswer Load (0.7ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
Completed 500 Internal Server Error in 56211ms (ActiveRecord: 0.7ms)


  
SystemExit (exit):
  
app/controllers/api/v1/answers_controller.rb:32:in `update'
Started GET "/api/v1/answers/1" for ::1 at 2016-07-17 00:36:01 -0400
Processing by Api::V1::AnswersController#show as */*
  Parameters: {"id"=>"1"}
  [1m[36mAnswer Load (0.8ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mComment Load (0.7ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 1]]
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (114.94ms)
Completed 200 OK in 141ms (Views: 120.4ms | ActiveRecord: 2.3ms)


Started GET "/api/v1/answers/1" for ::1 at 2016-07-17 00:36:52 -0400
Processing by Api::V1::AnswersController#show as */*
  Parameters: {"id"=>"1"}
  [1m[36mAnswer Load (0.7ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mComment Load (0.7ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 1]]
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (104.91ms)
Completed 200 OK in 134ms (Views: 110.2ms | ActiveRecord: 2.2ms)


Started PUT "/api/v1/answers/1" for ::1 at 2016-07-17 00:36:54 -0400
Processing by Api::V1::AnswersController#update as */*
  Parameters: {"{\"attributes\":{\"content\":\"asd\"}}"=>nil, "id"=>"1"}
  [1m[36mAnswer Load (0.8ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
Completed 500 Internal Server Error in 31769ms (ActiveRecord: 0.8ms)


  
SystemExit (exit):
  
app/controllers/api/v1/answers_controller.rb:32:in `update'
Started GET "/api/v1/answers/1" for ::1 at 2016-07-17 00:37:40 -0400
Processing by Api::V1::AnswersController#show as */*
  Parameters: {"id"=>"1"}
  [1m[36mAnswer Load (0.9ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mComment Load (0.7ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 1]]
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (119.26ms)
Completed 200 OK in 151ms (Views: 126.2ms | ActiveRecord: 2.4ms)


Started PUT "/api/v1/answers/1" for ::1 at 2016-07-17 00:39:52 -0400
Processing by Api::V1::AnswersController#update as */*
  Parameters: {"{\"attributes\":{\"content\":\"asf\"}}"=>nil, "id"=>"1"}
Started GET "/api/v1/answers/1" for ::1 at 2016-07-17 00:39:52 -0400
  [1m[36mAnswer Load (3.6ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
Processing by Api::V1::AnswersController#show as */*
  Parameters: {"id"=>"1"}
Completed 500 Internal Server Error in 68082ms (ActiveRecord: 3.6ms)


  
SystemExit (exit):
  
app/controllers/api/v1/answers_controller.rb:32:in `update'
  [1m[36mAnswer Load (92.0ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mQuestion Load (60.7ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
Started PUT "/api/v1/answers/1" for ::1 at 2016-07-17 00:41:00 -0400
Processing by Api::V1::AnswersController#update as */*
[active_model_serializers]   [1m[36mComment Load (57.7ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 1]]
Started GET "/api/v1/answers/1" for ::1 at 2016-07-17 00:41:00 -0400
  Parameters: {"attributes"=>{"content"=>"asf"}, "id"=>"1", "answer"=>{}}
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (315.46ms)
Processing by Api::V1::AnswersController#show as */*
Completed 200 OK in 462ms (Views: 231.3ms | ActiveRecord: 210.4ms)


  [1m[36mAnswer Load (51.7ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  Parameters: {"id"=>"1"}
  [1m[36mAnswer Load (88.3ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mQuestion Load (68.6ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
Completed 500 Internal Server Error in 51903ms (ActiveRecord: 51.7ms)


  
SystemExit (exit):
  
app/controllers/api/v1/answers_controller.rb:32:in `update'
[active_model_serializers]   [1m[36mComment Load (155.8ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 1]]
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (328.35ms)
Started PUT "/api/v1/answers/1" for ::1 at 2016-07-17 00:41:52 -0400
Completed 200 OK in 446ms (Views: 112.8ms | ActiveRecord: 312.7ms)


Error occurred while parsing request parameters.
Contents:

[object Object]
  
ActionDispatch::ParamsParser::ParseError (419: unexpected token at 'object Object]'):
  
actionpack (5.0.0.rc1) lib/action_dispatch/http/parameters.rb:71:in `rescue in parse_formatted_parameters'
actionpack (5.0.0.rc1) lib/action_dispatch/http/parameters.rb:65:in `parse_formatted_parameters'
actionpack (5.0.0.rc1) lib/action_dispatch/http/request.rb:366:in `block in POST'
rack (2.0.0.rc1) lib/rack/request.rb:57:in `fetch'
rack (2.0.0.rc1) lib/rack/request.rb:57:in `fetch_header'
actionpack (5.0.0.rc1) lib/action_dispatch/http/request.rb:365:in `POST'
actionpack (5.0.0.rc1) lib/action_controller/metal/params_wrapper.rb:282:in `_wrapper_enabled?'
actionpack (5.0.0.rc1) lib/action_controller/metal/params_wrapper.rb:231:in `process_action'
activerecord (5.0.0.rc1) lib/active_record/railties/controller_runtime.rb:18:in `process_action'
actionpack (5.0.0.rc1) lib/abstract_controller/base.rb:126:in `process'
actionpack (5.0.0.rc1) lib/action_controller/metal.rb:190:in `dispatch'
actionpack (5.0.0.rc1) lib/action_controller/metal.rb:262:in `dispatch'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:50:in `dispatch'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:32:in `serve'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:39:in `block in serve'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:26:in `each'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:26:in `serve'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:725:in `call'
actionview (5.0.0.rc1) lib/action_view/digestor.rb:12:in `call'
rack (2.0.0.rc1) lib/rack/etag.rb:25:in `call'
rack (2.0.0.rc1) lib/rack/conditional_get.rb:38:in `call'
Started PUT "/api/v1/answers/1" for ::1 at 2016-07-17 00:41:54 -0400
rack (2.0.0.rc1) lib/rack/head.rb:12:in `call'
Error occurred while parsing request parameters.
Contents:

[object Object]
Started GET "/api/v1/answers/1" for ::1 at 2016-07-17 00:41:54 -0400
activerecord (5.0.0.rc1) lib/active_record/migration.rb:552:in `call'
  
Processing by Api::V1::AnswersController#show as */*
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/callbacks.rb:38:in `block in call'
ActionDispatch::ParamsParser::ParseError (419: unexpected token at 'object Object]'):
  Parameters: {"id"=>"1"}
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:97:in `__run_callbacks__'
  
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:750:in `_run_call_callbacks'
  [1m[36mAnswer Load (1.8ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
actionpack (5.0.0.rc1) lib/action_dispatch/http/parameters.rb:71:in `rescue in parse_formatted_parameters'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:90:in `run_callbacks'
actionpack (5.0.0.rc1) lib/action_dispatch/http/parameters.rb:65:in `parse_formatted_parameters'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/callbacks.rb:36:in `call'
[active_model_serializers]   [1m[36mQuestion Load (8.1ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
actionpack (5.0.0.rc1) lib/action_dispatch/http/request.rb:366:in `block in POST'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/executor.rb:12:in `call'
rack (2.0.0.rc1) lib/rack/request.rb:57:in `fetch'
[active_model_serializers]   [1m[36mComment Load (1.6ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 1]]
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/remote_ip.rb:79:in `call'
rack (2.0.0.rc1) lib/rack/request.rb:57:in `fetch_header'
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (116.19ms)
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/debug_exceptions.rb:49:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/http/request.rb:365:in `POST'
Completed 200 OK in 148ms (Views: 119.0ms | ActiveRecord: 11.5ms)


actionpack (5.0.0.rc1) lib/action_dispatch/middleware/show_exceptions.rb:31:in `call'
actionpack (5.0.0.rc1) lib/action_controller/metal/params_wrapper.rb:282:in `_wrapper_enabled?'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:36:in `call_app'
actionpack (5.0.0.rc1) lib/action_controller/metal/params_wrapper.rb:231:in `process_action'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:24:in `block in call'
activerecord (5.0.0.rc1) lib/active_record/railties/controller_runtime.rb:18:in `process_action'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:70:in `block in tagged'
actionpack (5.0.0.rc1) lib/abstract_controller/base.rb:126:in `process'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:26:in `tagged'
actionpack (5.0.0.rc1) lib/action_controller/metal.rb:190:in `dispatch'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:70:in `tagged'
actionpack (5.0.0.rc1) lib/action_controller/metal.rb:262:in `dispatch'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:24:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:50:in `dispatch'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/request_id.rb:24:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:32:in `serve'
rack (2.0.0.rc1) lib/rack/runtime.rb:22:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:39:in `block in serve'
activesupport (5.0.0.rc1) lib/active_support/cache/strategy/local_cache_middleware.rb:28:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:26:in `each'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:26:in `serve'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/static.rb:136:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:725:in `call'
rack (2.0.0.rc1) lib/rack/sendfile.rb:111:in `call'
actionview (5.0.0.rc1) lib/action_view/digestor.rb:12:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
rack (2.0.0.rc1) lib/rack/etag.rb:25:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
rack (2.0.0.rc1) lib/rack/conditional_get.rb:38:in `call'
railties (5.0.0.rc1) lib/rails/engine.rb:522:in `call'
rack (2.0.0.rc1) lib/rack/head.rb:12:in `call'
puma (3.4.0) lib/puma/configuration.rb:224:in `call'
activerecord (5.0.0.rc1) lib/active_record/migration.rb:552:in `call'
puma (3.4.0) lib/puma/server.rb:569:in `handle_request'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/callbacks.rb:38:in `block in call'
puma (3.4.0) lib/puma/server.rb:406:in `process_client'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:97:in `__run_callbacks__'
puma (3.4.0) lib/puma/server.rb:271:in `block in run'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:750:in `_run_call_callbacks'
puma (3.4.0) lib/puma/thread_pool.rb:114:in `block in spawn_thread'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:90:in `run_callbacks'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/callbacks.rb:36:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/remote_ip.rb:79:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/debug_exceptions.rb:49:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/show_exceptions.rb:31:in `call'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:36:in `call_app'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:24:in `block in call'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:70:in `block in tagged'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:26:in `tagged'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:70:in `tagged'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:24:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/request_id.rb:24:in `call'
rack (2.0.0.rc1) lib/rack/runtime.rb:22:in `call'
activesupport (5.0.0.rc1) lib/active_support/cache/strategy/local_cache_middleware.rb:28:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/static.rb:136:in `call'
rack (2.0.0.rc1) lib/rack/sendfile.rb:111:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
railties (5.0.0.rc1) lib/rails/engine.rb:522:in `call'
puma (3.4.0) lib/puma/configuration.rb:224:in `call'
puma (3.4.0) lib/puma/server.rb:569:in `handle_request'
puma (3.4.0) lib/puma/server.rb:406:in `process_client'
puma (3.4.0) lib/puma/server.rb:271:in `block in run'
puma (3.4.0) lib/puma/thread_pool.rb:114:in `block in spawn_thread'
Started GET "/api/v1/answers/1" for ::1 at 2016-07-17 00:42:14 -0400
Processing by Api::V1::AnswersController#show as */*
  Parameters: {"id"=>"1"}
  [1m[36mAnswer Load (0.7ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mComment Load (0.7ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 1]]
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (120.04ms)
Completed 200 OK in 155ms (Views: 132.5ms | ActiveRecord: 2.2ms)


Started PUT "/api/v1/answers/1" for ::1 at 2016-07-17 00:42:15 -0400
Error occurred while parsing request parameters.
Contents:

[object Object]
  
ActionDispatch::ParamsParser::ParseError (419: unexpected token at 'object Object]'):
  
actionpack (5.0.0.rc1) lib/action_dispatch/http/parameters.rb:71:in `rescue in parse_formatted_parameters'
actionpack (5.0.0.rc1) lib/action_dispatch/http/parameters.rb:65:in `parse_formatted_parameters'
actionpack (5.0.0.rc1) lib/action_dispatch/http/request.rb:366:in `block in POST'
rack (2.0.0.rc1) lib/rack/request.rb:57:in `fetch'
rack (2.0.0.rc1) lib/rack/request.rb:57:in `fetch_header'
actionpack (5.0.0.rc1) lib/action_dispatch/http/request.rb:365:in `POST'
actionpack (5.0.0.rc1) lib/action_controller/metal/params_wrapper.rb:282:in `_wrapper_enabled?'
actionpack (5.0.0.rc1) lib/action_controller/metal/params_wrapper.rb:231:in `process_action'
activerecord (5.0.0.rc1) lib/active_record/railties/controller_runtime.rb:18:in `process_action'
actionpack (5.0.0.rc1) lib/abstract_controller/base.rb:126:in `process'
actionpack (5.0.0.rc1) lib/action_controller/metal.rb:190:in `dispatch'
actionpack (5.0.0.rc1) lib/action_controller/metal.rb:262:in `dispatch'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:50:in `dispatch'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:32:in `serve'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:39:in `block in serve'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:26:in `each'
actionpack (5.0.0.rc1) lib/action_dispatch/journey/router.rb:26:in `serve'
actionpack (5.0.0.rc1) lib/action_dispatch/routing/route_set.rb:725:in `call'
actionview (5.0.0.rc1) lib/action_view/digestor.rb:12:in `call'
rack (2.0.0.rc1) lib/rack/etag.rb:25:in `call'
rack (2.0.0.rc1) lib/rack/conditional_get.rb:38:in `call'
rack (2.0.0.rc1) lib/rack/head.rb:12:in `call'
activerecord (5.0.0.rc1) lib/active_record/migration.rb:552:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/callbacks.rb:38:in `block in call'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:97:in `__run_callbacks__'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:750:in `_run_call_callbacks'
activesupport (5.0.0.rc1) lib/active_support/callbacks.rb:90:in `run_callbacks'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/callbacks.rb:36:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/remote_ip.rb:79:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/debug_exceptions.rb:49:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/show_exceptions.rb:31:in `call'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:36:in `call_app'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:24:in `block in call'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:70:in `block in tagged'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:26:in `tagged'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:70:in `tagged'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:24:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/request_id.rb:24:in `call'
rack (2.0.0.rc1) lib/rack/runtime.rb:22:in `call'
activesupport (5.0.0.rc1) lib/active_support/cache/strategy/local_cache_middleware.rb:28:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/static.rb:136:in `call'
rack (2.0.0.rc1) lib/rack/sendfile.rb:111:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
railties (5.0.0.rc1) lib/rails/engine.rb:522:in `call'
puma (3.4.0) lib/puma/configuration.rb:224:in `call'
puma (3.4.0) lib/puma/server.rb:569:in `handle_request'
puma (3.4.0) lib/puma/server.rb:406:in `process_client'
puma (3.4.0) lib/puma/server.rb:271:in `block in run'
puma (3.4.0) lib/puma/thread_pool.rb:114:in `block in spawn_thread'
Started GET "/api/v1/answers/1" for ::1 at 2016-07-17 00:44:55 -0400
Processing by Api::V1::AnswersController#show as */*
  Parameters: {"id"=>"1"}
  [1m[36mAnswer Load (0.8ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mComment Load (0.6ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 1]]
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (118.81ms)
Completed 200 OK in 149ms (Views: 128.3ms | ActiveRecord: 2.2ms)


Started GET "/api/v1/answers/1" for ::1 at 2016-07-17 00:45:28 -0400
Processing by Api::V1::AnswersController#show as */*
  Parameters: {"id"=>"1"}
  [1m[36mAnswer Load (0.8ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mComment Load (0.8ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 1]]
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (118.74ms)
Completed 200 OK in 151ms (Views: 129.4ms | ActiveRecord: 2.3ms)


Started PUT "/api/v1/answers/1" for ::1 at 2016-07-17 00:45:30 -0400
Processing by Api::V1::AnswersController#update as */*
  Parameters: {"data"=>{"attributes"=>[{"content"=>"dsf"}]}, "id"=>"1", "answer"=>{}}
  [1m[36mAnswer Load (2.1ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
Completed 500 Internal Server Error in 76150ms (ActiveRecord: 2.1ms)


  
SystemExit (exit):
  
app/controllers/api/v1/answers_controller.rb:32:in `update'
Started GET "/api/v1/answers/1" for ::1 at 2016-07-17 00:46:46 -0400
Processing by Api::V1::AnswersController#show as */*
  Parameters: {"id"=>"1"}
  [1m[36mAnswer Load (60.6ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
Started PUT "/api/v1/answers/1" for ::1 at 2016-07-17 00:46:46 -0400
[active_model_serializers]   [1m[36mQuestion Load (3.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
Processing by Api::V1::AnswersController#update as */*
  Parameters: {"data"=>{"attributes"=>[{"content"=>"dsfhsdh"}]}, "id"=>"1", "answer"=>{}}
  [1m[36mAnswer Load (115.9ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mComment Load (9026.9ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 1]]
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (9269.48ms)
Completed 200 OK in 9358ms (Views: 251.9ms | ActiveRecord: 9090.7ms)


Completed 500 Internal Server Error in 9253ms (ActiveRecord: 115.9ms)


  
SystemExit (exit):
  
app/controllers/api/v1/answers_controller.rb:32:in `update'
Started PUT "/api/v1/answers/1" for ::1 at 2016-07-17 00:46:58 -0400
Processing by Api::V1::AnswersController#update as */*
  Parameters: {"data"=>[{"attributes"=>[{"content"=>"sdd"}]}], "id"=>"1", "answer"=>{}}
  [1m[36mAnswer Load (0.7ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
Completed 500 Internal Server Error in 74797ms (ActiveRecord: 0.7ms)


  
SystemExit (exit):
  
app/controllers/api/v1/answers_controller.rb:32:in `update'
Started GET "/api/v1/answers/1" for ::1 at 2016-07-17 00:48:15 -0400
Processing by Api::V1::AnswersController#show as */*
  Parameters: {"id"=>"1"}
  [1m[36mAnswer Load (0.6ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mComment Load (0.9ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 1]]
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (410.01ms)
Completed 200 OK in 602ms (Views: 421.4ms | ActiveRecord: 10.3ms)


Started PUT "/api/v1/answers/1" for ::1 at 2016-07-17 00:48:16 -0400
Processing by Api::V1::AnswersController#update as */*
  Parameters: {"data"=>[{"attributes"=>[{"content"=>""}]}], "id"=>"1", "answer"=>{}}
  [1m[36mAnswer Load (0.6ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
Completed 500 Internal Server Error in 14155ms (ActiveRecord: 0.6ms)


  
SystemExit (exit):
  
app/controllers/api/v1/answers_controller.rb:32:in `update'
Started PUT "/api/v1/answers/1" for ::1 at 2016-07-17 00:48:32 -0400
Processing by Api::V1::AnswersController#update as */*
  Parameters: {"data"=>[{"attributes"=>[{"content"=>"frss"}]}], "id"=>"1", "answer"=>{}}
  [1m[36mAnswer Load (0.9ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
Completed 500 Internal Server Error in 8857ms (ActiveRecord: 0.9ms)


  
SystemExit (exit):
  
app/controllers/api/v1/answers_controller.rb:32:in `update'
Started PUT "/api/v1/answers/1" for ::1 at 2016-07-17 00:49:06 -0400
Processing by Api::V1::AnswersController#update as */*
  Parameters: {"data"=>[{"attributes"=>[{"content"=>"frsssasf"}]}], "id"=>"1", "answer"=>{}}
  [1m[36mAnswer Load (0.7ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
Completed 500 Internal Server Error in 73306ms (ActiveRecord: 0.7ms)


  
SystemExit (exit):
  
app/controllers/api/v1/answers_controller.rb:32:in `update'
Started GET "/api/v1/answers/1" for ::1 at 2016-07-17 00:50:23 -0400
Processing by Api::V1::AnswersController#show as */*
  Parameters: {"id"=>"1"}
  [1m[36mAnswer Load (0.8ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mQuestion Load (1.0ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mComment Load (1.3ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 1]]
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (287.05ms)
Completed 200 OK in 448ms (Views: 303.0ms | ActiveRecord: 3.0ms)


Started PUT "/api/v1/answers/1" for ::1 at 2016-07-17 00:50:25 -0400
Processing by Api::V1::AnswersController#update as */*
  Parameters: {"data"=>[{"attributes"=>[{"content"=>"asf"}]}], "id"=>"1", "answer"=>{}}
  [1m[36mAnswer Load (0.7ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  [1m[35m (0.5ms)[0m  [1m[35mBEGIN[0m
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
  [1m[35mSQL (0.9ms)[0m  [1m[33mUPDATE "answers" SET "content" = $1, "updated_at" = $2 WHERE "answers"."id" = $3[0m  [["content", "asf"], ["updated_at", 2016-07-17 04:50:25 UTC], ["id", 1]]
  [1m[35m (3.0ms)[0m  [1m[35mCOMMIT[0m
[active_model_serializers]   [1m[36mComment Load (0.7ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 1]]
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (80.55ms)
Completed 200 OK in 194ms (Views: 87.9ms | ActiveRecord: 6.3ms)


Started GET "/api/v1/answers/1" for ::1 at 2016-07-17 00:50:35 -0400
Processing by Api::V1::AnswersController#show as */*
  Parameters: {"id"=>"1"}
  [1m[36mAnswer Load (1.2ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mQuestion Load (1.0ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mComment Load (0.8ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 1]]
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (114.91ms)
Completed 200 OK in 148ms (Views: 122.3ms | ActiveRecord: 2.9ms)


Started PUT "/api/v1/answers/1" for ::1 at 2016-07-17 00:50:39 -0400
Processing by Api::V1::AnswersController#update as */*
  Parameters: {"data"=>[{"attributes"=>[{"content"=>"asfasf"}]}], "id"=>"1", "answer"=>{}}
  [1m[36mAnswer Load (0.7ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  [1m[35m (0.5ms)[0m  [1m[35mBEGIN[0m
  [1m[36mQuestion Load (0.9ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
  [1m[35mSQL (1.1ms)[0m  [1m[33mUPDATE "answers" SET "content" = $1, "updated_at" = $2 WHERE "answers"."id" = $3[0m  [["content", "asfasf"], ["updated_at", 2016-07-17 04:50:39 UTC], ["id", 1]]
  [1m[35m (2.8ms)[0m  [1m[35mCOMMIT[0m
[active_model_serializers]   [1m[36mComment Load (0.8ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 1]]
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (75.63ms)
Completed 200 OK in 187ms (Views: 83.9ms | ActiveRecord: 6.8ms)


Started PUT "/api/v1/answers/1" for ::1 at 2016-07-17 00:50:39 -0400
Processing by Api::V1::AnswersController#update as */*
  Parameters: {"data"=>[{"attributes"=>[{"content"=>"asfasfasfa"}]}], "id"=>"1", "answer"=>{}}
  [1m[36mAnswer Load (1.4ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  [1m[35m (0.6ms)[0m  [1m[35mBEGIN[0m
  [1m[36mQuestion Load (1.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
  [1m[35mSQL (1.1ms)[0m  [1m[33mUPDATE "answers" SET "content" = $1, "updated_at" = $2 WHERE "answers"."id" = $3[0m  [["content", "asfasfasfa"], ["updated_at", 2016-07-17 04:50:39 UTC], ["id", 1]]
  [1m[35m (1.7ms)[0m  [1m[35mCOMMIT[0m
[active_model_serializers]   [1m[36mComment Load (0.8ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 1]]
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (72.52ms)
Completed 200 OK in 183ms (Views: 77.1ms | ActiveRecord: 7.5ms)


Started GET "/api/v1/answers/1" for ::1 at 2016-07-17 00:50:41 -0400
Processing by Api::V1::AnswersController#show as */*
  Parameters: {"id"=>"1"}
  [1m[36mAnswer Load (1.0ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mComment Load (0.6ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 1]]
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (117.04ms)
Completed 200 OK in 150ms (Views: 124.8ms | ActiveRecord: 2.3ms)


Started GET "/api/v1/answers/2" for ::1 at 2016-07-17 09:48:09 -0400
  [1m[36mActiveRecord::SchemaMigration Load (0.6ms)[0m  [1m[34mSELECT "schema_migrations".* FROM "schema_migrations"[0m
Processing by Api::V1::AnswersController#show as HTML
  Parameters: {"id"=>"2"}
  [1m[36mAnswer Load (1.3ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mComment Load (0.3ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 2]]
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (61.11ms)
Completed 200 OK in 157ms (Views: 101.9ms | ActiveRecord: 13.2ms)


Started GET "/api/v1/answers/2" for ::1 at 2016-07-17 09:48:13 -0400
Processing by Api::V1::AnswersController#show as HTML
  Parameters: {"id"=>"2"}
  [1m[36mAnswer Load (0.5ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mComment Load (0.3ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 2]]
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (6.1ms)
Completed 200 OK in 8ms (Views: 5.9ms | ActiveRecord: 1.2ms)


Started GET "/api/v1/answers/2" for ::1 at 2016-07-17 09:50:35 -0400
Processing by Api::V1::AnswersController#show as HTML
  Parameters: {"id"=>"2"}
  [1m[36mAnswer Load (0.4ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mComment Load (0.3ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 2]]
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (5.0ms)
Completed 200 OK in 7ms (Views: 4.9ms | ActiveRecord: 1.0ms)


Started GET "/api/v1/answers/2" for ::1 at 2016-07-17 09:50:36 -0400
Processing by Api::V1::AnswersController#show as HTML
  Parameters: {"id"=>"2"}
  [1m[36mAnswer Load (0.4ms)[0m  [1m[34mSELECT  "answers".* FROM "answers" WHERE "answers"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mComment Load (0.3ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."answer_id" = $1[0m  [["answer_id", 2]]
[active_model_serializers] Rendered AnswerSerializer with ActiveModelSerializers::Adapter::JsonApi (4.89ms)
Completed 200 OK in 7ms (Views: 4.9ms | ActiveRecord: 1.0ms)


  [1m[35m (0.4ms)[0m  [1m[34mSELECT pg_try_advisory_lock(7064053580037655320);[0m
  [1m[36mActiveRecord::SchemaMigration Load (0.6ms)[0m  [1m[34mSELECT "schema_migrations".* FROM "schema_migrations"[0m
Migrating to DropAnswersTable (20160717142815)
  [1m[35m (0.4ms)[0m  [1m[34mSELECT pg_advisory_unlock(7064053580037655320)[0m
  [1m[35m (0.7ms)[0m  [1m[34mSELECT pg_try_advisory_lock(7064053580037655320);[0m
  [1m[36mActiveRecord::SchemaMigration Load (1.2ms)[0m  [1m[34mSELECT "schema_migrations".* FROM "schema_migrations"[0m
Migrating to DropAnswersTable (20160717142815)
  [1m[35m (0.3ms)[0m  [1m[35mBEGIN[0m
  [1m[35m (101.4ms)[0m  [1m[35mDROP TABLE "answers"[0m
  [1m[35mSQL (23.5ms)[0m  [1m[32mINSERT INTO "schema_migrations" ("version") VALUES ($1) RETURNING "version"[0m  [["version", "20160717142815"]]
  [1m[35m (5.2ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mActiveRecord::InternalMetadata Load (0.8ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" ORDER BY "ar_internal_metadata"."key" ASC LIMIT $1[0m  [["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35m (0.1ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.3ms)[0m  [1m[34mSELECT pg_advisory_unlock(7064053580037655320)[0m
  [1m[36mActiveRecord::SchemaMigration Load (0.2ms)[0m  [1m[34mSELECT "schema_migrations".* FROM "schema_migrations"[0m
  [1m[35m (4.5ms)[0m  [1m[34mSELECT t2.oid::regclass::text AS to_table, a1.attname AS column, a2.attname AS primary_key, c.conname AS name, c.confupdtype AS on_update, c.confdeltype AS on_delete
FROM pg_constraint c
JOIN pg_class t1 ON c.conrelid = t1.oid
JOIN pg_class t2 ON c.confrelid = t2.oid
JOIN pg_attribute a1 ON a1.attnum = c.conkey[1] AND a1.attrelid = t1.oid
JOIN pg_attribute a2 ON a2.attnum = c.confkey[1] AND a2.attrelid = t2.oid
JOIN pg_namespace t3 ON c.connamespace = t3.oid
WHERE c.contype = 'f'
  AND t1.relname = 'comments'
  AND t3.nspname = ANY (current_schemas(false))
ORDER BY c.conname
[0m
  [1m[35m (3.6ms)[0m  [1m[34mSELECT t2.oid::regclass::text AS to_table, a1.attname AS column, a2.attname AS primary_key, c.conname AS name, c.confupdtype AS on_update, c.confdeltype AS on_delete
FROM pg_constraint c
JOIN pg_class t1 ON c.conrelid = t1.oid
JOIN pg_class t2 ON c.confrelid = t2.oid
JOIN pg_attribute a1 ON a1.attnum = c.conkey[1] AND a1.attrelid = t1.oid
JOIN pg_attribute a2 ON a2.attnum = c.confkey[1] AND a2.attrelid = t2.oid
JOIN pg_namespace t3 ON c.connamespace = t3.oid
WHERE c.contype = 'f'
  AND t1.relname = 'questions'
  AND t3.nspname = ANY (current_schemas(false))
ORDER BY c.conname
[0m
  [1m[35m (0.4ms)[0m  [1m[34mSELECT pg_try_advisory_lock(7064053580037655320);[0m
  [1m[36mActiveRecord::SchemaMigration Load (0.5ms)[0m  [1m[34mSELECT "schema_migrations".* FROM "schema_migrations"[0m
Migrating to DropCommentsTable (20160717142916)
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35m (3.0ms)[0m  [1m[35mDROP TABLE "comments"[0m
  [1m[35mSQL (0.5ms)[0m  [1m[32mINSERT INTO "schema_migrations" ("version") VALUES ($1) RETURNING "version"[0m  [["version", "20160717142916"]]
  [1m[35m (2.2ms)[0m  [1m[35mCOMMIT[0m
Migrating to DropQuestionsTable (20160717142934)
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35m (1.7ms)[0m  [1m[35mDROP TABLE "questions"[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "schema_migrations" ("version") VALUES ($1) RETURNING "version"[0m  [["version", "20160717142934"]]
  [1m[35m (1.7ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mActiveRecord::InternalMetadata Load (0.5ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" ORDER BY "ar_internal_metadata"."key" ASC LIMIT $1[0m  [["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35m (0.1ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.2ms)[0m  [1m[34mSELECT pg_advisory_unlock(7064053580037655320)[0m
  [1m[36mActiveRecord::SchemaMigration Load (0.2ms)[0m  [1m[34mSELECT "schema_migrations".* FROM "schema_migrations"[0m
  [1m[35m (0.3ms)[0m  [1m[34mSELECT pg_try_advisory_lock(7064053580037655320);[0m
  [1m[36mActiveRecord::SchemaMigration Load (0.6ms)[0m  [1m[34mSELECT "schema_migrations".* FROM "schema_migrations"[0m
Migrating to CreateDocument (20160717143134)
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35m (239.4ms)[0m  [1m[35mCREATE TABLE "documents" ("id" serial primary key, "title" character varying, "content" character varying, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  [1m[35mSQL (0.7ms)[0m  [1m[32mINSERT INTO "schema_migrations" ("version") VALUES ($1) RETURNING "version"[0m  [["version", "20160717143134"]]
  [1m[35m (4.0ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mActiveRecord::InternalMetadata Load (0.6ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" ORDER BY "ar_internal_metadata"."key" ASC LIMIT $1[0m  [["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35m (0.1ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.3ms)[0m  [1m[34mSELECT pg_advisory_unlock(7064053580037655320)[0m
  [1m[36mActiveRecord::SchemaMigration Load (0.2ms)[0m  [1m[34mSELECT "schema_migrations".* FROM "schema_migrations"[0m
  [1m[35m (4.7ms)[0m  [1m[34mSELECT t2.oid::regclass::text AS to_table, a1.attname AS column, a2.attname AS primary_key, c.conname AS name, c.confupdtype AS on_update, c.confdeltype AS on_delete
FROM pg_constraint c
JOIN pg_class t1 ON c.conrelid = t1.oid
JOIN pg_class t2 ON c.confrelid = t2.oid
JOIN pg_attribute a1 ON a1.attnum = c.conkey[1] AND a1.attrelid = t1.oid
JOIN pg_attribute a2 ON a2.attnum = c.confkey[1] AND a2.attrelid = t2.oid
JOIN pg_namespace t3 ON c.connamespace = t3.oid
WHERE c.contype = 'f'
  AND t1.relname = 'documents'
  AND t3.nspname = ANY (current_schemas(false))
ORDER BY c.conname
[0m
  [1m[36mActiveRecord::SchemaMigration Load (0.5ms)[0m  [1m[34mSELECT "schema_migrations".* FROM "schema_migrations"[0m
  [1m[36mActiveRecord::SchemaMigration Load (0.6ms)[0m  [1m[34mSELECT "schema_migrations".* FROM "schema_migrations"[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (15.4ms)[0m  [1m[32mINSERT INTO "documents" ("title", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["title", "How to live long and prosper"], ["content", "Be like Spock."], ["created_at", 2016-07-17 14:35:55 UTC], ["updated_at", 2016-07-17 14:35:55 UTC]]
  [1m[35m (2.5ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mDocument Load (1.7ms)[0m  [1m[34mSELECT "documents".* FROM "documents"[0m
Started GET "/api/v1/documents/1" for ::1 at 2016-07-17 10:43:48 -0400
  [1m[36mActiveRecord::SchemaMigration Load (0.5ms)[0m  [1m[34mSELECT "schema_migrations".* FROM "schema_migrations"[0m
  
ActionController::RoutingError (No route matches [GET] "/api/v1/documents/1"):
  
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/debug_exceptions.rb:53:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/show_exceptions.rb:31:in `call'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:36:in `call_app'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:24:in `block in call'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:70:in `block in tagged'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:26:in `tagged'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:70:in `tagged'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:24:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/request_id.rb:24:in `call'
rack (2.0.0.rc1) lib/rack/runtime.rb:22:in `call'
activesupport (5.0.0.rc1) lib/active_support/cache/strategy/local_cache_middleware.rb:28:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/static.rb:136:in `call'
rack (2.0.0.rc1) lib/rack/sendfile.rb:111:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
railties (5.0.0.rc1) lib/rails/engine.rb:522:in `call'
puma (3.4.0) lib/puma/configuration.rb:224:in `call'
puma (3.4.0) lib/puma/server.rb:569:in `handle_request'
puma (3.4.0) lib/puma/server.rb:406:in `process_client'
puma (3.4.0) lib/puma/server.rb:271:in `block in run'
puma (3.4.0) lib/puma/thread_pool.rb:114:in `block in spawn_thread'
Started GET "/api/v1/documents/1" for ::1 at 2016-07-17 10:44:26 -0400
Processing by Api::V1::DocumentsController#show as HTML
  Parameters: {"id"=>"1"}
  [1m[36mDocument Load (0.5ms)[0m  [1m[34mSELECT  "documents".* FROM "documents" WHERE "documents"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
[active_model_serializers] Rendered DocumentSerializer with ActiveModelSerializers::Adapter::JsonApi (11.08ms)
Completed 200 OK in 71ms (Views: 39.8ms | ActiveRecord: 7.4ms)


Started GET "/api/v1/documents/1" for ::1 at 2016-07-17 10:44:50 -0400
Processing by Api::V1::DocumentsController#show as */*
  Parameters: {"id"=>"1"}
  [1m[36mDocument Load (0.4ms)[0m  [1m[34mSELECT  "documents".* FROM "documents" WHERE "documents"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
[active_model_serializers] Rendered DocumentSerializer with ActiveModelSerializers::Adapter::JsonApi (0.56ms)
Completed 200 OK in 3ms (Views: 1.2ms | ActiveRecord: 0.4ms)


Started PUT "/api/v1/answers/1" for ::1 at 2016-07-17 10:44:57 -0400
  
ActionController::RoutingError (No route matches [PUT] "/api/v1/answers/1"):
  
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/debug_exceptions.rb:53:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/show_exceptions.rb:31:in `call'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:36:in `call_app'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:24:in `block in call'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:70:in `block in tagged'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:26:in `tagged'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:70:in `tagged'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:24:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/request_id.rb:24:in `call'
rack (2.0.0.rc1) lib/rack/runtime.rb:22:in `call'
activesupport (5.0.0.rc1) lib/active_support/cache/strategy/local_cache_middleware.rb:28:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/static.rb:136:in `call'
rack (2.0.0.rc1) lib/rack/sendfile.rb:111:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
railties (5.0.0.rc1) lib/rails/engine.rb:522:in `call'
puma (3.4.0) lib/puma/configuration.rb:224:in `call'
puma (3.4.0) lib/puma/server.rb:569:in `handle_request'
puma (3.4.0) lib/puma/server.rb:406:in `process_client'
puma (3.4.0) lib/puma/server.rb:271:in `block in run'
puma (3.4.0) lib/puma/thread_pool.rb:114:in `block in spawn_thread'
Started PUT "/api/v1/answers/1" for ::1 at 2016-07-17 10:44:57 -0400
  
ActionController::RoutingError (No route matches [PUT] "/api/v1/answers/1"):
  
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/debug_exceptions.rb:53:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/show_exceptions.rb:31:in `call'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:36:in `call_app'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:24:in `block in call'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:70:in `block in tagged'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:26:in `tagged'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:70:in `tagged'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:24:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/request_id.rb:24:in `call'
rack (2.0.0.rc1) lib/rack/runtime.rb:22:in `call'
activesupport (5.0.0.rc1) lib/active_support/cache/strategy/local_cache_middleware.rb:28:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/static.rb:136:in `call'
rack (2.0.0.rc1) lib/rack/sendfile.rb:111:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
railties (5.0.0.rc1) lib/rails/engine.rb:522:in `call'
puma (3.4.0) lib/puma/configuration.rb:224:in `call'
puma (3.4.0) lib/puma/server.rb:569:in `handle_request'
puma (3.4.0) lib/puma/server.rb:406:in `process_client'
puma (3.4.0) lib/puma/server.rb:271:in `block in run'
puma (3.4.0) lib/puma/thread_pool.rb:114:in `block in spawn_thread'
Started PUT "/api/v1/answers/1" for ::1 at 2016-07-17 10:44:59 -0400
  
ActionController::RoutingError (No route matches [PUT] "/api/v1/answers/1"):
  
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/debug_exceptions.rb:53:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/show_exceptions.rb:31:in `call'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:36:in `call_app'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:24:in `block in call'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:70:in `block in tagged'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:26:in `tagged'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:70:in `tagged'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:24:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/request_id.rb:24:in `call'
rack (2.0.0.rc1) lib/rack/runtime.rb:22:in `call'
activesupport (5.0.0.rc1) lib/active_support/cache/strategy/local_cache_middleware.rb:28:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/static.rb:136:in `call'
rack (2.0.0.rc1) lib/rack/sendfile.rb:111:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
railties (5.0.0.rc1) lib/rails/engine.rb:522:in `call'
puma (3.4.0) lib/puma/configuration.rb:224:in `call'
puma (3.4.0) lib/puma/server.rb:569:in `handle_request'
puma (3.4.0) lib/puma/server.rb:406:in `process_client'
puma (3.4.0) lib/puma/server.rb:271:in `block in run'
puma (3.4.0) lib/puma/thread_pool.rb:114:in `block in spawn_thread'
Started PUT "/api/v1/answers/1" for ::1 at 2016-07-17 10:44:59 -0400
  
ActionController::RoutingError (No route matches [PUT] "/api/v1/answers/1"):
  
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/debug_exceptions.rb:53:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/show_exceptions.rb:31:in `call'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:36:in `call_app'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:24:in `block in call'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:70:in `block in tagged'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:26:in `tagged'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:70:in `tagged'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:24:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/request_id.rb:24:in `call'
rack (2.0.0.rc1) lib/rack/runtime.rb:22:in `call'
activesupport (5.0.0.rc1) lib/active_support/cache/strategy/local_cache_middleware.rb:28:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/static.rb:136:in `call'
rack (2.0.0.rc1) lib/rack/sendfile.rb:111:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
railties (5.0.0.rc1) lib/rails/engine.rb:522:in `call'
puma (3.4.0) lib/puma/configuration.rb:224:in `call'
puma (3.4.0) lib/puma/server.rb:569:in `handle_request'
puma (3.4.0) lib/puma/server.rb:406:in `process_client'
puma (3.4.0) lib/puma/server.rb:271:in `block in run'
puma (3.4.0) lib/puma/thread_pool.rb:114:in `block in spawn_thread'
Started PUT "/api/v1/answers/1" for ::1 at 2016-07-17 10:44:59 -0400
  
ActionController::RoutingError (No route matches [PUT] "/api/v1/answers/1"):
  
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/debug_exceptions.rb:53:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/show_exceptions.rb:31:in `call'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:36:in `call_app'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:24:in `block in call'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:70:in `block in tagged'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:26:in `tagged'
activesupport (5.0.0.rc1) lib/active_support/tagged_logging.rb:70:in `tagged'
railties (5.0.0.rc1) lib/rails/rack/logger.rb:24:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/request_id.rb:24:in `call'
rack (2.0.0.rc1) lib/rack/runtime.rb:22:in `call'
activesupport (5.0.0.rc1) lib/active_support/cache/strategy/local_cache_middleware.rb:28:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.0.0.rc1) lib/action_dispatch/middleware/static.rb:136:in `call'
rack (2.0.0.rc1) lib/rack/sendfile.rb:111:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
railties (5.0.0.rc1) lib/rails/engine.rb:522:in `call'
puma (3.4.0) lib/puma/configuration.rb:224:in `call'
puma (3.4.0) lib/puma/server.rb:569:in `handle_request'
puma (3.4.0) lib/puma/server.rb:406:in `process_client'
puma (3.4.0) lib/puma/server.rb:271:in `block in run'
puma (3.4.0) lib/puma/thread_pool.rb:114:in `block in spawn_thread'
Started GET "/api/v1/documents/1" for ::1 at 2016-07-17 10:45:45 -0400
Processing by Api::V1::DocumentsController#show as */*
  Parameters: {"id"=>"1"}
  [1m[36mDocument Load (0.4ms)[0m  [1m[34mSELECT  "documents".* FROM "documents" WHERE "documents"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
[active_model_serializers] Rendered DocumentSerializer with ActiveModelSerializers::Adapter::JsonApi (0.56ms)
Completed 200 OK in 3ms (Views: 1.0ms | ActiveRecord: 0.4ms)


Started PUT "/api/v1/documents/1" for ::1 at 2016-07-17 10:45:48 -0400
Processing by Api::V1::DocumentsController#update as */*
  Parameters: {"data"=>[{"attributes"=>[{"content"=>"Be like Spock. 42"}]}], "id"=>"1", "document"=>{}}
Completed 500 Internal Server Error in 116418ms (ActiveRecord: 0.0ms)


Started PUT "/api/v1/documents/1" for ::1 at 2016-07-17 10:47:44 -0400
  
SystemExit (exit):
  
app/controllers/api/v1/documents_controller.rb:6:in `update'
Processing by Api::V1::DocumentsController#update as */*
  Parameters: {"data"=>[{"attributes"=>[{"content"=>"Be like Spock. 42 is also"}]}], "id"=>"1", "document"=>{}}
Started PUT "/api/v1/documents/1" for ::1 at 2016-07-17 10:48:02 -0400
Started PUT "/api/v1/documents/1" for ::1 at 2016-07-17 10:48:02 -0400
Started PUT "/api/v1/documents/1" for ::1 at 2016-07-17 10:48:02 -0400
Processing by Api::V1::DocumentsController#update as */*
Processing by Api::V1::DocumentsController#update as */*
Completed 500 Internal Server Error in 18006ms (ActiveRecord: 0.0ms)


Processing by Api::V1::DocumentsController#update as */*
  Parameters: {"data"=>[{"attributes"=>[{"content"=>"Be like Spock. 42 is also importa"}]}], "id"=>"1", "document"=>{}}
  Parameters: {"data"=>[{"attributes"=>[{"content"=>"Be like Spock. 42 is "}]}], "id"=>"1", "document"=>{}}
  
  Parameters: {"data"=>[{"attributes"=>[{"content"=>"Be like Spock. 42 is also imp"}]}], "id"=>"1", "document"=>{}}
Completed 500 Internal Server Error in 12278ms (ActiveRecord: 0.0ms)


SystemExit (exit):
Completed 500 Internal Server Error in 6072ms (ActiveRecord: 0.0ms)


  
  
Started GET "/api/v1/documents/1" for ::1 at 2016-07-17 10:48:17 -0400
Completed 500 Internal Server Error in 1867ms (ActiveRecord: 0.0ms)


  
SystemExit (exit):
app/controllers/api/v1/documents_controller.rb:6:in `update'
Processing by Api::V1::DocumentsController#show as */*
  
SystemExit (exit):
  
  Parameters: {"id"=>"1"}
SystemExit (exit):
  
app/controllers/api/v1/documents_controller.rb:6:in `update'
  [1m[36mDocument Load (95.6ms)[0m  [1m[34mSELECT  "documents".* FROM "documents" WHERE "documents"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  
app/controllers/api/v1/documents_controller.rb:6:in `update'
[active_model_serializers] Rendered DocumentSerializer with ActiveModelSerializers::Adapter::JsonApi (13.39ms)
Started GET "/api/v1/documents/1" for ::1 at 2016-07-17 10:48:19 -0400
app/controllers/api/v1/documents_controller.rb:6:in `update'
Completed 200 OK in 1339ms (Views: 306.3ms | ActiveRecord: 95.6ms)


Processing by Api::V1::DocumentsController#show as */*
Started GET "/api/v1/documents/1" for ::1 at 2016-07-17 10:48:21 -0400
  Parameters: {"id"=>"1"}
Processing by Api::V1::DocumentsController#show as */*
  [1m[36mDocument Load (77.7ms)[0m  [1m[34mSELECT  "documents".* FROM "documents" WHERE "documents"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  Parameters: {"id"=>"1"}
Started PUT "/api/v1/documents/1" for ::1 at 2016-07-17 10:48:22 -0400
[active_model_serializers] Rendered DocumentSerializer with ActiveModelSerializers::Adapter::JsonApi (12.83ms)
  [1m[36mDocument Load (100.2ms)[0m  [1m[34mSELECT  "documents".* FROM "documents" WHERE "documents"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
Processing by Api::V1::DocumentsController#update as */*
Completed 200 OK in 854ms (Views: 249.2ms | ActiveRecord: 77.7ms)


Started PUT "/api/v1/documents/1" for ::1 at 2016-07-17 10:48:22 -0400
[active_model_serializers] Rendered DocumentSerializer with ActiveModelSerializers::Adapter::JsonApi (14.01ms)
Started PUT "/api/v1/documents/1" for ::1 at 2016-07-17 10:48:22 -0400
  Parameters: {"data"=>{"attributes"=>{"content"=>"asf"}}, "id"=>"1", "document"=>{}}
Processing by Api::V1::DocumentsController#update as */*
Completed 200 OK in 233ms (Views: 68.4ms | ActiveRecord: 100.2ms)


Processing by Api::V1::DocumentsController#update as */*
  Parameters: {"data"=>{"attributes"=>{"content"=>"asfafas"}}, "id"=>"1", "document"=>{}}
  Parameters: {"data"=>{"attributes"=>{"content"=>"asfafasfasf"}}, "id"=>"1", "document"=>{}}
Completed 500 Internal Server Error in 85967ms (ActiveRecord: 0.0ms)


Completed 500 Internal Server Error in 172672ms (ActiveRecord: 0.0ms)


  
  
SystemExit (exit):
SystemExit (exit):
  
  
app/controllers/api/v1/documents_controller.rb:6:in `update'
Completed 500 Internal Server Error in 2051ms (ActiveRecord: 0.0ms)


app/controllers/api/v1/documents_controller.rb:6:in `update'
  
SystemExit (exit):
  
app/controllers/api/v1/documents_controller.rb:6:in `update'
Started GET "/api/v1/documents/1" for ::1 at 2016-07-17 10:51:21 -0400
Processing by Api::V1::DocumentsController#show as */*
  Parameters: {"id"=>"1"}
  [1m[36mDocument Load (0.8ms)[0m  [1m[34mSELECT  "documents".* FROM "documents" WHERE "documents"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
[active_model_serializers] Rendered DocumentSerializer with ActiveModelSerializers::Adapter::JsonApi (26.02ms)
Completed 200 OK in 268ms (Views: 51.7ms | ActiveRecord: 0.8ms)


Started PUT "/api/v1/documents/1" for ::1 at 2016-07-17 10:51:24 -0400
Processing by Api::V1::DocumentsController#update as */*
  Parameters: {"data"=>{"attributes"=>{"content"=>"Be like Spock.sda"}}, "id"=>"1", "document"=>{}}
Unpermitted parameters: data, document
Unpermitted parameters: data, document
Completed 500 Internal Server Error in 87805ms (ActiveRecord: 0.0ms)


  
SystemExit (exit):
  
app/controllers/api/v1/documents_controller.rb:6:in `update'
Started GET "/api/v1/documents/1" for ::1 at 2016-07-17 10:52:58 -0400
Processing by Api::V1::DocumentsController#show as */*
  Parameters: {"id"=>"1"}
  [1m[36mDocument Load (1.0ms)[0m  [1m[34mSELECT  "documents".* FROM "documents" WHERE "documents"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
[active_model_serializers] Rendered DocumentSerializer with ActiveModelSerializers::Adapter::JsonApi (23.33ms)
Completed 200 OK in 147ms (Views: 38.9ms | ActiveRecord: 1.0ms)


Started PUT "/api/v1/documents/1" for ::1 at 2016-07-17 10:53:01 -0400
Processing by Api::V1::DocumentsController#update as */*
  Parameters: {"data"=>{"attributes"=>{"content"=>"Be like Spock. 42"}}, "id"=>"1", "document"=>{}}
Unpermitted parameters: data, document
  [1m[36mDocument Load (1.1ms)[0m  [1m[34mSELECT  "documents".* FROM "documents" WHERE "documents"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  [1m[35m (0.5ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (1.3ms)[0m  [1m[33mUPDATE "documents" SET "title" = $1, "content" = $2, "updated_at" = $3 WHERE "documents"."id" = $4[0m  [["title", nil], ["content", "Be like Spock. 42"], ["updated_at", 2016-07-17 14:53:02 UTC], ["id", 1]]
  [1m[35m (7.2ms)[0m  [1m[35mCOMMIT[0m
[active_model_serializers] Rendered DocumentSerializer with ActiveModelSerializers::Adapter::JsonApi (20.6ms)
Completed 200 OK in 126ms (Views: 30.6ms | ActiveRecord: 10.0ms)


Started PUT "/api/v1/documents/1" for ::1 at 2016-07-17 10:53:02 -0400
Processing by Api::V1::DocumentsController#update as */*
  Parameters: {"data"=>{"attributes"=>{"content"=>"Be like Spock. 42 is "}}, "id"=>"1", "document"=>{}}
Unpermitted parameters: data, document
  [1m[36mDocument Load (1.6ms)[0m  [1m[34mSELECT  "documents".* FROM "documents" WHERE "documents"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  [1m[35m (0.6ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (7.7ms)[0m  [1m[33mUPDATE "documents" SET "content" = $1, "updated_at" = $2 WHERE "documents"."id" = $3[0m  [["content", "Be like Spock. 42 is "], ["updated_at", 2016-07-17 14:53:02 UTC], ["id", 1]]
  [1m[35m (3.0ms)[0m  [1m[35mCOMMIT[0m
[active_model_serializers] Rendered DocumentSerializer with ActiveModelSerializers::Adapter::JsonApi (15.13ms)
Completed 200 OK in 118ms (Views: 24.9ms | ActiveRecord: 12.7ms)


Started PUT "/api/v1/documents/1" for ::1 at 2016-07-17 10:53:02 -0400
Processing by Api::V1::DocumentsController#update as */*
  Parameters: {"data"=>{"attributes"=>{"content"=>"Be like Spock. 42 is also"}}, "id"=>"1", "document"=>{}}
Unpermitted parameters: data, document
  [1m[36mDocument Load (1.5ms)[0m  [1m[34mSELECT  "documents".* FROM "documents" WHERE "documents"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  [1m[35m (0.6ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (1.0ms)[0m  [1m[33mUPDATE "documents" SET "content" = $1, "updated_at" = $2 WHERE "documents"."id" = $3[0m  [["content", "Be like Spock. 42 is also"], ["updated_at", 2016-07-17 14:53:02 UTC], ["id", 1]]
  [1m[35m (3.3ms)[0m  [1m[35mCOMMIT[0m
[active_model_serializers] Rendered DocumentSerializer with ActiveModelSerializers::Adapter::JsonApi (23.3ms)
Completed 200 OK in 123ms (Views: 31.4ms | ActiveRecord: 6.4ms)


Started PUT "/api/v1/documents/1" for ::1 at 2016-07-17 10:53:03 -0400
Processing by Api::V1::DocumentsController#update as */*
  Parameters: {"data"=>{"attributes"=>{"content"=>"Be like Spock. 42 is also imp"}}, "id"=>"1", "document"=>{}}
Unpermitted parameters: data, document
  [1m[36mDocument Load (1.9ms)[0m  [1m[34mSELECT  "documents".* FROM "documents" WHERE "documents"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  [1m[35m (0.6ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (1.1ms)[0m  [1m[33mUPDATE "documents" SET "content" = $1, "updated_at" = $2 WHERE "documents"."id" = $3[0m  [["content", "Be like Spock. 42 is also imp"], ["updated_at", 2016-07-17 14:53:03 UTC], ["id", 1]]
  [1m[35m (1.7ms)[0m  [1m[35mCOMMIT[0m
[active_model_serializers] Rendered DocumentSerializer with ActiveModelSerializers::Adapter::JsonApi (15.21ms)
Completed 200 OK in 116ms (Views: 25.3ms | ActiveRecord: 5.2ms)


Started PUT "/api/v1/documents/1" for ::1 at 2016-07-17 10:53:03 -0400
Processing by Api::V1::DocumentsController#update as */*
  Parameters: {"data"=>{"attributes"=>{"content"=>"Be like Spock. 42 is also importa"}}, "id"=>"1", "document"=>{}}
Unpermitted parameters: data, document
  [1m[36mDocument Load (0.7ms)[0m  [1m[34mSELECT  "documents".* FROM "documents" WHERE "documents"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  [1m[35m (0.7ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (1.1ms)[0m  [1m[33mUPDATE "documents" SET "content" = $1, "updated_at" = $2 WHERE "documents"."id" = $3[0m  [["content", "Be like Spock. 42 is also importa"], ["updated_at", 2016-07-17 14:53:03 UTC], ["id", 1]]
  [1m[35m (1.5ms)[0m  [1m[35mCOMMIT[0m
[active_model_serializers] Rendered DocumentSerializer with ActiveModelSerializers::Adapter::JsonApi (21.13ms)
Completed 200 OK in 115ms (Views: 28.5ms | ActiveRecord: 4.0ms)


Started GET "/api/v1/documents/1" for ::1 at 2016-07-17 10:53:10 -0400
Processing by Api::V1::DocumentsController#show as */*
  Parameters: {"id"=>"1"}
  [1m[36mDocument Load (6.1ms)[0m  [1m[34mSELECT  "documents".* FROM "documents" WHERE "documents"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
[active_model_serializers] Rendered DocumentSerializer with ActiveModelSerializers::Adapter::JsonApi (27.28ms)
Completed 200 OK in 63ms (Views: 35.1ms | ActiveRecord: 7.0ms)


Started GET "/api/v1/documents/1" for ::1 at 2016-07-17 10:55:51 -0400
Processing by Api::V1::DocumentsController#show as */*
  Parameters: {"id"=>"1"}
  [1m[36mDocument Load (0.9ms)[0m  [1m[34mSELECT  "documents".* FROM "documents" WHERE "documents"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
[active_model_serializers] Rendered DocumentSerializer with ActiveModelSerializers::Adapter::JsonApi (23.48ms)
Completed 200 OK in 152ms (Views: 38.4ms | ActiveRecord: 0.9ms)


Started PUT "/api/v1/documents/1" for ::1 at 2016-07-17 10:55:54 -0400
Processing by Api::V1::DocumentsController#update as */*
  Parameters: {"data"=>{"attributes"=>{"content"=>"Be like Spock. 42 is also importaasf"}}, "id"=>"1", "document"=>{}}
Unpermitted parameters: data, document
  [1m[36mDocument Load (0.8ms)[0m  [1m[34mSELECT  "documents".* FROM "documents" WHERE "documents"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  [1m[35m (0.5ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.9ms)[0m  [1m[33mUPDATE "documents" SET "content" = $1, "updated_at" = $2 WHERE "documents"."id" = $3[0m  [["content", "Be like Spock. 42 is also importaasf"], ["updated_at", 2016-07-17 14:55:54 UTC], ["id", 1]]
  [1m[35m (1.3ms)[0m  [1m[35mCOMMIT[0m
[active_model_serializers] Rendered DocumentSerializer with ActiveModelSerializers::Adapter::JsonApi (15.16ms)
Completed 200 OK in 112ms (Views: 22.4ms | ActiveRecord: 3.5ms)


Started PUT "/api/v1/documents/1" for ::1 at 2016-07-17 10:55:58 -0400
Processing by Api::V1::DocumentsController#update as */*
  Parameters: {"data"=>{"attributes"=>{"content"=>"Be like Spock. 42 is also importaasfsfas"}}, "id"=>"1", "document"=>{}}
Unpermitted parameters: data, document
  [1m[36mDocument Load (0.6ms)[0m  [1m[34mSELECT  "documents".* FROM "documents" WHERE "documents"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  [1m[35m (0.5ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (1.0ms)[0m  [1m[33mUPDATE "documents" SET "content" = $1, "updated_at" = $2 WHERE "documents"."id" = $3[0m  [["content", "Be like Spock. 42 is also importaasfsfas"], ["updated_at", 2016-07-17 14:55:58 UTC], ["id", 1]]
  [1m[35m (2.2ms)[0m  [1m[35mCOMMIT[0m
[active_model_serializers] Rendered DocumentSerializer with ActiveModelSerializers::Adapter::JsonApi (15.94ms)
Completed 200 OK in 116ms (Views: 22.9ms | ActiveRecord: 5.0ms)


Started GET "/api/v1/documents/1" for ::1 at 2016-07-17 10:56:23 -0400
Processing by Api::V1::DocumentsController#show as */*
  Parameters: {"id"=>"1"}
  [1m[36mDocument Load (0.8ms)[0m  [1m[34mSELECT  "documents".* FROM "documents" WHERE "documents"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
[active_model_serializers] Rendered DocumentSerializer with ActiveModelSerializers::Adapter::JsonApi (21.49ms)
Completed 200 OK in 56ms (Views: 34.0ms | ActiveRecord: 5.2ms)


Started GET "/api/v1/documents/1" for ::1 at 2016-07-17 10:58:27 -0400
Processing by Api::V1::DocumentsController#show as */*
  Parameters: {"id"=>"1"}
  [1m[36mDocument Load (1.0ms)[0m  [1m[34mSELECT  "documents".* FROM "documents" WHERE "documents"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
[active_model_serializers] Rendered DocumentSerializer with ActiveModelSerializers::Adapter::JsonApi (25.33ms)
Completed 200 OK in 151ms (Views: 42.0ms | ActiveRecord: 1.0ms)


Started GET "/api/v1/documents/1" for ::1 at 2016-07-17 11:01:36 -0400
Processing by Api::V1::DocumentsController#show as */*
  Parameters: {"id"=>"1"}
  [1m[36mDocument Load (0.8ms)[0m  [1m[34mSELECT  "documents".* FROM "documents" WHERE "documents"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
[active_model_serializers] Rendered DocumentSerializer with ActiveModelSerializers::Adapter::JsonApi (25.03ms)
Completed 200 OK in 62ms (Views: 39.0ms | ActiveRecord: 0.8ms)


Started GET "/api/v1/documents/1" for ::1 at 2016-07-17 11:01:37 -0400
Processing by Api::V1::DocumentsController#show as */*
  Parameters: {"id"=>"1"}
  [1m[36mDocument Load (0.8ms)[0m  [1m[34mSELECT  "documents".* FROM "documents" WHERE "documents"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
[active_model_serializers] Rendered DocumentSerializer with ActiveModelSerializers::Adapter::JsonApi (23.58ms)
Completed 200 OK in 56ms (Views: 35.6ms | ActiveRecord: 0.8ms)


Started GET "/api/v1/documents/1" for ::1 at 2016-07-17 11:08:40 -0400
Processing by Api::V1::DocumentsController#show as */*
  Parameters: {"id"=>"1"}
  [1m[36mDocument Load (0.9ms)[0m  [1m[34mSELECT  "documents".* FROM "documents" WHERE "documents"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
[active_model_serializers] Rendered DocumentSerializer with ActiveModelSerializers::Adapter::JsonApi (27.03ms)
Completed 200 OK in 56ms (Views: 34.7ms | ActiveRecord: 0.9ms)


Started GET "/api/v1/documents/1" for ::1 at 2016-07-17 11:08:41 -0400
Processing by Api::V1::DocumentsController#show as */*
  Parameters: {"id"=>"1"}
  [1m[36mDocument Load (0.8ms)[0m  [1m[34mSELECT  "documents".* FROM "documents" WHERE "documents"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
[active_model_serializers] Rendered DocumentSerializer with ActiveModelSerializers::Adapter::JsonApi (21.34ms)
Completed 200 OK in 63ms (Views: 34.1ms | ActiveRecord: 1.5ms)


Started GET "/api/v1/documents/1" for ::1 at 2016-07-17 11:08:46 -0400
Processing by Api::V1::DocumentsController#show as */*
  Parameters: {"id"=>"1"}
  [1m[36mDocument Load (1.2ms)[0m  [1m[34mSELECT  "documents".* FROM "documents" WHERE "documents"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
[active_model_serializers] Rendered DocumentSerializer with ActiveModelSerializers::Adapter::JsonApi (26.86ms)
Completed 200 OK in 58ms (Views: 35.1ms | ActiveRecord: 1.2ms)


Started GET "/api/v1/documents/1" for ::1 at 2016-07-17 11:10:35 -0400
Processing by Api::V1::DocumentsController#show as */*
  Parameters: {"id"=>"1"}
  [1m[36mDocument Load (0.9ms)[0m  [1m[34mSELECT  "documents".* FROM "documents" WHERE "documents"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
[active_model_serializers] Rendered DocumentSerializer with ActiveModelSerializers::Adapter::JsonApi (22.15ms)
Completed 200 OK in 56ms (Views: 34.4ms | ActiveRecord: 0.9ms)


Started GET "/api/v1/documents/1" for ::1 at 2016-07-17 11:10:37 -0400
Processing by Api::V1::DocumentsController#show as */*
  Parameters: {"id"=>"1"}
  [1m[36mDocument Load (0.8ms)[0m  [1m[34mSELECT  "documents".* FROM "documents" WHERE "documents"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
[active_model_serializers] Rendered DocumentSerializer with ActiveModelSerializers::Adapter::JsonApi (25.6ms)
Completed 200 OK in 62ms (Views: 37.8ms | ActiveRecord: 0.8ms)


Started GET "/api/v1/documents/1" for ::1 at 2016-07-17 11:11:18 -0400
Processing by Api::V1::DocumentsController#show as */*
  Parameters: {"id"=>"1"}
  [1m[36mDocument Load (1.1ms)[0m  [1m[34mSELECT  "documents".* FROM "documents" WHERE "documents"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
[active_model_serializers] Rendered DocumentSerializer with ActiveModelSerializers::Adapter::JsonApi (23.52ms)
Completed 200 OK in 59ms (Views: 36.1ms | ActiveRecord: 1.1ms)


Started GET "/api/v1/documents/1" for ::1 at 2016-07-17 11:11:47 -0400
Processing by Api::V1::DocumentsController#show as */*
  Parameters: {"id"=>"1"}
  [1m[36mDocument Load (0.8ms)[0m  [1m[34mSELECT  "documents".* FROM "documents" WHERE "documents"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
[active_model_serializers] Rendered DocumentSerializer with ActiveModelSerializers::Adapter::JsonApi (21.76ms)
Completed 200 OK in 59ms (Views: 35.6ms | ActiveRecord: 0.8ms)


Started GET "/api/v1/documents/1" for ::1 at 2016-07-17 11:11:53 -0400
Processing by Api::V1::DocumentsController#show as */*
  Parameters: {"id"=>"1"}
  [1m[36mDocument Load (5.7ms)[0m  [1m[34mSELECT  "documents".* FROM "documents" WHERE "documents"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
[active_model_serializers] Rendered DocumentSerializer with ActiveModelSerializers::Adapter::JsonApi (18.58ms)
Completed 200 OK in 57ms (Views: 33.0ms | ActiveRecord: 5.7ms)


Started GET "/api/v1/documents/1" for ::1 at 2016-07-17 11:12:01 -0400
Processing by Api::V1::DocumentsController#show as */*
  Parameters: {"id"=>"1"}
  [1m[36mDocument Load (0.9ms)[0m  [1m[34mSELECT  "documents".* FROM "documents" WHERE "documents"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
[active_model_serializers] Rendered DocumentSerializer with ActiveModelSerializers::Adapter::JsonApi (29.25ms)
Completed 200 OK in 56ms (Views: 36.8ms | ActiveRecord: 0.9ms)


Started GET "/api/v1/documents/1" for ::1 at 2016-07-17 11:12:36 -0400
Processing by Api::V1::DocumentsController#show as */*
  Parameters: {"id"=>"1"}
  [1m[36mDocument Load (0.9ms)[0m  [1m[34mSELECT  "documents".* FROM "documents" WHERE "documents"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
[active_model_serializers] Rendered DocumentSerializer with ActiveModelSerializers::Adapter::JsonApi (21.82ms)
Completed 200 OK in 61ms (Views: 34.5ms | ActiveRecord: 0.9ms)


Started GET "/api/v1/documents/1" for ::1 at 2016-07-17 11:12:41 -0400
Processing by Api::V1::DocumentsController#show as */*
  Parameters: {"id"=>"1"}
  [1m[36mDocument Load (1.4ms)[0m  [1m[34mSELECT  "documents".* FROM "documents" WHERE "documents"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
[active_model_serializers] Rendered DocumentSerializer with ActiveModelSerializers::Adapter::JsonApi (27.3ms)
Completed 200 OK in 60ms (Views: 35.9ms | ActiveRecord: 1.4ms)


Started GET "/api/v1/documents/1" for ::1 at 2016-07-17 11:13:51 -0400
Processing by Api::V1::DocumentsController#show as */*
  Parameters: {"id"=>"1"}
  [1m[36mDocument Load (0.8ms)[0m  [1m[34mSELECT  "documents".* FROM "documents" WHERE "documents"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
[active_model_serializers] Rendered DocumentSerializer with ActiveModelSerializers::Adapter::JsonApi (25.91ms)
Completed 200 OK in 65ms (Views: 43.3ms | ActiveRecord: 0.8ms)


Started GET "/api/v1/documents/1" for ::1 at 2016-07-17 11:13:53 -0400
Processing by Api::V1::DocumentsController#show as */*
  Parameters: {"id"=>"1"}
  [1m[36mDocument Load (0.8ms)[0m  [1m[34mSELECT  "documents".* FROM "documents" WHERE "documents"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
[active_model_serializers] Rendered DocumentSerializer with ActiveModelSerializers::Adapter::JsonApi (25.99ms)
Completed 200 OK in 57ms (Views: 35.9ms | ActiveRecord: 0.8ms)


Started GET "/api/v1/documents/1" for ::1 at 2016-07-17 11:14:06 -0400
Processing by Api::V1::DocumentsController#show as */*
  Parameters: {"id"=>"1"}
  [1m[36mDocument Load (1.0ms)[0m  [1m[34mSELECT  "documents".* FROM "documents" WHERE "documents"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
[active_model_serializers] Rendered DocumentSerializer with ActiveModelSerializers::Adapter::JsonApi (59.14ms)
Completed 200 OK in 89ms (Views: 69.0ms | ActiveRecord: 1.0ms)


Started GET "/api/v1/documents/1" for ::1 at 2016-07-17 11:15:16 -0400
Processing by Api::V1::DocumentsController#show as */*
  Parameters: {"id"=>"1"}
  [1m[36mDocument Load (0.8ms)[0m  [1m[34mSELECT  "documents".* FROM "documents" WHERE "documents"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
[active_model_serializers] Rendered DocumentSerializer with ActiveModelSerializers::Adapter::JsonApi (17.46ms)
Completed 200 OK in 51ms (Views: 26.5ms | ActiveRecord: 0.8ms)


Started GET "/api/v1/documents/1" for ::1 at 2016-07-17 11:15:22 -0400
Processing by Api::V1::DocumentsController#show as */*
  Parameters: {"id"=>"1"}
  [1m[36mDocument Load (0.8ms)[0m  [1m[34mSELECT  "documents".* FROM "documents" WHERE "documents"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
[active_model_serializers] Rendered DocumentSerializer with ActiveModelSerializers::Adapter::JsonApi (21.57ms)
Completed 200 OK in 54ms (Views: 35.6ms | ActiveRecord: 0.8ms)


Started GET "/api/v1/documents/1" for ::1 at 2016-07-17 11:15:51 -0400
Processing by Api::V1::DocumentsController#show as */*
  Parameters: {"id"=>"1"}
  [1m[36mDocument Load (0.9ms)[0m  [1m[34mSELECT  "documents".* FROM "documents" WHERE "documents"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
[active_model_serializers] Rendered DocumentSerializer with ActiveModelSerializers::Adapter::JsonApi (19.32ms)
Completed 200 OK in 54ms (Views: 33.9ms | ActiveRecord: 0.9ms)


Started GET "/api/v1/documents/1" for ::1 at 2016-07-17 11:17:28 -0400
Processing by Api::V1::DocumentsController#show as */*
  Parameters: {"id"=>"1"}
  [1m[36mDocument Load (0.8ms)[0m  [1m[34mSELECT  "documents".* FROM "documents" WHERE "documents"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
[active_model_serializers] Rendered DocumentSerializer with ActiveModelSerializers::Adapter::JsonApi (19.58ms)
Completed 200 OK in 54ms (Views: 34.1ms | ActiveRecord: 0.8ms)


Started GET "/api/v1/documents/1" for ::1 at 2016-07-17 11:17:31 -0400
Processing by Api::V1::DocumentsController#show as */*
  Parameters: {"id"=>"1"}
  [1m[36mDocument Load (0.7ms)[0m  [1m[34mSELECT  "documents".* FROM "documents" WHERE "documents"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
[active_model_serializers] Rendered DocumentSerializer with ActiveModelSerializers::Adapter::JsonApi (21.31ms)
Completed 200 OK in 50ms (Views: 30.4ms | ActiveRecord: 0.7ms)


Started GET "/api/v1/documents/1" for ::1 at 2016-07-17 11:17:52 -0400
Processing by Api::V1::DocumentsController#show as */*
  Parameters: {"id"=>"1"}
  [1m[36mDocument Load (0.8ms)[0m  [1m[34mSELECT  "documents".* FROM "documents" WHERE "documents"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
[active_model_serializers] Rendered DocumentSerializer with ActiveModelSerializers::Adapter::JsonApi (19.97ms)
Completed 200 OK in 53ms (Views: 33.0ms | ActiveRecord: 0.8ms)


Started GET "/api/v1/documents/1" for ::1 at 2016-07-17 11:17:53 -0400
Processing by Api::V1::DocumentsController#show as */*
  Parameters: {"id"=>"1"}
  [1m[36mDocument Load (0.9ms)[0m  [1m[34mSELECT  "documents".* FROM "documents" WHERE "documents"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
[active_model_serializers] Rendered DocumentSerializer with ActiveModelSerializers::Adapter::JsonApi (20.41ms)
Completed 200 OK in 49ms (Views: 28.3ms | ActiveRecord: 0.9ms)


Started GET "/api/v1/documents/1" for ::1 at 2016-07-17 11:19:10 -0400
Processing by Api::V1::DocumentsController#show as */*
  Parameters: {"id"=>"1"}
  [1m[36mDocument Load (1.1ms)[0m  [1m[34mSELECT  "documents".* FROM "documents" WHERE "documents"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
[active_model_serializers] Rendered DocumentSerializer with ActiveModelSerializers::Adapter::JsonApi (20.7ms)
Completed 200 OK in 50ms (Views: 33.0ms | ActiveRecord: 1.1ms)


Started GET "/api/v1/documents/1" for ::1 at 2016-07-17 11:19:37 -0400
Processing by Api::V1::DocumentsController#show as */*
  Parameters: {"id"=>"1"}
  [1m[36mDocument Load (0.7ms)[0m  [1m[34mSELECT  "documents".* FROM "documents" WHERE "documents"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
[active_model_serializers] Rendered DocumentSerializer with ActiveModelSerializers::Adapter::JsonApi (22.07ms)
Completed 200 OK in 55ms (Views: 35.1ms | ActiveRecord: 0.7ms)


Started PUT "/api/v1/documents/1" for ::1 at 2016-07-17 11:19:39 -0400
Processing by Api::V1::DocumentsController#update as */*
  Parameters: {"data"=>{"attributes"=>{"title"=>"How to live long and prosper", "content"=>"Be like Spock. 42 is also importaasfsfas444"}}, "id"=>"1", "document"=>{}}
Unpermitted parameters: data, document
  [1m[36mDocument Load (0.6ms)[0m  [1m[34mSELECT  "documents".* FROM "documents" WHERE "documents"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  [1m[35m (0.6ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (1.2ms)[0m  [1m[33mUPDATE "documents" SET "title" = $1, "content" = $2, "updated_at" = $3 WHERE "documents"."id" = $4[0m  [["title", "How to live long and prosper"], ["content", "Be like Spock. 42 is also importaasfsfas444"], ["updated_at", 2016-07-17 15:19:39 UTC], ["id", 1]]
  [1m[35m (2.7ms)[0m  [1m[35mCOMMIT[0m
[active_model_serializers] Rendered DocumentSerializer with ActiveModelSerializers::Adapter::JsonApi (15.0ms)
Completed 200 OK in 105ms (Views: 24.0ms | ActiveRecord: 5.0ms)


Started GET "/api/v1/documents/1" for ::1 at 2016-07-17 11:19:41 -0400
Processing by Api::V1::DocumentsController#show as */*
  Parameters: {"id"=>"1"}
  [1m[36mDocument Load (0.7ms)[0m  [1m[34mSELECT  "documents".* FROM "documents" WHERE "documents"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
[active_model_serializers] Rendered DocumentSerializer with ActiveModelSerializers::Adapter::JsonApi (22.42ms)
Completed 200 OK in 53ms (Views: 32.1ms | ActiveRecord: 0.7ms)


Started GET "/api/v1/documents/1" for ::1 at 2016-07-17 11:19:57 -0400
Processing by Api::V1::DocumentsController#show as */*
  Parameters: {"id"=>"1"}
  [1m[36mDocument Load (0.7ms)[0m  [1m[34mSELECT  "documents".* FROM "documents" WHERE "documents"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
[active_model_serializers] Rendered DocumentSerializer with ActiveModelSerializers::Adapter::JsonApi (20.25ms)
Completed 200 OK in 52ms (Views: 34.8ms | ActiveRecord: 0.7ms)


Started GET "/api/v1/documents/1" for ::1 at 2016-07-17 11:19:59 -0400
Processing by Api::V1::DocumentsController#show as */*
  Parameters: {"id"=>"1"}
  [1m[36mDocument Load (1.0ms)[0m  [1m[34mSELECT  "documents".* FROM "documents" WHERE "documents"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
[active_model_serializers] Rendered DocumentSerializer with ActiveModelSerializers::Adapter::JsonApi (25.12ms)
Completed 200 OK in 55ms (Views: 33.2ms | ActiveRecord: 1.0ms)


Started GET "/api/v1/documents/1" for ::1 at 2016-07-17 11:20:48 -0400
Processing by Api::V1::DocumentsController#show as */*
  Parameters: {"id"=>"1"}
  [1m[36mDocument Load (0.6ms)[0m  [1m[34mSELECT  "documents".* FROM "documents" WHERE "documents"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
[active_model_serializers] Rendered DocumentSerializer with ActiveModelSerializers::Adapter::JsonApi (19.46ms)
Completed 200 OK in 55ms (Views: 33.9ms | ActiveRecord: 0.6ms)


Started GET "/api/v1/documents/1" for ::1 at 2016-07-17 11:25:24 -0400
Processing by Api::V1::DocumentsController#show as */*
  Parameters: {"id"=>"1"}
  [1m[36mDocument Load (0.8ms)[0m  [1m[34mSELECT  "documents".* FROM "documents" WHERE "documents"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
[active_model_serializers] Rendered DocumentSerializer with ActiveModelSerializers::Adapter::JsonApi (20.22ms)
Completed 200 OK in 51ms (Views: 30.1ms | ActiveRecord: 0.8ms)


Started GET "/api/v1/documents/1" for ::1 at 2016-07-17 11:25:25 -0400
Processing by Api::V1::DocumentsController#show as */*
  Parameters: {"id"=>"1"}
  [1m[36mDocument Load (0.8ms)[0m  [1m[34mSELECT  "documents".* FROM "documents" WHERE "documents"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
[active_model_serializers] Rendered DocumentSerializer with ActiveModelSerializers::Adapter::JsonApi (23.69ms)
Completed 200 OK in 64ms (Views: 38.4ms | ActiveRecord: 0.8ms)


Started GET "/api/v1/documents/1" for ::1 at 2016-07-17 11:25:40 -0400
Processing by Api::V1::DocumentsController#show as */*
  Parameters: {"id"=>"1"}
  [1m[36mDocument Load (0.9ms)[0m  [1m[34mSELECT  "documents".* FROM "documents" WHERE "documents"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
[active_model_serializers] Rendered DocumentSerializer with ActiveModelSerializers::Adapter::JsonApi (21.04ms)
Completed 200 OK in 56ms (Views: 30.8ms | ActiveRecord: 0.9ms)


Started GET "/api/v1/documents/1" for ::1 at 2016-07-17 11:25:42 -0400
Processing by Api::V1::DocumentsController#show as */*
  Parameters: {"id"=>"1"}
  [1m[36mDocument Load (0.7ms)[0m  [1m[34mSELECT  "documents".* FROM "documents" WHERE "documents"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
[active_model_serializers] Rendered DocumentSerializer with ActiveModelSerializers::Adapter::JsonApi (21.84ms)
Completed 200 OK in 58ms (Views: 36.7ms | ActiveRecord: 0.7ms)


Started GET "/api/v1/documents/1" for ::1 at 2016-07-17 11:25:48 -0400
Processing by Api::V1::DocumentsController#show as */*
  Parameters: {"id"=>"1"}
  [1m[36mDocument Load (4.2ms)[0m  [1m[34mSELECT  "documents".* FROM "documents" WHERE "documents"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
[active_model_serializers] Rendered DocumentSerializer with ActiveModelSerializers::Adapter::JsonApi (23.76ms)
Completed 200 OK in 55ms (Views: 32.5ms | ActiveRecord: 4.2ms)


Started GET "/api/v1/documents/1" for ::1 at 2016-07-17 11:26:00 -0400
Processing by Api::V1::DocumentsController#show as */*
  Parameters: {"id"=>"1"}
  [1m[36mDocument Load (0.9ms)[0m  [1m[34mSELECT  "documents".* FROM "documents" WHERE "documents"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
[active_model_serializers] Rendered DocumentSerializer with ActiveModelSerializers::Adapter::JsonApi (21.98ms)
Completed 200 OK in 52ms (Views: 31.7ms | ActiveRecord: 0.9ms)


Started GET "/api/v1/documents/1" for ::1 at 2016-07-17 11:29:26 -0400
Processing by Api::V1::DocumentsController#show as */*
  Parameters: {"id"=>"1"}
  [1m[36mDocument Load (0.8ms)[0m  [1m[34mSELECT  "documents".* FROM "documents" WHERE "documents"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
[active_model_serializers] Rendered DocumentSerializer with ActiveModelSerializers::Adapter::JsonApi (22.1ms)
Completed 200 OK in 57ms (Views: 37.0ms | ActiveRecord: 0.8ms)


Started GET "/api/v1/documents/1" for ::1 at 2016-07-17 11:29:27 -0400
Processing by Api::V1::DocumentsController#show as */*
  Parameters: {"id"=>"1"}
  [1m[36mDocument Load (0.7ms)[0m  [1m[34mSELECT  "documents".* FROM "documents" WHERE "documents"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
[active_model_serializers] Rendered DocumentSerializer with ActiveModelSerializers::Adapter::JsonApi (17.45ms)
Completed 200 OK in 45ms (Views: 28.9ms | ActiveRecord: 0.7ms)


Started GET "/api/v1/documents/1" for ::1 at 2016-07-17 11:29:43 -0400
Processing by Api::V1::DocumentsController#show as */*
  Parameters: {"id"=>"1"}
  [1m[36mDocument Load (0.7ms)[0m  [1m[34mSELECT  "documents".* FROM "documents" WHERE "documents"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
[active_model_serializers] Rendered DocumentSerializer with ActiveModelSerializers::Adapter::JsonApi (19.46ms)
Completed 200 OK in 52ms (Views: 31.9ms | ActiveRecord: 0.7ms)


Started GET "/api/v1/documents/1" for ::1 at 2016-07-17 11:31:39 -0400
Processing by Api::V1::DocumentsController#show as */*
  Parameters: {"id"=>"1"}
  [1m[36mDocument Load (0.7ms)[0m  [1m[34mSELECT  "documents".* FROM "documents" WHERE "documents"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
[active_model_serializers] Rendered DocumentSerializer with ActiveModelSerializers::Adapter::JsonApi (19.73ms)
Completed 200 OK in 54ms (Views: 33.9ms | ActiveRecord: 0.7ms)


Started PUT "/api/v1/documents/1" for ::1 at 2016-07-17 11:31:42 -0400
Processing by Api::V1::DocumentsController#update as */*
  Parameters: {"data"=>{"attributes"=>{"title"=>"How to live long and prosper", "content"=>"Be like Spock. 42 is also importaasfsfas444555"}}, "id"=>"1", "document"=>{}}
Unpermitted parameters: data, document
  [1m[36mDocument Load (0.6ms)[0m  [1m[34mSELECT  "documents".* FROM "documents" WHERE "documents"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  [1m[35m (0.9ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.8ms)[0m  [1m[33mUPDATE "documents" SET "content" = $1, "updated_at" = $2 WHERE "documents"."id" = $3[0m  [["content", "Be like Spock. 42 is also importaasfsfas444555"], ["updated_at", 2016-07-17 15:31:42 UTC], ["id", 1]]
  [1m[35m (2.8ms)[0m  [1m[35mCOMMIT[0m
[active_model_serializers] Rendered DocumentSerializer with ActiveModelSerializers::Adapter::JsonApi (17.84ms)
Completed 200 OK in 106ms (Views: 25.5ms | ActiveRecord: 5.2ms)


Started GET "/api/v1/documents/1" for ::1 at 2016-07-17 11:32:11 -0400
Processing by Api::V1::DocumentsController#show as */*
  Parameters: {"id"=>"1"}
  [1m[36mDocument Load (1.0ms)[0m  [1m[34mSELECT  "documents".* FROM "documents" WHERE "documents"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
[active_model_serializers] Rendered DocumentSerializer with ActiveModelSerializers::Adapter::JsonApi (22.23ms)
Completed 200 OK in 55ms (Views: 33.1ms | ActiveRecord: 1.0ms)


Started PUT "/api/v1/documents/1" for ::1 at 2016-07-17 11:32:13 -0400
Processing by Api::V1::DocumentsController#update as */*
  Parameters: {"data"=>{"attributes"=>{"title"=>"How to live long and prosper", "content"=>"Be like Spock. 42 is also importaasfsfas444555666"}}, "id"=>"1", "document"=>{}}
Unpermitted parameters: data, document
  [1m[36mDocument Load (0.7ms)[0m  [1m[34mSELECT  "documents".* FROM "documents" WHERE "documents"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  [1m[35m (0.5ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.9ms)[0m  [1m[33mUPDATE "documents" SET "content" = $1, "updated_at" = $2 WHERE "documents"."id" = $3[0m  [["content", "Be like Spock. 42 is also importaasfsfas444555666"], ["updated_at", 2016-07-17 15:32:13 UTC], ["id", 1]]
  [1m[35m (2.8ms)[0m  [1m[35mCOMMIT[0m
[active_model_serializers] Rendered DocumentSerializer with ActiveModelSerializers::Adapter::JsonApi (15.14ms)
Completed 200 OK in 108ms (Views: 22.2ms | ActiveRecord: 4.9ms)


Started GET "/api/v1/documents/1" for ::1 at 2016-07-17 11:33:58 -0400
Processing by Api::V1::DocumentsController#show as */*
  Parameters: {"id"=>"1"}
  [1m[36mDocument Load (0.7ms)[0m  [1m[34mSELECT  "documents".* FROM "documents" WHERE "documents"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
[active_model_serializers] Rendered DocumentSerializer with ActiveModelSerializers::Adapter::JsonApi (20.31ms)
Completed 200 OK in 54ms (Views: 31.9ms | ActiveRecord: 0.7ms)


Started GET "/api/v1/documents/1" for ::1 at 2016-07-17 11:34:00 -0400
Processing by Api::V1::DocumentsController#show as */*
  Parameters: {"id"=>"1"}
  [1m[36mDocument Load (0.7ms)[0m  [1m[34mSELECT  "documents".* FROM "documents" WHERE "documents"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
[active_model_serializers] Rendered DocumentSerializer with ActiveModelSerializers::Adapter::JsonApi (21.79ms)
Completed 200 OK in 56ms (Views: 36.4ms | ActiveRecord: 0.7ms)


Started GET "/api/v1/documents/1" for ::1 at 2016-07-17 11:34:28 -0400
Processing by Api::V1::DocumentsController#show as */*
  Parameters: {"id"=>"1"}
  [1m[36mDocument Load (0.7ms)[0m  [1m[34mSELECT  "documents".* FROM "documents" WHERE "documents"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
[active_model_serializers] Rendered DocumentSerializer with ActiveModelSerializers::Adapter::JsonApi (17.96ms)
Completed 200 OK in 51ms (Views: 31.2ms | ActiveRecord: 0.7ms)


Started PUT "/api/v1/documents/1" for ::1 at 2016-07-17 11:34:30 -0400
Processing by Api::V1::DocumentsController#update as */*
  Parameters: {"data"=>{"attributes"=>{"title"=>"How to live long and prosper", "content"=>"Be like Spock. 42 is also importaasfsfas444555666888"}}, "id"=>"1", "document"=>{}}
Unpermitted parameters: data, document
  [1m[36mDocument Load (0.6ms)[0m  [1m[34mSELECT  "documents".* FROM "documents" WHERE "documents"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  [1m[35m (0.6ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (1.3ms)[0m  [1m[33mUPDATE "documents" SET "content" = $1, "updated_at" = $2 WHERE "documents"."id" = $3[0m  [["content", "Be like Spock. 42 is also importaasfsfas444555666888"], ["updated_at", 2016-07-17 15:34:30 UTC], ["id", 1]]
  [1m[35m (3.1ms)[0m  [1m[35mCOMMIT[0m
[active_model_serializers] Rendered DocumentSerializer with ActiveModelSerializers::Adapter::JsonApi (14.77ms)
Completed 200 OK in 108ms (Views: 21.5ms | ActiveRecord: 5.7ms)


Started GET "/api/v1/documents/1" for ::1 at 2016-07-17 11:34:32 -0400
Processing by Api::V1::DocumentsController#show as */*
  Parameters: {"id"=>"1"}
  [1m[36mDocument Load (0.7ms)[0m  [1m[34mSELECT  "documents".* FROM "documents" WHERE "documents"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
[active_model_serializers] Rendered DocumentSerializer with ActiveModelSerializers::Adapter::JsonApi (21.47ms)
Completed 200 OK in 56ms (Views: 35.9ms | ActiveRecord: 0.7ms)


Started GET "/api/v1/documents/1" for ::1 at 2016-07-17 11:37:30 -0400
Processing by Api::V1::DocumentsController#show as */*
  Parameters: {"id"=>"1"}
  [1m[36mDocument Load (0.7ms)[0m  [1m[34mSELECT  "documents".* FROM "documents" WHERE "documents"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
[active_model_serializers] Rendered DocumentSerializer with ActiveModelSerializers::Adapter::JsonApi (19.17ms)
Completed 200 OK in 51ms (Views: 31.9ms | ActiveRecord: 0.7ms)


Started GET "/api/v1/documents/1" for ::1 at 2016-07-17 11:37:31 -0400
Processing by Api::V1::DocumentsController#show as */*
  Parameters: {"id"=>"1"}
  [1m[36mDocument Load (0.8ms)[0m  [1m[34mSELECT  "documents".* FROM "documents" WHERE "documents"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
[active_model_serializers] Rendered DocumentSerializer with ActiveModelSerializers::Adapter::JsonApi (18.97ms)
Completed 200 OK in 51ms (Views: 28.2ms | ActiveRecord: 0.8ms)


Started PUT "/api/v1/documents/1" for ::1 at 2016-07-17 11:37:32 -0400
Processing by Api::V1::DocumentsController#update as */*
  Parameters: {"data"=>{"attributes"=>{"title"=>"How to live long and prosper", "content"=>"Be like Spock. 42 is also importaasfsfas444555666888999"}}, "id"=>"1", "document"=>{}}
Unpermitted parameters: data, document
  [1m[36mDocument Load (0.6ms)[0m  [1m[34mSELECT  "documents".* FROM "documents" WHERE "documents"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  [1m[35m (0.5ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.9ms)[0m  [1m[33mUPDATE "documents" SET "content" = $1, "updated_at" = $2 WHERE "documents"."id" = $3[0m  [["content", "Be like Spock. 42 is also importaasfsfas444555666888999"], ["updated_at", 2016-07-17 15:37:33 UTC], ["id", 1]]
  [1m[35m (2.8ms)[0m  [1m[35mCOMMIT[0m
[active_model_serializers] Rendered DocumentSerializer with ActiveModelSerializers::Adapter::JsonApi (16.26ms)
Completed 200 OK in 107ms (Views: 25.3ms | ActiveRecord: 4.8ms)


Started GET "/api/v1/documents/1" for ::1 at 2016-07-17 11:37:34 -0400
Processing by Api::V1::DocumentsController#show as */*
  Parameters: {"id"=>"1"}
  [1m[36mDocument Load (3.8ms)[0m  [1m[34mSELECT  "documents".* FROM "documents" WHERE "documents"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
[active_model_serializers] Rendered DocumentSerializer with ActiveModelSerializers::Adapter::JsonApi (19.42ms)
Completed 200 OK in 53ms (Views: 33.3ms | ActiveRecord: 3.8ms)


Started GET "/api/v1/documents/1" for ::1 at 2016-07-17 11:38:15 -0400
Processing by Api::V1::DocumentsController#show as */*
  Parameters: {"id"=>"1"}
  [1m[36mDocument Load (1.1ms)[0m  [1m[34mSELECT  "documents".* FROM "documents" WHERE "documents"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
[active_model_serializers] Rendered DocumentSerializer with ActiveModelSerializers::Adapter::JsonApi (18.36ms)
Completed 200 OK in 59ms (Views: 31.0ms | ActiveRecord: 1.1ms)


Started GET "/api/v1/documents/1" for ::1 at 2016-07-17 11:38:18 -0400
Processing by Api::V1::DocumentsController#show as */*
  Parameters: {"id"=>"1"}
  [1m[36mDocument Load (0.7ms)[0m  [1m[34mSELECT  "documents".* FROM "documents" WHERE "documents"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
[active_model_serializers] Rendered DocumentSerializer with ActiveModelSerializers::Adapter::JsonApi (25.46ms)
Completed 200 OK in 51ms (Views: 33.1ms | ActiveRecord: 0.7ms)


Started GET "/api/v1/documents/1" for ::1 at 2016-07-17 11:44:29 -0400
Processing by Api::V1::DocumentsController#show as */*
  Parameters: {"id"=>"1"}
  [1m[36mDocument Load (0.7ms)[0m  [1m[34mSELECT  "documents".* FROM "documents" WHERE "documents"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
[active_model_serializers] Rendered DocumentSerializer with ActiveModelSerializers::Adapter::JsonApi (23.16ms)
Completed 200 OK in 62ms (Views: 39.0ms | ActiveRecord: 0.7ms)


Started GET "/api/v1/documents/1" for ::1 at 2016-07-17 11:44:49 -0400
Processing by Api::V1::DocumentsController#show as */*
  Parameters: {"id"=>"1"}
  [1m[36mDocument Load (0.6ms)[0m  [1m[34mSELECT  "documents".* FROM "documents" WHERE "documents"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
[active_model_serializers] Rendered DocumentSerializer with ActiveModelSerializers::Adapter::JsonApi (17.74ms)
Completed 200 OK in 49ms (Views: 29.8ms | ActiveRecord: 0.6ms)


Started GET "/api/v1/documents/1" for ::1 at 2016-07-17 11:44:50 -0400
Processing by Api::V1::DocumentsController#show as */*
  Parameters: {"id"=>"1"}
  [1m[36mDocument Load (0.7ms)[0m  [1m[34mSELECT  "documents".* FROM "documents" WHERE "documents"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
[active_model_serializers] Rendered DocumentSerializer with ActiveModelSerializers::Adapter::JsonApi (19.74ms)
Completed 200 OK in 52ms (Views: 31.6ms | ActiveRecord: 0.7ms)


Started GET "/api/v1/documents/1" for ::1 at 2016-07-17 11:45:14 -0400
Processing by Api::V1::DocumentsController#show as */*
  Parameters: {"id"=>"1"}
  [1m[36mDocument Load (0.7ms)[0m  [1m[34mSELECT  "documents".* FROM "documents" WHERE "documents"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
[active_model_serializers] Rendered DocumentSerializer with ActiveModelSerializers::Adapter::JsonApi (17.08ms)
Completed 200 OK in 49ms (Views: 29.3ms | ActiveRecord: 0.7ms)


Started PUT "/api/v1/documents/1" for ::1 at 2016-07-17 11:45:21 -0400
Processing by Api::V1::DocumentsController#update as */*
  Parameters: {"data"=>{"attributes"=>{"title"=>"How to live long and prosper", "content"=>"Be like Spock. 42 is also importaasfsfas444555666888999333"}}, "id"=>"1", "document"=>{}}
Unpermitted parameters: data, document
  [1m[36mDocument Load (0.7ms)[0m  [1m[34mSELECT  "documents".* FROM "documents" WHERE "documents"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  [1m[35m (0.6ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (1.0ms)[0m  [1m[33mUPDATE "documents" SET "content" = $1, "updated_at" = $2 WHERE "documents"."id" = $3[0m  [["content", "Be like Spock. 42 is also importaasfsfas444555666888999333"], ["updated_at", 2016-07-17 15:45:21 UTC], ["id", 1]]
  [1m[35m (2.9ms)[0m  [1m[35mCOMMIT[0m
[active_model_serializers] Rendered DocumentSerializer with ActiveModelSerializers::Adapter::JsonApi (15.03ms)
Completed 200 OK in 105ms (Views: 29.0ms | ActiveRecord: 5.1ms)


Started GET "/api/v1/documents/1" for ::1 at 2016-07-17 11:45:22 -0400
Processing by Api::V1::DocumentsController#show as */*
  Parameters: {"id"=>"1"}
  [1m[36mDocument Load (0.7ms)[0m  [1m[34mSELECT  "documents".* FROM "documents" WHERE "documents"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
[active_model_serializers] Rendered DocumentSerializer with ActiveModelSerializers::Adapter::JsonApi (19.21ms)
Completed 200 OK in 47ms (Views: 28.6ms | ActiveRecord: 0.7ms)


Started GET "/api/v1/documents/1" for ::1 at 2016-07-17 11:48:46 -0400
Processing by Api::V1::DocumentsController#show as */*
  Parameters: {"id"=>"1"}
  [1m[36mDocument Load (0.7ms)[0m  [1m[34mSELECT  "documents".* FROM "documents" WHERE "documents"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
[active_model_serializers] Rendered DocumentSerializer with ActiveModelSerializers::Adapter::JsonApi (16.02ms)
Completed 200 OK in 40ms (Views: 22.7ms | ActiveRecord: 0.7ms)


Started GET "/api/v1/documents/1" for ::1 at 2016-07-17 11:49:56 -0400
Processing by Api::V1::DocumentsController#show as */*
  Parameters: {"id"=>"1"}
  [1m[36mDocument Load (0.7ms)[0m  [1m[34mSELECT  "documents".* FROM "documents" WHERE "documents"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
[active_model_serializers] Rendered DocumentSerializer with ActiveModelSerializers::Adapter::JsonApi (16.96ms)
Completed 200 OK in 45ms (Views: 25.2ms | ActiveRecord: 0.7ms)


Started GET "/api/v1/documents/1" for ::1 at 2016-07-17 11:50:33 -0400
Processing by Api::V1::DocumentsController#show as */*
  Parameters: {"id"=>"1"}
  [1m[36mDocument Load (0.7ms)[0m  [1m[34mSELECT  "documents".* FROM "documents" WHERE "documents"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
[active_model_serializers] Rendered DocumentSerializer with ActiveModelSerializers::Adapter::JsonApi (18.02ms)
Completed 200 OK in 49ms (Views: 29.8ms | ActiveRecord: 0.7ms)


Started GET "/api/v1/documents/1" for ::1 at 2016-07-17 11:51:37 -0400
Processing by Api::V1::DocumentsController#show as */*
  Parameters: {"id"=>"1"}
  [1m[36mDocument Load (0.6ms)[0m  [1m[34mSELECT  "documents".* FROM "documents" WHERE "documents"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
[active_model_serializers] Rendered DocumentSerializer with ActiveModelSerializers::Adapter::JsonApi (18.27ms)
Completed 200 OK in 49ms (Views: 30.0ms | ActiveRecord: 0.6ms)


Started GET "/api/v1/documents/1" for ::1 at 2016-07-17 11:53:05 -0400
Processing by Api::V1::DocumentsController#show as */*
  Parameters: {"id"=>"1"}
  [1m[36mDocument Load (0.7ms)[0m  [1m[34mSELECT  "documents".* FROM "documents" WHERE "documents"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
[active_model_serializers] Rendered DocumentSerializer with ActiveModelSerializers::Adapter::JsonApi (17.49ms)
Completed 200 OK in 49ms (Views: 25.2ms | ActiveRecord: 0.7ms)


Started GET "/api/v1/documents/1" for ::1 at 2016-07-17 11:53:05 -0400
Processing by Api::V1::DocumentsController#show as */*
  Parameters: {"id"=>"1"}
  [1m[36mDocument Load (0.7ms)[0m  [1m[34mSELECT  "documents".* FROM "documents" WHERE "documents"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
[active_model_serializers] Rendered DocumentSerializer with ActiveModelSerializers::Adapter::JsonApi (19.95ms)
Completed 200 OK in 45ms (Views: 27.0ms | ActiveRecord: 0.7ms)


Started GET "/api/v1/documents/1" for ::1 at 2016-07-17 11:57:17 -0400
Processing by Api::V1::DocumentsController#show as */*
  Parameters: {"id"=>"1"}
  [1m[36mDocument Load (0.7ms)[0m  [1m[34mSELECT  "documents".* FROM "documents" WHERE "documents"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
[active_model_serializers] Rendered DocumentSerializer with ActiveModelSerializers::Adapter::JsonApi (17.64ms)
Completed 200 OK in 45ms (Views: 26.3ms | ActiveRecord: 0.7ms)


Started GET "/api/v1/documents/1" for ::1 at 2016-07-17 11:57:18 -0400
Processing by Api::V1::DocumentsController#show as */*
  Parameters: {"id"=>"1"}
  [1m[36mDocument Load (0.9ms)[0m  [1m[34mSELECT  "documents".* FROM "documents" WHERE "documents"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
[active_model_serializers] Rendered DocumentSerializer with ActiveModelSerializers::Adapter::JsonApi (19.11ms)
Completed 200 OK in 53ms (Views: 31.8ms | ActiveRecord: 0.9ms)


Started GET "/api/v1/documents/1" for ::1 at 2016-07-17 11:57:42 -0400
Processing by Api::V1::DocumentsController#show as */*
  Parameters: {"id"=>"1"}
  [1m[36mDocument Load (1.2ms)[0m  [1m[34mSELECT  "documents".* FROM "documents" WHERE "documents"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
[active_model_serializers] Rendered DocumentSerializer with ActiveModelSerializers::Adapter::JsonApi (19.89ms)
Completed 200 OK in 57ms (Views: 29.9ms | ActiveRecord: 1.2ms)


Started PUT "/api/v1/documents/1" for ::1 at 2016-07-17 11:57:44 -0400
Processing by Api::V1::DocumentsController#update as */*
  Parameters: {"data"=>{"attributes"=>{"title"=>"How to live long and prosper", "content"=>"Be like Spock. 42 is also importaasfsfas444555666888999333sss"}}, "id"=>"1", "document"=>{}}
Unpermitted parameters: data, document
  [1m[36mDocument Load (0.7ms)[0m  [1m[34mSELECT  "documents".* FROM "documents" WHERE "documents"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  [1m[35m (0.5ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (1.2ms)[0m  [1m[33mUPDATE "documents" SET "content" = $1, "updated_at" = $2 WHERE "documents"."id" = $3[0m  [["content", "Be like Spock. 42 is also importaasfsfas444555666888999333sss"], ["updated_at", 2016-07-17 15:57:44 UTC], ["id", 1]]
  [1m[35m (3.1ms)[0m  [1m[35mCOMMIT[0m
[active_model_serializers] Rendered DocumentSerializer with ActiveModelSerializers::Adapter::JsonApi (15.86ms)
Completed 200 OK in 114ms (Views: 25.1ms | ActiveRecord: 5.6ms)


Started GET "/api/v1/documents/1" for ::1 at 2016-07-17 11:57:45 -0400
Processing by Api::V1::DocumentsController#show as */*
  Parameters: {"id"=>"1"}
  [1m[36mDocument Load (0.7ms)[0m  [1m[34mSELECT  "documents".* FROM "documents" WHERE "documents"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
[active_model_serializers] Rendered DocumentSerializer with ActiveModelSerializers::Adapter::JsonApi (20.15ms)
Completed 200 OK in 49ms (Views: 28.8ms | ActiveRecord: 0.7ms)


Started GET "/api/v1/documents/1" for ::1 at 2016-07-17 11:59:00 -0400
Processing by Api::V1::DocumentsController#show as */*
  Parameters: {"id"=>"1"}
  [1m[36mDocument Load (0.7ms)[0m  [1m[34mSELECT  "documents".* FROM "documents" WHERE "documents"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
[active_model_serializers] Rendered DocumentSerializer with ActiveModelSerializers::Adapter::JsonApi (17.51ms)
Completed 200 OK in 49ms (Views: 29.5ms | ActiveRecord: 0.7ms)


Started GET "/api/v1/documents/1" for ::1 at 2016-07-17 11:59:01 -0400
Processing by Api::V1::DocumentsController#show as */*
  Parameters: {"id"=>"1"}
  [1m[36mDocument Load (3.9ms)[0m  [1m[34mSELECT  "documents".* FROM "documents" WHERE "documents"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
[active_model_serializers] Rendered DocumentSerializer with ActiveModelSerializers::Adapter::JsonApi (19.41ms)
Completed 200 OK in 49ms (Views: 30.7ms | ActiveRecord: 3.9ms)


Started GET "/api/v1/documents/1" for ::1 at 2016-07-17 12:00:24 -0400
Processing by Api::V1::DocumentsController#show as */*
  Parameters: {"id"=>"1"}
  [1m[36mDocument Load (0.7ms)[0m  [1m[34mSELECT  "documents".* FROM "documents" WHERE "documents"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
[active_model_serializers] Rendered DocumentSerializer with ActiveModelSerializers::Adapter::JsonApi (21.48ms)
Completed 200 OK in 47ms (Views: 28.7ms | ActiveRecord: 0.7ms)


Started PUT "/api/v1/documents/1" for ::1 at 2016-07-17 12:00:26 -0400
Processing by Api::V1::DocumentsController#update as */*
  Parameters: {"data"=>{"attributes"=>{"title"=>"How to live long and prosper", "content"=>"Be like Spock. 42 is also importaasfsfas444555666888999333sssrrr"}}, "id"=>"1", "document"=>{}}
Unpermitted parameters: data, document
  [1m[36mDocument Load (0.6ms)[0m  [1m[34mSELECT  "documents".* FROM "documents" WHERE "documents"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  [1m[35m (0.9ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.8ms)[0m  [1m[33mUPDATE "documents" SET "content" = $1, "updated_at" = $2 WHERE "documents"."id" = $3[0m  [["content", "Be like Spock. 42 is also importaasfsfas444555666888999333sssrrr"], ["updated_at", 2016-07-17 16:00:26 UTC], ["id", 1]]
  [1m[35m (3.3ms)[0m  [1m[35mCOMMIT[0m
[active_model_serializers] Rendered DocumentSerializer with ActiveModelSerializers::Adapter::JsonApi (14.58ms)
Completed 200 OK in 112ms (Views: 21.6ms | ActiveRecord: 5.6ms)


Started GET "/api/v1/documents/1" for ::1 at 2016-07-17 12:00:27 -0400
Processing by Api::V1::DocumentsController#show as */*
  Parameters: {"id"=>"1"}
  [1m[36mDocument Load (0.7ms)[0m  [1m[34mSELECT  "documents".* FROM "documents" WHERE "documents"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
[active_model_serializers] Rendered DocumentSerializer with ActiveModelSerializers::Adapter::JsonApi (18.98ms)
Completed 200 OK in 51ms (Views: 30.2ms | ActiveRecord: 0.7ms)


Started GET "/api/v1/documents/1" for ::1 at 2016-07-17 12:12:12 -0400
Processing by Api::V1::DocumentsController#show as */*
  Parameters: {"id"=>"1"}
  [1m[36mDocument Load (0.8ms)[0m  [1m[34mSELECT  "documents".* FROM "documents" WHERE "documents"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
[active_model_serializers] Rendered DocumentSerializer with ActiveModelSerializers::Adapter::JsonApi (25.36ms)
Completed 200 OK in 143ms (Views: 37.5ms | ActiveRecord: 0.8ms)


Started GET "/api/v1/documents/1" for ::1 at 2016-07-17 12:12:47 -0400
Processing by Api::V1::DocumentsController#show as */*
  Parameters: {"id"=>"1"}
  [1m[36mDocument Load (0.7ms)[0m  [1m[34mSELECT  "documents".* FROM "documents" WHERE "documents"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
[active_model_serializers] Rendered DocumentSerializer with ActiveModelSerializers::Adapter::JsonApi (22.78ms)
Completed 200 OK in 53ms (Views: 30.9ms | ActiveRecord: 0.7ms)


Started GET "/api/v1/documents/1" for ::1 at 2016-07-17 12:13:45 -0400
Processing by Api::V1::DocumentsController#show as */*
  Parameters: {"id"=>"1"}
  [1m[36mDocument Load (0.8ms)[0m  [1m[34mSELECT  "documents".* FROM "documents" WHERE "documents"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
[active_model_serializers] Rendered DocumentSerializer with ActiveModelSerializers::Adapter::JsonApi (17.95ms)
Completed 200 OK in 49ms (Views: 29.4ms | ActiveRecord: 0.8ms)


Started GET "/api/v1/documents/1" for ::1 at 2016-07-17 12:14:35 -0400
Processing by Api::V1::DocumentsController#show as */*
  Parameters: {"id"=>"1"}
  [1m[36mDocument Load (0.7ms)[0m  [1m[34mSELECT  "documents".* FROM "documents" WHERE "documents"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
[active_model_serializers] Rendered DocumentSerializer with ActiveModelSerializers::Adapter::JsonApi (17.81ms)
Completed 200 OK in 45ms (Views: 25.6ms | ActiveRecord: 0.7ms)


Started GET "/api/v1/documents/1" for ::1 at 2016-07-17 12:15:16 -0400
Processing by Api::V1::DocumentsController#show as */*
  Parameters: {"id"=>"1"}
  [1m[36mDocument Load (0.7ms)[0m  [1m[34mSELECT  "documents".* FROM "documents" WHERE "documents"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
[active_model_serializers] Rendered DocumentSerializer with ActiveModelSerializers::Adapter::JsonApi (17.8ms)
Completed 200 OK in 50ms (Views: 26.4ms | ActiveRecord: 0.7ms)


Started GET "/api/v1/documents/1" for ::1 at 2016-07-17 12:16:32 -0400
Processing by Api::V1::DocumentsController#show as */*
  Parameters: {"id"=>"1"}
  [1m[36mDocument Load (0.7ms)[0m  [1m[34mSELECT  "documents".* FROM "documents" WHERE "documents"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
[active_model_serializers] Rendered DocumentSerializer with ActiveModelSerializers::Adapter::JsonApi (18.86ms)
Completed 200 OK in 51ms (Views: 31.0ms | ActiveRecord: 0.7ms)


Started GET "/api/v1/documents/1" for ::1 at 2016-07-17 12:16:33 -0400
Processing by Api::V1::DocumentsController#show as */*
  Parameters: {"id"=>"1"}
  [1m[36mDocument Load (0.7ms)[0m  [1m[34mSELECT  "documents".* FROM "documents" WHERE "documents"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
[active_model_serializers] Rendered DocumentSerializer with ActiveModelSerializers::Adapter::JsonApi (18.65ms)
Completed 200 OK in 51ms (Views: 31.2ms | ActiveRecord: 0.7ms)


Started PUT "/api/v1/documents/1" for ::1 at 2016-07-17 12:17:08 -0400
Processing by Api::V1::DocumentsController#update as */*
  Parameters: {"data"=>{"attributes"=>{"title"=>"How to live long and propser", "content"=>"Be like Spock. 42 is also important."}}, "id"=>"1", "document"=>{}}
Unpermitted parameters: data, document
  [1m[36mDocument Load (1.0ms)[0m  [1m[34mSELECT  "documents".* FROM "documents" WHERE "documents"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  [1m[35m (3.8ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.9ms)[0m  [1m[33mUPDATE "documents" SET "title" = $1, "content" = $2, "updated_at" = $3 WHERE "documents"."id" = $4[0m  [["title", "How to live long and propser"], ["content", "Be like Spock. 42 is also important."], ["updated_at", 2016-07-17 16:17:08 UTC], ["id", 1]]
  [1m[35m (3.2ms)[0m  [1m[35mCOMMIT[0m
[active_model_serializers] Rendered DocumentSerializer with ActiveModelSerializers::Adapter::JsonApi (15.88ms)
Completed 200 OK in 116ms (Views: 24.8ms | ActiveRecord: 8.9ms)


Started PUT "/api/v1/documents/1" for ::1 at 2016-07-17 12:17:10 -0400
Processing by Api::V1::DocumentsController#update as */*
  Parameters: {"data"=>{"attributes"=>{"title"=>"How to live long and propser", "content"=>"Be like Spock. 42 is also important. Ok?"}}, "id"=>"1", "document"=>{}}
Unpermitted parameters: data, document
  [1m[36mDocument Load (0.9ms)[0m  [1m[34mSELECT  "documents".* FROM "documents" WHERE "documents"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  [1m[35m (0.5ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.9ms)[0m  [1m[33mUPDATE "documents" SET "content" = $1, "updated_at" = $2 WHERE "documents"."id" = $3[0m  [["content", "Be like Spock. 42 is also important. Ok?"], ["updated_at", 2016-07-17 16:17:10 UTC], ["id", 1]]
  [1m[35m (2.8ms)[0m  [1m[35mCOMMIT[0m
[active_model_serializers] Rendered DocumentSerializer with ActiveModelSerializers::Adapter::JsonApi (17.54ms)
Completed 200 OK in 103ms (Views: 24.2ms | ActiveRecord: 5.1ms)


Started PUT "/api/v1/documents/1" for ::1 at 2016-07-17 12:17:10 -0400
Processing by Api::V1::DocumentsController#update as */*
  Parameters: {"data"=>{"attributes"=>{"title"=>"How to live long and propser", "content"=>"Be like Spock. 42 is also important. Ok? Yes"}}, "id"=>"1", "document"=>{}}
Unpermitted parameters: data, document
  [1m[36mDocument Load (0.7ms)[0m  [1m[34mSELECT  "documents".* FROM "documents" WHERE "documents"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  [1m[35m (0.5ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (1.5ms)[0m  [1m[33mUPDATE "documents" SET "content" = $1, "updated_at" = $2 WHERE "documents"."id" = $3[0m  [["content", "Be like Spock. 42 is also important. Ok? Yes"], ["updated_at", 2016-07-17 16:17:10 UTC], ["id", 1]]
  [1m[35m (2.9ms)[0m  [1m[35mCOMMIT[0m
[active_model_serializers] Rendered DocumentSerializer with ActiveModelSerializers::Adapter::JsonApi (14.89ms)
Completed 200 OK in 111ms (Views: 24.5ms | ActiveRecord: 5.6ms)


Started GET "/api/v1/documents/1" for ::1 at 2016-07-17 12:17:13 -0400
Processing by Api::V1::DocumentsController#show as */*
  Parameters: {"id"=>"1"}
  [1m[36mDocument Load (0.8ms)[0m  [1m[34mSELECT  "documents".* FROM "documents" WHERE "documents"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
[active_model_serializers] Rendered DocumentSerializer with ActiveModelSerializers::Adapter::JsonApi (18.77ms)
Completed 200 OK in 51ms (Views: 27.2ms | ActiveRecord: 0.8ms)


Started GET "/api/v1/documents/1" for ::1 at 2016-07-17 12:17:14 -0400
Processing by Api::V1::DocumentsController#show as */*
  Parameters: {"id"=>"1"}
  [1m[36mDocument Load (0.9ms)[0m  [1m[34mSELECT  "documents".* FROM "documents" WHERE "documents"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
[active_model_serializers] Rendered DocumentSerializer with ActiveModelSerializers::Adapter::JsonApi (19.83ms)
Completed 200 OK in 53ms (Views: 32.9ms | ActiveRecord: 0.9ms)


Started PUT "/api/v1/documents/1" for ::1 at 2016-07-17 12:18:07 -0400
Processing by Api::V1::DocumentsController#update as */*
  Parameters: {"data"=>{"attributes"=>{"title"=>"", "content"=>"Be like Spock. 42 is also important. Ok? Yes pl"}}, "id"=>"1", "document"=>{}}
Unpermitted parameters: data, document
  [1m[36mDocument Load (0.7ms)[0m  [1m[34mSELECT  "documents".* FROM "documents" WHERE "documents"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
Started GET "/api/v1/documents/1" for ::1 at 2016-07-17 12:20:00 -0400
Started PUT "/api/v1/documents/1" for ::1 at 2016-07-17 12:20:00 -0400
Started PUT "/api/v1/documents/1" for ::1 at 2016-07-17 12:20:00 -0400
Completed 500 Internal Server Error in 112576ms (ActiveRecord: 0.7ms)


  
SystemExit (exit):
  
app/controllers/api/v1/documents_controller.rb:7:in `update'
Processing by Api::V1::DocumentsController#show as */*
  Parameters: {"id"=>"1"}
Processing by Api::V1::DocumentsController#update as */*
  Parameters: {"data"=>{"attributes"=>{"title"=>"", "content"=>"Be like Spock. 42 is also important. Ok? Yes please wor"}}, "id"=>"1", "document"=>{"data"=>{"attributes"=>{"title"=>"", "content"=>"Be like Spock. 42 is also important. Ok? Yes please wor"}}}}
Unpermitted parameters: data, document
Started GET "/api/v1/documents/1" for ::1 at 2016-07-17 12:20:13 -0400
Processing by Api::V1::DocumentsController#show as */*
  Parameters: {"id"=>"1"}
Started GET "/api/v1/documents/1" for ::1 at 2016-07-17 12:20:13 -0400
Processing by Api::V1::DocumentsController#show as */*
  Parameters: {"id"=>"1"}
Processing by Api::V1::DocumentsController#update as */*
  Parameters: {"data"=>{"attributes"=>{"title"=>"", "content"=>"Be like Spock. 42 is also important. Ok? Yes please"}}, "id"=>"1", "document"=>{}}
Unpermitted parameters: data, document
  [1m[36mDocument Load (27.0ms)[0m  [1m[34mSELECT  "documents".* FROM "documents" WHERE "documents"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  [1m[36mDocument Load (83.7ms)[0m  [1m[34mSELECT  "documents".* FROM "documents" WHERE "documents"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  [1m[36mDocument Load (67884.0ms)[0m  [1m[34mSELECT  "documents".* FROM "documents" WHERE "documents"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  [1m[36mDocument Load (64302.9ms)[0m  [1m[34mSELECT  "documents".* FROM "documents" WHERE "documents"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  [1m[36mDocument Load (67912.7ms)[0m  [1m[34mSELECT  "documents".* FROM "documents" WHERE "documents"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
Completed 500 Internal Server Error in 69911ms (ActiveRecord: 174.3ms)


Completed 500 Internal Server Error in 70083ms (ActiveRecord: 68041.9ms)


  
  
SystemExit (exit):
SystemExit (exit):
  
  
app/controllers/api/v1/documents_controller.rb:7:in `update'
app/controllers/api/v1/documents_controller.rb:7:in `update'
[active_model_serializers] Rendered DocumentSerializer with ActiveModelSerializers::Adapter::JsonApi (28.75ms)
Completed 200 OK in 73130ms (Views: 3031.6ms | ActiveRecord: 68102.9ms)


[active_model_serializers] Rendered DocumentSerializer with ActiveModelSerializers::Adapter::JsonApi (17.69ms)
[active_model_serializers] Rendered DocumentSerializer with ActiveModelSerializers::Adapter::JsonApi (19.53ms)
Completed 200 OK in 73081ms (Views: 5079.5ms | ActiveRecord: 121.3ms)


Started PUT "/api/v1/documents/1" for ::1 at 2016-07-17 12:21:26 -0400
Started PUT "/api/v1/documents/1" for ::1 at 2016-07-17 12:21:26 -0400
Completed 200 OK in 73136ms (Views: 3130.0ms | ActiveRecord: 68011.0ms)


Started GET "/api/v1/documents/1" for ::1 at 2016-07-17 12:21:27 -0400
Processing by Api::V1::DocumentsController#update as */*
Processing by Api::V1::DocumentsController#update as */*
Processing by Api::V1::DocumentsController#show as */*
  Parameters: {"data"=>{"attributes"=>{"title"=>"aaassdd", "content"=>"asf"}}, "id"=>"1", "document"=>{}}
  Parameters: {"data"=>{"attributes"=>{"title"=>"aaassdd", "content"=>"asfasss"}}, "id"=>"1", "document"=>{}}
  Parameters: {"id"=>"1"}
Unpermitted parameters: data, document
Unpermitted parameters: data, document
  [1m[36mDocument Load (13.4ms)[0m  [1m[34mSELECT  "documents".* FROM "documents" WHERE "documents"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
[active_model_serializers] Rendered DocumentSerializer with ActiveModelSerializers::Adapter::JsonApi (16.27ms)
Completed 200 OK in 56ms (Views: 26.2ms | ActiveRecord: 13.4ms)


  [1m[36mDocument Load (50.4ms)[0m  [1m[34mSELECT  "documents".* FROM "documents" WHERE "documents"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  [1m[36mDocument Load (51.2ms)[0m  [1m[34mSELECT  "documents".* FROM "documents" WHERE "documents"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
Completed 500 Internal Server Error in 6165ms (ActiveRecord: 50.4ms)


  
SystemExit (exit):
  
app/controllers/api/v1/documents_controller.rb:7:in `update'
Completed 500 Internal Server Error in 6479ms (ActiveRecord: 51.2ms)


  
SystemExit (exit):
  
app/controllers/api/v1/documents_controller.rb:7:in `update'
Started PUT "/api/v1/documents/1" for ::1 at 2016-07-17 12:22:09 -0400
Processing by Api::V1::DocumentsController#update as */*
  Parameters: {"data"=>{"attributes"=>{"title"=>"aaaaaaa", "content"=>"Be like Spock. 42 is also important. Ok? Yes hm"}}, "id"=>"1", "document"=>{}}
Unpermitted parameters: data, document
  [1m[36mDocument Load (0.7ms)[0m  [1m[34mSELECT  "documents".* FROM "documents" WHERE "documents"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
Completed 500 Internal Server Error in 13234ms (ActiveRecord: 0.7ms)


  
SystemExit (exit):
  
app/controllers/api/v1/documents_controller.rb:7:in `update'
Started GET "/api/v1/documents/1" for ::1 at 2016-07-17 12:22:26 -0400
Processing by Api::V1::DocumentsController#show as */*
  Parameters: {"id"=>"1"}
  [1m[36mDocument Load (0.7ms)[0m  [1m[34mSELECT  "documents".* FROM "documents" WHERE "documents"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
[active_model_serializers] Rendered DocumentSerializer with ActiveModelSerializers::Adapter::JsonApi (19.24ms)
Completed 200 OK in 46ms (Views: 26.7ms | ActiveRecord: 0.7ms)


Started GET "/api/v1/documents/1" for ::1 at 2016-07-17 12:23:19 -0400
Processing by Api::V1::DocumentsController#show as */*
  Parameters: {"id"=>"1"}
  [1m[36mDocument Load (8.1ms)[0m  [1m[34mSELECT  "documents".* FROM "documents" WHERE "documents"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
[active_model_serializers] Rendered DocumentSerializer with ActiveModelSerializers::Adapter::JsonApi (17.5ms)
Completed 200 OK in 57ms (Views: 24.9ms | ActiveRecord: 8.1ms)


Started GET "/api/v1/documents/1" for ::1 at 2016-07-17 12:58:46 -0400
Processing by Api::V1::DocumentsController#show as */*
  Parameters: {"id"=>"1"}
  [1m[36mDocument Load (0.7ms)[0m  [1m[34mSELECT  "documents".* FROM "documents" WHERE "documents"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
[active_model_serializers] Rendered DocumentSerializer with ActiveModelSerializers::Adapter::JsonApi (21.85ms)
Completed 200 OK in 255ms (Views: 51.6ms | ActiveRecord: 3.1ms)


Started GET "/api/v1/documents/1" for ::1 at 2016-07-17 12:59:34 -0400
Processing by Api::V1::DocumentsController#show as */*
  Parameters: {"id"=>"1"}
  [1m[36mDocument Load (1.1ms)[0m  [1m[34mSELECT  "documents".* FROM "documents" WHERE "documents"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
[active_model_serializers] Rendered DocumentSerializer with ActiveModelSerializers::Adapter::JsonApi (29.4ms)
Completed 200 OK in 148ms (Views: 45.1ms | ActiveRecord: 1.1ms)


Started PUT "/api/v1/documents/1" for ::1 at 2016-07-17 12:59:37 -0400
Processing by Api::V1::DocumentsController#update as */*
  Parameters: {"data"=>{"attributes"=>{"title"=>"How to live long and propser", "content"=>"Be like Spock. 42 is also important. Ok? Yes. Y"}}, "id"=>"1", "document"=>{}}
Unpermitted parameters: data, document
  [1m[36mDocument Load (0.6ms)[0m  [1m[34mSELECT  "documents".* FROM "documents" WHERE "documents"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  [1m[35m (0.7ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.8ms)[0m  [1m[33mUPDATE "documents" SET "content" = $1, "updated_at" = $2 WHERE "documents"."id" = $3[0m  [["content", "Be like Spock. 42 is also important. Ok? Yes. Y"], ["updated_at", 2016-07-17 16:59:37 UTC], ["id", 1]]
  [1m[35m (3.1ms)[0m  [1m[35mCOMMIT[0m
[active_model_serializers] Rendered DocumentSerializer with ActiveModelSerializers::Adapter::JsonApi (17.26ms)
Completed 200 OK in 108ms (Views: 30.1ms | ActiveRecord: 5.3ms)


Started PUT "/api/v1/documents/1" for ::1 at 2016-07-17 12:59:39 -0400
Processing by Api::V1::DocumentsController#update as */*
  Parameters: {"data"=>{"attributes"=>{"title"=>"How to live long and propser", "content"=>"Be like Spock. 42 is also important. Ok? Yes. Yay! "}}, "id"=>"1", "document"=>{}}
Unpermitted parameters: data, document
  [1m[36mDocument Load (0.6ms)[0m  [1m[34mSELECT  "documents".* FROM "documents" WHERE "documents"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  [1m[35m (0.5ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (1.1ms)[0m  [1m[33mUPDATE "documents" SET "content" = $1, "updated_at" = $2 WHERE "documents"."id" = $3[0m  [["content", "Be like Spock. 42 is also important. Ok? Yes. Yay! "], ["updated_at", 2016-07-17 16:59:39 UTC], ["id", 1]]
  [1m[35m (2.9ms)[0m  [1m[35mCOMMIT[0m
[active_model_serializers] Rendered DocumentSerializer with ActiveModelSerializers::Adapter::JsonApi (14.9ms)
Completed 200 OK in 107ms (Views: 22.1ms | ActiveRecord: 5.1ms)


Started PUT "/api/v1/documents/1" for ::1 at 2016-07-17 12:59:39 -0400
Processing by Api::V1::DocumentsController#update as */*
  Parameters: {"data"=>{"attributes"=>{"title"=>"How to live long and propser", "content"=>"Be like Spock. 42 is also important. Ok? Yes. Yay! It w"}}, "id"=>"1", "document"=>{}}
Unpermitted parameters: data, document
  [1m[36mDocument Load (0.8ms)[0m  [1m[34mSELECT  "documents".* FROM "documents" WHERE "documents"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  [1m[35m (0.6ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.8ms)[0m  [1m[33mUPDATE "documents" SET "content" = $1, "updated_at" = $2 WHERE "documents"."id" = $3[0m  [["content", "Be like Spock. 42 is also important. Ok? Yes. Yay! It w"], ["updated_at", 2016-07-17 16:59:39 UTC], ["id", 1]]
  [1m[35m (2.7ms)[0m  [1m[35mCOMMIT[0m
[active_model_serializers] Rendered DocumentSerializer with ActiveModelSerializers::Adapter::JsonApi (14.83ms)
Completed 200 OK in 104ms (Views: 24.5ms | ActiveRecord: 5.0ms)


Started PUT "/api/v1/documents/1" for ::1 at 2016-07-17 12:59:47 -0400
Processing by Api::V1::DocumentsController#update as */*
  Parameters: {"data"=>{"attributes"=>{"title"=>"How to live long and prosper!", "content"=>"Be like Spock. 42 is also important. Ok? Yes. Yay! It works"}}, "id"=>"1", "document"=>{}}
Unpermitted parameters: data, document
  [1m[36mDocument Load (0.6ms)[0m  [1m[34mSELECT  "documents".* FROM "documents" WHERE "documents"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  [1m[35m (0.5ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.9ms)[0m  [1m[33mUPDATE "documents" SET "title" = $1, "content" = $2, "updated_at" = $3 WHERE "documents"."id" = $4[0m  [["title", "How to live long and prosper!"], ["content", "Be like Spock. 42 is also important. Ok? Yes. Yay! It works"], ["updated_at", 2016-07-17 16:59:48 UTC], ["id", 1]]
  [1m[35m (1.7ms)[0m  [1m[35mCOMMIT[0m
[active_model_serializers] Rendered DocumentSerializer with ActiveModelSerializers::Adapter::JsonApi (15.16ms)
Completed 200 OK in 105ms (Views: 24.9ms | ActiveRecord: 3.7ms)


Started PUT "/api/v1/documents/1" for ::1 at 2016-07-17 12:59:48 -0400
Processing by Api::V1::DocumentsController#update as */*
  Parameters: {"data"=>{"attributes"=>{"title"=>"How to live long and prosper!", "content"=>"Be like Spock. 42 is also important. Ok? Yes. Yay! It works. ki"}}, "id"=>"1", "document"=>{}}
Unpermitted parameters: data, document
  [1m[36mDocument Load (0.6ms)[0m  [1m[34mSELECT  "documents".* FROM "documents" WHERE "documents"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  [1m[35m (0.5ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.8ms)[0m  [1m[33mUPDATE "documents" SET "content" = $1, "updated_at" = $2 WHERE "documents"."id" = $3[0m  [["content", "Be like Spock. 42 is also important. Ok? Yes. Yay! It works. ki"], ["updated_at", 2016-07-17 16:59:48 UTC], ["id", 1]]
  [1m[35m (5.7ms)[0m  [1m[35mCOMMIT[0m
[active_model_serializers] Rendered DocumentSerializer with ActiveModelSerializers::Adapter::JsonApi (14.92ms)
Completed 200 OK in 107ms (Views: 21.1ms | ActiveRecord: 7.7ms)


Started PUT "/api/v1/documents/1" for ::1 at 2016-07-17 12:59:49 -0400
Processing by Api::V1::DocumentsController#update as */*
  Parameters: {"data"=>{"attributes"=>{"title"=>"How to live long and prosper!", "content"=>"Be like Spock. 42 is also important. Ok? Yes. Yay! It works. kind o"}}, "id"=>"1", "document"=>{}}
Unpermitted parameters: data, document
  [1m[36mDocument Load (1.0ms)[0m  [1m[34mSELECT  "documents".* FROM "documents" WHERE "documents"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  [1m[35m (0.5ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.9ms)[0m  [1m[33mUPDATE "documents" SET "content" = $1, "updated_at" = $2 WHERE "documents"."id" = $3[0m  [["content", "Be like Spock. 42 is also important. Ok? Yes. Yay! It works. kind o"], ["updated_at", 2016-07-17 16:59:49 UTC], ["id", 1]]
  [1m[35m (3.1ms)[0m  [1m[35mCOMMIT[0m
[active_model_serializers] Rendered DocumentSerializer with ActiveModelSerializers::Adapter::JsonApi (19.47ms)
Completed 200 OK in 115ms (Views: 31.5ms | ActiveRecord: 5.5ms)


Started GET "/api/v1/documents/1" for ::1 at 2016-07-17 12:59:51 -0400
Processing by Api::V1::DocumentsController#show as */*
  Parameters: {"id"=>"1"}
  [1m[36mDocument Load (1.2ms)[0m  [1m[34mSELECT  "documents".* FROM "documents" WHERE "documents"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
[active_model_serializers] Rendered DocumentSerializer with ActiveModelSerializers::Adapter::JsonApi (18.38ms)
Completed 200 OK in 47ms (Views: 26.5ms | ActiveRecord: 1.2ms)


Started GET "/api/v1/documents/1" for ::1 at 2016-07-17 13:17:33 -0400
Processing by Api::V1::DocumentsController#show as */*
  Parameters: {"id"=>"1"}
  [1m[36mDocument Load (0.7ms)[0m  [1m[34mSELECT  "documents".* FROM "documents" WHERE "documents"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
[active_model_serializers] Rendered DocumentSerializer with ActiveModelSerializers::Adapter::JsonApi (24.92ms)
Completed 200 OK in 193ms (Views: 47.5ms | ActiveRecord: 0.7ms)


Started GET "/api/v1/documents/1" for ::1 at 2016-07-17 13:17:50 -0400
Processing by Api::V1::DocumentsController#show as */*
  Parameters: {"id"=>"1"}
  [1m[36mDocument Load (0.9ms)[0m  [1m[34mSELECT  "documents".* FROM "documents" WHERE "documents"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
[active_model_serializers] Rendered DocumentSerializer with ActiveModelSerializers::Adapter::JsonApi (20.87ms)
Completed 200 OK in 55ms (Views: 27.7ms | ActiveRecord: 0.9ms)


